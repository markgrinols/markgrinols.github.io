/******/ (function() { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ 3361:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";

// EXPORTS
__webpack_require__.d(__webpack_exports__, {
  "Z": function() { return /* binding */ emotion_cache_browser_esm; }
});

;// CONCATENATED MODULE: ./node_modules/@emotion/sheet/dist/emotion-sheet.browser.esm.js
/*

Based off glamor's StyleSheet, thanks Sunil ❤️

high performance StyleSheet for css-in-js systems

- uses multiple style tags behind the scenes for millions of rules
- uses `insertRule` for appending in production for *much* faster performance

// usage

import { StyleSheet } from '@emotion/sheet'

let styleSheet = new StyleSheet({ key: '', container: document.head })

styleSheet.insert('#box { border: 1px solid red; }')
- appends a css rule into the stylesheet

styleSheet.flush()
- empties the stylesheet of all its contents

*/
// $FlowFixMe
function sheetForTag(tag) {
  if (tag.sheet) {
    // $FlowFixMe
    return tag.sheet;
  } // this weirdness brought to you by firefox

  /* istanbul ignore next */

  for (var i = 0; i < document.styleSheets.length; i++) {
    if (document.styleSheets[i].ownerNode === tag) {
      // $FlowFixMe
      return document.styleSheets[i];
    }
  }
}
function createStyleElement(options) {
  var tag = document.createElement('style');
  tag.setAttribute('data-emotion', options.key);
  if (options.nonce !== undefined) {
    tag.setAttribute('nonce', options.nonce);
  }
  tag.appendChild(document.createTextNode(''));
  tag.setAttribute('data-s', '');
  return tag;
}
var StyleSheet = /*#__PURE__*/function () {
  // Using Node instead of HTMLElement since container may be a ShadowRoot
  function StyleSheet(options) {
    var _this = this;
    this._insertTag = function (tag) {
      var before;
      if (_this.tags.length === 0) {
        if (_this.insertionPoint) {
          before = _this.insertionPoint.nextSibling;
        } else if (_this.prepend) {
          before = _this.container.firstChild;
        } else {
          before = _this.before;
        }
      } else {
        before = _this.tags[_this.tags.length - 1].nextSibling;
      }
      _this.container.insertBefore(tag, before);
      _this.tags.push(tag);
    };
    this.isSpeedy = options.speedy === undefined ? "production" === 'production' : options.speedy;
    this.tags = [];
    this.ctr = 0;
    this.nonce = options.nonce; // key is the value of the data-emotion attribute, it's used to identify different sheets

    this.key = options.key;
    this.container = options.container;
    this.prepend = options.prepend;
    this.insertionPoint = options.insertionPoint;
    this.before = null;
  }
  var _proto = StyleSheet.prototype;
  _proto.hydrate = function hydrate(nodes) {
    nodes.forEach(this._insertTag);
  };
  _proto.insert = function insert(rule) {
    // the max length is how many rules we have per style tag, it's 65000 in speedy mode
    // it's 1 in dev because we insert source maps that map a single rule to a location
    // and you can only have one source map per style tag
    if (this.ctr % (this.isSpeedy ? 65000 : 1) === 0) {
      this._insertTag(createStyleElement(this));
    }
    var tag = this.tags[this.tags.length - 1];
    if (false) { var isImportRule; }
    if (this.isSpeedy) {
      var sheet = sheetForTag(tag);
      try {
        // this is the ultrafast version, works across browsers
        // the big drawback is that the css won't be editable in devtools
        sheet.insertRule(rule, sheet.cssRules.length);
      } catch (e) {
        if (false) {}
      }
    } else {
      tag.appendChild(document.createTextNode(rule));
    }
    this.ctr++;
  };
  _proto.flush = function flush() {
    // $FlowFixMe
    this.tags.forEach(function (tag) {
      return tag.parentNode && tag.parentNode.removeChild(tag);
    });
    this.tags = [];
    this.ctr = 0;
    if (false) {}
  };
  return StyleSheet;
}();

;// CONCATENATED MODULE: ./node_modules/stylis/src/Utility.js
/**
 * @param {number}
 * @return {number}
 */
var abs = Math.abs;

/**
 * @param {number}
 * @return {string}
 */
var Utility_from = String.fromCharCode;

/**
 * @param {object}
 * @return {object}
 */
var Utility_assign = Object.assign;

/**
 * @param {string} value
 * @param {number} length
 * @return {number}
 */
function hash(value, length) {
  return Utility_charat(value, 0) ^ 45 ? (((length << 2 ^ Utility_charat(value, 0)) << 2 ^ Utility_charat(value, 1)) << 2 ^ Utility_charat(value, 2)) << 2 ^ Utility_charat(value, 3) : 0;
}

/**
 * @param {string} value
 * @return {string}
 */
function trim(value) {
  return value.trim();
}

/**
 * @param {string} value
 * @param {RegExp} pattern
 * @return {string?}
 */
function Utility_match(value, pattern) {
  return (value = pattern.exec(value)) ? value[0] : value;
}

/**
 * @param {string} value
 * @param {(string|RegExp)} pattern
 * @param {string} replacement
 * @return {string}
 */
function Utility_replace(value, pattern, replacement) {
  return value.replace(pattern, replacement);
}

/**
 * @param {string} value
 * @param {string} search
 * @return {number}
 */
function indexof(value, search) {
  return value.indexOf(search);
}

/**
 * @param {string} value
 * @param {number} index
 * @return {number}
 */
function Utility_charat(value, index) {
  return value.charCodeAt(index) | 0;
}

/**
 * @param {string} value
 * @param {number} begin
 * @param {number} end
 * @return {string}
 */
function Utility_substr(value, begin, end) {
  return value.slice(begin, end);
}

/**
 * @param {string} value
 * @return {number}
 */
function Utility_strlen(value) {
  return value.length;
}

/**
 * @param {any[]} value
 * @return {number}
 */
function Utility_sizeof(value) {
  return value.length;
}

/**
 * @param {any} value
 * @param {any[]} array
 * @return {any}
 */
function Utility_append(value, array) {
  return array.push(value), value;
}

/**
 * @param {string[]} array
 * @param {function} callback
 * @return {string}
 */
function Utility_combine(array, callback) {
  return array.map(callback).join('');
}
;// CONCATENATED MODULE: ./node_modules/stylis/src/Tokenizer.js

var line = 1;
var column = 1;
var Tokenizer_length = 0;
var position = 0;
var character = 0;
var characters = '';

/**
 * @param {string} value
 * @param {object | null} root
 * @param {object | null} parent
 * @param {string} type
 * @param {string[] | string} props
 * @param {object[] | string} children
 * @param {number} length
 */
function node(value, root, parent, type, props, children, length) {
  return {
    value: value,
    root: root,
    parent: parent,
    type: type,
    props: props,
    children: children,
    line: line,
    column: column,
    length: length,
    return: ''
  };
}

/**
 * @param {object} root
 * @param {object} props
 * @return {object}
 */
function Tokenizer_copy(root, props) {
  return Utility_assign(node('', null, null, '', null, null, 0), root, {
    length: -root.length
  }, props);
}

/**
 * @return {number}
 */
function Tokenizer_char() {
  return character;
}

/**
 * @return {number}
 */
function prev() {
  character = position > 0 ? Utility_charat(characters, --position) : 0;
  if (column--, character === 10) column = 1, line--;
  return character;
}

/**
 * @return {number}
 */
function next() {
  character = position < Tokenizer_length ? Utility_charat(characters, position++) : 0;
  if (column++, character === 10) column = 1, line++;
  return character;
}

/**
 * @return {number}
 */
function peek() {
  return Utility_charat(characters, position);
}

/**
 * @return {number}
 */
function caret() {
  return position;
}

/**
 * @param {number} begin
 * @param {number} end
 * @return {string}
 */
function slice(begin, end) {
  return Utility_substr(characters, begin, end);
}

/**
 * @param {number} type
 * @return {number}
 */
function token(type) {
  switch (type) {
    // \0 \t \n \r \s whitespace token
    case 0:
    case 9:
    case 10:
    case 13:
    case 32:
      return 5;
    // ! + , / > @ ~ isolate token
    case 33:
    case 43:
    case 44:
    case 47:
    case 62:
    case 64:
    case 126:
    // ; { } breakpoint token
    case 59:
    case 123:
    case 125:
      return 4;
    // : accompanied token
    case 58:
      return 3;
    // " ' ( [ opening delimit token
    case 34:
    case 39:
    case 40:
    case 91:
      return 2;
    // ) ] closing delimit token
    case 41:
    case 93:
      return 1;
  }
  return 0;
}

/**
 * @param {string} value
 * @return {any[]}
 */
function alloc(value) {
  return line = column = 1, Tokenizer_length = Utility_strlen(characters = value), position = 0, [];
}

/**
 * @param {any} value
 * @return {any}
 */
function dealloc(value) {
  return characters = '', value;
}

/**
 * @param {number} type
 * @return {string}
 */
function delimit(type) {
  return trim(slice(position - 1, delimiter(type === 91 ? type + 2 : type === 40 ? type + 1 : type)));
}

/**
 * @param {string} value
 * @return {string[]}
 */
function Tokenizer_tokenize(value) {
  return dealloc(tokenizer(alloc(value)));
}

/**
 * @param {number} type
 * @return {string}
 */
function whitespace(type) {
  while (character = peek()) {
    if (character < 33) next();else break;
  }
  return token(type) > 2 || token(character) > 3 ? '' : ' ';
}

/**
 * @param {string[]} children
 * @return {string[]}
 */
function tokenizer(children) {
  while (next()) {
    switch (token(character)) {
      case 0:
        append(identifier(position - 1), children);
        break;
      case 2:
        append(delimit(character), children);
        break;
      default:
        append(from(character), children);
    }
  }
  return children;
}

/**
 * @param {number} index
 * @param {number} count
 * @return {string}
 */
function escaping(index, count) {
  while (--count && next()) {
    // not 0-9 A-F a-f
    if (character < 48 || character > 102 || character > 57 && character < 65 || character > 70 && character < 97) break;
  }
  return slice(index, caret() + (count < 6 && peek() == 32 && next() == 32));
}

/**
 * @param {number} type
 * @return {number}
 */
function delimiter(type) {
  while (next()) {
    switch (character) {
      // ] ) " '
      case type:
        return position;
      // " '
      case 34:
      case 39:
        if (type !== 34 && type !== 39) delimiter(character);
        break;
      // (
      case 40:
        if (type === 41) delimiter(type);
        break;
      // \
      case 92:
        next();
        break;
    }
  }
  return position;
}

/**
 * @param {number} type
 * @param {number} index
 * @return {number}
 */
function commenter(type, index) {
  while (next()) {
    // //
    if (type + character === 47 + 10) break;
    // /*
    else if (type + character === 42 + 42 && peek() === 47) break;
  }
  return '/*' + slice(index, position - 1) + '*' + Utility_from(type === 47 ? type : next());
}

/**
 * @param {number} index
 * @return {string}
 */
function identifier(index) {
  while (!token(peek())) {
    next();
  }
  return slice(index, position);
}
;// CONCATENATED MODULE: ./node_modules/stylis/src/Enum.js
var Enum_MS = '-ms-';
var Enum_MOZ = '-moz-';
var Enum_WEBKIT = '-webkit-';
var COMMENT = 'comm';
var Enum_RULESET = 'rule';
var Enum_DECLARATION = 'decl';
var PAGE = '@page';
var MEDIA = '@media';
var IMPORT = '@import';
var CHARSET = '@charset';
var VIEWPORT = '@viewport';
var SUPPORTS = '@supports';
var DOCUMENT = '@document';
var NAMESPACE = '@namespace';
var Enum_KEYFRAMES = '@keyframes';
var FONT_FACE = '@font-face';
var COUNTER_STYLE = '@counter-style';
var FONT_FEATURE_VALUES = '@font-feature-values';
;// CONCATENATED MODULE: ./node_modules/stylis/src/Serializer.js



/**
 * @param {object[]} children
 * @param {function} callback
 * @return {string}
 */
function Serializer_serialize(children, callback) {
  var output = '';
  var length = Utility_sizeof(children);
  for (var i = 0; i < length; i++) {
    output += callback(children[i], i, children, callback) || '';
  }
  return output;
}

/**
 * @param {object} element
 * @param {number} index
 * @param {object[]} children
 * @param {function} callback
 * @return {string}
 */
function stringify(element, index, children, callback) {
  switch (element.type) {
    case IMPORT:
    case Enum_DECLARATION:
      return element.return = element.return || element.value;
    case COMMENT:
      return '';
    case Enum_KEYFRAMES:
      return element.return = element.value + '{' + Serializer_serialize(element.children, callback) + '}';
    case Enum_RULESET:
      element.value = element.props.join(',');
  }
  return Utility_strlen(children = Serializer_serialize(element.children, callback)) ? element.return = element.value + '{' + children + '}' : '';
}
;// CONCATENATED MODULE: ./node_modules/stylis/src/Middleware.js






/**
 * @param {function[]} collection
 * @return {function}
 */
function middleware(collection) {
  var length = Utility_sizeof(collection);
  return function (element, index, children, callback) {
    var output = '';
    for (var i = 0; i < length; i++) {
      output += collection[i](element, index, children, callback) || '';
    }
    return output;
  };
}

/**
 * @param {function} callback
 * @return {function}
 */
function rulesheet(callback) {
  return function (element) {
    if (!element.root) if (element = element.return) callback(element);
  };
}

/**
 * @param {object} element
 * @param {number} index
 * @param {object[]} children
 * @param {function} callback
 */
function prefixer(element, index, children, callback) {
  if (element.length > -1) if (!element.return) switch (element.type) {
    case DECLARATION:
      element.return = prefix(element.value, element.length, children);
      return;
    case KEYFRAMES:
      return serialize([copy(element, {
        value: replace(element.value, '@', '@' + WEBKIT)
      })], callback);
    case RULESET:
      if (element.length) return combine(element.props, function (value) {
        switch (match(value, /(::plac\w+|:read-\w+)/)) {
          // :read-(only|write)
          case ':read-only':
          case ':read-write':
            return serialize([copy(element, {
              props: [replace(value, /:(read-\w+)/, ':' + MOZ + '$1')]
            })], callback);
          // :placeholder
          case '::placeholder':
            return serialize([copy(element, {
              props: [replace(value, /:(plac\w+)/, ':' + WEBKIT + 'input-$1')]
            }), copy(element, {
              props: [replace(value, /:(plac\w+)/, ':' + MOZ + '$1')]
            }), copy(element, {
              props: [replace(value, /:(plac\w+)/, MS + 'input-$1')]
            })], callback);
        }
        return '';
      });
  }
}

/**
 * @param {object} element
 * @param {number} index
 * @param {object[]} children
 */
function namespace(element) {
  switch (element.type) {
    case RULESET:
      element.props = element.props.map(function (value) {
        return combine(tokenize(value), function (value, index, children) {
          switch (charat(value, 0)) {
            // \f
            case 12:
              return substr(value, 1, strlen(value));
            // \0 ( + > ~
            case 0:
            case 40:
            case 43:
            case 62:
            case 126:
              return value;
            // :
            case 58:
              if (children[++index] === 'global') children[index] = '', children[++index] = '\f' + substr(children[index], index = 1, -1);
            // \s
            case 32:
              return index === 1 ? '' : value;
            default:
              switch (index) {
                case 0:
                  element = value;
                  return sizeof(children) > 1 ? '' : value;
                case index = sizeof(children) - 1:
                case 2:
                  return index === 2 ? value + element + element : value + element;
                default:
                  return value;
              }
          }
        });
      });
  }
}
;// CONCATENATED MODULE: ./node_modules/stylis/src/Parser.js




/**
 * @param {string} value
 * @return {object[]}
 */
function compile(value) {
  return dealloc(parse('', null, null, null, [''], value = alloc(value), 0, [0], value));
}

/**
 * @param {string} value
 * @param {object} root
 * @param {object?} parent
 * @param {string[]} rule
 * @param {string[]} rules
 * @param {string[]} rulesets
 * @param {number[]} pseudo
 * @param {number[]} points
 * @param {string[]} declarations
 * @return {object}
 */
function parse(value, root, parent, rule, rules, rulesets, pseudo, points, declarations) {
  var index = 0;
  var offset = 0;
  var length = pseudo;
  var atrule = 0;
  var property = 0;
  var previous = 0;
  var variable = 1;
  var scanning = 1;
  var ampersand = 1;
  var character = 0;
  var type = '';
  var props = rules;
  var children = rulesets;
  var reference = rule;
  var characters = type;
  while (scanning) {
    switch (previous = character, character = next()) {
      // (
      case 40:
        if (previous != 108 && Utility_charat(characters, length - 1) == 58) {
          if (indexof(characters += Utility_replace(delimit(character), '&', '&\f'), '&\f') != -1) ampersand = -1;
          break;
        }
      // " ' [
      case 34:
      case 39:
      case 91:
        characters += delimit(character);
        break;
      // \t \n \r \s
      case 9:
      case 10:
      case 13:
      case 32:
        characters += whitespace(previous);
        break;
      // \
      case 92:
        characters += escaping(caret() - 1, 7);
        continue;
      // /
      case 47:
        switch (peek()) {
          case 42:
          case 47:
            Utility_append(comment(commenter(next(), caret()), root, parent), declarations);
            break;
          default:
            characters += '/';
        }
        break;
      // {
      case 123 * variable:
        points[index++] = Utility_strlen(characters) * ampersand;
      // } ; \0
      case 125 * variable:
      case 59:
      case 0:
        switch (character) {
          // \0 }
          case 0:
          case 125:
            scanning = 0;
          // ;
          case 59 + offset:
            if (property > 0 && Utility_strlen(characters) - length) Utility_append(property > 32 ? declaration(characters + ';', rule, parent, length - 1) : declaration(Utility_replace(characters, ' ', '') + ';', rule, parent, length - 2), declarations);
            break;
          // @ ;
          case 59:
            characters += ';';
          // { rule/at-rule
          default:
            Utility_append(reference = ruleset(characters, root, parent, index, offset, rules, points, type, props = [], children = [], length), rulesets);
            if (character === 123) if (offset === 0) parse(characters, root, reference, reference, props, rulesets, length, points, children);else switch (atrule === 99 && Utility_charat(characters, 3) === 110 ? 100 : atrule) {
              // d m s
              case 100:
              case 109:
              case 115:
                parse(value, reference, reference, rule && Utility_append(ruleset(value, reference, reference, 0, 0, rules, points, type, rules, props = [], length), children), rules, children, length, points, rule ? props : children);
                break;
              default:
                parse(characters, reference, reference, reference, [''], children, 0, points, children);
            }
        }
        index = offset = property = 0, variable = ampersand = 1, type = characters = '', length = pseudo;
        break;
      // :
      case 58:
        length = 1 + Utility_strlen(characters), property = previous;
      default:
        if (variable < 1) if (character == 123) --variable;else if (character == 125 && variable++ == 0 && prev() == 125) continue;
        switch (characters += Utility_from(character), character * variable) {
          // &
          case 38:
            ampersand = offset > 0 ? 1 : (characters += '\f', -1);
            break;
          // ,
          case 44:
            points[index++] = (Utility_strlen(characters) - 1) * ampersand, ampersand = 1;
            break;
          // @
          case 64:
            // -
            if (peek() === 45) characters += delimit(next());
            atrule = peek(), offset = length = Utility_strlen(type = characters += identifier(caret())), character++;
            break;
          // -
          case 45:
            if (previous === 45 && Utility_strlen(characters) == 2) variable = 0;
        }
    }
  }
  return rulesets;
}

/**
 * @param {string} value
 * @param {object} root
 * @param {object?} parent
 * @param {number} index
 * @param {number} offset
 * @param {string[]} rules
 * @param {number[]} points
 * @param {string} type
 * @param {string[]} props
 * @param {string[]} children
 * @param {number} length
 * @return {object}
 */
function ruleset(value, root, parent, index, offset, rules, points, type, props, children, length) {
  var post = offset - 1;
  var rule = offset === 0 ? rules : [''];
  var size = Utility_sizeof(rule);
  for (var i = 0, j = 0, k = 0; i < index; ++i) {
    for (var x = 0, y = Utility_substr(value, post + 1, post = abs(j = points[i])), z = value; x < size; ++x) {
      if (z = trim(j > 0 ? rule[x] + ' ' + y : Utility_replace(y, /&\f/g, rule[x]))) props[k++] = z;
    }
  }
  return node(value, root, parent, offset === 0 ? Enum_RULESET : type, props, children, length);
}

/**
 * @param {number} value
 * @param {object} root
 * @param {object?} parent
 * @return {object}
 */
function comment(value, root, parent) {
  return node(value, root, parent, COMMENT, Utility_from(Tokenizer_char()), Utility_substr(value, 2, -2), 0);
}

/**
 * @param {string} value
 * @param {object} root
 * @param {object?} parent
 * @param {number} length
 * @return {object}
 */
function declaration(value, root, parent, length) {
  return node(value, root, parent, Enum_DECLARATION, Utility_substr(value, 0, length), Utility_substr(value, length + 1, -1), length);
}
;// CONCATENATED MODULE: ./node_modules/@emotion/cache/dist/emotion-cache.browser.esm.js




var identifierWithPointTracking = function identifierWithPointTracking(begin, points, index) {
  var previous = 0;
  var character = 0;
  while (true) {
    previous = character;
    character = peek(); // &\f

    if (previous === 38 && character === 12) {
      points[index] = 1;
    }
    if (token(character)) {
      break;
    }
    next();
  }
  return slice(begin, position);
};
var toRules = function toRules(parsed, points) {
  // pretend we've started with a comma
  var index = -1;
  var character = 44;
  do {
    switch (token(character)) {
      case 0:
        // &\f
        if (character === 38 && peek() === 12) {
          // this is not 100% correct, we don't account for literal sequences here - like for example quoted strings
          // stylis inserts \f after & to know when & where it should replace this sequence with the context selector
          // and when it should just concatenate the outer and inner selectors
          // it's very unlikely for this sequence to actually appear in a different context, so we just leverage this fact here
          points[index] = 1;
        }
        parsed[index] += identifierWithPointTracking(position - 1, points, index);
        break;
      case 2:
        parsed[index] += delimit(character);
        break;
      case 4:
        // comma
        if (character === 44) {
          // colon
          parsed[++index] = peek() === 58 ? '&\f' : '';
          points[index] = parsed[index].length;
          break;
        }

      // fallthrough

      default:
        parsed[index] += Utility_from(character);
    }
  } while (character = next());
  return parsed;
};
var getRules = function getRules(value, points) {
  return dealloc(toRules(alloc(value), points));
}; // WeakSet would be more appropriate, but only WeakMap is supported in IE11

var fixedElements = /* #__PURE__ */new WeakMap();
var compat = function compat(element) {
  if (element.type !== 'rule' || !element.parent ||
  // positive .length indicates that this rule contains pseudo
  // negative .length indicates that this rule has been already prefixed
  element.length < 1) {
    return;
  }
  var value = element.value,
    parent = element.parent;
  var isImplicitRule = element.column === parent.column && element.line === parent.line;
  while (parent.type !== 'rule') {
    parent = parent.parent;
    if (!parent) return;
  } // short-circuit for the simplest case

  if (element.props.length === 1 && value.charCodeAt(0) !== 58
  /* colon */ && !fixedElements.get(parent)) {
    return;
  } // if this is an implicitly inserted rule (the one eagerly inserted at the each new nested level)
  // then the props has already been manipulated beforehand as they that array is shared between it and its "rule parent"

  if (isImplicitRule) {
    return;
  }
  fixedElements.set(element, true);
  var points = [];
  var rules = getRules(value, points);
  var parentRules = parent.props;
  for (var i = 0, k = 0; i < rules.length; i++) {
    for (var j = 0; j < parentRules.length; j++, k++) {
      element.props[k] = points[i] ? rules[i].replace(/&\f/g, parentRules[j]) : parentRules[j] + " " + rules[i];
    }
  }
};
var removeLabel = function removeLabel(element) {
  if (element.type === 'decl') {
    var value = element.value;
    if (
    // charcode for l
    value.charCodeAt(0) === 108 &&
    // charcode for b
    value.charCodeAt(2) === 98) {
      // this ignores label
      element["return"] = '';
      element.value = '';
    }
  }
};
var ignoreFlag = 'emotion-disable-server-rendering-unsafe-selector-warning-please-do-not-use-this-the-warning-exists-for-a-reason';
var isIgnoringComment = function isIgnoringComment(element) {
  return element.type === 'comm' && element.children.indexOf(ignoreFlag) > -1;
};
var createUnsafeSelectorsAlarm = function createUnsafeSelectorsAlarm(cache) {
  return function (element, index, children) {
    if (element.type !== 'rule' || cache.compat) return;
    var unsafePseudoClasses = element.value.match(/(:first|:nth|:nth-last)-child/g);
    if (unsafePseudoClasses) {
      var isNested = element.parent === children[0]; // in nested rules comments become children of the "auto-inserted" rule
      //
      // considering this input:
      // .a {
      //   .b /* comm */ {}
      //   color: hotpink;
      // }
      // we get output corresponding to this:
      // .a {
      //   & {
      //     /* comm */
      //     color: hotpink;
      //   }
      //   .b {}
      // }

      var commentContainer = isNested ? children[0].children :
      // global rule at the root level
      children;
      for (var i = commentContainer.length - 1; i >= 0; i--) {
        var node = commentContainer[i];
        if (node.line < element.line) {
          break;
        } // it is quite weird but comments are *usually* put at `column: element.column - 1`
        // so we seek *from the end* for the node that is earlier than the rule's `element` and check that
        // this will also match inputs like this:
        // .a {
        //   /* comm */
        //   .b {}
        // }
        //
        // but that is fine
        //
        // it would be the easiest to change the placement of the comment to be the first child of the rule:
        // .a {
        //   .b { /* comm */ }
        // }
        // with such inputs we wouldn't have to search for the comment at all
        // TODO: consider changing this comment placement in the next major version

        if (node.column < element.column) {
          if (isIgnoringComment(node)) {
            return;
          }
          break;
        }
      }
      unsafePseudoClasses.forEach(function (unsafePseudoClass) {
        console.error("The pseudo class \"" + unsafePseudoClass + "\" is potentially unsafe when doing server-side rendering. Try changing it to \"" + unsafePseudoClass.split('-child')[0] + "-of-type\".");
      });
    }
  };
};
var isImportRule = function isImportRule(element) {
  return element.type.charCodeAt(1) === 105 && element.type.charCodeAt(0) === 64;
};
var isPrependedWithRegularRules = function isPrependedWithRegularRules(index, children) {
  for (var i = index - 1; i >= 0; i--) {
    if (!isImportRule(children[i])) {
      return true;
    }
  }
  return false;
}; // use this to remove incorrect elements from further processing
// so they don't get handed to the `sheet` (or anything else)
// as that could potentially lead to additional logs which in turn could be overhelming to the user

var nullifyElement = function nullifyElement(element) {
  element.type = '';
  element.value = '';
  element["return"] = '';
  element.children = '';
  element.props = '';
};
var incorrectImportAlarm = function incorrectImportAlarm(element, index, children) {
  if (!isImportRule(element)) {
    return;
  }
  if (element.parent) {
    console.error("`@import` rules can't be nested inside other rules. Please move it to the top level and put it before regular rules. Keep in mind that they can only be used within global styles.");
    nullifyElement(element);
  } else if (isPrependedWithRegularRules(index, children)) {
    console.error("`@import` rules can't be after other rules. Please put your `@import` rules before your other rules.");
    nullifyElement(element);
  }
};

/* eslint-disable no-fallthrough */

function emotion_cache_browser_esm_prefix(value, length) {
  switch (hash(value, length)) {
    // color-adjust
    case 5103:
      return Enum_WEBKIT + 'print-' + value + value;
    // animation, animation-(delay|direction|duration|fill-mode|iteration-count|name|play-state|timing-function)

    case 5737:
    case 4201:
    case 3177:
    case 3433:
    case 1641:
    case 4457:
    case 2921: // text-decoration, filter, clip-path, backface-visibility, column, box-decoration-break

    case 5572:
    case 6356:
    case 5844:
    case 3191:
    case 6645:
    case 3005: // mask, mask-image, mask-(mode|clip|size), mask-(repeat|origin), mask-position, mask-composite,

    case 6391:
    case 5879:
    case 5623:
    case 6135:
    case 4599:
    case 4855: // background-clip, columns, column-(count|fill|gap|rule|rule-color|rule-style|rule-width|span|width)

    case 4215:
    case 6389:
    case 5109:
    case 5365:
    case 5621:
    case 3829:
      return Enum_WEBKIT + value + value;
    // appearance, user-select, transform, hyphens, text-size-adjust

    case 5349:
    case 4246:
    case 4810:
    case 6968:
    case 2756:
      return Enum_WEBKIT + value + Enum_MOZ + value + Enum_MS + value + value;
    // flex, flex-direction

    case 6828:
    case 4268:
      return Enum_WEBKIT + value + Enum_MS + value + value;
    // order

    case 6165:
      return Enum_WEBKIT + value + Enum_MS + 'flex-' + value + value;
    // align-items

    case 5187:
      return Enum_WEBKIT + value + Utility_replace(value, /(\w+).+(:[^]+)/, Enum_WEBKIT + 'box-$1$2' + Enum_MS + 'flex-$1$2') + value;
    // align-self

    case 5443:
      return Enum_WEBKIT + value + Enum_MS + 'flex-item-' + Utility_replace(value, /flex-|-self/, '') + value;
    // align-content

    case 4675:
      return Enum_WEBKIT + value + Enum_MS + 'flex-line-pack' + Utility_replace(value, /align-content|flex-|-self/, '') + value;
    // flex-shrink

    case 5548:
      return Enum_WEBKIT + value + Enum_MS + Utility_replace(value, 'shrink', 'negative') + value;
    // flex-basis

    case 5292:
      return Enum_WEBKIT + value + Enum_MS + Utility_replace(value, 'basis', 'preferred-size') + value;
    // flex-grow

    case 6060:
      return Enum_WEBKIT + 'box-' + Utility_replace(value, '-grow', '') + Enum_WEBKIT + value + Enum_MS + Utility_replace(value, 'grow', 'positive') + value;
    // transition

    case 4554:
      return Enum_WEBKIT + Utility_replace(value, /([^-])(transform)/g, '$1' + Enum_WEBKIT + '$2') + value;
    // cursor

    case 6187:
      return Utility_replace(Utility_replace(Utility_replace(value, /(zoom-|grab)/, Enum_WEBKIT + '$1'), /(image-set)/, Enum_WEBKIT + '$1'), value, '') + value;
    // background, background-image

    case 5495:
    case 3959:
      return Utility_replace(value, /(image-set\([^]*)/, Enum_WEBKIT + '$1' + '$`$1');
    // justify-content

    case 4968:
      return Utility_replace(Utility_replace(value, /(.+:)(flex-)?(.*)/, Enum_WEBKIT + 'box-pack:$3' + Enum_MS + 'flex-pack:$3'), /s.+-b[^;]+/, 'justify') + Enum_WEBKIT + value + value;
    // (margin|padding)-inline-(start|end)

    case 4095:
    case 3583:
    case 4068:
    case 2532:
      return Utility_replace(value, /(.+)-inline(.+)/, Enum_WEBKIT + '$1$2') + value;
    // (min|max)?(width|height|inline-size|block-size)

    case 8116:
    case 7059:
    case 5753:
    case 5535:
    case 5445:
    case 5701:
    case 4933:
    case 4677:
    case 5533:
    case 5789:
    case 5021:
    case 4765:
      // stretch, max-content, min-content, fill-available
      if (Utility_strlen(value) - 1 - length > 6) switch (Utility_charat(value, length + 1)) {
        // (m)ax-content, (m)in-content
        case 109:
          // -
          if (Utility_charat(value, length + 4) !== 45) break;
        // (f)ill-available, (f)it-content

        case 102:
          return Utility_replace(value, /(.+:)(.+)-([^]+)/, '$1' + Enum_WEBKIT + '$2-$3' + '$1' + Enum_MOZ + (Utility_charat(value, length + 3) == 108 ? '$3' : '$2-$3')) + value;
        // (s)tretch

        case 115:
          return ~indexof(value, 'stretch') ? emotion_cache_browser_esm_prefix(Utility_replace(value, 'stretch', 'fill-available'), length) + value : value;
      }
      break;
    // position: sticky

    case 4949:
      // (s)ticky?
      if (Utility_charat(value, length + 1) !== 115) break;
    // display: (flex|inline-flex)

    case 6444:
      switch (Utility_charat(value, Utility_strlen(value) - 3 - (~indexof(value, '!important') && 10))) {
        // stic(k)y
        case 107:
          return Utility_replace(value, ':', ':' + Enum_WEBKIT) + value;
        // (inline-)?fl(e)x

        case 101:
          return Utility_replace(value, /(.+:)([^;!]+)(;|!.+)?/, '$1' + Enum_WEBKIT + (Utility_charat(value, 14) === 45 ? 'inline-' : '') + 'box$3' + '$1' + Enum_WEBKIT + '$2$3' + '$1' + Enum_MS + '$2box$3') + value;
      }
      break;
    // writing-mode

    case 5936:
      switch (Utility_charat(value, length + 11)) {
        // vertical-l(r)
        case 114:
          return Enum_WEBKIT + value + Enum_MS + Utility_replace(value, /[svh]\w+-[tblr]{2}/, 'tb') + value;
        // vertical-r(l)

        case 108:
          return Enum_WEBKIT + value + Enum_MS + Utility_replace(value, /[svh]\w+-[tblr]{2}/, 'tb-rl') + value;
        // horizontal(-)tb

        case 45:
          return Enum_WEBKIT + value + Enum_MS + Utility_replace(value, /[svh]\w+-[tblr]{2}/, 'lr') + value;
      }
      return Enum_WEBKIT + value + Enum_MS + value + value;
  }
  return value;
}
var emotion_cache_browser_esm_prefixer = function prefixer(element, index, children, callback) {
  if (element.length > -1) if (!element["return"]) switch (element.type) {
    case Enum_DECLARATION:
      element["return"] = emotion_cache_browser_esm_prefix(element.value, element.length);
      break;
    case Enum_KEYFRAMES:
      return Serializer_serialize([Tokenizer_copy(element, {
        value: Utility_replace(element.value, '@', '@' + Enum_WEBKIT)
      })], callback);
    case Enum_RULESET:
      if (element.length) return Utility_combine(element.props, function (value) {
        switch (Utility_match(value, /(::plac\w+|:read-\w+)/)) {
          // :read-(only|write)
          case ':read-only':
          case ':read-write':
            return Serializer_serialize([Tokenizer_copy(element, {
              props: [Utility_replace(value, /:(read-\w+)/, ':' + Enum_MOZ + '$1')]
            })], callback);
          // :placeholder

          case '::placeholder':
            return Serializer_serialize([Tokenizer_copy(element, {
              props: [Utility_replace(value, /:(plac\w+)/, ':' + Enum_WEBKIT + 'input-$1')]
            }), Tokenizer_copy(element, {
              props: [Utility_replace(value, /:(plac\w+)/, ':' + Enum_MOZ + '$1')]
            }), Tokenizer_copy(element, {
              props: [Utility_replace(value, /:(plac\w+)/, Enum_MS + 'input-$1')]
            })], callback);
        }
        return '';
      });
  }
};
var defaultStylisPlugins = [emotion_cache_browser_esm_prefixer];
var createCache = function createCache(options) {
  var key = options.key;
  if (false) {}
  if (key === 'css') {
    var ssrStyles = document.querySelectorAll("style[data-emotion]:not([data-s])"); // get SSRed styles out of the way of React's hydration
    // document.head is a safe place to move them to(though note document.head is not necessarily the last place they will be)
    // note this very very intentionally targets all style elements regardless of the key to ensure
    // that creating a cache works inside of render of a React component

    Array.prototype.forEach.call(ssrStyles, function (node) {
      // we want to only move elements which have a space in the data-emotion attribute value
      // because that indicates that it is an Emotion 11 server-side rendered style elements
      // while we will already ignore Emotion 11 client-side inserted styles because of the :not([data-s]) part in the selector
      // Emotion 10 client-side inserted styles did not have data-s (but importantly did not have a space in their data-emotion attributes)
      // so checking for the space ensures that loading Emotion 11 after Emotion 10 has inserted some styles
      // will not result in the Emotion 10 styles being destroyed
      var dataEmotionAttribute = node.getAttribute('data-emotion');
      if (dataEmotionAttribute.indexOf(' ') === -1) {
        return;
      }
      document.head.appendChild(node);
      node.setAttribute('data-s', '');
    });
  }
  var stylisPlugins = options.stylisPlugins || defaultStylisPlugins;
  if (false) {}
  var inserted = {};
  var container;
  var nodesToHydrate = [];
  {
    container = options.container || document.head;
    Array.prototype.forEach.call(
    // this means we will ignore elements which don't have a space in them which
    // means that the style elements we're looking at are only Emotion 11 server-rendered style elements
    document.querySelectorAll("style[data-emotion^=\"" + key + " \"]"), function (node) {
      var attrib = node.getAttribute("data-emotion").split(' '); // $FlowFixMe

      for (var i = 1; i < attrib.length; i++) {
        inserted[attrib[i]] = true;
      }
      nodesToHydrate.push(node);
    });
  }
  var _insert;
  var omnipresentPlugins = [compat, removeLabel];
  if (false) {}
  {
    var currentSheet;
    var finalizingPlugins = [stringify,  false ? 0 : rulesheet(function (rule) {
      currentSheet.insert(rule);
    })];
    var serializer = middleware(omnipresentPlugins.concat(stylisPlugins, finalizingPlugins));
    var stylis = function stylis(styles) {
      return Serializer_serialize(compile(styles), serializer);
    };
    _insert = function insert(selector, serialized, sheet, shouldCache) {
      currentSheet = sheet;
      if (false) {}
      stylis(selector ? selector + "{" + serialized.styles + "}" : serialized.styles);
      if (shouldCache) {
        cache.inserted[serialized.name] = true;
      }
    };
  }
  var cache = {
    key: key,
    sheet: new StyleSheet({
      key: key,
      container: container,
      nonce: options.nonce,
      speedy: options.speedy,
      prepend: options.prepend,
      insertionPoint: options.insertionPoint
    }),
    nonce: options.nonce,
    inserted: inserted,
    registered: {},
    insert: _insert
  };
  cache.sheet.hydrate(nodesToHydrate);
  return cache;
};
/* harmony default export */ var emotion_cache_browser_esm = (createCache);

/***/ }),

/***/ 9797:
/***/ (function(__unused_webpack_module, __webpack_exports__) {

"use strict";
function memoize(fn) {
  var cache = Object.create(null);
  return function (arg) {
    if (cache[arg] === undefined) cache[arg] = fn(arg);
    return cache[arg];
  };
}
/* harmony default export */ __webpack_exports__["Z"] = (memoize);

/***/ }),

/***/ 9886:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "T": function() { return /* binding */ ThemeContext; },
/* harmony export */   "w": function() { return /* binding */ withEmotionCache; }
/* harmony export */ });
/* unused harmony exports C, E, _, a, b, c, h, u */
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(2791);
/* harmony import */ var _emotion_cache__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(3361);
/* harmony import */ var _emotion_serialize__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(9140);
/* harmony import */ var _emotion_use_insertion_effect_with_fallbacks__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(2561);








var hasOwnProperty = {}.hasOwnProperty;
var EmotionCacheContext = /* #__PURE__ */(0,react__WEBPACK_IMPORTED_MODULE_0__.createContext)(
// we're doing this to avoid preconstruct's dead code elimination in this one case
// because this module is primarily intended for the browser and node
// but it's also required in react native and similar environments sometimes
// and we could have a special build just for that
// but this is much easier and the native packages
// might use a different theme context in the future anyway
typeof HTMLElement !== 'undefined' ? /* #__PURE__ */(0,_emotion_cache__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z)({
  key: 'css'
}) : null);
if (false) {}
var CacheProvider = EmotionCacheContext.Provider;
var __unsafe_useEmotionCache = function useEmotionCache() {
  return useContext(EmotionCacheContext);
};
var withEmotionCache = function withEmotionCache(func) {
  // $FlowFixMe
  return /*#__PURE__*/(0,react__WEBPACK_IMPORTED_MODULE_0__.forwardRef)(function (props, ref) {
    // the cache will never be null in the browser
    var cache = (0,react__WEBPACK_IMPORTED_MODULE_0__.useContext)(EmotionCacheContext);
    return func(props, cache, ref);
  });
};
var ThemeContext = /* #__PURE__ */(0,react__WEBPACK_IMPORTED_MODULE_0__.createContext)({});
if (false) {}
var useTheme = function useTheme() {
  return useContext(ThemeContext);
};
var getTheme = function getTheme(outerTheme, theme) {
  if (typeof theme === 'function') {
    var mergedTheme = theme(outerTheme);
    if (false) {}
    return mergedTheme;
  }
  if (false) {}
  return _extends({}, outerTheme, theme);
};
var createCacheWithTheme = /* #__PURE__ */(/* unused pure expression or super */ null && (weakMemoize(function (outerTheme) {
  return weakMemoize(function (theme) {
    return getTheme(outerTheme, theme);
  });
})));
var ThemeProvider = function ThemeProvider(props) {
  var theme = useContext(ThemeContext);
  if (props.theme !== theme) {
    theme = createCacheWithTheme(theme)(props.theme);
  }
  return /*#__PURE__*/createElement(ThemeContext.Provider, {
    value: theme
  }, props.children);
};
function withTheme(Component) {
  var componentName = Component.displayName || Component.name || 'Component';
  var render = function render(props, ref) {
    var theme = useContext(ThemeContext);
    return /*#__PURE__*/createElement(Component, _extends({
      theme: theme,
      ref: ref
    }, props));
  }; // $FlowFixMe

  var WithTheme = /*#__PURE__*/forwardRef(render);
  WithTheme.displayName = "WithTheme(" + componentName + ")";
  return hoistNonReactStatics(WithTheme, Component);
}
var getLastPart = function getLastPart(functionName) {
  // The match may be something like 'Object.createEmotionProps' or
  // 'Loader.prototype.render'
  var parts = functionName.split('.');
  return parts[parts.length - 1];
};
var getFunctionNameFromStackTraceLine = function getFunctionNameFromStackTraceLine(line) {
  // V8
  var match = /^\s+at\s+([A-Za-z0-9$.]+)\s/.exec(line);
  if (match) return getLastPart(match[1]); // Safari / Firefox

  match = /^([A-Za-z0-9$.]+)@/.exec(line);
  if (match) return getLastPart(match[1]);
  return undefined;
};
var internalReactFunctionNames = /* #__PURE__ */new Set(['renderWithHooks', 'processChild', 'finishClassComponent', 'renderToString']); // These identifiers come from error stacks, so they have to be valid JS
// identifiers, thus we only need to replace what is a valid character for JS,
// but not for CSS.

var sanitizeIdentifier = function sanitizeIdentifier(identifier) {
  return identifier.replace(/\$/g, '-');
};
var getLabelFromStackTrace = function getLabelFromStackTrace(stackTrace) {
  if (!stackTrace) return undefined;
  var lines = stackTrace.split('\n');
  for (var i = 0; i < lines.length; i++) {
    var functionName = getFunctionNameFromStackTraceLine(lines[i]); // The first line of V8 stack traces is just "Error"

    if (!functionName) continue; // If we reach one of these, we have gone too far and should quit

    if (internalReactFunctionNames.has(functionName)) break; // The component name is the first function in the stack that starts with an
    // uppercase letter

    if (/^[A-Z]/.test(functionName)) return sanitizeIdentifier(functionName);
  }
  return undefined;
};
var typePropName = '__EMOTION_TYPE_PLEASE_DO_NOT_USE__';
var labelPropName = '__EMOTION_LABEL_PLEASE_DO_NOT_USE__';
var createEmotionProps = function createEmotionProps(type, props) {
  if (false) {}
  var newProps = {};
  for (var key in props) {
    if (hasOwnProperty.call(props, key)) {
      newProps[key] = props[key];
    }
  }
  newProps[typePropName] = type; // For performance, only call getLabelFromStackTrace in development and when
  // the label hasn't already been computed

  if (false) { var label; }
  return newProps;
};
var Insertion = function Insertion(_ref) {
  var cache = _ref.cache,
    serialized = _ref.serialized,
    isStringTag = _ref.isStringTag;
  registerStyles(cache, serialized, isStringTag);
  var rules = useInsertionEffectAlwaysWithSyncFallback(function () {
    return insertStyles(cache, serialized, isStringTag);
  });
  return null;
};
var Emotion = /* #__PURE__ */(/* unused pure expression or super */ null && (withEmotionCache(function (props, cache, ref) {
  var cssProp = props.css; // so that using `css` from `emotion` and passing the result to the css prop works
  // not passing the registered cache to serializeStyles because it would
  // make certain babel optimisations not possible

  if (typeof cssProp === 'string' && cache.registered[cssProp] !== undefined) {
    cssProp = cache.registered[cssProp];
  }
  var WrappedComponent = props[typePropName];
  var registeredStyles = [cssProp];
  var className = '';
  if (typeof props.className === 'string') {
    className = getRegisteredStyles(cache.registered, registeredStyles, props.className);
  } else if (props.className != null) {
    className = props.className + " ";
  }
  var serialized = serializeStyles(registeredStyles, undefined, useContext(ThemeContext));
  if (false) { var labelFromStack; }
  className += cache.key + "-" + serialized.name;
  var newProps = {};
  for (var key in props) {
    if (hasOwnProperty.call(props, key) && key !== 'css' && key !== typePropName && ( true || 0)) {
      newProps[key] = props[key];
    }
  }
  newProps.ref = ref;
  newProps.className = className;
  return /*#__PURE__*/createElement(Fragment, null, /*#__PURE__*/createElement(Insertion, {
    cache: cache,
    serialized: serialized,
    isStringTag: typeof WrappedComponent === 'string'
  }), /*#__PURE__*/createElement(WrappedComponent, newProps));
})));
if (false) {}


/***/ }),

/***/ 9140:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";

// EXPORTS
__webpack_require__.d(__webpack_exports__, {
  "O": function() { return /* binding */ serializeStyles; }
});

;// CONCATENATED MODULE: ./node_modules/@emotion/hash/dist/emotion-hash.esm.js
/* eslint-disable */
// Inspired by https://github.com/garycourt/murmurhash-js
// Ported from https://github.com/aappleby/smhasher/blob/61a0530f28277f2e850bfc39600ce61d02b518de/src/MurmurHash2.cpp#L37-L86
function murmur2(str) {
  // 'm' and 'r' are mixing constants generated offline.
  // They're not really 'magic', they just happen to work well.
  // const m = 0x5bd1e995;
  // const r = 24;
  // Initialize the hash
  var h = 0; // Mix 4 bytes at a time into the hash

  var k,
    i = 0,
    len = str.length;
  for (; len >= 4; ++i, len -= 4) {
    k = str.charCodeAt(i) & 0xff | (str.charCodeAt(++i) & 0xff) << 8 | (str.charCodeAt(++i) & 0xff) << 16 | (str.charCodeAt(++i) & 0xff) << 24;
    k = /* Math.imul(k, m): */
    (k & 0xffff) * 0x5bd1e995 + ((k >>> 16) * 0xe995 << 16);
    k ^= /* k >>> r: */
    k >>> 24;
    h = /* Math.imul(k, m): */
    (k & 0xffff) * 0x5bd1e995 + ((k >>> 16) * 0xe995 << 16) ^ /* Math.imul(h, m): */
    (h & 0xffff) * 0x5bd1e995 + ((h >>> 16) * 0xe995 << 16);
  } // Handle the last few bytes of the input array

  switch (len) {
    case 3:
      h ^= (str.charCodeAt(i + 2) & 0xff) << 16;
    case 2:
      h ^= (str.charCodeAt(i + 1) & 0xff) << 8;
    case 1:
      h ^= str.charCodeAt(i) & 0xff;
      h = /* Math.imul(h, m): */
      (h & 0xffff) * 0x5bd1e995 + ((h >>> 16) * 0xe995 << 16);
  } // Do a few final mixes of the hash to ensure the last few
  // bytes are well-incorporated.

  h ^= h >>> 13;
  h = /* Math.imul(h, m): */
  (h & 0xffff) * 0x5bd1e995 + ((h >>> 16) * 0xe995 << 16);
  return ((h ^ h >>> 15) >>> 0).toString(36);
}
/* harmony default export */ var emotion_hash_esm = (murmur2);
;// CONCATENATED MODULE: ./node_modules/@emotion/unitless/dist/emotion-unitless.esm.js
var unitlessKeys = {
  animationIterationCount: 1,
  borderImageOutset: 1,
  borderImageSlice: 1,
  borderImageWidth: 1,
  boxFlex: 1,
  boxFlexGroup: 1,
  boxOrdinalGroup: 1,
  columnCount: 1,
  columns: 1,
  flex: 1,
  flexGrow: 1,
  flexPositive: 1,
  flexShrink: 1,
  flexNegative: 1,
  flexOrder: 1,
  gridRow: 1,
  gridRowEnd: 1,
  gridRowSpan: 1,
  gridRowStart: 1,
  gridColumn: 1,
  gridColumnEnd: 1,
  gridColumnSpan: 1,
  gridColumnStart: 1,
  msGridRow: 1,
  msGridRowSpan: 1,
  msGridColumn: 1,
  msGridColumnSpan: 1,
  fontWeight: 1,
  lineHeight: 1,
  opacity: 1,
  order: 1,
  orphans: 1,
  tabSize: 1,
  widows: 1,
  zIndex: 1,
  zoom: 1,
  WebkitLineClamp: 1,
  // SVG-related properties
  fillOpacity: 1,
  floodOpacity: 1,
  stopOpacity: 1,
  strokeDasharray: 1,
  strokeDashoffset: 1,
  strokeMiterlimit: 1,
  strokeOpacity: 1,
  strokeWidth: 1
};
/* harmony default export */ var emotion_unitless_esm = (unitlessKeys);
// EXTERNAL MODULE: ./node_modules/@emotion/memoize/dist/emotion-memoize.esm.js
var emotion_memoize_esm = __webpack_require__(9797);
;// CONCATENATED MODULE: ./node_modules/@emotion/serialize/dist/emotion-serialize.browser.esm.js



var ILLEGAL_ESCAPE_SEQUENCE_ERROR = "You have illegal escape sequence in your template literal, most likely inside content's property value.\nBecause you write your CSS inside a JavaScript string you actually have to do double escaping, so for example \"content: '\\00d7';\" should become \"content: '\\\\00d7';\".\nYou can read more about this here:\nhttps://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Template_literals#ES2018_revision_of_illegal_escape_sequences";
var UNDEFINED_AS_OBJECT_KEY_ERROR = "You have passed in falsy value as style object's key (can happen when in example you pass unexported component as computed key).";
var hyphenateRegex = /[A-Z]|^ms/g;
var animationRegex = /_EMO_([^_]+?)_([^]*?)_EMO_/g;
var isCustomProperty = function isCustomProperty(property) {
  return property.charCodeAt(1) === 45;
};
var isProcessableValue = function isProcessableValue(value) {
  return value != null && typeof value !== 'boolean';
};
var processStyleName = /* #__PURE__ */(0,emotion_memoize_esm/* default */.Z)(function (styleName) {
  return isCustomProperty(styleName) ? styleName : styleName.replace(hyphenateRegex, '-$&').toLowerCase();
});
var processStyleValue = function processStyleValue(key, value) {
  switch (key) {
    case 'animation':
    case 'animationName':
      {
        if (typeof value === 'string') {
          return value.replace(animationRegex, function (match, p1, p2) {
            cursor = {
              name: p1,
              styles: p2,
              next: cursor
            };
            return p1;
          });
        }
      }
  }
  if (emotion_unitless_esm[key] !== 1 && !isCustomProperty(key) && typeof value === 'number' && value !== 0) {
    return value + 'px';
  }
  return value;
};
if (false) { var hyphenatedCache, hyphenPattern, msPattern, oldProcessStyleValue, contentValues, contentValuePattern; }
var noComponentSelectorMessage = (/* unused pure expression or super */ null && ('Component selectors can only be used in conjunction with ' + '@emotion/babel-plugin, the swc Emotion plugin, or another Emotion-aware ' + 'compiler transform.'));
function handleInterpolation(mergedProps, registered, interpolation) {
  if (interpolation == null) {
    return '';
  }
  if (interpolation.__emotion_styles !== undefined) {
    if (false) {}
    return interpolation;
  }
  switch (typeof interpolation) {
    case 'boolean':
      {
        return '';
      }
    case 'object':
      {
        if (interpolation.anim === 1) {
          cursor = {
            name: interpolation.name,
            styles: interpolation.styles,
            next: cursor
          };
          return interpolation.name;
        }
        if (interpolation.styles !== undefined) {
          var next = interpolation.next;
          if (next !== undefined) {
            // not the most efficient thing ever but this is a pretty rare case
            // and there will be very few iterations of this generally
            while (next !== undefined) {
              cursor = {
                name: next.name,
                styles: next.styles,
                next: cursor
              };
              next = next.next;
            }
          }
          var styles = interpolation.styles + ";";
          if (false) {}
          return styles;
        }
        return createStringFromObject(mergedProps, registered, interpolation);
      }
    case 'function':
      {
        if (mergedProps !== undefined) {
          var previousCursor = cursor;
          var result = interpolation(mergedProps);
          cursor = previousCursor;
          return handleInterpolation(mergedProps, registered, result);
        } else if (false) {}
        break;
      }
    case 'string':
      if (false) { var replaced, matched; }
      break;
  } // finalize string values (regular strings and functions interpolated into css calls)

  if (registered == null) {
    return interpolation;
  }
  var cached = registered[interpolation];
  return cached !== undefined ? cached : interpolation;
}
function createStringFromObject(mergedProps, registered, obj) {
  var string = '';
  if (Array.isArray(obj)) {
    for (var i = 0; i < obj.length; i++) {
      string += handleInterpolation(mergedProps, registered, obj[i]) + ";";
    }
  } else {
    for (var _key in obj) {
      var value = obj[_key];
      if (typeof value !== 'object') {
        if (registered != null && registered[value] !== undefined) {
          string += _key + "{" + registered[value] + "}";
        } else if (isProcessableValue(value)) {
          string += processStyleName(_key) + ":" + processStyleValue(_key, value) + ";";
        }
      } else {
        if (_key === 'NO_COMPONENT_SELECTOR' && "production" !== 'production') {}
        if (Array.isArray(value) && typeof value[0] === 'string' && (registered == null || registered[value[0]] === undefined)) {
          for (var _i = 0; _i < value.length; _i++) {
            if (isProcessableValue(value[_i])) {
              string += processStyleName(_key) + ":" + processStyleValue(_key, value[_i]) + ";";
            }
          }
        } else {
          var interpolated = handleInterpolation(mergedProps, registered, value);
          switch (_key) {
            case 'animation':
            case 'animationName':
              {
                string += processStyleName(_key) + ":" + interpolated + ";";
                break;
              }
            default:
              {
                if (false) {}
                string += _key + "{" + interpolated + "}";
              }
          }
        }
      }
    }
  }
  return string;
}
var labelPattern = /label:\s*([^\s;\n{]+)\s*(;|$)/g;
var sourceMapPattern;
if (false) {} // this is the cursor for keyframes
// keyframes are stored on the SerializedStyles object as a linked list

var cursor;
var serializeStyles = function serializeStyles(args, registered, mergedProps) {
  if (args.length === 1 && typeof args[0] === 'object' && args[0] !== null && args[0].styles !== undefined) {
    return args[0];
  }
  var stringMode = true;
  var styles = '';
  cursor = undefined;
  var strings = args[0];
  if (strings == null || strings.raw === undefined) {
    stringMode = false;
    styles += handleInterpolation(mergedProps, registered, strings);
  } else {
    if (false) {}
    styles += strings[0];
  } // we start at 1 since we've already handled the first arg

  for (var i = 1; i < args.length; i++) {
    styles += handleInterpolation(mergedProps, registered, args[i]);
    if (stringMode) {
      if (false) {}
      styles += strings[i];
    }
  }
  var sourceMap;
  if (false) {} // using a global regex with .exec is stateful so lastIndex has to be reset each time

  labelPattern.lastIndex = 0;
  var identifierName = '';
  var match; // https://esbench.com/bench/5b809c2cf2949800a0f61fb5

  while ((match = labelPattern.exec(styles)) !== null) {
    identifierName += '-' +
    // $FlowFixMe we know it's not null
    match[1];
  }
  var name = emotion_hash_esm(styles) + identifierName;
  if (false) {}
  return {
    name: name,
    styles: styles,
    next: cursor
  };
};


/***/ }),

/***/ 2561:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
var react__WEBPACK_IMPORTED_MODULE_0___namespace_cache;
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "L": function() { return /* binding */ useInsertionEffectAlwaysWithSyncFallback; },
/* harmony export */   "j": function() { return /* binding */ useInsertionEffectWithLayoutFallback; }
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(2791);


var syncFallback = function syncFallback(create) {
  return create();
};
var useInsertionEffect = /*#__PURE__*/ (react__WEBPACK_IMPORTED_MODULE_0___namespace_cache || (react__WEBPACK_IMPORTED_MODULE_0___namespace_cache = __webpack_require__.t(react__WEBPACK_IMPORTED_MODULE_0__, 2)))['useInsertion' + 'Effect'] ? /*#__PURE__*/ (react__WEBPACK_IMPORTED_MODULE_0___namespace_cache || (react__WEBPACK_IMPORTED_MODULE_0___namespace_cache = __webpack_require__.t(react__WEBPACK_IMPORTED_MODULE_0__, 2)))['useInsertion' + 'Effect'] : false;
var useInsertionEffectAlwaysWithSyncFallback = useInsertionEffect || syncFallback;
var useInsertionEffectWithLayoutFallback = useInsertionEffect || react__WEBPACK_IMPORTED_MODULE_0__.useLayoutEffect;


/***/ }),

/***/ 5438:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "My": function() { return /* binding */ insertStyles; },
/* harmony export */   "fp": function() { return /* binding */ getRegisteredStyles; },
/* harmony export */   "hC": function() { return /* binding */ registerStyles; }
/* harmony export */ });
var isBrowser = "object" !== 'undefined';
function getRegisteredStyles(registered, registeredStyles, classNames) {
  var rawClassName = '';
  classNames.split(' ').forEach(function (className) {
    if (registered[className] !== undefined) {
      registeredStyles.push(registered[className] + ";");
    } else {
      rawClassName += className + " ";
    }
  });
  return rawClassName;
}
var registerStyles = function registerStyles(cache, serialized, isStringTag) {
  var className = cache.key + "-" + serialized.name;
  if (
  // we only need to add the styles to the registered cache if the
  // class name could be used further down
  // the tree but if it's a string tag, we know it won't
  // so we don't have to add it to registered cache.
  // this improves memory usage since we can avoid storing the whole style string
  (isStringTag === false ||
  // we need to always store it if we're in compat mode and
  // in node since emotion-server relies on whether a style is in
  // the registered cache to know whether a style is global or not
  // also, note that this check will be dead code eliminated in the browser
  isBrowser === false) && cache.registered[className] === undefined) {
    cache.registered[className] = serialized.styles;
  }
};
var insertStyles = function insertStyles(cache, serialized, isStringTag) {
  registerStyles(cache, serialized, isStringTag);
  var className = cache.key + "-" + serialized.name;
  if (cache.inserted[serialized.name] === undefined) {
    var current = serialized;
    do {
      var maybeStyles = cache.insert(serialized === current ? "." + className : '', current, cache.sheet, true);
      current = current.next;
    } while (current !== undefined);
  }
};


/***/ }),

/***/ 872:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
var __webpack_unused_export__;


var _interopRequireDefault = __webpack_require__(4836);
__webpack_unused_export__ = ({
  value: true
});
exports.Z = void 0;
var _createSvgIcon = _interopRequireDefault(__webpack_require__(5649));
var _jsxRuntime = __webpack_require__(184);
var _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)("path", {
  d: "M9 16.17 4.83 12l-1.42 1.41L9 19 21 7l-1.41-1.41z"
}), 'Check');
exports.Z = _default;

/***/ }),

/***/ 5649:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
Object.defineProperty(exports, "default", ({
  enumerable: true,
  get: function get() {
    return _utils.createSvgIcon;
  }
}));
var _utils = __webpack_require__(4454);

/***/ }),

/***/ 7107:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";

// EXPORTS
__webpack_require__.d(__webpack_exports__, {
  "Z": function() { return /* binding */ styles_createTheme; }
});

// UNUSED EXPORTS: createMuiTheme

// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/extends.js
var esm_extends = __webpack_require__(7462);
// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js
var objectWithoutPropertiesLoose = __webpack_require__(3366);
// EXTERNAL MODULE: ./node_modules/@mui/utils/esm/formatMuiErrorMessage.js
var formatMuiErrorMessage = __webpack_require__(6189);
// EXTERNAL MODULE: ./node_modules/@mui/utils/esm/deepmerge.js
var deepmerge = __webpack_require__(2466);
// EXTERNAL MODULE: ./node_modules/@mui/system/esm/createTheme/createTheme.js + 3 modules
var createTheme = __webpack_require__(5080);
// EXTERNAL MODULE: ./node_modules/@mui/system/esm/styleFunctionSx/defaultSxConfig.js + 5 modules
var defaultSxConfig = __webpack_require__(7416);
// EXTERNAL MODULE: ./node_modules/@mui/system/esm/styleFunctionSx/styleFunctionSx.js
var styleFunctionSx = __webpack_require__(104);
// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/defineProperty.js
var defineProperty = __webpack_require__(4942);
;// CONCATENATED MODULE: ./node_modules/@mui/material/styles/createMixins.js


function createMixins(breakpoints, mixins) {
  var _toolbar;
  return (0,esm_extends/* default */.Z)({
    toolbar: (_toolbar = {
      minHeight: 56
    }, (0,defineProperty/* default */.Z)(_toolbar, breakpoints.up('xs'), {
      '@media (orientation: landscape)': {
        minHeight: 48
      }
    }), (0,defineProperty/* default */.Z)(_toolbar, breakpoints.up('sm'), {
      minHeight: 64
    }), _toolbar)
  }, mixins);
}
// EXTERNAL MODULE: ./node_modules/@mui/system/esm/colorManipulator.js
var colorManipulator = __webpack_require__(2065);
;// CONCATENATED MODULE: ./node_modules/@mui/material/colors/common.js
var common = {
  black: '#000',
  white: '#fff'
};
/* harmony default export */ var colors_common = (common);
;// CONCATENATED MODULE: ./node_modules/@mui/material/colors/grey.js
var grey = {
  50: '#fafafa',
  100: '#f5f5f5',
  200: '#eeeeee',
  300: '#e0e0e0',
  400: '#bdbdbd',
  500: '#9e9e9e',
  600: '#757575',
  700: '#616161',
  800: '#424242',
  900: '#212121',
  A100: '#f5f5f5',
  A200: '#eeeeee',
  A400: '#bdbdbd',
  A700: '#616161'
};
/* harmony default export */ var colors_grey = (grey);
;// CONCATENATED MODULE: ./node_modules/@mui/material/colors/purple.js
var purple = {
  50: '#f3e5f5',
  100: '#e1bee7',
  200: '#ce93d8',
  300: '#ba68c8',
  400: '#ab47bc',
  500: '#9c27b0',
  600: '#8e24aa',
  700: '#7b1fa2',
  800: '#6a1b9a',
  900: '#4a148c',
  A100: '#ea80fc',
  A200: '#e040fb',
  A400: '#d500f9',
  A700: '#aa00ff'
};
/* harmony default export */ var colors_purple = (purple);
;// CONCATENATED MODULE: ./node_modules/@mui/material/colors/red.js
var red = {
  50: '#ffebee',
  100: '#ffcdd2',
  200: '#ef9a9a',
  300: '#e57373',
  400: '#ef5350',
  500: '#f44336',
  600: '#e53935',
  700: '#d32f2f',
  800: '#c62828',
  900: '#b71c1c',
  A100: '#ff8a80',
  A200: '#ff5252',
  A400: '#ff1744',
  A700: '#d50000'
};
/* harmony default export */ var colors_red = (red);
;// CONCATENATED MODULE: ./node_modules/@mui/material/colors/orange.js
var orange = {
  50: '#fff3e0',
  100: '#ffe0b2',
  200: '#ffcc80',
  300: '#ffb74d',
  400: '#ffa726',
  500: '#ff9800',
  600: '#fb8c00',
  700: '#f57c00',
  800: '#ef6c00',
  900: '#e65100',
  A100: '#ffd180',
  A200: '#ffab40',
  A400: '#ff9100',
  A700: '#ff6d00'
};
/* harmony default export */ var colors_orange = (orange);
;// CONCATENATED MODULE: ./node_modules/@mui/material/colors/blue.js
var blue = {
  50: '#e3f2fd',
  100: '#bbdefb',
  200: '#90caf9',
  300: '#64b5f6',
  400: '#42a5f5',
  500: '#2196f3',
  600: '#1e88e5',
  700: '#1976d2',
  800: '#1565c0',
  900: '#0d47a1',
  A100: '#82b1ff',
  A200: '#448aff',
  A400: '#2979ff',
  A700: '#2962ff'
};
/* harmony default export */ var colors_blue = (blue);
;// CONCATENATED MODULE: ./node_modules/@mui/material/colors/lightBlue.js
var lightBlue = {
  50: '#e1f5fe',
  100: '#b3e5fc',
  200: '#81d4fa',
  300: '#4fc3f7',
  400: '#29b6f6',
  500: '#03a9f4',
  600: '#039be5',
  700: '#0288d1',
  800: '#0277bd',
  900: '#01579b',
  A100: '#80d8ff',
  A200: '#40c4ff',
  A400: '#00b0ff',
  A700: '#0091ea'
};
/* harmony default export */ var colors_lightBlue = (lightBlue);
;// CONCATENATED MODULE: ./node_modules/@mui/material/colors/green.js
var green = {
  50: '#e8f5e9',
  100: '#c8e6c9',
  200: '#a5d6a7',
  300: '#81c784',
  400: '#66bb6a',
  500: '#4caf50',
  600: '#43a047',
  700: '#388e3c',
  800: '#2e7d32',
  900: '#1b5e20',
  A100: '#b9f6ca',
  A200: '#69f0ae',
  A400: '#00e676',
  A700: '#00c853'
};
/* harmony default export */ var colors_green = (green);
;// CONCATENATED MODULE: ./node_modules/@mui/material/styles/createPalette.js



var _excluded = ["mode", "contrastThreshold", "tonalOffset"];










var light = {
  // The colors used to style the text.
  text: {
    // The most important text.
    primary: 'rgba(0, 0, 0, 0.87)',
    // Secondary text.
    secondary: 'rgba(0, 0, 0, 0.6)',
    // Disabled text have even lower visual prominence.
    disabled: 'rgba(0, 0, 0, 0.38)'
  },
  // The color used to divide different elements.
  divider: 'rgba(0, 0, 0, 0.12)',
  // The background colors used to style the surfaces.
  // Consistency between these values is important.
  background: {
    paper: colors_common.white,
    default: colors_common.white
  },
  // The colors used to style the action elements.
  action: {
    // The color of an active action like an icon button.
    active: 'rgba(0, 0, 0, 0.54)',
    // The color of an hovered action.
    hover: 'rgba(0, 0, 0, 0.04)',
    hoverOpacity: 0.04,
    // The color of a selected action.
    selected: 'rgba(0, 0, 0, 0.08)',
    selectedOpacity: 0.08,
    // The color of a disabled action.
    disabled: 'rgba(0, 0, 0, 0.26)',
    // The background color of a disabled action.
    disabledBackground: 'rgba(0, 0, 0, 0.12)',
    disabledOpacity: 0.38,
    focus: 'rgba(0, 0, 0, 0.12)',
    focusOpacity: 0.12,
    activatedOpacity: 0.12
  }
};
var dark = {
  text: {
    primary: colors_common.white,
    secondary: 'rgba(255, 255, 255, 0.7)',
    disabled: 'rgba(255, 255, 255, 0.5)',
    icon: 'rgba(255, 255, 255, 0.5)'
  },
  divider: 'rgba(255, 255, 255, 0.12)',
  background: {
    paper: '#121212',
    default: '#121212'
  },
  action: {
    active: colors_common.white,
    hover: 'rgba(255, 255, 255, 0.08)',
    hoverOpacity: 0.08,
    selected: 'rgba(255, 255, 255, 0.16)',
    selectedOpacity: 0.16,
    disabled: 'rgba(255, 255, 255, 0.3)',
    disabledBackground: 'rgba(255, 255, 255, 0.12)',
    disabledOpacity: 0.38,
    focus: 'rgba(255, 255, 255, 0.12)',
    focusOpacity: 0.12,
    activatedOpacity: 0.24
  }
};
function addLightOrDark(intent, direction, shade, tonalOffset) {
  var tonalOffsetLight = tonalOffset.light || tonalOffset;
  var tonalOffsetDark = tonalOffset.dark || tonalOffset * 1.5;
  if (!intent[direction]) {
    if (intent.hasOwnProperty(shade)) {
      intent[direction] = intent[shade];
    } else if (direction === 'light') {
      intent.light = (0,colorManipulator/* lighten */.$n)(intent.main, tonalOffsetLight);
    } else if (direction === 'dark') {
      intent.dark = (0,colorManipulator/* darken */._j)(intent.main, tonalOffsetDark);
    }
  }
}
function getDefaultPrimary() {
  var mode = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'light';
  if (mode === 'dark') {
    return {
      main: colors_blue[200],
      light: colors_blue[50],
      dark: colors_blue[400]
    };
  }
  return {
    main: colors_blue[700],
    light: colors_blue[400],
    dark: colors_blue[800]
  };
}
function getDefaultSecondary() {
  var mode = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'light';
  if (mode === 'dark') {
    return {
      main: colors_purple[200],
      light: colors_purple[50],
      dark: colors_purple[400]
    };
  }
  return {
    main: colors_purple[500],
    light: colors_purple[300],
    dark: colors_purple[700]
  };
}
function getDefaultError() {
  var mode = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'light';
  if (mode === 'dark') {
    return {
      main: colors_red[500],
      light: colors_red[300],
      dark: colors_red[700]
    };
  }
  return {
    main: colors_red[700],
    light: colors_red[400],
    dark: colors_red[800]
  };
}
function getDefaultInfo() {
  var mode = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'light';
  if (mode === 'dark') {
    return {
      main: colors_lightBlue[400],
      light: colors_lightBlue[300],
      dark: colors_lightBlue[700]
    };
  }
  return {
    main: colors_lightBlue[700],
    light: colors_lightBlue[500],
    dark: colors_lightBlue[900]
  };
}
function getDefaultSuccess() {
  var mode = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'light';
  if (mode === 'dark') {
    return {
      main: colors_green[400],
      light: colors_green[300],
      dark: colors_green[700]
    };
  }
  return {
    main: colors_green[800],
    light: colors_green[500],
    dark: colors_green[900]
  };
}
function getDefaultWarning() {
  var mode = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'light';
  if (mode === 'dark') {
    return {
      main: colors_orange[400],
      light: colors_orange[300],
      dark: colors_orange[700]
    };
  }
  return {
    main: '#ed6c02',
    // closest to orange[800] that pass 3:1.
    light: colors_orange[500],
    dark: colors_orange[900]
  };
}
function createPalette(palette) {
  var _palette$mode = palette.mode,
    mode = _palette$mode === void 0 ? 'light' : _palette$mode,
    _palette$contrastThre = palette.contrastThreshold,
    contrastThreshold = _palette$contrastThre === void 0 ? 3 : _palette$contrastThre,
    _palette$tonalOffset = palette.tonalOffset,
    tonalOffset = _palette$tonalOffset === void 0 ? 0.2 : _palette$tonalOffset,
    other = (0,objectWithoutPropertiesLoose/* default */.Z)(palette, _excluded);
  var primary = palette.primary || getDefaultPrimary(mode);
  var secondary = palette.secondary || getDefaultSecondary(mode);
  var error = palette.error || getDefaultError(mode);
  var info = palette.info || getDefaultInfo(mode);
  var success = palette.success || getDefaultSuccess(mode);
  var warning = palette.warning || getDefaultWarning(mode);

  // Use the same logic as
  // Bootstrap: https://github.com/twbs/bootstrap/blob/1d6e3710dd447de1a200f29e8fa521f8a0908f70/scss/_functions.scss#L59
  // and material-components-web https://github.com/material-components/material-components-web/blob/ac46b8863c4dab9fc22c4c662dc6bd1b65dd652f/packages/mdc-theme/_functions.scss#L54
  function getContrastText(background) {
    var contrastText = (0,colorManipulator/* getContrastRatio */.mi)(background, dark.text.primary) >= contrastThreshold ? dark.text.primary : light.text.primary;
    if (false) { var contrast; }
    return contrastText;
  }
  var augmentColor = function augmentColor(_ref) {
    var color = _ref.color,
      name = _ref.name,
      _ref$mainShade = _ref.mainShade,
      mainShade = _ref$mainShade === void 0 ? 500 : _ref$mainShade,
      _ref$lightShade = _ref.lightShade,
      lightShade = _ref$lightShade === void 0 ? 300 : _ref$lightShade,
      _ref$darkShade = _ref.darkShade,
      darkShade = _ref$darkShade === void 0 ? 700 : _ref$darkShade;
    color = (0,esm_extends/* default */.Z)({}, color);
    if (!color.main && color[mainShade]) {
      color.main = color[mainShade];
    }
    if (!color.hasOwnProperty('main')) {
      throw new Error( false ? 0 : (0,formatMuiErrorMessage/* default */.Z)(11, name ? " (".concat(name, ")") : '', mainShade));
    }
    if (typeof color.main !== 'string') {
      throw new Error( false ? 0 : (0,formatMuiErrorMessage/* default */.Z)(12, name ? " (".concat(name, ")") : '', JSON.stringify(color.main)));
    }
    addLightOrDark(color, 'light', lightShade, tonalOffset);
    addLightOrDark(color, 'dark', darkShade, tonalOffset);
    if (!color.contrastText) {
      color.contrastText = getContrastText(color.main);
    }
    return color;
  };
  var modes = {
    dark: dark,
    light: light
  };
  if (false) {}
  var paletteOutput = (0,deepmerge/* default */.Z)((0,esm_extends/* default */.Z)({
    // A collection of common colors.
    common: (0,esm_extends/* default */.Z)({}, colors_common),
    // prevent mutable object.
    // The palette mode, can be light or dark.
    mode: mode,
    // The colors used to represent primary interface elements for a user.
    primary: augmentColor({
      color: primary,
      name: 'primary'
    }),
    // The colors used to represent secondary interface elements for a user.
    secondary: augmentColor({
      color: secondary,
      name: 'secondary',
      mainShade: 'A400',
      lightShade: 'A200',
      darkShade: 'A700'
    }),
    // The colors used to represent interface elements that the user should be made aware of.
    error: augmentColor({
      color: error,
      name: 'error'
    }),
    // The colors used to represent potentially dangerous actions or important messages.
    warning: augmentColor({
      color: warning,
      name: 'warning'
    }),
    // The colors used to present information to the user that is neutral and not necessarily important.
    info: augmentColor({
      color: info,
      name: 'info'
    }),
    // The colors used to indicate the successful completion of an action that user triggered.
    success: augmentColor({
      color: success,
      name: 'success'
    }),
    // The grey colors.
    grey: colors_grey,
    // Used by `getContrastText()` to maximize the contrast between
    // the background and the text.
    contrastThreshold: contrastThreshold,
    // Takes a background color and returns the text color that maximizes the contrast.
    getContrastText: getContrastText,
    // Generate a rich color object.
    augmentColor: augmentColor,
    // Used by the functions below to shift a color's luminance by approximately
    // two indexes within its tonal palette.
    // E.g., shift from Red 500 to Red 300 or Red 700.
    tonalOffset: tonalOffset
  }, modes[mode]), other);
  return paletteOutput;
}
;// CONCATENATED MODULE: ./node_modules/@mui/material/styles/createTypography.js


var createTypography_excluded = ["fontFamily", "fontSize", "fontWeightLight", "fontWeightRegular", "fontWeightMedium", "fontWeightBold", "htmlFontSize", "allVariants", "pxToRem"];

function round(value) {
  return Math.round(value * 1e5) / 1e5;
}
var caseAllCaps = {
  textTransform: 'uppercase'
};
var defaultFontFamily = '"Roboto", "Helvetica", "Arial", sans-serif';

/**
 * @see @link{https://m2.material.io/design/typography/the-type-system.html}
 * @see @link{https://m2.material.io/design/typography/understanding-typography.html}
 */
function createTypography(palette, typography) {
  var _ref = typeof typography === 'function' ? typography(palette) : typography,
    _ref$fontFamily = _ref.fontFamily,
    fontFamily = _ref$fontFamily === void 0 ? defaultFontFamily : _ref$fontFamily,
    _ref$fontSize = _ref.fontSize,
    fontSize = _ref$fontSize === void 0 ? 14 : _ref$fontSize,
    _ref$fontWeightLight = _ref.fontWeightLight,
    fontWeightLight = _ref$fontWeightLight === void 0 ? 300 : _ref$fontWeightLight,
    _ref$fontWeightRegula = _ref.fontWeightRegular,
    fontWeightRegular = _ref$fontWeightRegula === void 0 ? 400 : _ref$fontWeightRegula,
    _ref$fontWeightMedium = _ref.fontWeightMedium,
    fontWeightMedium = _ref$fontWeightMedium === void 0 ? 500 : _ref$fontWeightMedium,
    _ref$fontWeightBold = _ref.fontWeightBold,
    fontWeightBold = _ref$fontWeightBold === void 0 ? 700 : _ref$fontWeightBold,
    _ref$htmlFontSize = _ref.htmlFontSize,
    htmlFontSize = _ref$htmlFontSize === void 0 ? 16 : _ref$htmlFontSize,
    allVariants = _ref.allVariants,
    pxToRem2 = _ref.pxToRem,
    other = (0,objectWithoutPropertiesLoose/* default */.Z)(_ref, createTypography_excluded);
  if (false) {}
  var coef = fontSize / 14;
  var pxToRem = pxToRem2 || function (size) {
    return "".concat(size / htmlFontSize * coef, "rem");
  };
  var buildVariant = function buildVariant(fontWeight, size, lineHeight, letterSpacing, casing) {
    return (0,esm_extends/* default */.Z)({
      fontFamily: fontFamily,
      fontWeight: fontWeight,
      fontSize: pxToRem(size),
      // Unitless following https://meyerweb.com/eric/thoughts/2006/02/08/unitless-line-heights/
      lineHeight: lineHeight
    }, fontFamily === defaultFontFamily ? {
      letterSpacing: "".concat(round(letterSpacing / size), "em")
    } : {}, casing, allVariants);
  };
  var variants = {
    h1: buildVariant(fontWeightLight, 96, 1.167, -1.5),
    h2: buildVariant(fontWeightLight, 60, 1.2, -0.5),
    h3: buildVariant(fontWeightRegular, 48, 1.167, 0),
    h4: buildVariant(fontWeightRegular, 34, 1.235, 0.25),
    h5: buildVariant(fontWeightRegular, 24, 1.334, 0),
    h6: buildVariant(fontWeightMedium, 20, 1.6, 0.15),
    subtitle1: buildVariant(fontWeightRegular, 16, 1.75, 0.15),
    subtitle2: buildVariant(fontWeightMedium, 14, 1.57, 0.1),
    body1: buildVariant(fontWeightRegular, 16, 1.5, 0.15),
    body2: buildVariant(fontWeightRegular, 14, 1.43, 0.15),
    button: buildVariant(fontWeightMedium, 14, 1.75, 0.4, caseAllCaps),
    caption: buildVariant(fontWeightRegular, 12, 1.66, 0.4),
    overline: buildVariant(fontWeightRegular, 12, 2.66, 1, caseAllCaps)
  };
  return (0,deepmerge/* default */.Z)((0,esm_extends/* default */.Z)({
    htmlFontSize: htmlFontSize,
    pxToRem: pxToRem,
    fontFamily: fontFamily,
    fontSize: fontSize,
    fontWeightLight: fontWeightLight,
    fontWeightRegular: fontWeightRegular,
    fontWeightMedium: fontWeightMedium,
    fontWeightBold: fontWeightBold
  }, variants), other, {
    clone: false // No need to clone deep
  });
}
;// CONCATENATED MODULE: ./node_modules/@mui/material/styles/shadows.js
var shadowKeyUmbraOpacity = 0.2;
var shadowKeyPenumbraOpacity = 0.14;
var shadowAmbientShadowOpacity = 0.12;
function createShadow() {
  return ["".concat(arguments.length <= 0 ? undefined : arguments[0], "px ").concat(arguments.length <= 1 ? undefined : arguments[1], "px ").concat(arguments.length <= 2 ? undefined : arguments[2], "px ").concat(arguments.length <= 3 ? undefined : arguments[3], "px rgba(0,0,0,").concat(shadowKeyUmbraOpacity, ")"), "".concat(arguments.length <= 4 ? undefined : arguments[4], "px ").concat(arguments.length <= 5 ? undefined : arguments[5], "px ").concat(arguments.length <= 6 ? undefined : arguments[6], "px ").concat(arguments.length <= 7 ? undefined : arguments[7], "px rgba(0,0,0,").concat(shadowKeyPenumbraOpacity, ")"), "".concat(arguments.length <= 8 ? undefined : arguments[8], "px ").concat(arguments.length <= 9 ? undefined : arguments[9], "px ").concat(arguments.length <= 10 ? undefined : arguments[10], "px ").concat(arguments.length <= 11 ? undefined : arguments[11], "px rgba(0,0,0,").concat(shadowAmbientShadowOpacity, ")")].join(',');
}

// Values from https://github.com/material-components/material-components-web/blob/be8747f94574669cb5e7add1a7c54fa41a89cec7/packages/mdc-elevation/_variables.scss
var shadows = ['none', createShadow(0, 2, 1, -1, 0, 1, 1, 0, 0, 1, 3, 0), createShadow(0, 3, 1, -2, 0, 2, 2, 0, 0, 1, 5, 0), createShadow(0, 3, 3, -2, 0, 3, 4, 0, 0, 1, 8, 0), createShadow(0, 2, 4, -1, 0, 4, 5, 0, 0, 1, 10, 0), createShadow(0, 3, 5, -1, 0, 5, 8, 0, 0, 1, 14, 0), createShadow(0, 3, 5, -1, 0, 6, 10, 0, 0, 1, 18, 0), createShadow(0, 4, 5, -2, 0, 7, 10, 1, 0, 2, 16, 1), createShadow(0, 5, 5, -3, 0, 8, 10, 1, 0, 3, 14, 2), createShadow(0, 5, 6, -3, 0, 9, 12, 1, 0, 3, 16, 2), createShadow(0, 6, 6, -3, 0, 10, 14, 1, 0, 4, 18, 3), createShadow(0, 6, 7, -4, 0, 11, 15, 1, 0, 4, 20, 3), createShadow(0, 7, 8, -4, 0, 12, 17, 2, 0, 5, 22, 4), createShadow(0, 7, 8, -4, 0, 13, 19, 2, 0, 5, 24, 4), createShadow(0, 7, 9, -4, 0, 14, 21, 2, 0, 5, 26, 4), createShadow(0, 8, 9, -5, 0, 15, 22, 2, 0, 6, 28, 5), createShadow(0, 8, 10, -5, 0, 16, 24, 2, 0, 6, 30, 5), createShadow(0, 8, 11, -5, 0, 17, 26, 2, 0, 6, 32, 5), createShadow(0, 9, 11, -5, 0, 18, 28, 2, 0, 7, 34, 6), createShadow(0, 9, 12, -6, 0, 19, 29, 2, 0, 7, 36, 6), createShadow(0, 10, 13, -6, 0, 20, 31, 3, 0, 8, 38, 7), createShadow(0, 10, 13, -6, 0, 21, 33, 3, 0, 8, 40, 7), createShadow(0, 10, 14, -6, 0, 22, 35, 3, 0, 8, 42, 7), createShadow(0, 11, 14, -7, 0, 23, 36, 3, 0, 9, 44, 8), createShadow(0, 11, 15, -7, 0, 24, 38, 3, 0, 9, 46, 8)];
/* harmony default export */ var styles_shadows = (shadows);
;// CONCATENATED MODULE: ./node_modules/@mui/material/styles/createTransitions.js


var createTransitions_excluded = ["duration", "easing", "delay"];
// Follow https://material.google.com/motion/duration-easing.html#duration-easing-natural-easing-curves
// to learn the context in which each easing should be used.
var easing = {
  // This is the most common easing curve.
  easeInOut: 'cubic-bezier(0.4, 0, 0.2, 1)',
  // Objects enter the screen at full velocity from off-screen and
  // slowly decelerate to a resting point.
  easeOut: 'cubic-bezier(0.0, 0, 0.2, 1)',
  // Objects leave the screen at full velocity. They do not decelerate when off-screen.
  easeIn: 'cubic-bezier(0.4, 0, 1, 1)',
  // The sharp curve is used by objects that may return to the screen at any time.
  sharp: 'cubic-bezier(0.4, 0, 0.6, 1)'
};

// Follow https://m2.material.io/guidelines/motion/duration-easing.html#duration-easing-common-durations
// to learn when use what timing
var duration = {
  shortest: 150,
  shorter: 200,
  short: 250,
  // most basic recommended timing
  standard: 300,
  // this is to be used in complex animations
  complex: 375,
  // recommended when something is entering screen
  enteringScreen: 225,
  // recommended when something is leaving screen
  leavingScreen: 195
};
function formatMs(milliseconds) {
  return "".concat(Math.round(milliseconds), "ms");
}
function getAutoHeightDuration(height) {
  if (!height) {
    return 0;
  }
  var constant = height / 36;

  // https://www.wolframalpha.com/input/?i=(4+%2B+15+*+(x+%2F+36+)+**+0.25+%2B+(x+%2F+36)+%2F+5)+*+10
  return Math.round((4 + 15 * Math.pow(constant, 0.25) + constant / 5) * 10);
}
function createTransitions(inputTransitions) {
  var mergedEasing = (0,esm_extends/* default */.Z)({}, easing, inputTransitions.easing);
  var mergedDuration = (0,esm_extends/* default */.Z)({}, duration, inputTransitions.duration);
  var create = function create() {
    var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : ['all'];
    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
    var _options$duration = options.duration,
      durationOption = _options$duration === void 0 ? mergedDuration.standard : _options$duration,
      _options$easing = options.easing,
      easingOption = _options$easing === void 0 ? mergedEasing.easeInOut : _options$easing,
      _options$delay = options.delay,
      delay = _options$delay === void 0 ? 0 : _options$delay,
      other = (0,objectWithoutPropertiesLoose/* default */.Z)(options, createTransitions_excluded);
    if (false) { var isNumber, isString; }
    return (Array.isArray(props) ? props : [props]).map(function (animatedProp) {
      return "".concat(animatedProp, " ").concat(typeof durationOption === 'string' ? durationOption : formatMs(durationOption), " ").concat(easingOption, " ").concat(typeof delay === 'string' ? delay : formatMs(delay));
    }).join(',');
  };
  return (0,esm_extends/* default */.Z)({
    getAutoHeightDuration: getAutoHeightDuration,
    create: create
  }, inputTransitions, {
    easing: mergedEasing,
    duration: mergedDuration
  });
}
;// CONCATENATED MODULE: ./node_modules/@mui/material/styles/zIndex.js
// We need to centralize the zIndex definitions as they work
// like global values in the browser.
var zIndex = {
  mobileStepper: 1000,
  fab: 1050,
  speedDial: 1050,
  appBar: 1100,
  drawer: 1200,
  modal: 1300,
  snackbar: 1400,
  tooltip: 1500
};
/* harmony default export */ var styles_zIndex = (zIndex);
;// CONCATENATED MODULE: ./node_modules/@mui/material/styles/createTheme.js




var createTheme_excluded = ["breakpoints", "mixins", "spacing", "palette", "transitions", "typography", "shape"];









function createTheme_createTheme() {
  var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
  var _options$mixins = options.mixins,
    mixinsInput = _options$mixins === void 0 ? {} : _options$mixins,
    _options$palette = options.palette,
    paletteInput = _options$palette === void 0 ? {} : _options$palette,
    _options$transitions = options.transitions,
    transitionsInput = _options$transitions === void 0 ? {} : _options$transitions,
    _options$typography = options.typography,
    typographyInput = _options$typography === void 0 ? {} : _options$typography,
    other = (0,objectWithoutPropertiesLoose/* default */.Z)(options, createTheme_excluded);
  if (options.vars) {
    throw new Error( false ? 0 : (0,formatMuiErrorMessage/* default */.Z)(18));
  }
  var palette = createPalette(paletteInput);
  var systemTheme = (0,createTheme/* default */.Z)(options);
  var muiTheme = (0,deepmerge/* default */.Z)(systemTheme, {
    mixins: createMixins(systemTheme.breakpoints, mixinsInput),
    palette: palette,
    // Don't use [...shadows] until you've verified its transpiled code is not invoking the iterator protocol.
    shadows: styles_shadows.slice(),
    typography: createTypography(palette, typographyInput),
    transitions: createTransitions(transitionsInput),
    zIndex: (0,esm_extends/* default */.Z)({}, styles_zIndex)
  });
  muiTheme = (0,deepmerge/* default */.Z)(muiTheme, other);
  for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
    args[_key - 1] = arguments[_key];
  }
  muiTheme = args.reduce(function (acc, argument) {
    return (0,deepmerge/* default */.Z)(acc, argument);
  }, muiTheme);
  if (false) { var traverse, stateClasses; }
  muiTheme.unstable_sxConfig = (0,esm_extends/* default */.Z)({}, defaultSxConfig/* default */.Z, other == null ? void 0 : other.unstable_sxConfig);
  muiTheme.unstable_sx = function sx(props) {
    return (0,styleFunctionSx/* default */.Z)({
      sx: props,
      theme: this
    });
  };
  return muiTheme;
}
var warnedOnce = false;
function createMuiTheme() {
  if (false) {}
  return createTheme_createTheme.apply(void 0, arguments);
}
/* harmony default export */ var styles_createTheme = (createTheme_createTheme);

/***/ }),

/***/ 6482:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var _createTheme__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(7107);

var defaultTheme = (0,_createTheme__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z)();
/* harmony default export */ __webpack_exports__["Z"] = (defaultTheme);

/***/ }),

/***/ 6934:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Dz": function() { return /* binding */ slotShouldForwardProp; },
/* harmony export */   "FO": function() { return /* binding */ rootShouldForwardProp; }
/* harmony export */ });
/* harmony import */ var _mui_system__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(4046);
/* harmony import */ var _defaultTheme__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(6482);


var rootShouldForwardProp = function rootShouldForwardProp(prop) {
  return (0,_mui_system__WEBPACK_IMPORTED_MODULE_0__/* .shouldForwardProp */ .x9)(prop) && prop !== 'classes';
};
var slotShouldForwardProp = _mui_system__WEBPACK_IMPORTED_MODULE_0__/* .shouldForwardProp */ .x9;
var styled = (0,_mui_system__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .ZP)({
  defaultTheme: _defaultTheme__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z,
  rootShouldForwardProp: rootShouldForwardProp
});
/* harmony default export */ __webpack_exports__["ZP"] = (styled);

/***/ }),

/***/ 1402:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Z": function() { return /* binding */ useThemeProps; }
/* harmony export */ });
/* harmony import */ var _mui_system__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(6083);
/* harmony import */ var _defaultTheme__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(6482);


function useThemeProps(_ref) {
  var props = _ref.props,
    name = _ref.name;
  return (0,_mui_system__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z)({
    props: props,
    name: name,
    defaultTheme: _defaultTheme__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z
  });
}

/***/ }),

/***/ 4036:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var _mui_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(7312);

/* harmony default export */ __webpack_exports__["Z"] = (_mui_utils__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z);

/***/ }),

/***/ 9201:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";

// EXPORTS
__webpack_require__.d(__webpack_exports__, {
  "Z": function() { return /* binding */ createSvgIcon; }
});

// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/extends.js
var esm_extends = __webpack_require__(7462);
// EXTERNAL MODULE: ./node_modules/react/index.js
var react = __webpack_require__(2791);
// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js
var objectWithoutPropertiesLoose = __webpack_require__(3366);
// EXTERNAL MODULE: ./node_modules/clsx/dist/clsx.m.js
var clsx_m = __webpack_require__(8182);
// EXTERNAL MODULE: ./node_modules/@mui/utils/esm/composeClasses/composeClasses.js
var composeClasses = __webpack_require__(4419);
// EXTERNAL MODULE: ./node_modules/@mui/material/utils/capitalize.js
var capitalize = __webpack_require__(4036);
// EXTERNAL MODULE: ./node_modules/@mui/material/styles/useThemeProps.js
var useThemeProps = __webpack_require__(1402);
// EXTERNAL MODULE: ./node_modules/@mui/material/styles/styled.js
var styled = __webpack_require__(6934);
// EXTERNAL MODULE: ./node_modules/@mui/utils/esm/generateUtilityClasses/generateUtilityClasses.js
var generateUtilityClasses = __webpack_require__(5878);
// EXTERNAL MODULE: ./node_modules/@mui/utils/esm/generateUtilityClass/generateUtilityClass.js
var generateUtilityClass = __webpack_require__(1217);
;// CONCATENATED MODULE: ./node_modules/@mui/material/SvgIcon/svgIconClasses.js


function getSvgIconUtilityClass(slot) {
  return (0,generateUtilityClass/* default */.Z)('MuiSvgIcon', slot);
}
var svgIconClasses = (0,generateUtilityClasses/* default */.Z)('MuiSvgIcon', ['root', 'colorPrimary', 'colorSecondary', 'colorAction', 'colorError', 'colorDisabled', 'fontSizeInherit', 'fontSizeSmall', 'fontSizeMedium', 'fontSizeLarge']);
/* harmony default export */ var SvgIcon_svgIconClasses = ((/* unused pure expression or super */ null && (svgIconClasses)));
// EXTERNAL MODULE: ./node_modules/react/jsx-runtime.js
var jsx_runtime = __webpack_require__(184);
;// CONCATENATED MODULE: ./node_modules/@mui/material/SvgIcon/SvgIcon.js


var _excluded = ["children", "className", "color", "component", "fontSize", "htmlColor", "inheritViewBox", "titleAccess", "viewBox"];










var useUtilityClasses = function useUtilityClasses(ownerState) {
  var color = ownerState.color,
    fontSize = ownerState.fontSize,
    classes = ownerState.classes;
  var slots = {
    root: ['root', color !== 'inherit' && "color".concat((0,capitalize/* default */.Z)(color)), "fontSize".concat((0,capitalize/* default */.Z)(fontSize))]
  };
  return (0,composeClasses/* default */.Z)(slots, getSvgIconUtilityClass, classes);
};
var SvgIconRoot = (0,styled/* default */.ZP)('svg', {
  name: 'MuiSvgIcon',
  slot: 'Root',
  overridesResolver: function overridesResolver(props, styles) {
    var ownerState = props.ownerState;
    return [styles.root, ownerState.color !== 'inherit' && styles["color".concat((0,capitalize/* default */.Z)(ownerState.color))], styles["fontSize".concat((0,capitalize/* default */.Z)(ownerState.fontSize))]];
  }
})(function (_ref) {
  var theme = _ref.theme,
    ownerState = _ref.ownerState;
  var _theme$transitions, _theme$transitions$cr, _theme$transitions2, _theme$transitions2$d, _theme$typography, _theme$typography$pxT, _theme$typography2, _theme$typography2$px, _theme$typography3, _theme$typography3$px, _palette$ownerState$c, _palette, _palette$ownerState$c2, _palette2, _palette2$action, _palette3, _palette3$action;
  return {
    userSelect: 'none',
    width: '1em',
    height: '1em',
    display: 'inline-block',
    fill: 'currentColor',
    flexShrink: 0,
    transition: (_theme$transitions = theme.transitions) == null ? void 0 : (_theme$transitions$cr = _theme$transitions.create) == null ? void 0 : _theme$transitions$cr.call(_theme$transitions, 'fill', {
      duration: (_theme$transitions2 = theme.transitions) == null ? void 0 : (_theme$transitions2$d = _theme$transitions2.duration) == null ? void 0 : _theme$transitions2$d.shorter
    }),
    fontSize: {
      inherit: 'inherit',
      small: ((_theme$typography = theme.typography) == null ? void 0 : (_theme$typography$pxT = _theme$typography.pxToRem) == null ? void 0 : _theme$typography$pxT.call(_theme$typography, 20)) || '1.25rem',
      medium: ((_theme$typography2 = theme.typography) == null ? void 0 : (_theme$typography2$px = _theme$typography2.pxToRem) == null ? void 0 : _theme$typography2$px.call(_theme$typography2, 24)) || '1.5rem',
      large: ((_theme$typography3 = theme.typography) == null ? void 0 : (_theme$typography3$px = _theme$typography3.pxToRem) == null ? void 0 : _theme$typography3$px.call(_theme$typography3, 35)) || '2.1875rem'
    }[ownerState.fontSize],
    // TODO v5 deprecate, v6 remove for sx
    color: (_palette$ownerState$c = (_palette = (theme.vars || theme).palette) == null ? void 0 : (_palette$ownerState$c2 = _palette[ownerState.color]) == null ? void 0 : _palette$ownerState$c2.main) != null ? _palette$ownerState$c : {
      action: (_palette2 = (theme.vars || theme).palette) == null ? void 0 : (_palette2$action = _palette2.action) == null ? void 0 : _palette2$action.active,
      disabled: (_palette3 = (theme.vars || theme).palette) == null ? void 0 : (_palette3$action = _palette3.action) == null ? void 0 : _palette3$action.disabled,
      inherit: undefined
    }[ownerState.color]
  };
});
var SvgIcon = /*#__PURE__*/react.forwardRef(function SvgIcon(inProps, ref) {
  var props = (0,useThemeProps/* default */.Z)({
    props: inProps,
    name: 'MuiSvgIcon'
  });
  var children = props.children,
    className = props.className,
    _props$color = props.color,
    color = _props$color === void 0 ? 'inherit' : _props$color,
    _props$component = props.component,
    component = _props$component === void 0 ? 'svg' : _props$component,
    _props$fontSize = props.fontSize,
    fontSize = _props$fontSize === void 0 ? 'medium' : _props$fontSize,
    htmlColor = props.htmlColor,
    _props$inheritViewBox = props.inheritViewBox,
    inheritViewBox = _props$inheritViewBox === void 0 ? false : _props$inheritViewBox,
    titleAccess = props.titleAccess,
    _props$viewBox = props.viewBox,
    viewBox = _props$viewBox === void 0 ? '0 0 24 24' : _props$viewBox,
    other = (0,objectWithoutPropertiesLoose/* default */.Z)(props, _excluded);
  var ownerState = (0,esm_extends/* default */.Z)({}, props, {
    color: color,
    component: component,
    fontSize: fontSize,
    instanceFontSize: inProps.fontSize,
    inheritViewBox: inheritViewBox,
    viewBox: viewBox
  });
  var more = {};
  if (!inheritViewBox) {
    more.viewBox = viewBox;
  }
  var classes = useUtilityClasses(ownerState);
  return /*#__PURE__*/(0,jsx_runtime.jsxs)(SvgIconRoot, (0,esm_extends/* default */.Z)({
    as: component,
    className: (0,clsx_m/* default */.Z)(classes.root, className),
    focusable: "false",
    color: htmlColor,
    "aria-hidden": titleAccess ? undefined : true,
    role: titleAccess ? 'img' : undefined,
    ref: ref
  }, more, other, {
    ownerState: ownerState,
    children: [children, titleAccess ? /*#__PURE__*/(0,jsx_runtime.jsx)("title", {
      children: titleAccess
    }) : null]
  }));
});
 false ? 0 : void 0;
SvgIcon.muiName = 'SvgIcon';
/* harmony default export */ var SvgIcon_SvgIcon = (SvgIcon);
;// CONCATENATED MODULE: ./node_modules/@mui/material/utils/createSvgIcon.js




/**
 * Private module reserved for @mui packages.
 */

function createSvgIcon(path, displayName) {
  function Component(props, ref) {
    return /*#__PURE__*/(0,jsx_runtime.jsx)(SvgIcon_SvgIcon, (0,esm_extends/* default */.Z)({
      "data-testid": "".concat(displayName, "Icon"),
      ref: ref
    }, props, {
      children: path
    }));
  }
  if (false) {}
  Component.muiName = SvgIcon_SvgIcon.muiName;
  return /*#__PURE__*/react.memo( /*#__PURE__*/react.forwardRef(Component));
}

/***/ }),

/***/ 3199:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var _mui_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(3981);

/* harmony default export */ __webpack_exports__["Z"] = (_mui_utils__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z);

/***/ }),

/***/ 4454:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
// ESM COMPAT FLAG
__webpack_require__.r(__webpack_exports__);

// EXPORTS
__webpack_require__.d(__webpack_exports__, {
  "capitalize": function() { return /* reexport */ capitalize/* default */.Z; },
  "createChainedFunction": function() { return /* reexport */ utils_createChainedFunction; },
  "createSvgIcon": function() { return /* reexport */ createSvgIcon/* default */.Z; },
  "debounce": function() { return /* reexport */ debounce/* default */.Z; },
  "deprecatedPropType": function() { return /* reexport */ utils_deprecatedPropType; },
  "isMuiElement": function() { return /* reexport */ isMuiElement/* default */.Z; },
  "ownerDocument": function() { return /* reexport */ ownerDocument/* default */.Z; },
  "ownerWindow": function() { return /* reexport */ ownerWindow/* default */.Z; },
  "requirePropFactory": function() { return /* reexport */ utils_requirePropFactory; },
  "setRef": function() { return /* reexport */ utils_setRef; },
  "unstable_ClassNameGenerator": function() { return /* binding */ unstable_ClassNameGenerator; },
  "unstable_useEnhancedEffect": function() { return /* reexport */ useEnhancedEffect/* default */.Z; },
  "unstable_useId": function() { return /* reexport */ utils_useId; },
  "unsupportedProp": function() { return /* reexport */ utils_unsupportedProp; },
  "useControlled": function() { return /* reexport */ useControlled/* default */.Z; },
  "useEventCallback": function() { return /* reexport */ useEventCallback/* default */.Z; },
  "useForkRef": function() { return /* reexport */ useForkRef/* default */.Z; },
  "useIsFocusVisible": function() { return /* reexport */ useIsFocusVisible/* default */.Z; }
});

// EXTERNAL MODULE: ./node_modules/@mui/utils/esm/ClassNameGenerator/ClassNameGenerator.js
var ClassNameGenerator = __webpack_require__(5902);
// EXTERNAL MODULE: ./node_modules/@mui/material/utils/capitalize.js
var capitalize = __webpack_require__(4036);
// EXTERNAL MODULE: ./node_modules/@mui/utils/esm/createChainedFunction.js
var createChainedFunction = __webpack_require__(8949);
;// CONCATENATED MODULE: ./node_modules/@mui/material/utils/createChainedFunction.js

/* harmony default export */ var utils_createChainedFunction = (createChainedFunction/* default */.Z);
// EXTERNAL MODULE: ./node_modules/@mui/material/utils/createSvgIcon.js + 2 modules
var createSvgIcon = __webpack_require__(9201);
// EXTERNAL MODULE: ./node_modules/@mui/material/utils/debounce.js
var debounce = __webpack_require__(3199);
;// CONCATENATED MODULE: ./node_modules/@mui/utils/esm/deprecatedPropType.js
function deprecatedPropType(validator, reason) {
  if (true) {
    return function () {
      return null;
    };
  }
  return function (props, propName, componentName, location, propFullName) {
    var componentNameSafe = componentName || '<<anonymous>>';
    var propFullNameSafe = propFullName || propName;
    if (typeof props[propName] !== 'undefined') {
      return new Error("The ".concat(location, " `").concat(propFullNameSafe, "` of ") + "`".concat(componentNameSafe, "` is deprecated. ").concat(reason));
    }
    return null;
  };
}
;// CONCATENATED MODULE: ./node_modules/@mui/material/utils/deprecatedPropType.js

/* harmony default export */ var utils_deprecatedPropType = (deprecatedPropType);
// EXTERNAL MODULE: ./node_modules/@mui/material/utils/isMuiElement.js + 1 modules
var isMuiElement = __webpack_require__(9103);
// EXTERNAL MODULE: ./node_modules/@mui/material/utils/ownerDocument.js
var ownerDocument = __webpack_require__(8301);
// EXTERNAL MODULE: ./node_modules/@mui/material/utils/ownerWindow.js
var ownerWindow = __webpack_require__(7602);
// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/extends.js
var esm_extends = __webpack_require__(7462);
;// CONCATENATED MODULE: ./node_modules/@mui/utils/esm/requirePropFactory.js

function requirePropFactory(componentNameInError, Component) {
  if (true) {
    return function () {
      return null;
    };
  }

  // eslint-disable-next-line react/forbid-foreign-prop-types
  var prevPropTypes = Component ? (0,esm_extends/* default */.Z)({}, Component.propTypes) : null;
  var requireProp = function requireProp(requiredProp) {
    return function (props, propName, componentName, location, propFullName) {
      var propFullNameSafe = propFullName || propName;
      var defaultTypeChecker = prevPropTypes == null ? void 0 : prevPropTypes[propFullNameSafe];
      if (defaultTypeChecker) {
        for (var _len = arguments.length, args = new Array(_len > 5 ? _len - 5 : 0), _key = 5; _key < _len; _key++) {
          args[_key - 5] = arguments[_key];
        }
        var typeCheckerResult = defaultTypeChecker.apply(void 0, [props, propName, componentName, location, propFullName].concat(args));
        if (typeCheckerResult) {
          return typeCheckerResult;
        }
      }
      if (typeof props[propName] !== 'undefined' && !props[requiredProp]) {
        return new Error("The prop `".concat(propFullNameSafe, "` of ") + "`".concat(componentNameInError, "` can only be used together with the `").concat(requiredProp, "` prop."));
      }
      return null;
    };
  };
  return requireProp;
}
;// CONCATENATED MODULE: ./node_modules/@mui/material/utils/requirePropFactory.js

/* harmony default export */ var utils_requirePropFactory = (requirePropFactory);
// EXTERNAL MODULE: ./node_modules/@mui/utils/esm/setRef.js
var setRef = __webpack_require__(2971);
;// CONCATENATED MODULE: ./node_modules/@mui/material/utils/setRef.js

/* harmony default export */ var utils_setRef = (setRef/* default */.Z);
// EXTERNAL MODULE: ./node_modules/@mui/material/utils/useEnhancedEffect.js
var useEnhancedEffect = __webpack_require__(162);
// EXTERNAL MODULE: ./node_modules/@mui/utils/esm/useId.js
var useId = __webpack_require__(6248);
;// CONCATENATED MODULE: ./node_modules/@mui/material/utils/useId.js

/* harmony default export */ var utils_useId = (useId/* default */.Z);
;// CONCATENATED MODULE: ./node_modules/@mui/utils/esm/unsupportedProp.js
function unsupportedProp(props, propName, componentName, location, propFullName) {
  if (true) {
    return null;
  }
  var propFullNameSafe = propFullName || propName;
  if (typeof props[propName] !== 'undefined') {
    return new Error("The prop `".concat(propFullNameSafe, "` is not supported. Please remove it."));
  }
  return null;
}
;// CONCATENATED MODULE: ./node_modules/@mui/material/utils/unsupportedProp.js

/* harmony default export */ var utils_unsupportedProp = (unsupportedProp);
// EXTERNAL MODULE: ./node_modules/@mui/material/utils/useControlled.js + 1 modules
var useControlled = __webpack_require__(8744);
// EXTERNAL MODULE: ./node_modules/@mui/material/utils/useEventCallback.js
var useEventCallback = __webpack_require__(9683);
// EXTERNAL MODULE: ./node_modules/@mui/material/utils/useForkRef.js
var useForkRef = __webpack_require__(2071);
// EXTERNAL MODULE: ./node_modules/@mui/material/utils/useIsFocusVisible.js + 1 modules
var useIsFocusVisible = __webpack_require__(3031);
;// CONCATENATED MODULE: ./node_modules/@mui/material/utils/index.js


















// TODO: remove this export once ClassNameGenerator is stable
// eslint-disable-next-line @typescript-eslint/naming-convention
var unstable_ClassNameGenerator = {
  configure: function configure(generator) {
    if (false) {}
    ClassNameGenerator/* default.configure */.Z.configure(generator);
  }
};

/***/ }),

/***/ 9103:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";

// EXPORTS
__webpack_require__.d(__webpack_exports__, {
  "Z": function() { return /* binding */ utils_isMuiElement; }
});

// EXTERNAL MODULE: ./node_modules/react/index.js
var react = __webpack_require__(2791);
;// CONCATENATED MODULE: ./node_modules/@mui/utils/esm/isMuiElement.js

function isMuiElement(element, muiNames) {
  return /*#__PURE__*/react.isValidElement(element) && muiNames.indexOf(element.type.muiName) !== -1;
}
;// CONCATENATED MODULE: ./node_modules/@mui/material/utils/isMuiElement.js

/* harmony default export */ var utils_isMuiElement = (isMuiElement);

/***/ }),

/***/ 8301:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var _mui_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(9723);

/* harmony default export */ __webpack_exports__["Z"] = (_mui_utils__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z);

/***/ }),

/***/ 7602:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var _mui_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(7979);

/* harmony default export */ __webpack_exports__["Z"] = (_mui_utils__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z);

/***/ }),

/***/ 8744:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";

// EXPORTS
__webpack_require__.d(__webpack_exports__, {
  "Z": function() { return /* binding */ utils_useControlled; }
});

// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/slicedToArray.js + 1 modules
var slicedToArray = __webpack_require__(9439);
// EXTERNAL MODULE: ./node_modules/react/index.js
var react = __webpack_require__(2791);
;// CONCATENATED MODULE: ./node_modules/@mui/utils/esm/useControlled.js

/* eslint-disable react-hooks/rules-of-hooks, react-hooks/exhaustive-deps */

function useControlled(_ref) {
  var controlled = _ref.controlled,
    defaultProp = _ref.default,
    name = _ref.name,
    _ref$state = _ref.state,
    state = _ref$state === void 0 ? 'value' : _ref$state;
  // isControlled is ignored in the hook dependency lists as it should never change.
  var _React$useRef = react.useRef(controlled !== undefined),
    isControlled = _React$useRef.current;
  var _React$useState = react.useState(defaultProp),
    _React$useState2 = (0,slicedToArray/* default */.Z)(_React$useState, 2),
    valueState = _React$useState2[0],
    setValue = _React$useState2[1];
  var value = isControlled ? controlled : valueState;
  if (false) { var _React$useRef2, defaultValue; }
  var setValueIfUncontrolled = react.useCallback(function (newValue) {
    if (!isControlled) {
      setValue(newValue);
    }
  }, []);
  return [value, setValueIfUncontrolled];
}
;// CONCATENATED MODULE: ./node_modules/@mui/material/utils/useControlled.js

/* harmony default export */ var utils_useControlled = (useControlled);

/***/ }),

/***/ 162:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var _mui_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(5721);

/* harmony default export */ __webpack_exports__["Z"] = (_mui_utils__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z);

/***/ }),

/***/ 9683:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var _mui_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(8956);

/* harmony default export */ __webpack_exports__["Z"] = (_mui_utils__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z);

/***/ }),

/***/ 2071:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var _mui_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(7563);

/* harmony default export */ __webpack_exports__["Z"] = (_mui_utils__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z);

/***/ }),

/***/ 3031:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";

// EXPORTS
__webpack_require__.d(__webpack_exports__, {
  "Z": function() { return /* binding */ utils_useIsFocusVisible; }
});

// EXTERNAL MODULE: ./node_modules/react/index.js
var react = __webpack_require__(2791);
;// CONCATENATED MODULE: ./node_modules/@mui/utils/esm/useIsFocusVisible.js
// based on https://github.com/WICG/focus-visible/blob/v4.1.5/src/focus-visible.js

var hadKeyboardEvent = true;
var hadFocusVisibleRecently = false;
var hadFocusVisibleRecentlyTimeout;
var inputTypesWhitelist = {
  text: true,
  search: true,
  url: true,
  tel: true,
  email: true,
  password: true,
  number: true,
  date: true,
  month: true,
  week: true,
  time: true,
  datetime: true,
  'datetime-local': true
};

/**
 * Computes whether the given element should automatically trigger the
 * `focus-visible` class being added, i.e. whether it should always match
 * `:focus-visible` when focused.
 * @param {Element} node
 * @returns {boolean}
 */
function focusTriggersKeyboardModality(node) {
  var type = node.type,
    tagName = node.tagName;
  if (tagName === 'INPUT' && inputTypesWhitelist[type] && !node.readOnly) {
    return true;
  }
  if (tagName === 'TEXTAREA' && !node.readOnly) {
    return true;
  }
  if (node.isContentEditable) {
    return true;
  }
  return false;
}

/**
 * Keep track of our keyboard modality state with `hadKeyboardEvent`.
 * If the most recent user interaction was via the keyboard;
 * and the key press did not include a meta, alt/option, or control key;
 * then the modality is keyboard. Otherwise, the modality is not keyboard.
 * @param {KeyboardEvent} event
 */
function handleKeyDown(event) {
  if (event.metaKey || event.altKey || event.ctrlKey) {
    return;
  }
  hadKeyboardEvent = true;
}

/**
 * If at any point a user clicks with a pointing device, ensure that we change
 * the modality away from keyboard.
 * This avoids the situation where a user presses a key on an already focused
 * element, and then clicks on a different element, focusing it with a
 * pointing device, while we still think we're in keyboard modality.
 */
function handlePointerDown() {
  hadKeyboardEvent = false;
}
function handleVisibilityChange() {
  if (this.visibilityState === 'hidden') {
    // If the tab becomes active again, the browser will handle calling focus
    // on the element (Safari actually calls it twice).
    // If this tab change caused a blur on an element with focus-visible,
    // re-apply the class when the user switches back to the tab.
    if (hadFocusVisibleRecently) {
      hadKeyboardEvent = true;
    }
  }
}
function prepare(doc) {
  doc.addEventListener('keydown', handleKeyDown, true);
  doc.addEventListener('mousedown', handlePointerDown, true);
  doc.addEventListener('pointerdown', handlePointerDown, true);
  doc.addEventListener('touchstart', handlePointerDown, true);
  doc.addEventListener('visibilitychange', handleVisibilityChange, true);
}
function teardown(doc) {
  doc.removeEventListener('keydown', handleKeyDown, true);
  doc.removeEventListener('mousedown', handlePointerDown, true);
  doc.removeEventListener('pointerdown', handlePointerDown, true);
  doc.removeEventListener('touchstart', handlePointerDown, true);
  doc.removeEventListener('visibilitychange', handleVisibilityChange, true);
}
function isFocusVisible(event) {
  var target = event.target;
  try {
    return target.matches(':focus-visible');
  } catch (error) {
    // Browsers not implementing :focus-visible will throw a SyntaxError.
    // We use our own heuristic for those browsers.
    // Rethrow might be better if it's not the expected error but do we really
    // want to crash if focus-visible malfunctioned?
  }

  // No need for validFocusTarget check. The user does that by attaching it to
  // focusable events only.
  return hadKeyboardEvent || focusTriggersKeyboardModality(target);
}
function useIsFocusVisible() {
  var ref = react.useCallback(function (node) {
    if (node != null) {
      prepare(node.ownerDocument);
    }
  }, []);
  var isFocusVisibleRef = react.useRef(false);

  /**
   * Should be called if a blur event is fired
   */
  function handleBlurVisible() {
    // checking against potential state variable does not suffice if we focus and blur synchronously.
    // React wouldn't have time to trigger a re-render so `focusVisible` would be stale.
    // Ideally we would adjust `isFocusVisible(event)` to look at `relatedTarget` for blur events.
    // This doesn't work in IE11 due to https://github.com/facebook/react/issues/3751
    // TODO: check again if React releases their internal changes to focus event handling (https://github.com/facebook/react/pull/19186).
    if (isFocusVisibleRef.current) {
      // To detect a tab/window switch, we look for a blur event followed
      // rapidly by a visibility change.
      // If we don't see a visibility change within 100ms, it's probably a
      // regular focus change.
      hadFocusVisibleRecently = true;
      window.clearTimeout(hadFocusVisibleRecentlyTimeout);
      hadFocusVisibleRecentlyTimeout = window.setTimeout(function () {
        hadFocusVisibleRecently = false;
      }, 100);
      isFocusVisibleRef.current = false;
      return true;
    }
    return false;
  }

  /**
   * Should be called if a blur event is fired
   */
  function handleFocusVisible(event) {
    if (isFocusVisible(event)) {
      isFocusVisibleRef.current = true;
      return true;
    }
    return false;
  }
  return {
    isFocusVisibleRef: isFocusVisibleRef,
    onFocus: handleFocusVisible,
    onBlur: handleBlurVisible,
    ref: ref
  };
}
;// CONCATENATED MODULE: ./node_modules/@mui/material/utils/useIsFocusVisible.js

/* harmony default export */ var utils_useIsFocusVisible = (useIsFocusVisible);

/***/ }),

/***/ 8023:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(2791);

var ThemeContext = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createContext(null);
if (false) {}
/* harmony default export */ __webpack_exports__["Z"] = (ThemeContext);

/***/ }),

/***/ 9598:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Z": function() { return /* binding */ useTheme; }
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(2791);
/* harmony import */ var _ThemeContext__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(8023);


function useTheme() {
  var theme = react__WEBPACK_IMPORTED_MODULE_0__.useContext(_ThemeContext__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z);
  if (false) {}
  return theme;
}

/***/ }),

/***/ 2421:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";

// EXPORTS
__webpack_require__.d(__webpack_exports__, {
  "ZP": function() { return /* binding */ styled; },
  "Co": function() { return /* binding */ internal_processStyles; }
});

// UNUSED EXPORTS: GlobalStyles, StyledEngineProvider, ThemeContext, css, keyframes

// EXTERNAL MODULE: ./node_modules/react/index.js
var react = __webpack_require__(2791);
// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/extends.js
var esm_extends = __webpack_require__(7462);
// EXTERNAL MODULE: ./node_modules/@emotion/memoize/dist/emotion-memoize.esm.js
var emotion_memoize_esm = __webpack_require__(9797);
;// CONCATENATED MODULE: ./node_modules/@emotion/is-prop-valid/dist/emotion-is-prop-valid.esm.js

var reactPropsRegex = /^((children|dangerouslySetInnerHTML|key|ref|autoFocus|defaultValue|defaultChecked|innerHTML|suppressContentEditableWarning|suppressHydrationWarning|valueLink|abbr|accept|acceptCharset|accessKey|action|allow|allowUserMedia|allowPaymentRequest|allowFullScreen|allowTransparency|alt|async|autoComplete|autoPlay|capture|cellPadding|cellSpacing|challenge|charSet|checked|cite|classID|className|cols|colSpan|content|contentEditable|contextMenu|controls|controlsList|coords|crossOrigin|data|dateTime|decoding|default|defer|dir|disabled|disablePictureInPicture|download|draggable|encType|enterKeyHint|form|formAction|formEncType|formMethod|formNoValidate|formTarget|frameBorder|headers|height|hidden|high|href|hrefLang|htmlFor|httpEquiv|id|inputMode|integrity|is|keyParams|keyType|kind|label|lang|list|loading|loop|low|marginHeight|marginWidth|max|maxLength|media|mediaGroup|method|min|minLength|multiple|muted|name|nonce|noValidate|open|optimum|pattern|placeholder|playsInline|poster|preload|profile|radioGroup|readOnly|referrerPolicy|rel|required|reversed|role|rows|rowSpan|sandbox|scope|scoped|scrolling|seamless|selected|shape|size|sizes|slot|span|spellCheck|src|srcDoc|srcLang|srcSet|start|step|style|summary|tabIndex|target|title|translate|type|useMap|value|width|wmode|wrap|about|datatype|inlist|prefix|property|resource|typeof|vocab|autoCapitalize|autoCorrect|autoSave|color|incremental|fallback|inert|itemProp|itemScope|itemType|itemID|itemRef|on|option|results|security|unselectable|accentHeight|accumulate|additive|alignmentBaseline|allowReorder|alphabetic|amplitude|arabicForm|ascent|attributeName|attributeType|autoReverse|azimuth|baseFrequency|baselineShift|baseProfile|bbox|begin|bias|by|calcMode|capHeight|clip|clipPathUnits|clipPath|clipRule|colorInterpolation|colorInterpolationFilters|colorProfile|colorRendering|contentScriptType|contentStyleType|cursor|cx|cy|d|decelerate|descent|diffuseConstant|direction|display|divisor|dominantBaseline|dur|dx|dy|edgeMode|elevation|enableBackground|end|exponent|externalResourcesRequired|fill|fillOpacity|fillRule|filter|filterRes|filterUnits|floodColor|floodOpacity|focusable|fontFamily|fontSize|fontSizeAdjust|fontStretch|fontStyle|fontVariant|fontWeight|format|from|fr|fx|fy|g1|g2|glyphName|glyphOrientationHorizontal|glyphOrientationVertical|glyphRef|gradientTransform|gradientUnits|hanging|horizAdvX|horizOriginX|ideographic|imageRendering|in|in2|intercept|k|k1|k2|k3|k4|kernelMatrix|kernelUnitLength|kerning|keyPoints|keySplines|keyTimes|lengthAdjust|letterSpacing|lightingColor|limitingConeAngle|local|markerEnd|markerMid|markerStart|markerHeight|markerUnits|markerWidth|mask|maskContentUnits|maskUnits|mathematical|mode|numOctaves|offset|opacity|operator|order|orient|orientation|origin|overflow|overlinePosition|overlineThickness|panose1|paintOrder|pathLength|patternContentUnits|patternTransform|patternUnits|pointerEvents|points|pointsAtX|pointsAtY|pointsAtZ|preserveAlpha|preserveAspectRatio|primitiveUnits|r|radius|refX|refY|renderingIntent|repeatCount|repeatDur|requiredExtensions|requiredFeatures|restart|result|rotate|rx|ry|scale|seed|shapeRendering|slope|spacing|specularConstant|specularExponent|speed|spreadMethod|startOffset|stdDeviation|stemh|stemv|stitchTiles|stopColor|stopOpacity|strikethroughPosition|strikethroughThickness|string|stroke|strokeDasharray|strokeDashoffset|strokeLinecap|strokeLinejoin|strokeMiterlimit|strokeOpacity|strokeWidth|surfaceScale|systemLanguage|tableValues|targetX|targetY|textAnchor|textDecoration|textRendering|textLength|to|transform|u1|u2|underlinePosition|underlineThickness|unicode|unicodeBidi|unicodeRange|unitsPerEm|vAlphabetic|vHanging|vIdeographic|vMathematical|values|vectorEffect|version|vertAdvY|vertOriginX|vertOriginY|viewBox|viewTarget|visibility|widths|wordSpacing|writingMode|x|xHeight|x1|x2|xChannelSelector|xlinkActuate|xlinkArcrole|xlinkHref|xlinkRole|xlinkShow|xlinkTitle|xlinkType|xmlBase|xmlns|xmlnsXlink|xmlLang|xmlSpace|y|y1|y2|yChannelSelector|z|zoomAndPan|for|class|autofocus)|(([Dd][Aa][Tt][Aa]|[Aa][Rr][Ii][Aa]|x)-.*))$/; // https://esbench.com/bench/5bfee68a4cd7e6009ef61d23

var isPropValid = /* #__PURE__ */(0,emotion_memoize_esm/* default */.Z)(function (prop) {
  return reactPropsRegex.test(prop) || prop.charCodeAt(0) === 111
  /* o */ && prop.charCodeAt(1) === 110
  /* n */ && prop.charCodeAt(2) < 91;
}
/* Z+1 */);

/* harmony default export */ var emotion_is_prop_valid_esm = (isPropValid);
// EXTERNAL MODULE: ./node_modules/@emotion/react/dist/emotion-element-6a883da9.browser.esm.js
var emotion_element_6a883da9_browser_esm = __webpack_require__(9886);
// EXTERNAL MODULE: ./node_modules/@emotion/utils/dist/emotion-utils.browser.esm.js
var emotion_utils_browser_esm = __webpack_require__(5438);
// EXTERNAL MODULE: ./node_modules/@emotion/serialize/dist/emotion-serialize.browser.esm.js + 2 modules
var emotion_serialize_browser_esm = __webpack_require__(9140);
// EXTERNAL MODULE: ./node_modules/@emotion/use-insertion-effect-with-fallbacks/dist/emotion-use-insertion-effect-with-fallbacks.browser.esm.js
var emotion_use_insertion_effect_with_fallbacks_browser_esm = __webpack_require__(2561);
;// CONCATENATED MODULE: ./node_modules/@emotion/styled/base/dist/emotion-styled-base.browser.esm.js







var testOmitPropsOnStringTag = emotion_is_prop_valid_esm;
var testOmitPropsOnComponent = function testOmitPropsOnComponent(key) {
  return key !== 'theme';
};
var getDefaultShouldForwardProp = function getDefaultShouldForwardProp(tag) {
  return typeof tag === 'string' &&
  // 96 is one less than the char code
  // for "a" so this is checking that
  // it's a lowercase character
  tag.charCodeAt(0) > 96 ? testOmitPropsOnStringTag : testOmitPropsOnComponent;
};
var composeShouldForwardProps = function composeShouldForwardProps(tag, options, isReal) {
  var shouldForwardProp;
  if (options) {
    var optionsShouldForwardProp = options.shouldForwardProp;
    shouldForwardProp = tag.__emotion_forwardProp && optionsShouldForwardProp ? function (propName) {
      return tag.__emotion_forwardProp(propName) && optionsShouldForwardProp(propName);
    } : optionsShouldForwardProp;
  }
  if (typeof shouldForwardProp !== 'function' && isReal) {
    shouldForwardProp = tag.__emotion_forwardProp;
  }
  return shouldForwardProp;
};
var ILLEGAL_ESCAPE_SEQUENCE_ERROR = "You have illegal escape sequence in your template literal, most likely inside content's property value.\nBecause you write your CSS inside a JavaScript string you actually have to do double escaping, so for example \"content: '\\00d7';\" should become \"content: '\\\\00d7';\".\nYou can read more about this here:\nhttps://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Template_literals#ES2018_revision_of_illegal_escape_sequences";
var Insertion = function Insertion(_ref) {
  var cache = _ref.cache,
    serialized = _ref.serialized,
    isStringTag = _ref.isStringTag;
  (0,emotion_utils_browser_esm/* registerStyles */.hC)(cache, serialized, isStringTag);
  var rules = (0,emotion_use_insertion_effect_with_fallbacks_browser_esm/* useInsertionEffectAlwaysWithSyncFallback */.L)(function () {
    return (0,emotion_utils_browser_esm/* insertStyles */.My)(cache, serialized, isStringTag);
  });
  return null;
};
var createStyled = function createStyled(tag, options) {
  if (false) {}
  var isReal = tag.__emotion_real === tag;
  var baseTag = isReal && tag.__emotion_base || tag;
  var identifierName;
  var targetClassName;
  if (options !== undefined) {
    identifierName = options.label;
    targetClassName = options.target;
  }
  var shouldForwardProp = composeShouldForwardProps(tag, options, isReal);
  var defaultShouldForwardProp = shouldForwardProp || getDefaultShouldForwardProp(baseTag);
  var shouldUseAs = !defaultShouldForwardProp('as');
  return function () {
    var args = arguments;
    var styles = isReal && tag.__emotion_styles !== undefined ? tag.__emotion_styles.slice(0) : [];
    if (identifierName !== undefined) {
      styles.push("label:" + identifierName + ";");
    }
    if (args[0] == null || args[0].raw === undefined) {
      styles.push.apply(styles, args);
    } else {
      if (false) {}
      styles.push(args[0][0]);
      var len = args.length;
      var i = 1;
      for (; i < len; i++) {
        if (false) {}
        styles.push(args[i], args[0][i]);
      }
    } // $FlowFixMe: we need to cast StatelessFunctionalComponent to our PrivateStyledComponent class

    var Styled = (0,emotion_element_6a883da9_browser_esm.w)(function (props, cache, ref) {
      var FinalTag = shouldUseAs && props.as || baseTag;
      var className = '';
      var classInterpolations = [];
      var mergedProps = props;
      if (props.theme == null) {
        mergedProps = {};
        for (var key in props) {
          mergedProps[key] = props[key];
        }
        mergedProps.theme = (0,react.useContext)(emotion_element_6a883da9_browser_esm.T);
      }
      if (typeof props.className === 'string') {
        className = (0,emotion_utils_browser_esm/* getRegisteredStyles */.fp)(cache.registered, classInterpolations, props.className);
      } else if (props.className != null) {
        className = props.className + " ";
      }
      var serialized = (0,emotion_serialize_browser_esm/* serializeStyles */.O)(styles.concat(classInterpolations), cache.registered, mergedProps);
      className += cache.key + "-" + serialized.name;
      if (targetClassName !== undefined) {
        className += " " + targetClassName;
      }
      var finalShouldForwardProp = shouldUseAs && shouldForwardProp === undefined ? getDefaultShouldForwardProp(FinalTag) : defaultShouldForwardProp;
      var newProps = {};
      for (var _key in props) {
        if (shouldUseAs && _key === 'as') continue;
        if (
        // $FlowFixMe
        finalShouldForwardProp(_key)) {
          newProps[_key] = props[_key];
        }
      }
      newProps.className = className;
      newProps.ref = ref;
      return /*#__PURE__*/(0,react.createElement)(react.Fragment, null, /*#__PURE__*/(0,react.createElement)(Insertion, {
        cache: cache,
        serialized: serialized,
        isStringTag: typeof FinalTag === 'string'
      }), /*#__PURE__*/(0,react.createElement)(FinalTag, newProps));
    });
    Styled.displayName = identifierName !== undefined ? identifierName : "Styled(" + (typeof baseTag === 'string' ? baseTag : baseTag.displayName || baseTag.name || 'Component') + ")";
    Styled.defaultProps = tag.defaultProps;
    Styled.__emotion_real = Styled;
    Styled.__emotion_base = baseTag;
    Styled.__emotion_styles = styles;
    Styled.__emotion_forwardProp = shouldForwardProp;
    Object.defineProperty(Styled, 'toString', {
      value: function value() {
        if (targetClassName === undefined && "production" !== 'production') {} // $FlowFixMe: coerce undefined to string

        return "." + targetClassName;
      }
    });
    Styled.withComponent = function (nextTag, nextOptions) {
      return createStyled(nextTag, (0,esm_extends/* default */.Z)({}, options, nextOptions, {
        shouldForwardProp: composeShouldForwardProps(Styled, nextOptions, true)
      })).apply(void 0, styles);
    };
    return Styled;
  };
};
/* harmony default export */ var emotion_styled_base_browser_esm = (createStyled);
;// CONCATENATED MODULE: ./node_modules/@emotion/styled/dist/emotion-styled.browser.esm.js








var tags = ['a', 'abbr', 'address', 'area', 'article', 'aside', 'audio', 'b', 'base', 'bdi', 'bdo', 'big', 'blockquote', 'body', 'br', 'button', 'canvas', 'caption', 'cite', 'code', 'col', 'colgroup', 'data', 'datalist', 'dd', 'del', 'details', 'dfn', 'dialog', 'div', 'dl', 'dt', 'em', 'embed', 'fieldset', 'figcaption', 'figure', 'footer', 'form', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'head', 'header', 'hgroup', 'hr', 'html', 'i', 'iframe', 'img', 'input', 'ins', 'kbd', 'keygen', 'label', 'legend', 'li', 'link', 'main', 'map', 'mark', 'marquee', 'menu', 'menuitem', 'meta', 'meter', 'nav', 'noscript', 'object', 'ol', 'optgroup', 'option', 'output', 'p', 'param', 'picture', 'pre', 'progress', 'q', 'rp', 'rt', 'ruby', 's', 'samp', 'script', 'section', 'select', 'small', 'source', 'span', 'strong', 'style', 'sub', 'summary', 'sup', 'table', 'tbody', 'td', 'textarea', 'tfoot', 'th', 'thead', 'time', 'title', 'tr', 'track', 'u', 'ul', 'var', 'video', 'wbr',
// SVG
'circle', 'clipPath', 'defs', 'ellipse', 'foreignObject', 'g', 'image', 'line', 'linearGradient', 'mask', 'path', 'pattern', 'polygon', 'polyline', 'radialGradient', 'rect', 'stop', 'svg', 'text', 'tspan'];
var newStyled = emotion_styled_base_browser_esm.bind();
tags.forEach(function (tagName) {
  // $FlowFixMe: we can ignore this because its exposed type is defined by the CreateStyled type
  newStyled[tagName] = newStyled(tagName);
});
/* harmony default export */ var emotion_styled_browser_esm = (newStyled);
;// CONCATENATED MODULE: ./node_modules/@mui/styled-engine/index.js
/** @license MUI v5.11.0
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
/* eslint-disable no-underscore-dangle */

function styled(tag, options) {
  var stylesFactory = emotion_styled_browser_esm(tag, options);
  if (false) {}
  return stylesFactory;
}

// eslint-disable-next-line @typescript-eslint/naming-convention
var internal_processStyles = function internal_processStyles(tag, processor) {
  // Emotion attaches all the styles as `__emotion_styles`.
  // Ref: https://github.com/emotion-js/emotion/blob/16d971d0da229596d6bcc39d282ba9753c9ee7cf/packages/styled/src/base.js#L186
  if (Array.isArray(tag.__emotion_styles)) {
    tag.__emotion_styles = processor(tag.__emotion_styles);
  }
};




/***/ }),

/***/ 1184:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "L7": function() { return /* binding */ removeUnusedBreakpoints; },
/* harmony export */   "VO": function() { return /* binding */ values; },
/* harmony export */   "W8": function() { return /* binding */ createEmptyBreakpointObject; },
/* harmony export */   "k9": function() { return /* binding */ handleBreakpoints; }
/* harmony export */ });
/* unused harmony exports mergeBreakpointsInOrder, computeBreakpointsBase, resolveBreakpointValues */






// The breakpoint **start** at this value.
// For instance with the first breakpoint xs: [xs, sm[.
var values = {
  xs: 0,
  // phone
  sm: 600,
  // tablet
  md: 900,
  // small laptop
  lg: 1200,
  // desktop
  xl: 1536 // large screen
};

var defaultBreakpoints = {
  // Sorted ASC by size. That's important.
  // It can't be configured as it's used statically for propTypes.
  keys: ['xs', 'sm', 'md', 'lg', 'xl'],
  up: function up(key) {
    return "@media (min-width:".concat(values[key], "px)");
  }
};
function handleBreakpoints(props, propValue, styleFromPropValue) {
  var theme = props.theme || {};
  if (Array.isArray(propValue)) {
    var themeBreakpoints = theme.breakpoints || defaultBreakpoints;
    return propValue.reduce(function (acc, item, index) {
      acc[themeBreakpoints.up(themeBreakpoints.keys[index])] = styleFromPropValue(propValue[index]);
      return acc;
    }, {});
  }
  if (typeof propValue === 'object') {
    var _themeBreakpoints = theme.breakpoints || defaultBreakpoints;
    return Object.keys(propValue).reduce(function (acc, breakpoint) {
      // key is breakpoint
      if (Object.keys(_themeBreakpoints.values || values).indexOf(breakpoint) !== -1) {
        var mediaKey = _themeBreakpoints.up(breakpoint);
        acc[mediaKey] = styleFromPropValue(propValue[breakpoint], breakpoint);
      } else {
        var cssKey = breakpoint;
        acc[cssKey] = propValue[cssKey];
      }
      return acc;
    }, {});
  }
  var output = styleFromPropValue(propValue);
  return output;
}
function breakpoints(styleFunction) {
  // false positive
  // eslint-disable-next-line react/function-component-definition
  var newStyleFunction = function newStyleFunction(props) {
    var theme = props.theme || {};
    var base = styleFunction(props);
    var themeBreakpoints = theme.breakpoints || defaultBreakpoints;
    var extended = themeBreakpoints.keys.reduce(function (acc, key) {
      if (props[key]) {
        acc = acc || {};
        acc[themeBreakpoints.up(key)] = styleFunction(_extends({
          theme: theme
        }, props[key]));
      }
      return acc;
    }, null);
    return merge(base, extended);
  };
  newStyleFunction.propTypes =  false ? 0 : {};
  newStyleFunction.filterProps = ['xs', 'sm', 'md', 'lg', 'xl'].concat(_toConsumableArray(styleFunction.filterProps));
  return newStyleFunction;
}
function createEmptyBreakpointObject() {
  var breakpointsInput = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
  var _breakpointsInput$key;
  var breakpointsInOrder = (_breakpointsInput$key = breakpointsInput.keys) == null ? void 0 : _breakpointsInput$key.reduce(function (acc, key) {
    var breakpointStyleKey = breakpointsInput.up(key);
    acc[breakpointStyleKey] = {};
    return acc;
  }, {});
  return breakpointsInOrder || {};
}
function removeUnusedBreakpoints(breakpointKeys, style) {
  return breakpointKeys.reduce(function (acc, key) {
    var breakpointOutput = acc[key];
    var isBreakpointUnused = !breakpointOutput || Object.keys(breakpointOutput).length === 0;
    if (isBreakpointUnused) {
      delete acc[key];
    }
    return acc;
  }, style);
}
function mergeBreakpointsInOrder(breakpointsInput) {
  var emptyBreakpoints = createEmptyBreakpointObject(breakpointsInput);
  for (var _len = arguments.length, styles = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
    styles[_key - 1] = arguments[_key];
  }
  var mergedOutput = [emptyBreakpoints].concat(styles).reduce(function (prev, next) {
    return deepmerge(prev, next);
  }, {});
  return removeUnusedBreakpoints(Object.keys(emptyBreakpoints), mergedOutput);
}

// compute base for responsive values; e.g.,
// [1,2,3] => {xs: true, sm: true, md: true}
// {xs: 1, sm: 2, md: 3} => {xs: true, sm: true, md: true}
function computeBreakpointsBase(breakpointValues, themeBreakpoints) {
  // fixed value
  if (typeof breakpointValues !== 'object') {
    return {};
  }
  var base = {};
  var breakpointsKeys = Object.keys(themeBreakpoints);
  if (Array.isArray(breakpointValues)) {
    breakpointsKeys.forEach(function (breakpoint, i) {
      if (i < breakpointValues.length) {
        base[breakpoint] = true;
      }
    });
  } else {
    breakpointsKeys.forEach(function (breakpoint) {
      if (breakpointValues[breakpoint] != null) {
        base[breakpoint] = true;
      }
    });
  }
  return base;
}
function resolveBreakpointValues(_ref) {
  var breakpointValues = _ref.values,
    themeBreakpoints = _ref.breakpoints,
    customBase = _ref.base;
  var base = customBase || computeBreakpointsBase(breakpointValues, themeBreakpoints);
  var keys = Object.keys(base);
  if (keys.length === 0) {
    return breakpointValues;
  }
  var previous;
  return keys.reduce(function (acc, breakpoint, i) {
    if (Array.isArray(breakpointValues)) {
      acc[breakpoint] = breakpointValues[i] != null ? breakpointValues[i] : breakpointValues[previous];
      previous = i;
    } else if (typeof breakpointValues === 'object') {
      acc[breakpoint] = breakpointValues[breakpoint] != null ? breakpointValues[breakpoint] : breakpointValues[previous];
      previous = breakpoint;
    } else {
      acc[breakpoint] = breakpointValues;
    }
    return acc;
  }, {});
}
/* unused harmony default export */ var __WEBPACK_DEFAULT_EXPORT__ = ((/* unused pure expression or super */ null && (breakpoints)));

/***/ }),

/***/ 2065:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "$n": function() { return /* binding */ lighten; },
/* harmony export */   "Fq": function() { return /* binding */ alpha; },
/* harmony export */   "_j": function() { return /* binding */ darken; },
/* harmony export */   "mi": function() { return /* binding */ getContrastRatio; }
/* harmony export */ });
/* unused harmony exports hexToRgb, decomposeColor, colorChannel, private_safeColorChannel, recomposeColor, rgbToHex, hslToRgb, getLuminance, private_safeAlpha, private_safeDarken, private_safeLighten, emphasize, private_safeEmphasize */
/* harmony import */ var _mui_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(6189);

/**
 * Returns a number whose value is limited to the given range.
 * @param {number} value The value to be clamped
 * @param {number} min The lower boundary of the output range
 * @param {number} max The upper boundary of the output range
 * @returns {number} A number in the range [min, max]
 */
function clamp(value) {
  var min = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;
  var max = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;
  if (false) {}
  return Math.min(Math.max(min, value), max);
}

/**
 * Converts a color from CSS hex format to CSS rgb format.
 * @param {string} color - Hex color, i.e. #nnn or #nnnnnn
 * @returns {string} A CSS rgb color string
 */
function hexToRgb(color) {
  color = color.slice(1);
  var re = new RegExp(".{1,".concat(color.length >= 6 ? 2 : 1, "}"), 'g');
  var colors = color.match(re);
  if (colors && colors[0].length === 1) {
    colors = colors.map(function (n) {
      return n + n;
    });
  }
  return colors ? "rgb".concat(colors.length === 4 ? 'a' : '', "(").concat(colors.map(function (n, index) {
    return index < 3 ? parseInt(n, 16) : Math.round(parseInt(n, 16) / 255 * 1000) / 1000;
  }).join(', '), ")") : '';
}
function intToHex(int) {
  var hex = int.toString(16);
  return hex.length === 1 ? "0".concat(hex) : hex;
}

/**
 * Returns an object with the type and values of a color.
 *
 * Note: Does not support rgb % values.
 * @param {string} color - CSS color, i.e. one of: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla(), color()
 * @returns {object} - A MUI color object: {type: string, values: number[]}
 */
function decomposeColor(color) {
  // Idempotent
  if (color.type) {
    return color;
  }
  if (color.charAt(0) === '#') {
    return decomposeColor(hexToRgb(color));
  }
  var marker = color.indexOf('(');
  var type = color.substring(0, marker);
  if (['rgb', 'rgba', 'hsl', 'hsla', 'color'].indexOf(type) === -1) {
    throw new Error( false ? 0 : (0,_mui_utils__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z)(9, color));
  }
  var values = color.substring(marker + 1, color.length - 1);
  var colorSpace;
  if (type === 'color') {
    values = values.split(' ');
    colorSpace = values.shift();
    if (values.length === 4 && values[3].charAt(0) === '/') {
      values[3] = values[3].slice(1);
    }
    if (['srgb', 'display-p3', 'a98-rgb', 'prophoto-rgb', 'rec-2020'].indexOf(colorSpace) === -1) {
      throw new Error( false ? 0 : (0,_mui_utils__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z)(10, colorSpace));
    }
  } else {
    values = values.split(',');
  }
  values = values.map(function (value) {
    return parseFloat(value);
  });
  return {
    type: type,
    values: values,
    colorSpace: colorSpace
  };
}

/**
 * Returns a channel created from the input color.
 *
 * @param {string} color - CSS color, i.e. one of: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla(), color()
 * @returns {string} - The channel for the color, that can be used in rgba or hsla colors
 */
var colorChannel = function colorChannel(color) {
  var decomposedColor = decomposeColor(color);
  return decomposedColor.values.slice(0, 3).map(function (val, idx) {
    return decomposedColor.type.indexOf('hsl') !== -1 && idx !== 0 ? "".concat(val, "%") : val;
  }).join(' ');
};
var private_safeColorChannel = function private_safeColorChannel(color, warning) {
  try {
    return colorChannel(color);
  } catch (error) {
    if (warning && "production" !== 'production') {}
    return color;
  }
};

/**
 * Converts a color object with type and values to a string.
 * @param {object} color - Decomposed color
 * @param {string} color.type - One of: 'rgb', 'rgba', 'hsl', 'hsla', 'color'
 * @param {array} color.values - [n,n,n] or [n,n,n,n]
 * @returns {string} A CSS color string
 */
function recomposeColor(color) {
  var type = color.type,
    colorSpace = color.colorSpace;
  var values = color.values;
  if (type.indexOf('rgb') !== -1) {
    // Only convert the first 3 values to int (i.e. not alpha)
    values = values.map(function (n, i) {
      return i < 3 ? parseInt(n, 10) : n;
    });
  } else if (type.indexOf('hsl') !== -1) {
    values[1] = "".concat(values[1], "%");
    values[2] = "".concat(values[2], "%");
  }
  if (type.indexOf('color') !== -1) {
    values = "".concat(colorSpace, " ").concat(values.join(' '));
  } else {
    values = "".concat(values.join(', '));
  }
  return "".concat(type, "(").concat(values, ")");
}

/**
 * Converts a color from CSS rgb format to CSS hex format.
 * @param {string} color - RGB color, i.e. rgb(n, n, n)
 * @returns {string} A CSS rgb color string, i.e. #nnnnnn
 */
function rgbToHex(color) {
  // Idempotent
  if (color.indexOf('#') === 0) {
    return color;
  }
  var _decomposeColor = decomposeColor(color),
    values = _decomposeColor.values;
  return "#".concat(values.map(function (n, i) {
    return intToHex(i === 3 ? Math.round(255 * n) : n);
  }).join(''));
}

/**
 * Converts a color from hsl format to rgb format.
 * @param {string} color - HSL color values
 * @returns {string} rgb color values
 */
function hslToRgb(color) {
  color = decomposeColor(color);
  var _color = color,
    values = _color.values;
  var h = values[0];
  var s = values[1] / 100;
  var l = values[2] / 100;
  var a = s * Math.min(l, 1 - l);
  var f = function f(n) {
    var k = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : (n + h / 30) % 12;
    return l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);
  };
  var type = 'rgb';
  var rgb = [Math.round(f(0) * 255), Math.round(f(8) * 255), Math.round(f(4) * 255)];
  if (color.type === 'hsla') {
    type += 'a';
    rgb.push(values[3]);
  }
  return recomposeColor({
    type: type,
    values: rgb
  });
}
/**
 * The relative brightness of any point in a color space,
 * normalized to 0 for darkest black and 1 for lightest white.
 *
 * Formula: https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests
 * @param {string} color - CSS color, i.e. one of: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla(), color()
 * @returns {number} The relative brightness of the color in the range 0 - 1
 */
function getLuminance(color) {
  color = decomposeColor(color);
  var rgb = color.type === 'hsl' || color.type === 'hsla' ? decomposeColor(hslToRgb(color)).values : color.values;
  rgb = rgb.map(function (val) {
    if (color.type !== 'color') {
      val /= 255; // normalized
    }

    return val <= 0.03928 ? val / 12.92 : Math.pow((val + 0.055) / 1.055, 2.4);
  });

  // Truncate at 3 digits
  return Number((0.2126 * rgb[0] + 0.7152 * rgb[1] + 0.0722 * rgb[2]).toFixed(3));
}

/**
 * Calculates the contrast ratio between two colors.
 *
 * Formula: https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests
 * @param {string} foreground - CSS color, i.e. one of: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla()
 * @param {string} background - CSS color, i.e. one of: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla()
 * @returns {number} A contrast ratio value in the range 0 - 21.
 */
function getContrastRatio(foreground, background) {
  var lumA = getLuminance(foreground);
  var lumB = getLuminance(background);
  return (Math.max(lumA, lumB) + 0.05) / (Math.min(lumA, lumB) + 0.05);
}

/**
 * Sets the absolute transparency of a color.
 * Any existing alpha values are overwritten.
 * @param {string} color - CSS color, i.e. one of: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla(), color()
 * @param {number} value - value to set the alpha channel to in the range 0 - 1
 * @returns {string} A CSS color string. Hex input values are returned as rgb
 */
function alpha(color, value) {
  color = decomposeColor(color);
  value = clamp(value);
  if (color.type === 'rgb' || color.type === 'hsl') {
    color.type += 'a';
  }
  if (color.type === 'color') {
    color.values[3] = "/".concat(value);
  } else {
    color.values[3] = value;
  }
  return recomposeColor(color);
}
function private_safeAlpha(color, value, warning) {
  try {
    return alpha(color, value);
  } catch (error) {
    if (warning && "production" !== 'production') {}
    return color;
  }
}

/**
 * Darkens a color.
 * @param {string} color - CSS color, i.e. one of: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla(), color()
 * @param {number} coefficient - multiplier in the range 0 - 1
 * @returns {string} A CSS color string. Hex input values are returned as rgb
 */
function darken(color, coefficient) {
  color = decomposeColor(color);
  coefficient = clamp(coefficient);
  if (color.type.indexOf('hsl') !== -1) {
    color.values[2] *= 1 - coefficient;
  } else if (color.type.indexOf('rgb') !== -1 || color.type.indexOf('color') !== -1) {
    for (var i = 0; i < 3; i += 1) {
      color.values[i] *= 1 - coefficient;
    }
  }
  return recomposeColor(color);
}
function private_safeDarken(color, coefficient, warning) {
  try {
    return darken(color, coefficient);
  } catch (error) {
    if (warning && "production" !== 'production') {}
    return color;
  }
}

/**
 * Lightens a color.
 * @param {string} color - CSS color, i.e. one of: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla(), color()
 * @param {number} coefficient - multiplier in the range 0 - 1
 * @returns {string} A CSS color string. Hex input values are returned as rgb
 */
function lighten(color, coefficient) {
  color = decomposeColor(color);
  coefficient = clamp(coefficient);
  if (color.type.indexOf('hsl') !== -1) {
    color.values[2] += (100 - color.values[2]) * coefficient;
  } else if (color.type.indexOf('rgb') !== -1) {
    for (var i = 0; i < 3; i += 1) {
      color.values[i] += (255 - color.values[i]) * coefficient;
    }
  } else if (color.type.indexOf('color') !== -1) {
    for (var _i = 0; _i < 3; _i += 1) {
      color.values[_i] += (1 - color.values[_i]) * coefficient;
    }
  }
  return recomposeColor(color);
}
function private_safeLighten(color, coefficient, warning) {
  try {
    return lighten(color, coefficient);
  } catch (error) {
    if (warning && "production" !== 'production') {}
    return color;
  }
}

/**
 * Darken or lighten a color, depending on its luminance.
 * Light colors are darkened, dark colors are lightened.
 * @param {string} color - CSS color, i.e. one of: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla(), color()
 * @param {number} coefficient=0.15 - multiplier in the range 0 - 1
 * @returns {string} A CSS color string. Hex input values are returned as rgb
 */
function emphasize(color) {
  var coefficient = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0.15;
  return getLuminance(color) > 0.5 ? darken(color, coefficient) : lighten(color, coefficient);
}
function private_safeEmphasize(color, coefficient, warning) {
  try {
    return private_safeEmphasize(color, coefficient);
  } catch (error) {
    if (warning && "production" !== 'production') {}
    return color;
  }
}

/***/ }),

/***/ 4046:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";

// EXPORTS
__webpack_require__.d(__webpack_exports__, {
  "ZP": function() { return /* binding */ createStyled; },
  "x9": function() { return /* binding */ shouldForwardProp; }
});

// UNUSED EXPORTS: systemDefaultTheme

// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/toConsumableArray.js + 2 modules
var toConsumableArray = __webpack_require__(3433);
// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/slicedToArray.js + 1 modules
var slicedToArray = __webpack_require__(9439);
// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js
var objectWithoutPropertiesLoose = __webpack_require__(3366);
// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/extends.js
var esm_extends = __webpack_require__(7462);
// EXTERNAL MODULE: ./node_modules/@mui/styled-engine/index.js + 3 modules
var styled_engine = __webpack_require__(2421);
// EXTERNAL MODULE: ./node_modules/@mui/system/esm/createTheme/createTheme.js + 3 modules
var createTheme = __webpack_require__(5080);
// EXTERNAL MODULE: ./node_modules/@mui/utils/esm/capitalize.js
var capitalize = __webpack_require__(7312);
;// CONCATENATED MODULE: ./node_modules/@mui/system/esm/propsToClassKey.js

var _excluded = ["variant"];

function isEmpty(string) {
  return string.length === 0;
}

/**
 * Generates string classKey based on the properties provided. It starts with the
 * variant if defined, and then it appends all other properties in alphabetical order.
 * @param {object} props - the properties for which the classKey should be created.
 */
function propsToClassKey(props) {
  var variant = props.variant,
    other = (0,objectWithoutPropertiesLoose/* default */.Z)(props, _excluded);
  var classKey = variant || '';
  Object.keys(other).sort().forEach(function (key) {
    if (key === 'color') {
      classKey += isEmpty(classKey) ? props[key] : (0,capitalize/* default */.Z)(props[key]);
    } else {
      classKey += "".concat(isEmpty(classKey) ? key : (0,capitalize/* default */.Z)(key)).concat((0,capitalize/* default */.Z)(props[key].toString()));
    }
  });
  return classKey;
}
// EXTERNAL MODULE: ./node_modules/@mui/system/esm/styleFunctionSx/styleFunctionSx.js
var styleFunctionSx = __webpack_require__(104);
;// CONCATENATED MODULE: ./node_modules/@mui/system/esm/createStyled.js




var createStyled_excluded = ["name", "slot", "skipVariantsResolver", "skipSx", "overridesResolver"],
  _excluded2 = ["theme"],
  _excluded3 = ["theme"];
/* eslint-disable no-underscore-dangle */





function createStyled_isEmpty(obj) {
  return Object.keys(obj).length === 0;
}

// https://github.com/emotion-js/emotion/blob/26ded6109fcd8ca9875cc2ce4564fee678a3f3c5/packages/styled/src/utils.js#L40
function isStringTag(tag) {
  return typeof tag === 'string' &&
  // 96 is one less than the char code
  // for "a" so this is checking that
  // it's a lowercase character
  tag.charCodeAt(0) > 96;
}
var getStyleOverrides = function getStyleOverrides(name, theme) {
  if (theme.components && theme.components[name] && theme.components[name].styleOverrides) {
    return theme.components[name].styleOverrides;
  }
  return null;
};
var getVariantStyles = function getVariantStyles(name, theme) {
  var variants = [];
  if (theme && theme.components && theme.components[name] && theme.components[name].variants) {
    variants = theme.components[name].variants;
  }
  var variantsStyles = {};
  variants.forEach(function (definition) {
    var key = propsToClassKey(definition.props);
    variantsStyles[key] = definition.style;
  });
  return variantsStyles;
};
var variantsResolver = function variantsResolver(props, styles, theme, name) {
  var _theme$components, _theme$components$nam;
  var _props$ownerState = props.ownerState,
    ownerState = _props$ownerState === void 0 ? {} : _props$ownerState;
  var variantsStyles = [];
  var themeVariants = theme == null ? void 0 : (_theme$components = theme.components) == null ? void 0 : (_theme$components$nam = _theme$components[name]) == null ? void 0 : _theme$components$nam.variants;
  if (themeVariants) {
    themeVariants.forEach(function (themeVariant) {
      var isMatch = true;
      Object.keys(themeVariant.props).forEach(function (key) {
        if (ownerState[key] !== themeVariant.props[key] && props[key] !== themeVariant.props[key]) {
          isMatch = false;
        }
      });
      if (isMatch) {
        variantsStyles.push(styles[propsToClassKey(themeVariant.props)]);
      }
    });
  }
  return variantsStyles;
};

// Update /system/styled/#api in case if this changes
function shouldForwardProp(prop) {
  return prop !== 'ownerState' && prop !== 'theme' && prop !== 'sx' && prop !== 'as';
}
var systemDefaultTheme = (0,createTheme/* default */.Z)();
var lowercaseFirstLetter = function lowercaseFirstLetter(string) {
  return string.charAt(0).toLowerCase() + string.slice(1);
};
function createStyled() {
  var input = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
  var _input$defaultTheme = input.defaultTheme,
    defaultTheme = _input$defaultTheme === void 0 ? systemDefaultTheme : _input$defaultTheme,
    _input$rootShouldForw = input.rootShouldForwardProp,
    rootShouldForwardProp = _input$rootShouldForw === void 0 ? shouldForwardProp : _input$rootShouldForw,
    _input$slotShouldForw = input.slotShouldForwardProp,
    slotShouldForwardProp = _input$slotShouldForw === void 0 ? shouldForwardProp : _input$slotShouldForw;
  var systemSx = function systemSx(props) {
    var theme = createStyled_isEmpty(props.theme) ? defaultTheme : props.theme;
    return (0,styleFunctionSx/* default */.Z)((0,esm_extends/* default */.Z)({}, props, {
      theme: theme
    }));
  };
  systemSx.__mui_systemSx = true;
  return function (tag) {
    var inputOptions = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
    // Filter out the `sx` style function from the previous styled component to prevent unnecessary styles generated by the composite components.
    (0,styled_engine/* internal_processStyles */.Co)(tag, function (styles) {
      return styles.filter(function (style) {
        return !(style != null && style.__mui_systemSx);
      });
    });
    var componentName = inputOptions.name,
      componentSlot = inputOptions.slot,
      inputSkipVariantsResolver = inputOptions.skipVariantsResolver,
      inputSkipSx = inputOptions.skipSx,
      overridesResolver = inputOptions.overridesResolver,
      options = (0,objectWithoutPropertiesLoose/* default */.Z)(inputOptions, createStyled_excluded);

    // if skipVariantsResolver option is defined, take the value, otherwise, true for root and false for other slots.
    var skipVariantsResolver = inputSkipVariantsResolver !== undefined ? inputSkipVariantsResolver : componentSlot && componentSlot !== 'Root' || false;
    var skipSx = inputSkipSx || false;
    var label;
    if (false) {}
    var shouldForwardPropOption = shouldForwardProp;
    if (componentSlot === 'Root') {
      shouldForwardPropOption = rootShouldForwardProp;
    } else if (componentSlot) {
      // any other slot specified
      shouldForwardPropOption = slotShouldForwardProp;
    } else if (isStringTag(tag)) {
      // for string (html) tag, preserve the behavior in emotion & styled-components.
      shouldForwardPropOption = undefined;
    }
    var defaultStyledResolver = (0,styled_engine/* default */.ZP)(tag, (0,esm_extends/* default */.Z)({
      shouldForwardProp: shouldForwardPropOption,
      label: label
    }, options));
    var muiStyledResolver = function muiStyledResolver(styleArg) {
      for (var _len = arguments.length, expressions = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
        expressions[_key - 1] = arguments[_key];
      }
      var expressionsWithDefaultTheme = expressions ? expressions.map(function (stylesArg) {
        // On the server Emotion doesn't use React.forwardRef for creating components, so the created
        // component stays as a function. This condition makes sure that we do not interpolate functions
        // which are basically components used as a selectors.
        return typeof stylesArg === 'function' && stylesArg.__emotion_real !== stylesArg ? function (_ref) {
          var themeInput = _ref.theme,
            other = (0,objectWithoutPropertiesLoose/* default */.Z)(_ref, _excluded2);
          return stylesArg((0,esm_extends/* default */.Z)({
            theme: createStyled_isEmpty(themeInput) ? defaultTheme : themeInput
          }, other));
        } : stylesArg;
      }) : [];
      var transformedStyleArg = styleArg;
      if (componentName && overridesResolver) {
        expressionsWithDefaultTheme.push(function (props) {
          var theme = createStyled_isEmpty(props.theme) ? defaultTheme : props.theme;
          var styleOverrides = getStyleOverrides(componentName, theme);
          if (styleOverrides) {
            var resolvedStyleOverrides = {};
            Object.entries(styleOverrides).forEach(function (_ref3) {
              var _ref4 = (0,slicedToArray/* default */.Z)(_ref3, 2),
                slotKey = _ref4[0],
                slotStyle = _ref4[1];
              resolvedStyleOverrides[slotKey] = typeof slotStyle === 'function' ? slotStyle((0,esm_extends/* default */.Z)({}, props, {
                theme: theme
              })) : slotStyle;
            });
            return overridesResolver(props, resolvedStyleOverrides);
          }
          return null;
        });
      }
      if (componentName && !skipVariantsResolver) {
        expressionsWithDefaultTheme.push(function (props) {
          var theme = createStyled_isEmpty(props.theme) ? defaultTheme : props.theme;
          return variantsResolver(props, getVariantStyles(componentName, theme), theme, componentName);
        });
      }
      if (!skipSx) {
        expressionsWithDefaultTheme.push(systemSx);
      }
      var numOfCustomFnsApplied = expressionsWithDefaultTheme.length - expressions.length;
      if (Array.isArray(styleArg) && numOfCustomFnsApplied > 0) {
        var placeholders = new Array(numOfCustomFnsApplied).fill('');
        // If the type is array, than we need to add placeholders in the template for the overrides, variants and the sx styles.
        transformedStyleArg = [].concat((0,toConsumableArray/* default */.Z)(styleArg), (0,toConsumableArray/* default */.Z)(placeholders));
        transformedStyleArg.raw = [].concat((0,toConsumableArray/* default */.Z)(styleArg.raw), (0,toConsumableArray/* default */.Z)(placeholders));
      } else if (typeof styleArg === 'function' &&
      // On the server Emotion doesn't use React.forwardRef for creating components, so the created
      // component stays as a function. This condition makes sure that we do not interpolate functions
      // which are basically components used as a selectors.
      styleArg.__emotion_real !== styleArg) {
        // If the type is function, we need to define the default theme.
        transformedStyleArg = function transformedStyleArg(_ref2) {
          var themeInput = _ref2.theme,
            other = (0,objectWithoutPropertiesLoose/* default */.Z)(_ref2, _excluded3);
          return styleArg((0,esm_extends/* default */.Z)({
            theme: createStyled_isEmpty(themeInput) ? defaultTheme : themeInput
          }, other));
        };
      }
      var Component = defaultStyledResolver.apply(void 0, [transformedStyleArg].concat((0,toConsumableArray/* default */.Z)(expressionsWithDefaultTheme)));
      if (false) { var displayName; }
      return Component;
    };
    if (defaultStyledResolver.withConfig) {
      muiStyledResolver.withConfig = defaultStyledResolver.withConfig;
    }
    return muiStyledResolver;
  };
}

/***/ }),

/***/ 5080:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";

// EXPORTS
__webpack_require__.d(__webpack_exports__, {
  "Z": function() { return /* binding */ createTheme_createTheme; }
});

// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/extends.js
var esm_extends = __webpack_require__(7462);
// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js
var objectWithoutPropertiesLoose = __webpack_require__(3366);
// EXTERNAL MODULE: ./node_modules/@mui/utils/esm/deepmerge.js
var deepmerge = __webpack_require__(2466);
// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/defineProperty.js
var defineProperty = __webpack_require__(4942);
;// CONCATENATED MODULE: ./node_modules/@mui/system/esm/createTheme/createBreakpoints.js



var _excluded = ["values", "unit", "step"];
// Sorted ASC by size. That's important.
// It can't be configured as it's used statically for propTypes.
var breakpointKeys = (/* unused pure expression or super */ null && (['xs', 'sm', 'md', 'lg', 'xl']));
var sortBreakpointsValues = function sortBreakpointsValues(values) {
  var breakpointsAsArray = Object.keys(values).map(function (key) {
    return {
      key: key,
      val: values[key]
    };
  }) || [];
  // Sort in ascending order
  breakpointsAsArray.sort(function (breakpoint1, breakpoint2) {
    return breakpoint1.val - breakpoint2.val;
  });
  return breakpointsAsArray.reduce(function (acc, obj) {
    return (0,esm_extends/* default */.Z)({}, acc, (0,defineProperty/* default */.Z)({}, obj.key, obj.val));
  }, {});
};

// Keep in mind that @media is inclusive by the CSS specification.
function createBreakpoints(breakpoints) {
  var _breakpoints$values = breakpoints.values,
    values = _breakpoints$values === void 0 ? {
      xs: 0,
      // phone
      sm: 600,
      // tablet
      md: 900,
      // small laptop
      lg: 1200,
      // desktop
      xl: 1536 // large screen
    } : _breakpoints$values,
    _breakpoints$unit = breakpoints.unit,
    unit = _breakpoints$unit === void 0 ? 'px' : _breakpoints$unit,
    _breakpoints$step = breakpoints.step,
    step = _breakpoints$step === void 0 ? 5 : _breakpoints$step,
    other = (0,objectWithoutPropertiesLoose/* default */.Z)(breakpoints, _excluded);
  var sortedValues = sortBreakpointsValues(values);
  var keys = Object.keys(sortedValues);
  function up(key) {
    var value = typeof values[key] === 'number' ? values[key] : key;
    return "@media (min-width:".concat(value).concat(unit, ")");
  }
  function down(key) {
    var value = typeof values[key] === 'number' ? values[key] : key;
    return "@media (max-width:".concat(value - step / 100).concat(unit, ")");
  }
  function between(start, end) {
    var endIndex = keys.indexOf(end);
    return "@media (min-width:".concat(typeof values[start] === 'number' ? values[start] : start).concat(unit, ") and ") + "(max-width:".concat((endIndex !== -1 && typeof values[keys[endIndex]] === 'number' ? values[keys[endIndex]] : end) - step / 100).concat(unit, ")");
  }
  function only(key) {
    if (keys.indexOf(key) + 1 < keys.length) {
      return between(key, keys[keys.indexOf(key) + 1]);
    }
    return up(key);
  }
  function not(key) {
    // handle first and last key separately, for better readability
    var keyIndex = keys.indexOf(key);
    if (keyIndex === 0) {
      return up(keys[1]);
    }
    if (keyIndex === keys.length - 1) {
      return down(keys[keyIndex]);
    }
    return between(key, keys[keys.indexOf(key) + 1]).replace('@media', '@media not all and');
  }
  return (0,esm_extends/* default */.Z)({
    keys: keys,
    values: sortedValues,
    up: up,
    down: down,
    between: between,
    only: only,
    not: not,
    unit: unit
  }, other);
}
;// CONCATENATED MODULE: ./node_modules/@mui/system/esm/createTheme/shape.js
var shape = {
  borderRadius: 4
};
/* harmony default export */ var createTheme_shape = (shape);
// EXTERNAL MODULE: ./node_modules/@mui/system/esm/spacing.js + 1 modules
var esm_spacing = __webpack_require__(5682);
;// CONCATENATED MODULE: ./node_modules/@mui/system/esm/createTheme/createSpacing.js

/* tslint:enable:unified-signatures */

function createSpacing() {
  var spacingInput = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 8;
  // Already transformed.
  if (spacingInput.mui) {
    return spacingInput;
  }

  // Material Design layouts are visually balanced. Most measurements align to an 8dp grid, which aligns both spacing and the overall layout.
  // Smaller components, such as icons, can align to a 4dp grid.
  // https://m2.material.io/design/layout/understanding-layout.html
  var transform = (0,esm_spacing/* createUnarySpacing */.hB)({
    spacing: spacingInput
  });
  var spacing = function spacing() {
    for (var _len = arguments.length, argsInput = new Array(_len), _key = 0; _key < _len; _key++) {
      argsInput[_key] = arguments[_key];
    }
    if (false) {}
    var args = argsInput.length === 0 ? [1] : argsInput;
    return args.map(function (argument) {
      var output = transform(argument);
      return typeof output === 'number' ? "".concat(output, "px") : output;
    }).join(' ');
  };
  spacing.mui = true;
  return spacing;
}
// EXTERNAL MODULE: ./node_modules/@mui/system/esm/styleFunctionSx/styleFunctionSx.js
var styleFunctionSx = __webpack_require__(104);
// EXTERNAL MODULE: ./node_modules/@mui/system/esm/styleFunctionSx/defaultSxConfig.js + 5 modules
var defaultSxConfig = __webpack_require__(7416);
;// CONCATENATED MODULE: ./node_modules/@mui/system/esm/createTheme/createTheme.js


var createTheme_excluded = ["breakpoints", "palette", "spacing", "shape"];






function createTheme() {
  var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
  var _options$breakpoints = options.breakpoints,
    breakpointsInput = _options$breakpoints === void 0 ? {} : _options$breakpoints,
    _options$palette = options.palette,
    paletteInput = _options$palette === void 0 ? {} : _options$palette,
    spacingInput = options.spacing,
    _options$shape = options.shape,
    shapeInput = _options$shape === void 0 ? {} : _options$shape,
    other = (0,objectWithoutPropertiesLoose/* default */.Z)(options, createTheme_excluded);
  var breakpoints = createBreakpoints(breakpointsInput);
  var spacing = createSpacing(spacingInput);
  var muiTheme = (0,deepmerge/* default */.Z)({
    breakpoints: breakpoints,
    direction: 'ltr',
    components: {},
    // Inject component definitions.
    palette: (0,esm_extends/* default */.Z)({
      mode: 'light'
    }, paletteInput),
    spacing: spacing,
    shape: (0,esm_extends/* default */.Z)({}, createTheme_shape, shapeInput)
  }, other);
  for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
    args[_key - 1] = arguments[_key];
  }
  muiTheme = args.reduce(function (acc, argument) {
    return (0,deepmerge/* default */.Z)(acc, argument);
  }, muiTheme);
  muiTheme.unstable_sxConfig = (0,esm_extends/* default */.Z)({}, defaultSxConfig/* default */.Z, other == null ? void 0 : other.unstable_sxConfig);
  muiTheme.unstable_sx = function sx(props) {
    return (0,styleFunctionSx/* default */.Z)({
      sx: props,
      theme: this
    });
  };
  return muiTheme;
}
/* harmony default export */ var createTheme_createTheme = (createTheme);

/***/ }),

/***/ 8247:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var _mui_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(2466);

function merge(acc, item) {
  if (!item) {
    return acc;
  }
  return (0,_mui_utils__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z)(acc, item, {
    clone: false // No need to clone deep, it's way faster.
  });
}

/* harmony default export */ __webpack_exports__["Z"] = (merge);

/***/ }),

/***/ 5682:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";

// EXPORTS
__webpack_require__.d(__webpack_exports__, {
  "hB": function() { return /* binding */ createUnarySpacing; },
  "eI": function() { return /* binding */ createUnaryUnit; },
  "NA": function() { return /* binding */ getValue; },
  "e6": function() { return /* binding */ margin; },
  "o3": function() { return /* binding */ padding; }
});

// UNUSED EXPORTS: default, getStyleFromPropValue, marginKeys, paddingKeys

// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/slicedToArray.js + 1 modules
var slicedToArray = __webpack_require__(9439);
// EXTERNAL MODULE: ./node_modules/@mui/system/esm/breakpoints.js
var breakpoints = __webpack_require__(1184);
// EXTERNAL MODULE: ./node_modules/@mui/system/esm/style.js
var style = __webpack_require__(8529);
// EXTERNAL MODULE: ./node_modules/@mui/system/esm/merge.js
var merge = __webpack_require__(8247);
;// CONCATENATED MODULE: ./node_modules/@mui/system/esm/memoize.js
function memoize(fn) {
  var cache = {};
  return function (arg) {
    if (cache[arg] === undefined) {
      cache[arg] = fn(arg);
    }
    return cache[arg];
  };
}
;// CONCATENATED MODULE: ./node_modules/@mui/system/esm/spacing.js






var properties = {
  m: 'margin',
  p: 'padding'
};
var directions = {
  t: 'Top',
  r: 'Right',
  b: 'Bottom',
  l: 'Left',
  x: ['Left', 'Right'],
  y: ['Top', 'Bottom']
};
var aliases = {
  marginX: 'mx',
  marginY: 'my',
  paddingX: 'px',
  paddingY: 'py'
};

// memoize() impact:
// From 300,000 ops/sec
// To 350,000 ops/sec
var getCssProperties = memoize(function (prop) {
  // It's not a shorthand notation.
  if (prop.length > 2) {
    if (aliases[prop]) {
      prop = aliases[prop];
    } else {
      return [prop];
    }
  }
  var _prop$split = prop.split(''),
    _prop$split2 = (0,slicedToArray/* default */.Z)(_prop$split, 2),
    a = _prop$split2[0],
    b = _prop$split2[1];
  var property = properties[a];
  var direction = directions[b] || '';
  return Array.isArray(direction) ? direction.map(function (dir) {
    return property + dir;
  }) : [property + direction];
});
var marginKeys = ['m', 'mt', 'mr', 'mb', 'ml', 'mx', 'my', 'margin', 'marginTop', 'marginRight', 'marginBottom', 'marginLeft', 'marginX', 'marginY', 'marginInline', 'marginInlineStart', 'marginInlineEnd', 'marginBlock', 'marginBlockStart', 'marginBlockEnd'];
var paddingKeys = ['p', 'pt', 'pr', 'pb', 'pl', 'px', 'py', 'padding', 'paddingTop', 'paddingRight', 'paddingBottom', 'paddingLeft', 'paddingX', 'paddingY', 'paddingInline', 'paddingInlineStart', 'paddingInlineEnd', 'paddingBlock', 'paddingBlockStart', 'paddingBlockEnd'];
var spacingKeys = [].concat(marginKeys, paddingKeys);
function createUnaryUnit(theme, themeKey, defaultValue, propName) {
  var _getPath;
  var themeSpacing = (_getPath = (0,style/* getPath */.DW)(theme, themeKey, false)) != null ? _getPath : defaultValue;
  if (typeof themeSpacing === 'number') {
    return function (abs) {
      if (typeof abs === 'string') {
        return abs;
      }
      if (false) {}
      return themeSpacing * abs;
    };
  }
  if (Array.isArray(themeSpacing)) {
    return function (abs) {
      if (typeof abs === 'string') {
        return abs;
      }
      if (false) {}
      return themeSpacing[abs];
    };
  }
  if (typeof themeSpacing === 'function') {
    return themeSpacing;
  }
  if (false) {}
  return function () {
    return undefined;
  };
}
function createUnarySpacing(theme) {
  return createUnaryUnit(theme, 'spacing', 8, 'spacing');
}
function getValue(transformer, propValue) {
  if (typeof propValue === 'string' || propValue == null) {
    return propValue;
  }
  var abs = Math.abs(propValue);
  var transformed = transformer(abs);
  if (propValue >= 0) {
    return transformed;
  }
  if (typeof transformed === 'number') {
    return -transformed;
  }
  return "-".concat(transformed);
}
function getStyleFromPropValue(cssProperties, transformer) {
  return function (propValue) {
    return cssProperties.reduce(function (acc, cssProperty) {
      acc[cssProperty] = getValue(transformer, propValue);
      return acc;
    }, {});
  };
}
function resolveCssProperty(props, keys, prop, transformer) {
  // Using a hash computation over an array iteration could be faster, but with only 28 items,
  // it's doesn't worth the bundle size.
  if (keys.indexOf(prop) === -1) {
    return null;
  }
  var cssProperties = getCssProperties(prop);
  var styleFromPropValue = getStyleFromPropValue(cssProperties, transformer);
  var propValue = props[prop];
  return (0,breakpoints/* handleBreakpoints */.k9)(props, propValue, styleFromPropValue);
}
function spacing_style(props, keys) {
  var transformer = createUnarySpacing(props.theme);
  return Object.keys(props).map(function (prop) {
    return resolveCssProperty(props, keys, prop, transformer);
  }).reduce(merge/* default */.Z, {});
}
function margin(props) {
  return spacing_style(props, marginKeys);
}
margin.propTypes =  false ? 0 : {};
margin.filterProps = marginKeys;
function padding(props) {
  return spacing_style(props, paddingKeys);
}
padding.propTypes =  false ? 0 : {};
padding.filterProps = paddingKeys;
function spacing(props) {
  return spacing_style(props, spacingKeys);
}
spacing.propTypes =  false ? 0 : {};
spacing.filterProps = spacingKeys;
/* harmony default export */ var esm_spacing = ((/* unused pure expression or super */ null && (spacing)));

/***/ }),

/***/ 8529:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "DW": function() { return /* binding */ getPath; },
/* harmony export */   "Jq": function() { return /* binding */ getStyleValue; }
/* harmony export */ });
/* harmony import */ var _Users_mark_code_swap_mui_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(4942);
/* harmony import */ var _mui_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(7312);
/* harmony import */ var _breakpoints__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(1184);




function getPath(obj, path) {
  var checkVars = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;
  if (!path || typeof path !== 'string') {
    return null;
  }

  // Check if CSS variables are used
  if (obj && obj.vars && checkVars) {
    var val = "vars.".concat(path).split('.').reduce(function (acc, item) {
      return acc && acc[item] ? acc[item] : null;
    }, obj);
    if (val != null) {
      return val;
    }
  }
  return path.split('.').reduce(function (acc, item) {
    if (acc && acc[item] != null) {
      return acc[item];
    }
    return null;
  }, obj);
}
function getStyleValue(themeMapping, transform, propValueFinal) {
  var userValue = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : propValueFinal;
  var value;
  if (typeof themeMapping === 'function') {
    value = themeMapping(propValueFinal);
  } else if (Array.isArray(themeMapping)) {
    value = themeMapping[propValueFinal] || userValue;
  } else {
    value = getPath(themeMapping, propValueFinal) || userValue;
  }
  if (transform) {
    value = transform(value, userValue, themeMapping);
  }
  return value;
}
function style(options) {
  var prop = options.prop,
    _options$cssProperty = options.cssProperty,
    cssProperty = _options$cssProperty === void 0 ? options.prop : _options$cssProperty,
    themeKey = options.themeKey,
    transform = options.transform;

  // false positive
  // eslint-disable-next-line react/function-component-definition
  var fn = function fn(props) {
    if (props[prop] == null) {
      return null;
    }
    var propValue = props[prop];
    var theme = props.theme;
    var themeMapping = getPath(theme, themeKey) || {};
    var styleFromPropValue = function styleFromPropValue(propValueFinal) {
      var value = getStyleValue(themeMapping, transform, propValueFinal);
      if (propValueFinal === value && typeof propValueFinal === 'string') {
        // Haven't found value
        value = getStyleValue(themeMapping, transform, "".concat(prop).concat(propValueFinal === 'default' ? '' : (0,_mui_utils__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z)(propValueFinal)), propValueFinal);
      }
      if (cssProperty === false) {
        return value;
      }
      return (0,_Users_mark_code_swap_mui_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z)({}, cssProperty, value);
    };
    return (0,_breakpoints__WEBPACK_IMPORTED_MODULE_2__/* .handleBreakpoints */ .k9)(props, propValue, styleFromPropValue);
  };
  fn.propTypes =  false ? 0 : {};
  fn.filterProps = [prop];
  return fn;
}
/* harmony default export */ __webpack_exports__["ZP"] = (style);

/***/ }),

/***/ 7416:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";

// EXPORTS
__webpack_require__.d(__webpack_exports__, {
  "Z": function() { return /* binding */ styleFunctionSx_defaultSxConfig; }
});

// EXTERNAL MODULE: ./node_modules/@mui/system/esm/spacing.js + 1 modules
var spacing = __webpack_require__(5682);
// EXTERNAL MODULE: ./node_modules/@mui/system/esm/style.js
var style = __webpack_require__(8529);
// EXTERNAL MODULE: ./node_modules/@mui/system/esm/merge.js
var merge = __webpack_require__(8247);
;// CONCATENATED MODULE: ./node_modules/@mui/system/esm/compose.js

function compose() {
  for (var _len = arguments.length, styles = new Array(_len), _key = 0; _key < _len; _key++) {
    styles[_key] = arguments[_key];
  }
  var handlers = styles.reduce(function (acc, style) {
    style.filterProps.forEach(function (prop) {
      acc[prop] = style;
    });
    return acc;
  }, {});

  // false positive
  // eslint-disable-next-line react/function-component-definition
  var fn = function fn(props) {
    return Object.keys(props).reduce(function (acc, prop) {
      if (handlers[prop]) {
        return (0,merge/* default */.Z)(acc, handlers[prop](props));
      }
      return acc;
    }, {});
  };
  fn.propTypes =  false ? 0 : {};
  fn.filterProps = styles.reduce(function (acc, style) {
    return acc.concat(style.filterProps);
  }, []);
  return fn;
}
/* harmony default export */ var esm_compose = (compose);
// EXTERNAL MODULE: ./node_modules/@mui/system/esm/breakpoints.js
var breakpoints = __webpack_require__(1184);
;// CONCATENATED MODULE: ./node_modules/@mui/system/esm/borders.js





function borderTransform(value) {
  if (typeof value !== 'number') {
    return value;
  }
  return "".concat(value, "px solid");
}
var border = (0,style/* default */.ZP)({
  prop: 'border',
  themeKey: 'borders',
  transform: borderTransform
});
var borderTop = (0,style/* default */.ZP)({
  prop: 'borderTop',
  themeKey: 'borders',
  transform: borderTransform
});
var borderRight = (0,style/* default */.ZP)({
  prop: 'borderRight',
  themeKey: 'borders',
  transform: borderTransform
});
var borderBottom = (0,style/* default */.ZP)({
  prop: 'borderBottom',
  themeKey: 'borders',
  transform: borderTransform
});
var borderLeft = (0,style/* default */.ZP)({
  prop: 'borderLeft',
  themeKey: 'borders',
  transform: borderTransform
});
var borderColor = (0,style/* default */.ZP)({
  prop: 'borderColor',
  themeKey: 'palette'
});
var borderTopColor = (0,style/* default */.ZP)({
  prop: 'borderTopColor',
  themeKey: 'palette'
});
var borderRightColor = (0,style/* default */.ZP)({
  prop: 'borderRightColor',
  themeKey: 'palette'
});
var borderBottomColor = (0,style/* default */.ZP)({
  prop: 'borderBottomColor',
  themeKey: 'palette'
});
var borderLeftColor = (0,style/* default */.ZP)({
  prop: 'borderLeftColor',
  themeKey: 'palette'
});

// false positive
// eslint-disable-next-line react/function-component-definition
var borderRadius = function borderRadius(props) {
  if (props.borderRadius !== undefined && props.borderRadius !== null) {
    var transformer = (0,spacing/* createUnaryUnit */.eI)(props.theme, 'shape.borderRadius', 4, 'borderRadius');
    var styleFromPropValue = function styleFromPropValue(propValue) {
      return {
        borderRadius: (0,spacing/* getValue */.NA)(transformer, propValue)
      };
    };
    return (0,breakpoints/* handleBreakpoints */.k9)(props, props.borderRadius, styleFromPropValue);
  }
  return null;
};
borderRadius.propTypes =  false ? 0 : {};
borderRadius.filterProps = ['borderRadius'];
var borders = esm_compose(border, borderTop, borderRight, borderBottom, borderLeft, borderColor, borderTopColor, borderRightColor, borderBottomColor, borderLeftColor, borderRadius);
/* harmony default export */ var esm_borders = ((/* unused pure expression or super */ null && (borders)));
;// CONCATENATED MODULE: ./node_modules/@mui/system/esm/cssGrid.js






// false positive
// eslint-disable-next-line react/function-component-definition
var gap = function gap(props) {
  if (props.gap !== undefined && props.gap !== null) {
    var transformer = (0,spacing/* createUnaryUnit */.eI)(props.theme, 'spacing', 8, 'gap');
    var styleFromPropValue = function styleFromPropValue(propValue) {
      return {
        gap: (0,spacing/* getValue */.NA)(transformer, propValue)
      };
    };
    return (0,breakpoints/* handleBreakpoints */.k9)(props, props.gap, styleFromPropValue);
  }
  return null;
};
gap.propTypes =  false ? 0 : {};
gap.filterProps = ['gap'];

// false positive
// eslint-disable-next-line react/function-component-definition
var columnGap = function columnGap(props) {
  if (props.columnGap !== undefined && props.columnGap !== null) {
    var transformer = (0,spacing/* createUnaryUnit */.eI)(props.theme, 'spacing', 8, 'columnGap');
    var styleFromPropValue = function styleFromPropValue(propValue) {
      return {
        columnGap: (0,spacing/* getValue */.NA)(transformer, propValue)
      };
    };
    return (0,breakpoints/* handleBreakpoints */.k9)(props, props.columnGap, styleFromPropValue);
  }
  return null;
};
columnGap.propTypes =  false ? 0 : {};
columnGap.filterProps = ['columnGap'];

// false positive
// eslint-disable-next-line react/function-component-definition
var rowGap = function rowGap(props) {
  if (props.rowGap !== undefined && props.rowGap !== null) {
    var transformer = (0,spacing/* createUnaryUnit */.eI)(props.theme, 'spacing', 8, 'rowGap');
    var styleFromPropValue = function styleFromPropValue(propValue) {
      return {
        rowGap: (0,spacing/* getValue */.NA)(transformer, propValue)
      };
    };
    return (0,breakpoints/* handleBreakpoints */.k9)(props, props.rowGap, styleFromPropValue);
  }
  return null;
};
rowGap.propTypes =  false ? 0 : {};
rowGap.filterProps = ['rowGap'];
var gridColumn = (0,style/* default */.ZP)({
  prop: 'gridColumn'
});
var gridRow = (0,style/* default */.ZP)({
  prop: 'gridRow'
});
var gridAutoFlow = (0,style/* default */.ZP)({
  prop: 'gridAutoFlow'
});
var gridAutoColumns = (0,style/* default */.ZP)({
  prop: 'gridAutoColumns'
});
var gridAutoRows = (0,style/* default */.ZP)({
  prop: 'gridAutoRows'
});
var gridTemplateColumns = (0,style/* default */.ZP)({
  prop: 'gridTemplateColumns'
});
var gridTemplateRows = (0,style/* default */.ZP)({
  prop: 'gridTemplateRows'
});
var gridTemplateAreas = (0,style/* default */.ZP)({
  prop: 'gridTemplateAreas'
});
var gridArea = (0,style/* default */.ZP)({
  prop: 'gridArea'
});
var grid = esm_compose(gap, columnGap, rowGap, gridColumn, gridRow, gridAutoFlow, gridAutoColumns, gridAutoRows, gridTemplateColumns, gridTemplateRows, gridTemplateAreas, gridArea);
/* harmony default export */ var cssGrid = ((/* unused pure expression or super */ null && (grid)));
;// CONCATENATED MODULE: ./node_modules/@mui/system/esm/palette.js


function paletteTransform(value, userValue) {
  if (userValue === 'grey') {
    return userValue;
  }
  return value;
}
var color = (0,style/* default */.ZP)({
  prop: 'color',
  themeKey: 'palette',
  transform: paletteTransform
});
var bgcolor = (0,style/* default */.ZP)({
  prop: 'bgcolor',
  cssProperty: 'backgroundColor',
  themeKey: 'palette',
  transform: paletteTransform
});
var backgroundColor = (0,style/* default */.ZP)({
  prop: 'backgroundColor',
  themeKey: 'palette',
  transform: paletteTransform
});
var palette = esm_compose(color, bgcolor, backgroundColor);
/* harmony default export */ var esm_palette = ((/* unused pure expression or super */ null && (palette)));
;// CONCATENATED MODULE: ./node_modules/@mui/system/esm/sizing.js



function sizingTransform(value) {
  return value <= 1 && value !== 0 ? "".concat(value * 100, "%") : value;
}
var width = (0,style/* default */.ZP)({
  prop: 'width',
  transform: sizingTransform
});
var maxWidth = function maxWidth(props) {
  if (props.maxWidth !== undefined && props.maxWidth !== null) {
    var styleFromPropValue = function styleFromPropValue(propValue) {
      var _props$theme, _props$theme$breakpoi, _props$theme$breakpoi2;
      var breakpoint = ((_props$theme = props.theme) == null ? void 0 : (_props$theme$breakpoi = _props$theme.breakpoints) == null ? void 0 : (_props$theme$breakpoi2 = _props$theme$breakpoi.values) == null ? void 0 : _props$theme$breakpoi2[propValue]) || breakpoints/* values */.VO[propValue];
      return {
        maxWidth: breakpoint || sizingTransform(propValue)
      };
    };
    return (0,breakpoints/* handleBreakpoints */.k9)(props, props.maxWidth, styleFromPropValue);
  }
  return null;
};
maxWidth.filterProps = ['maxWidth'];
var minWidth = (0,style/* default */.ZP)({
  prop: 'minWidth',
  transform: sizingTransform
});
var height = (0,style/* default */.ZP)({
  prop: 'height',
  transform: sizingTransform
});
var maxHeight = (0,style/* default */.ZP)({
  prop: 'maxHeight',
  transform: sizingTransform
});
var minHeight = (0,style/* default */.ZP)({
  prop: 'minHeight',
  transform: sizingTransform
});
var sizeWidth = (0,style/* default */.ZP)({
  prop: 'size',
  cssProperty: 'width',
  transform: sizingTransform
});
var sizeHeight = (0,style/* default */.ZP)({
  prop: 'size',
  cssProperty: 'height',
  transform: sizingTransform
});
var boxSizing = (0,style/* default */.ZP)({
  prop: 'boxSizing'
});
var sizing = esm_compose(width, maxWidth, minWidth, height, maxHeight, minHeight, boxSizing);
/* harmony default export */ var esm_sizing = ((/* unused pure expression or super */ null && (sizing)));
;// CONCATENATED MODULE: ./node_modules/@mui/system/esm/styleFunctionSx/defaultSxConfig.js





var defaultSxConfig = {
  // borders
  border: {
    themeKey: 'borders',
    transform: borderTransform
  },
  borderTop: {
    themeKey: 'borders',
    transform: borderTransform
  },
  borderRight: {
    themeKey: 'borders',
    transform: borderTransform
  },
  borderBottom: {
    themeKey: 'borders',
    transform: borderTransform
  },
  borderLeft: {
    themeKey: 'borders',
    transform: borderTransform
  },
  borderColor: {
    themeKey: 'palette'
  },
  borderTopColor: {
    themeKey: 'palette'
  },
  borderRightColor: {
    themeKey: 'palette'
  },
  borderBottomColor: {
    themeKey: 'palette'
  },
  borderLeftColor: {
    themeKey: 'palette'
  },
  borderRadius: {
    themeKey: 'shape.borderRadius',
    style: borderRadius
  },
  // palette
  color: {
    themeKey: 'palette',
    transform: paletteTransform
  },
  bgcolor: {
    themeKey: 'palette',
    cssProperty: 'backgroundColor',
    transform: paletteTransform
  },
  backgroundColor: {
    themeKey: 'palette',
    transform: paletteTransform
  },
  // spacing
  p: {
    style: spacing/* padding */.o3
  },
  pt: {
    style: spacing/* padding */.o3
  },
  pr: {
    style: spacing/* padding */.o3
  },
  pb: {
    style: spacing/* padding */.o3
  },
  pl: {
    style: spacing/* padding */.o3
  },
  px: {
    style: spacing/* padding */.o3
  },
  py: {
    style: spacing/* padding */.o3
  },
  padding: {
    style: spacing/* padding */.o3
  },
  paddingTop: {
    style: spacing/* padding */.o3
  },
  paddingRight: {
    style: spacing/* padding */.o3
  },
  paddingBottom: {
    style: spacing/* padding */.o3
  },
  paddingLeft: {
    style: spacing/* padding */.o3
  },
  paddingX: {
    style: spacing/* padding */.o3
  },
  paddingY: {
    style: spacing/* padding */.o3
  },
  paddingInline: {
    style: spacing/* padding */.o3
  },
  paddingInlineStart: {
    style: spacing/* padding */.o3
  },
  paddingInlineEnd: {
    style: spacing/* padding */.o3
  },
  paddingBlock: {
    style: spacing/* padding */.o3
  },
  paddingBlockStart: {
    style: spacing/* padding */.o3
  },
  paddingBlockEnd: {
    style: spacing/* padding */.o3
  },
  m: {
    style: spacing/* margin */.e6
  },
  mt: {
    style: spacing/* margin */.e6
  },
  mr: {
    style: spacing/* margin */.e6
  },
  mb: {
    style: spacing/* margin */.e6
  },
  ml: {
    style: spacing/* margin */.e6
  },
  mx: {
    style: spacing/* margin */.e6
  },
  my: {
    style: spacing/* margin */.e6
  },
  margin: {
    style: spacing/* margin */.e6
  },
  marginTop: {
    style: spacing/* margin */.e6
  },
  marginRight: {
    style: spacing/* margin */.e6
  },
  marginBottom: {
    style: spacing/* margin */.e6
  },
  marginLeft: {
    style: spacing/* margin */.e6
  },
  marginX: {
    style: spacing/* margin */.e6
  },
  marginY: {
    style: spacing/* margin */.e6
  },
  marginInline: {
    style: spacing/* margin */.e6
  },
  marginInlineStart: {
    style: spacing/* margin */.e6
  },
  marginInlineEnd: {
    style: spacing/* margin */.e6
  },
  marginBlock: {
    style: spacing/* margin */.e6
  },
  marginBlockStart: {
    style: spacing/* margin */.e6
  },
  marginBlockEnd: {
    style: spacing/* margin */.e6
  },
  // display
  displayPrint: {
    cssProperty: false,
    transform: function transform(value) {
      return {
        '@media print': {
          display: value
        }
      };
    }
  },
  display: {},
  overflow: {},
  textOverflow: {},
  visibility: {},
  whiteSpace: {},
  // flexbox
  flexBasis: {},
  flexDirection: {},
  flexWrap: {},
  justifyContent: {},
  alignItems: {},
  alignContent: {},
  order: {},
  flex: {},
  flexGrow: {},
  flexShrink: {},
  alignSelf: {},
  justifyItems: {},
  justifySelf: {},
  // grid
  gap: {
    style: gap
  },
  rowGap: {
    style: rowGap
  },
  columnGap: {
    style: columnGap
  },
  gridColumn: {},
  gridRow: {},
  gridAutoFlow: {},
  gridAutoColumns: {},
  gridAutoRows: {},
  gridTemplateColumns: {},
  gridTemplateRows: {},
  gridTemplateAreas: {},
  gridArea: {},
  // positions
  position: {},
  zIndex: {
    themeKey: 'zIndex'
  },
  top: {},
  right: {},
  bottom: {},
  left: {},
  // shadows
  boxShadow: {
    themeKey: 'shadows'
  },
  // sizing
  width: {
    transform: sizingTransform
  },
  maxWidth: {
    style: maxWidth
  },
  minWidth: {
    transform: sizingTransform
  },
  height: {
    transform: sizingTransform
  },
  maxHeight: {
    transform: sizingTransform
  },
  minHeight: {
    transform: sizingTransform
  },
  boxSizing: {},
  // typography
  fontFamily: {
    themeKey: 'typography'
  },
  fontSize: {
    themeKey: 'typography'
  },
  fontStyle: {
    themeKey: 'typography'
  },
  fontWeight: {
    themeKey: 'typography'
  },
  letterSpacing: {},
  textTransform: {},
  lineHeight: {},
  textAlign: {},
  typography: {
    cssProperty: false,
    themeKey: 'typography'
  }
};
/* harmony default export */ var styleFunctionSx_defaultSxConfig = (defaultSxConfig);

/***/ }),

/***/ 104:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* unused harmony export unstable_createStyleFunctionSx */
/* harmony import */ var _Users_mark_code_swap_mui_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(4942);
/* harmony import */ var _mui_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(7312);
/* harmony import */ var _merge__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(8247);
/* harmony import */ var _style__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(8529);
/* harmony import */ var _breakpoints__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(1184);
/* harmony import */ var _defaultSxConfig__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(7416);






function objectsHaveSameKeys() {
  for (var _len = arguments.length, objects = new Array(_len), _key = 0; _key < _len; _key++) {
    objects[_key] = arguments[_key];
  }
  var allKeys = objects.reduce(function (keys, object) {
    return keys.concat(Object.keys(object));
  }, []);
  var union = new Set(allKeys);
  return objects.every(function (object) {
    return union.size === Object.keys(object).length;
  });
}
function callIfFn(maybeFn, arg) {
  return typeof maybeFn === 'function' ? maybeFn(arg) : maybeFn;
}

// eslint-disable-next-line @typescript-eslint/naming-convention
function unstable_createStyleFunctionSx() {
  function getThemeValue(prop, val, theme, config) {
    var _props;
    var props = (_props = {}, (0,_Users_mark_code_swap_mui_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z)(_props, prop, val), (0,_Users_mark_code_swap_mui_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z)(_props, "theme", theme), _props);
    var options = config[prop];
    if (!options) {
      return (0,_Users_mark_code_swap_mui_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z)({}, prop, val);
    }
    var _options$cssProperty = options.cssProperty,
      cssProperty = _options$cssProperty === void 0 ? prop : _options$cssProperty,
      themeKey = options.themeKey,
      transform = options.transform,
      style = options.style;
    if (val == null) {
      return null;
    }
    var themeMapping = (0,_style__WEBPACK_IMPORTED_MODULE_1__/* .getPath */ .DW)(theme, themeKey) || {};
    if (style) {
      return style(props);
    }
    var styleFromPropValue = function styleFromPropValue(propValueFinal) {
      var value = (0,_style__WEBPACK_IMPORTED_MODULE_1__/* .getStyleValue */ .Jq)(themeMapping, transform, propValueFinal);
      if (propValueFinal === value && typeof propValueFinal === 'string') {
        // Haven't found value
        value = (0,_style__WEBPACK_IMPORTED_MODULE_1__/* .getStyleValue */ .Jq)(themeMapping, transform, "".concat(prop).concat(propValueFinal === 'default' ? '' : (0,_mui_utils__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z)(propValueFinal)), propValueFinal);
      }
      if (cssProperty === false) {
        return value;
      }
      return (0,_Users_mark_code_swap_mui_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z)({}, cssProperty, value);
    };
    return (0,_breakpoints__WEBPACK_IMPORTED_MODULE_3__/* .handleBreakpoints */ .k9)(props, val, styleFromPropValue);
  }
  function styleFunctionSx(props) {
    var _theme$unstable_sxCon;
    var _ref3 = props || {},
      sx = _ref3.sx,
      _ref3$theme = _ref3.theme,
      theme = _ref3$theme === void 0 ? {} : _ref3$theme;
    if (!sx) {
      return null; // Emotion & styled-components will neglect null
    }

    var config = (_theme$unstable_sxCon = theme.unstable_sxConfig) != null ? _theme$unstable_sxCon : _defaultSxConfig__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z;

    /*
     * Receive `sxInput` as object or callback
     * and then recursively check keys & values to create media query object styles.
     * (the result will be used in `styled`)
     */
    function traverse(sxInput) {
      var sxObject = sxInput;
      if (typeof sxInput === 'function') {
        sxObject = sxInput(theme);
      } else if (typeof sxInput !== 'object') {
        // value
        return sxInput;
      }
      if (!sxObject) {
        return null;
      }
      var emptyBreakpoints = (0,_breakpoints__WEBPACK_IMPORTED_MODULE_3__/* .createEmptyBreakpointObject */ .W8)(theme.breakpoints);
      var breakpointsKeys = Object.keys(emptyBreakpoints);
      var css = emptyBreakpoints;
      Object.keys(sxObject).forEach(function (styleKey) {
        var value = callIfFn(sxObject[styleKey], theme);
        if (value !== null && value !== undefined) {
          if (typeof value === 'object') {
            if (config[styleKey]) {
              css = (0,_merge__WEBPACK_IMPORTED_MODULE_5__/* ["default"] */ .Z)(css, getThemeValue(styleKey, value, theme, config));
            } else {
              var breakpointsValues = (0,_breakpoints__WEBPACK_IMPORTED_MODULE_3__/* .handleBreakpoints */ .k9)({
                theme: theme
              }, value, function (x) {
                return (0,_Users_mark_code_swap_mui_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z)({}, styleKey, x);
              });
              if (objectsHaveSameKeys(breakpointsValues, value)) {
                css[styleKey] = styleFunctionSx({
                  sx: value,
                  theme: theme
                });
              } else {
                css = (0,_merge__WEBPACK_IMPORTED_MODULE_5__/* ["default"] */ .Z)(css, breakpointsValues);
              }
            }
          } else {
            css = (0,_merge__WEBPACK_IMPORTED_MODULE_5__/* ["default"] */ .Z)(css, getThemeValue(styleKey, value, theme, config));
          }
        }
      });
      return (0,_breakpoints__WEBPACK_IMPORTED_MODULE_3__/* .removeUnusedBreakpoints */ .L7)(breakpointsKeys, css);
    }
    return Array.isArray(sx) ? sx.map(traverse) : traverse(sx);
  }
  return styleFunctionSx;
}
var styleFunctionSx = unstable_createStyleFunctionSx();
styleFunctionSx.filterProps = ['sx'];
/* harmony default export */ __webpack_exports__["Z"] = (styleFunctionSx);

/***/ }),

/***/ 418:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* unused harmony export systemDefaultTheme */
/* harmony import */ var _createTheme__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(5080);
/* harmony import */ var _useThemeWithoutDefault__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(9120);


var systemDefaultTheme = (0,_createTheme__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z)();
function useTheme() {
  var defaultTheme = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : systemDefaultTheme;
  return (0,_useThemeWithoutDefault__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z)(defaultTheme);
}
/* harmony default export */ __webpack_exports__["Z"] = (useTheme);

/***/ }),

/***/ 3073:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Z": function() { return /* binding */ getThemeProps; }
/* harmony export */ });
/* harmony import */ var _mui_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(5735);

function getThemeProps(params) {
  var theme = params.theme,
    name = params.name,
    props = params.props;
  if (!theme || !theme.components || !theme.components[name] || !theme.components[name].defaultProps) {
    return props;
  }
  return (0,_mui_utils__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z)(theme.components[name].defaultProps, props);
}

/***/ }),

/***/ 6083:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Z": function() { return /* binding */ useThemeProps; }
/* harmony export */ });
/* harmony import */ var _getThemeProps__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(3073);
/* harmony import */ var _useTheme__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(418);


function useThemeProps(_ref) {
  var props = _ref.props,
    name = _ref.name,
    defaultTheme = _ref.defaultTheme;
  var theme = (0,_useTheme__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z)(defaultTheme);
  var mergedProps = (0,_getThemeProps__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z)({
    theme: theme,
    name: name,
    props: props
  });
  return mergedProps;
}

/***/ }),

/***/ 9120:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var _mui_private_theming__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(9598);

function isObjectEmpty(obj) {
  return Object.keys(obj).length === 0;
}
function useTheme() {
  var defaultTheme = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;
  var contextTheme = (0,_mui_private_theming__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z)();
  return !contextTheme || isObjectEmpty(contextTheme) ? defaultTheme : contextTheme;
}
/* harmony default export */ __webpack_exports__["Z"] = (useTheme);

/***/ }),

/***/ 5902:
/***/ (function(__unused_webpack_module, __webpack_exports__) {

"use strict";
var defaultGenerator = function defaultGenerator(componentName) {
  return componentName;
};
var createClassNameGenerator = function createClassNameGenerator() {
  var _generate = defaultGenerator;
  return {
    configure: function configure(generator) {
      _generate = generator;
    },
    generate: function generate(componentName) {
      return _generate(componentName);
    },
    reset: function reset() {
      _generate = defaultGenerator;
    }
  };
};
var ClassNameGenerator = createClassNameGenerator();
/* harmony default export */ __webpack_exports__["Z"] = (ClassNameGenerator);

/***/ }),

/***/ 7312:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Z": function() { return /* binding */ capitalize; }
/* harmony export */ });
/* harmony import */ var _formatMuiErrorMessage__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(6189);

// It should to be noted that this function isn't equivalent to `text-transform: capitalize`.
//
// A strict capitalization should uppercase the first letter of each word in the sentence.
// We only handle the first word.
function capitalize(string) {
  if (typeof string !== 'string') {
    throw new Error( false ? 0 : (0,_formatMuiErrorMessage__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z)(7));
  }
  return string.charAt(0).toUpperCase() + string.slice(1);
}

/***/ }),

/***/ 4419:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Z": function() { return /* binding */ composeClasses; }
/* harmony export */ });
function composeClasses(slots, getUtilityClass, classes) {
  var output = {};
  Object.keys(slots).forEach(
  // `Objet.keys(slots)` can't be wider than `T` because we infer `T` from `slots`.
  // @ts-expect-error https://github.com/microsoft/TypeScript/pull/12253#issuecomment-263132208
  function (slot) {
    output[slot] = slots[slot].reduce(function (acc, key) {
      if (key) {
        acc.push(getUtilityClass(key));
        if (classes && classes[key]) {
          acc.push(classes[key]);
        }
      }
      return acc;
    }, []).join(' ');
  });
  return output;
}

/***/ }),

/***/ 8949:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Z": function() { return /* binding */ createChainedFunction; }
/* harmony export */ });
/**
 * Safe chained function.
 *
 * Will only create a new function if needed,
 * otherwise will pass back existing functions or null.
 */
function createChainedFunction() {
  for (var _len = arguments.length, funcs = new Array(_len), _key = 0; _key < _len; _key++) {
    funcs[_key] = arguments[_key];
  }
  return funcs.reduce(function (acc, func) {
    if (func == null) {
      return acc;
    }
    return function chainedFunction() {
      for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
        args[_key2] = arguments[_key2];
      }
      acc.apply(this, args);
      func.apply(this, args);
    };
  }, function () {});
}

/***/ }),

/***/ 3981:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Z": function() { return /* binding */ debounce; }
/* harmony export */ });
// Corresponds to 10 frames at 60 Hz.
// A few bytes payload overhead when lodash/debounce is ~3 kB and debounce ~300 B.
function debounce(func) {
  var wait = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 166;
  var timeout;
  function debounced() {
    var _this = this;
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    var later = function later() {
      func.apply(_this, args);
    };
    clearTimeout(timeout);
    timeout = setTimeout(later, wait);
  }
  debounced.clear = function () {
    clearTimeout(timeout);
  };
  return debounced;
}

/***/ }),

/***/ 2466:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "P": function() { return /* binding */ isPlainObject; },
/* harmony export */   "Z": function() { return /* binding */ deepmerge; }
/* harmony export */ });
/* harmony import */ var _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(7462);

function isPlainObject(item) {
  return item !== null && typeof item === 'object' && item.constructor === Object;
}
function deepmerge(target, source) {
  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {
    clone: true
  };
  var output = options.clone ? (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z)({}, target) : target;
  if (isPlainObject(target) && isPlainObject(source)) {
    Object.keys(source).forEach(function (key) {
      // Avoid prototype pollution
      if (key === '__proto__') {
        return;
      }
      if (isPlainObject(source[key]) && key in target && isPlainObject(target[key])) {
        // Since `output` is a clone of `target` and we have narrowed `target` in this block we can cast to the same type.
        output[key] = deepmerge(target[key], source[key], options);
      } else {
        output[key] = source[key];
      }
    });
  }
  return output;
}

/***/ }),

/***/ 6189:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Z": function() { return /* binding */ formatMuiErrorMessage; }
/* harmony export */ });
/**
 * WARNING: Don't import this directly.
 * Use `MuiError` from `@mui/utils/macros/MuiError.macro` instead.
 * @param {number} code
 */
function formatMuiErrorMessage(code) {
  // Apply babel-plugin-transform-template-literals in loose mode
  // loose mode is safe iff we're concatenating primitives
  // see https://babeljs.io/docs/en/babel-plugin-transform-template-literals#loose
  /* eslint-disable prefer-template */
  var url = 'https://mui.com/production-error/?code=' + code;
  for (var i = 1; i < arguments.length; i += 1) {
    // rest params over-transpile for this case
    // eslint-disable-next-line prefer-rest-params
    url += '&args[]=' + encodeURIComponent(arguments[i]);
  }
  return 'Minified MUI error #' + code + '; visit ' + url + ' for the full message.';
  /* eslint-enable prefer-template */
}

/***/ }),

/***/ 1217:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Z": function() { return /* binding */ generateUtilityClass; }
/* harmony export */ });
/* harmony import */ var _ClassNameGenerator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(5902);

var globalStateClassesMapping = {
  active: 'active',
  checked: 'checked',
  completed: 'completed',
  disabled: 'disabled',
  error: 'error',
  expanded: 'expanded',
  focused: 'focused',
  focusVisible: 'focusVisible',
  required: 'required',
  selected: 'selected'
};
function generateUtilityClass(componentName, slot) {
  var globalStatePrefix = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'Mui';
  var globalStateClass = globalStateClassesMapping[slot];
  return globalStateClass ? "".concat(globalStatePrefix, "-").concat(globalStateClass) : "".concat(_ClassNameGenerator__WEBPACK_IMPORTED_MODULE_0__/* ["default"].generate */ .Z.generate(componentName), "-").concat(slot);
}

/***/ }),

/***/ 5878:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Z": function() { return /* binding */ generateUtilityClasses; }
/* harmony export */ });
/* harmony import */ var _generateUtilityClass__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(1217);

function generateUtilityClasses(componentName, slots) {
  var globalStatePrefix = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'Mui';
  var result = {};
  slots.forEach(function (slot) {
    result[slot] = (0,_generateUtilityClass__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z)(componentName, slot, globalStatePrefix);
  });
  return result;
}

/***/ }),

/***/ 9723:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Z": function() { return /* binding */ ownerDocument; }
/* harmony export */ });
function ownerDocument(node) {
  return node && node.ownerDocument || document;
}

/***/ }),

/***/ 7979:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Z": function() { return /* binding */ ownerWindow; }
/* harmony export */ });
/* harmony import */ var _ownerDocument__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(9723);

function ownerWindow(node) {
  var doc = (0,_ownerDocument__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z)(node);
  return doc.defaultView || window;
}

/***/ }),

/***/ 5735:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Z": function() { return /* binding */ resolveProps; }
/* harmony export */ });
/* harmony import */ var _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(7462);

/**
 * Add keys, values of `defaultProps` that does not exist in `props`
 * @param {object} defaultProps
 * @param {object} props
 * @returns {object} resolved props
 */
function resolveProps(defaultProps, props) {
  var output = (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z)({}, props);
  Object.keys(defaultProps).forEach(function (propName) {
    if (output[propName] === undefined) {
      output[propName] = defaultProps[propName];
    }
  });
  return output;
}

/***/ }),

/***/ 2971:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Z": function() { return /* binding */ setRef; }
/* harmony export */ });
/**
 * TODO v5: consider making it private
 *
 * passes {value} to {ref}
 *
 * WARNING: Be sure to only call this inside a callback that is passed as a ref.
 * Otherwise, make sure to cleanup the previous {ref} if it changes. See
 * https://github.com/mui/material-ui/issues/13539
 *
 * Useful if you want to expose the ref of an inner component to the public API
 * while still using it inside the component.
 * @param ref A ref callback or ref object. If anything falsy, this is a no-op.
 */
function setRef(ref, value) {
  if (typeof ref === 'function') {
    ref(value);
  } else if (ref) {
    ref.current = value;
  }
}

/***/ }),

/***/ 5721:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(2791);

var useEnhancedEffect = typeof window !== 'undefined' ? react__WEBPACK_IMPORTED_MODULE_0__.useLayoutEffect : react__WEBPACK_IMPORTED_MODULE_0__.useEffect;
/* harmony default export */ __webpack_exports__["Z"] = (useEnhancedEffect);

/***/ }),

/***/ 8956:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Z": function() { return /* binding */ useEventCallback; }
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(2791);
/* harmony import */ var _useEnhancedEffect__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(5721);



/**
 * https://github.com/facebook/react/issues/14099#issuecomment-440013892
 */
function useEventCallback(fn) {
  var ref = react__WEBPACK_IMPORTED_MODULE_0__.useRef(fn);
  (0,_useEnhancedEffect__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z)(function () {
    ref.current = fn;
  });
  return react__WEBPACK_IMPORTED_MODULE_0__.useCallback(function () {
    return (
      // @ts-expect-error hide `this`
      // tslint:disable-next-line:ban-comma-operator
      (0, ref.current).apply(void 0, arguments)
    );
  }, []);
}

/***/ }),

/***/ 7563:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Z": function() { return /* binding */ useForkRef; }
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(2791);
/* harmony import */ var _setRef__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(2971);


function useForkRef() {
  for (var _len = arguments.length, refs = new Array(_len), _key = 0; _key < _len; _key++) {
    refs[_key] = arguments[_key];
  }
  /**
   * This will create a new function if the refs passed to this hook change and are all defined.
   * This means react will call the old forkRef with `null` and the new forkRef
   * with the ref. Cleanup naturally emerges from this behavior.
   */
  return react__WEBPACK_IMPORTED_MODULE_0__.useMemo(function () {
    if (refs.every(function (ref) {
      return ref == null;
    })) {
      return null;
    }
    return function (instance) {
      refs.forEach(function (ref) {
        (0,_setRef__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z)(ref, instance);
      });
    };
    // eslint-disable-next-line react-hooks/exhaustive-deps
  }, refs);
}

/***/ }),

/***/ 6248:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
var react__WEBPACK_IMPORTED_MODULE_0___namespace_cache;
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Z": function() { return /* binding */ useId; }
/* harmony export */ });
/* harmony import */ var _Users_mark_code_swap_mui_node_modules_babel_runtime_helpers_esm_slicedToArray_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(9439);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(2791);


var globalId = 0;
function useGlobalId(idOverride) {
  var _React$useState = react__WEBPACK_IMPORTED_MODULE_0__.useState(idOverride),
    _React$useState2 = (0,_Users_mark_code_swap_mui_node_modules_babel_runtime_helpers_esm_slicedToArray_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z)(_React$useState, 2),
    defaultId = _React$useState2[0],
    setDefaultId = _React$useState2[1];
  var id = idOverride || defaultId;
  react__WEBPACK_IMPORTED_MODULE_0__.useEffect(function () {
    if (defaultId == null) {
      // Fallback to this default id when possible.
      // Use the incrementing value for client-side rendering only.
      // We can't use it server-side.
      // If you want to use random values please consider the Birthday Problem: https://en.wikipedia.org/wiki/Birthday_problem
      globalId += 1;
      setDefaultId("mui-".concat(globalId));
    }
  }, [defaultId]);
  return id;
}

// eslint-disable-next-line no-useless-concat -- Workaround for https://github.com/webpack/webpack/issues/14814
var maybeReactUseId = /*#__PURE__*/ (react__WEBPACK_IMPORTED_MODULE_0___namespace_cache || (react__WEBPACK_IMPORTED_MODULE_0___namespace_cache = __webpack_require__.t(react__WEBPACK_IMPORTED_MODULE_0__, 2)))['useId' + ''];
/**
 *
 * @example <div id={useId()} />
 * @param idOverride
 * @returns {string}
 */
function useId(idOverride) {
  if (maybeReactUseId !== undefined) {
    var reactId = maybeReactUseId();
    return idOverride != null ? idOverride : reactId;
  }
  // eslint-disable-next-line react-hooks/rules-of-hooks -- `React.useId` is invariant at runtime.
  return useGlobalId(idOverride);
}

/***/ }),

/***/ 8182:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* unused harmony export clsx */
function r(e) {
  var t,
    f,
    n = "";
  if ("string" == typeof e || "number" == typeof e) n += e;else if ("object" == typeof e) if (Array.isArray(e)) for (t = 0; t < e.length; t++) {
    e[t] && (f = r(e[t])) && (n && (n += " "), n += f);
  } else for (t in e) {
    e[t] && (n && (n += " "), n += t);
  }
  return n;
}
function clsx() {
  for (var e, t, f = 0, n = ""; f < arguments.length;) {
    (e = arguments[f++]) && (t = r(e)) && (n && (n += " "), n += t);
  }
  return n;
}
/* harmony default export */ __webpack_exports__["Z"] = (clsx);

/***/ }),

/***/ 2110:
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";


var reactIs = __webpack_require__(8309);

/**
 * Copyright 2015, Yahoo! Inc.
 * Copyrights licensed under the New BSD License. See the accompanying LICENSE file for terms.
 */
var REACT_STATICS = {
  childContextTypes: true,
  contextType: true,
  contextTypes: true,
  defaultProps: true,
  displayName: true,
  getDefaultProps: true,
  getDerivedStateFromError: true,
  getDerivedStateFromProps: true,
  mixins: true,
  propTypes: true,
  type: true
};
var KNOWN_STATICS = {
  name: true,
  length: true,
  prototype: true,
  caller: true,
  callee: true,
  arguments: true,
  arity: true
};
var FORWARD_REF_STATICS = {
  '$$typeof': true,
  render: true,
  defaultProps: true,
  displayName: true,
  propTypes: true
};
var MEMO_STATICS = {
  '$$typeof': true,
  compare: true,
  defaultProps: true,
  displayName: true,
  propTypes: true,
  type: true
};
var TYPE_STATICS = {};
TYPE_STATICS[reactIs.ForwardRef] = FORWARD_REF_STATICS;
TYPE_STATICS[reactIs.Memo] = MEMO_STATICS;
function getStatics(component) {
  // React v16.11 and below
  if (reactIs.isMemo(component)) {
    return MEMO_STATICS;
  } // React v16.12 and above

  return TYPE_STATICS[component['$$typeof']] || REACT_STATICS;
}
var defineProperty = Object.defineProperty;
var getOwnPropertyNames = Object.getOwnPropertyNames;
var getOwnPropertySymbols = Object.getOwnPropertySymbols;
var getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;
var getPrototypeOf = Object.getPrototypeOf;
var objectPrototype = Object.prototype;
function hoistNonReactStatics(targetComponent, sourceComponent, blacklist) {
  if (typeof sourceComponent !== 'string') {
    // don't hoist over string (html) components
    if (objectPrototype) {
      var inheritedComponent = getPrototypeOf(sourceComponent);
      if (inheritedComponent && inheritedComponent !== objectPrototype) {
        hoistNonReactStatics(targetComponent, inheritedComponent, blacklist);
      }
    }
    var keys = getOwnPropertyNames(sourceComponent);
    if (getOwnPropertySymbols) {
      keys = keys.concat(getOwnPropertySymbols(sourceComponent));
    }
    var targetStatics = getStatics(targetComponent);
    var sourceStatics = getStatics(sourceComponent);
    for (var i = 0; i < keys.length; ++i) {
      var key = keys[i];
      if (!KNOWN_STATICS[key] && !(blacklist && blacklist[key]) && !(sourceStatics && sourceStatics[key]) && !(targetStatics && targetStatics[key])) {
        var descriptor = getOwnPropertyDescriptor(sourceComponent, key);
        try {
          // Avoid failures from read-only properties
          defineProperty(targetComponent, key, descriptor);
        } catch (e) {}
      }
    }
  }
  return targetComponent;
}
module.exports = hoistNonReactStatics;

/***/ }),

/***/ 746:
/***/ (function(__unused_webpack_module, exports) {

"use strict";
/** @license React v16.13.1
 * react-is.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */



var b = "function" === typeof Symbol && Symbol.for,
  c = b ? Symbol.for("react.element") : 60103,
  d = b ? Symbol.for("react.portal") : 60106,
  e = b ? Symbol.for("react.fragment") : 60107,
  f = b ? Symbol.for("react.strict_mode") : 60108,
  g = b ? Symbol.for("react.profiler") : 60114,
  h = b ? Symbol.for("react.provider") : 60109,
  k = b ? Symbol.for("react.context") : 60110,
  l = b ? Symbol.for("react.async_mode") : 60111,
  m = b ? Symbol.for("react.concurrent_mode") : 60111,
  n = b ? Symbol.for("react.forward_ref") : 60112,
  p = b ? Symbol.for("react.suspense") : 60113,
  q = b ? Symbol.for("react.suspense_list") : 60120,
  r = b ? Symbol.for("react.memo") : 60115,
  t = b ? Symbol.for("react.lazy") : 60116,
  v = b ? Symbol.for("react.block") : 60121,
  w = b ? Symbol.for("react.fundamental") : 60117,
  x = b ? Symbol.for("react.responder") : 60118,
  y = b ? Symbol.for("react.scope") : 60119;
function z(a) {
  if ("object" === typeof a && null !== a) {
    var u = a.$$typeof;
    switch (u) {
      case c:
        switch (a = a.type, a) {
          case l:
          case m:
          case e:
          case g:
          case f:
          case p:
            return a;
          default:
            switch (a = a && a.$$typeof, a) {
              case k:
              case n:
              case t:
              case r:
              case h:
                return a;
              default:
                return u;
            }
        }
      case d:
        return u;
    }
  }
}
function A(a) {
  return z(a) === m;
}
exports.AsyncMode = l;
exports.ConcurrentMode = m;
exports.ContextConsumer = k;
exports.ContextProvider = h;
exports.Element = c;
exports.ForwardRef = n;
exports.Fragment = e;
exports.Lazy = t;
exports.Memo = r;
exports.Portal = d;
exports.Profiler = g;
exports.StrictMode = f;
exports.Suspense = p;
exports.isAsyncMode = function (a) {
  return A(a) || z(a) === l;
};
exports.isConcurrentMode = A;
exports.isContextConsumer = function (a) {
  return z(a) === k;
};
exports.isContextProvider = function (a) {
  return z(a) === h;
};
exports.isElement = function (a) {
  return "object" === typeof a && null !== a && a.$$typeof === c;
};
exports.isForwardRef = function (a) {
  return z(a) === n;
};
exports.isFragment = function (a) {
  return z(a) === e;
};
exports.isLazy = function (a) {
  return z(a) === t;
};
exports.isMemo = function (a) {
  return z(a) === r;
};
exports.isPortal = function (a) {
  return z(a) === d;
};
exports.isProfiler = function (a) {
  return z(a) === g;
};
exports.isStrictMode = function (a) {
  return z(a) === f;
};
exports.isSuspense = function (a) {
  return z(a) === p;
};
exports.isValidElementType = function (a) {
  return "string" === typeof a || "function" === typeof a || a === e || a === m || a === g || a === f || a === p || a === q || "object" === typeof a && null !== a && (a.$$typeof === t || a.$$typeof === r || a.$$typeof === h || a.$$typeof === k || a.$$typeof === n || a.$$typeof === w || a.$$typeof === x || a.$$typeof === y || a.$$typeof === v);
};
exports.typeOf = z;

/***/ }),

/***/ 8309:
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";


if (true) {
  module.exports = __webpack_require__(746);
} else {}

/***/ }),

/***/ 4463:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
/**
 * @license React
 * react-dom.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
/*
 Modernizr 3.0.0pre (Custom Build) | MIT
*/


var aa = __webpack_require__(2791),
  ca = __webpack_require__(5296);
function p(a) {
  for (var b = "https://reactjs.org/docs/error-decoder.html?invariant=" + a, c = 1; c < arguments.length; c++) {
    b += "&args[]=" + encodeURIComponent(arguments[c]);
  }
  return "Minified React error #" + a + "; visit " + b + " for the full message or use the non-minified dev environment for full errors and additional helpful warnings.";
}
var da = new Set(),
  ea = {};
function fa(a, b) {
  ha(a, b);
  ha(a + "Capture", b);
}
function ha(a, b) {
  ea[a] = b;
  for (a = 0; a < b.length; a++) {
    da.add(b[a]);
  }
}
var ia = !("undefined" === typeof window || "undefined" === typeof window.document || "undefined" === typeof window.document.createElement),
  ja = Object.prototype.hasOwnProperty,
  ka = /^[:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$/,
  la = {},
  ma = {};
function oa(a) {
  if (ja.call(ma, a)) return !0;
  if (ja.call(la, a)) return !1;
  if (ka.test(a)) return ma[a] = !0;
  la[a] = !0;
  return !1;
}
function pa(a, b, c, d) {
  if (null !== c && 0 === c.type) return !1;
  switch (typeof b) {
    case "function":
    case "symbol":
      return !0;
    case "boolean":
      if (d) return !1;
      if (null !== c) return !c.acceptsBooleans;
      a = a.toLowerCase().slice(0, 5);
      return "data-" !== a && "aria-" !== a;
    default:
      return !1;
  }
}
function qa(a, b, c, d) {
  if (null === b || "undefined" === typeof b || pa(a, b, c, d)) return !0;
  if (d) return !1;
  if (null !== c) switch (c.type) {
    case 3:
      return !b;
    case 4:
      return !1 === b;
    case 5:
      return isNaN(b);
    case 6:
      return isNaN(b) || 1 > b;
  }
  return !1;
}
function v(a, b, c, d, e, f, g) {
  this.acceptsBooleans = 2 === b || 3 === b || 4 === b;
  this.attributeName = d;
  this.attributeNamespace = e;
  this.mustUseProperty = c;
  this.propertyName = a;
  this.type = b;
  this.sanitizeURL = f;
  this.removeEmptyString = g;
}
var z = {};
"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style".split(" ").forEach(function (a) {
  z[a] = new v(a, 0, !1, a, null, !1, !1);
});
[["acceptCharset", "accept-charset"], ["className", "class"], ["htmlFor", "for"], ["httpEquiv", "http-equiv"]].forEach(function (a) {
  var b = a[0];
  z[b] = new v(b, 1, !1, a[1], null, !1, !1);
});
["contentEditable", "draggable", "spellCheck", "value"].forEach(function (a) {
  z[a] = new v(a, 2, !1, a.toLowerCase(), null, !1, !1);
});
["autoReverse", "externalResourcesRequired", "focusable", "preserveAlpha"].forEach(function (a) {
  z[a] = new v(a, 2, !1, a, null, !1, !1);
});
"allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture disableRemotePlayback formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope".split(" ").forEach(function (a) {
  z[a] = new v(a, 3, !1, a.toLowerCase(), null, !1, !1);
});
["checked", "multiple", "muted", "selected"].forEach(function (a) {
  z[a] = new v(a, 3, !0, a, null, !1, !1);
});
["capture", "download"].forEach(function (a) {
  z[a] = new v(a, 4, !1, a, null, !1, !1);
});
["cols", "rows", "size", "span"].forEach(function (a) {
  z[a] = new v(a, 6, !1, a, null, !1, !1);
});
["rowSpan", "start"].forEach(function (a) {
  z[a] = new v(a, 5, !1, a.toLowerCase(), null, !1, !1);
});
var ra = /[\-:]([a-z])/g;
function sa(a) {
  return a[1].toUpperCase();
}
"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height".split(" ").forEach(function (a) {
  var b = a.replace(ra, sa);
  z[b] = new v(b, 1, !1, a, null, !1, !1);
});
"xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type".split(" ").forEach(function (a) {
  var b = a.replace(ra, sa);
  z[b] = new v(b, 1, !1, a, "http://www.w3.org/1999/xlink", !1, !1);
});
["xml:base", "xml:lang", "xml:space"].forEach(function (a) {
  var b = a.replace(ra, sa);
  z[b] = new v(b, 1, !1, a, "http://www.w3.org/XML/1998/namespace", !1, !1);
});
["tabIndex", "crossOrigin"].forEach(function (a) {
  z[a] = new v(a, 1, !1, a.toLowerCase(), null, !1, !1);
});
z.xlinkHref = new v("xlinkHref", 1, !1, "xlink:href", "http://www.w3.org/1999/xlink", !0, !1);
["src", "href", "action", "formAction"].forEach(function (a) {
  z[a] = new v(a, 1, !1, a.toLowerCase(), null, !0, !0);
});
function ta(a, b, c, d) {
  var e = z.hasOwnProperty(b) ? z[b] : null;
  if (null !== e ? 0 !== e.type : d || !(2 < b.length) || "o" !== b[0] && "O" !== b[0] || "n" !== b[1] && "N" !== b[1]) qa(b, c, e, d) && (c = null), d || null === e ? oa(b) && (null === c ? a.removeAttribute(b) : a.setAttribute(b, "" + c)) : e.mustUseProperty ? a[e.propertyName] = null === c ? 3 === e.type ? !1 : "" : c : (b = e.attributeName, d = e.attributeNamespace, null === c ? a.removeAttribute(b) : (e = e.type, c = 3 === e || 4 === e && !0 === c ? "" : "" + c, d ? a.setAttributeNS(d, b, c) : a.setAttribute(b, c)));
}
var ua = aa.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED,
  va = Symbol.for("react.element"),
  wa = Symbol.for("react.portal"),
  ya = Symbol.for("react.fragment"),
  za = Symbol.for("react.strict_mode"),
  Aa = Symbol.for("react.profiler"),
  Ba = Symbol.for("react.provider"),
  Ca = Symbol.for("react.context"),
  Da = Symbol.for("react.forward_ref"),
  Ea = Symbol.for("react.suspense"),
  Fa = Symbol.for("react.suspense_list"),
  Ga = Symbol.for("react.memo"),
  Ha = Symbol.for("react.lazy");
Symbol.for("react.scope");
Symbol.for("react.debug_trace_mode");
var Ia = Symbol.for("react.offscreen");
Symbol.for("react.legacy_hidden");
Symbol.for("react.cache");
Symbol.for("react.tracing_marker");
var Ja = Symbol.iterator;
function Ka(a) {
  if (null === a || "object" !== typeof a) return null;
  a = Ja && a[Ja] || a["@@iterator"];
  return "function" === typeof a ? a : null;
}
var A = Object.assign,
  La;
function Ma(a) {
  if (void 0 === La) try {
    throw Error();
  } catch (c) {
    var b = c.stack.trim().match(/\n( *(at )?)/);
    La = b && b[1] || "";
  }
  return "\n" + La + a;
}
var Na = !1;
function Oa(a, b) {
  if (!a || Na) return "";
  Na = !0;
  var c = Error.prepareStackTrace;
  Error.prepareStackTrace = void 0;
  try {
    if (b) {
      if (b = function b() {
        throw Error();
      }, Object.defineProperty(b.prototype, "props", {
        set: function set() {
          throw Error();
        }
      }), "object" === typeof Reflect && Reflect.construct) {
        try {
          Reflect.construct(b, []);
        } catch (l) {
          var d = l;
        }
        Reflect.construct(a, [], b);
      } else {
        try {
          b.call();
        } catch (l) {
          d = l;
        }
        a.call(b.prototype);
      }
    } else {
      try {
        throw Error();
      } catch (l) {
        d = l;
      }
      a();
    }
  } catch (l) {
    if (l && d && "string" === typeof l.stack) {
      for (var e = l.stack.split("\n"), f = d.stack.split("\n"), g = e.length - 1, h = f.length - 1; 1 <= g && 0 <= h && e[g] !== f[h];) {
        h--;
      }
      for (; 1 <= g && 0 <= h; g--, h--) {
        if (e[g] !== f[h]) {
          if (1 !== g || 1 !== h) {
            do {
              if (g--, h--, 0 > h || e[g] !== f[h]) {
                var k = "\n" + e[g].replace(" at new ", " at ");
                a.displayName && k.includes("<anonymous>") && (k = k.replace("<anonymous>", a.displayName));
                return k;
              }
            } while (1 <= g && 0 <= h);
          }
          break;
        }
      }
    }
  } finally {
    Na = !1, Error.prepareStackTrace = c;
  }
  return (a = a ? a.displayName || a.name : "") ? Ma(a) : "";
}
function Pa(a) {
  switch (a.tag) {
    case 5:
      return Ma(a.type);
    case 16:
      return Ma("Lazy");
    case 13:
      return Ma("Suspense");
    case 19:
      return Ma("SuspenseList");
    case 0:
    case 2:
    case 15:
      return a = Oa(a.type, !1), a;
    case 11:
      return a = Oa(a.type.render, !1), a;
    case 1:
      return a = Oa(a.type, !0), a;
    default:
      return "";
  }
}
function Qa(a) {
  if (null == a) return null;
  if ("function" === typeof a) return a.displayName || a.name || null;
  if ("string" === typeof a) return a;
  switch (a) {
    case ya:
      return "Fragment";
    case wa:
      return "Portal";
    case Aa:
      return "Profiler";
    case za:
      return "StrictMode";
    case Ea:
      return "Suspense";
    case Fa:
      return "SuspenseList";
  }
  if ("object" === typeof a) switch (a.$$typeof) {
    case Ca:
      return (a.displayName || "Context") + ".Consumer";
    case Ba:
      return (a._context.displayName || "Context") + ".Provider";
    case Da:
      var b = a.render;
      a = a.displayName;
      a || (a = b.displayName || b.name || "", a = "" !== a ? "ForwardRef(" + a + ")" : "ForwardRef");
      return a;
    case Ga:
      return b = a.displayName || null, null !== b ? b : Qa(a.type) || "Memo";
    case Ha:
      b = a._payload;
      a = a._init;
      try {
        return Qa(a(b));
      } catch (c) {}
  }
  return null;
}
function Ra(a) {
  var b = a.type;
  switch (a.tag) {
    case 24:
      return "Cache";
    case 9:
      return (b.displayName || "Context") + ".Consumer";
    case 10:
      return (b._context.displayName || "Context") + ".Provider";
    case 18:
      return "DehydratedFragment";
    case 11:
      return a = b.render, a = a.displayName || a.name || "", b.displayName || ("" !== a ? "ForwardRef(" + a + ")" : "ForwardRef");
    case 7:
      return "Fragment";
    case 5:
      return b;
    case 4:
      return "Portal";
    case 3:
      return "Root";
    case 6:
      return "Text";
    case 16:
      return Qa(b);
    case 8:
      return b === za ? "StrictMode" : "Mode";
    case 22:
      return "Offscreen";
    case 12:
      return "Profiler";
    case 21:
      return "Scope";
    case 13:
      return "Suspense";
    case 19:
      return "SuspenseList";
    case 25:
      return "TracingMarker";
    case 1:
    case 0:
    case 17:
    case 2:
    case 14:
    case 15:
      if ("function" === typeof b) return b.displayName || b.name || null;
      if ("string" === typeof b) return b;
  }
  return null;
}
function Sa(a) {
  switch (typeof a) {
    case "boolean":
    case "number":
    case "string":
    case "undefined":
      return a;
    case "object":
      return a;
    default:
      return "";
  }
}
function Ta(a) {
  var b = a.type;
  return (a = a.nodeName) && "input" === a.toLowerCase() && ("checkbox" === b || "radio" === b);
}
function Ua(a) {
  var b = Ta(a) ? "checked" : "value",
    c = Object.getOwnPropertyDescriptor(a.constructor.prototype, b),
    d = "" + a[b];
  if (!a.hasOwnProperty(b) && "undefined" !== typeof c && "function" === typeof c.get && "function" === typeof c.set) {
    var e = c.get,
      f = c.set;
    Object.defineProperty(a, b, {
      configurable: !0,
      get: function get() {
        return e.call(this);
      },
      set: function set(a) {
        d = "" + a;
        f.call(this, a);
      }
    });
    Object.defineProperty(a, b, {
      enumerable: c.enumerable
    });
    return {
      getValue: function getValue() {
        return d;
      },
      setValue: function setValue(a) {
        d = "" + a;
      },
      stopTracking: function stopTracking() {
        a._valueTracker = null;
        delete a[b];
      }
    };
  }
}
function Va(a) {
  a._valueTracker || (a._valueTracker = Ua(a));
}
function Wa(a) {
  if (!a) return !1;
  var b = a._valueTracker;
  if (!b) return !0;
  var c = b.getValue();
  var d = "";
  a && (d = Ta(a) ? a.checked ? "true" : "false" : a.value);
  a = d;
  return a !== c ? (b.setValue(a), !0) : !1;
}
function Xa(a) {
  a = a || ("undefined" !== typeof document ? document : void 0);
  if ("undefined" === typeof a) return null;
  try {
    return a.activeElement || a.body;
  } catch (b) {
    return a.body;
  }
}
function Ya(a, b) {
  var c = b.checked;
  return A({}, b, {
    defaultChecked: void 0,
    defaultValue: void 0,
    value: void 0,
    checked: null != c ? c : a._wrapperState.initialChecked
  });
}
function Za(a, b) {
  var c = null == b.defaultValue ? "" : b.defaultValue,
    d = null != b.checked ? b.checked : b.defaultChecked;
  c = Sa(null != b.value ? b.value : c);
  a._wrapperState = {
    initialChecked: d,
    initialValue: c,
    controlled: "checkbox" === b.type || "radio" === b.type ? null != b.checked : null != b.value
  };
}
function ab(a, b) {
  b = b.checked;
  null != b && ta(a, "checked", b, !1);
}
function bb(a, b) {
  ab(a, b);
  var c = Sa(b.value),
    d = b.type;
  if (null != c) {
    if ("number" === d) {
      if (0 === c && "" === a.value || a.value != c) a.value = "" + c;
    } else a.value !== "" + c && (a.value = "" + c);
  } else if ("submit" === d || "reset" === d) {
    a.removeAttribute("value");
    return;
  }
  b.hasOwnProperty("value") ? cb(a, b.type, c) : b.hasOwnProperty("defaultValue") && cb(a, b.type, Sa(b.defaultValue));
  null == b.checked && null != b.defaultChecked && (a.defaultChecked = !!b.defaultChecked);
}
function db(a, b, c) {
  if (b.hasOwnProperty("value") || b.hasOwnProperty("defaultValue")) {
    var d = b.type;
    if (!("submit" !== d && "reset" !== d || void 0 !== b.value && null !== b.value)) return;
    b = "" + a._wrapperState.initialValue;
    c || b === a.value || (a.value = b);
    a.defaultValue = b;
  }
  c = a.name;
  "" !== c && (a.name = "");
  a.defaultChecked = !!a._wrapperState.initialChecked;
  "" !== c && (a.name = c);
}
function cb(a, b, c) {
  if ("number" !== b || Xa(a.ownerDocument) !== a) null == c ? a.defaultValue = "" + a._wrapperState.initialValue : a.defaultValue !== "" + c && (a.defaultValue = "" + c);
}
var eb = Array.isArray;
function fb(a, b, c, d) {
  a = a.options;
  if (b) {
    b = {};
    for (var e = 0; e < c.length; e++) {
      b["$" + c[e]] = !0;
    }
    for (c = 0; c < a.length; c++) {
      e = b.hasOwnProperty("$" + a[c].value), a[c].selected !== e && (a[c].selected = e), e && d && (a[c].defaultSelected = !0);
    }
  } else {
    c = "" + Sa(c);
    b = null;
    for (e = 0; e < a.length; e++) {
      if (a[e].value === c) {
        a[e].selected = !0;
        d && (a[e].defaultSelected = !0);
        return;
      }
      null !== b || a[e].disabled || (b = a[e]);
    }
    null !== b && (b.selected = !0);
  }
}
function gb(a, b) {
  if (null != b.dangerouslySetInnerHTML) throw Error(p(91));
  return A({}, b, {
    value: void 0,
    defaultValue: void 0,
    children: "" + a._wrapperState.initialValue
  });
}
function hb(a, b) {
  var c = b.value;
  if (null == c) {
    c = b.children;
    b = b.defaultValue;
    if (null != c) {
      if (null != b) throw Error(p(92));
      if (eb(c)) {
        if (1 < c.length) throw Error(p(93));
        c = c[0];
      }
      b = c;
    }
    null == b && (b = "");
    c = b;
  }
  a._wrapperState = {
    initialValue: Sa(c)
  };
}
function ib(a, b) {
  var c = Sa(b.value),
    d = Sa(b.defaultValue);
  null != c && (c = "" + c, c !== a.value && (a.value = c), null == b.defaultValue && a.defaultValue !== c && (a.defaultValue = c));
  null != d && (a.defaultValue = "" + d);
}
function jb(a) {
  var b = a.textContent;
  b === a._wrapperState.initialValue && "" !== b && null !== b && (a.value = b);
}
function kb(a) {
  switch (a) {
    case "svg":
      return "http://www.w3.org/2000/svg";
    case "math":
      return "http://www.w3.org/1998/Math/MathML";
    default:
      return "http://www.w3.org/1999/xhtml";
  }
}
function lb(a, b) {
  return null == a || "http://www.w3.org/1999/xhtml" === a ? kb(b) : "http://www.w3.org/2000/svg" === a && "foreignObject" === b ? "http://www.w3.org/1999/xhtml" : a;
}
var mb,
  nb = function (a) {
    return "undefined" !== typeof MSApp && MSApp.execUnsafeLocalFunction ? function (b, c, d, e) {
      MSApp.execUnsafeLocalFunction(function () {
        return a(b, c, d, e);
      });
    } : a;
  }(function (a, b) {
    if ("http://www.w3.org/2000/svg" !== a.namespaceURI || "innerHTML" in a) a.innerHTML = b;else {
      mb = mb || document.createElement("div");
      mb.innerHTML = "<svg>" + b.valueOf().toString() + "</svg>";
      for (b = mb.firstChild; a.firstChild;) {
        a.removeChild(a.firstChild);
      }
      for (; b.firstChild;) {
        a.appendChild(b.firstChild);
      }
    }
  });
function ob(a, b) {
  if (b) {
    var c = a.firstChild;
    if (c && c === a.lastChild && 3 === c.nodeType) {
      c.nodeValue = b;
      return;
    }
  }
  a.textContent = b;
}
var pb = {
    animationIterationCount: !0,
    aspectRatio: !0,
    borderImageOutset: !0,
    borderImageSlice: !0,
    borderImageWidth: !0,
    boxFlex: !0,
    boxFlexGroup: !0,
    boxOrdinalGroup: !0,
    columnCount: !0,
    columns: !0,
    flex: !0,
    flexGrow: !0,
    flexPositive: !0,
    flexShrink: !0,
    flexNegative: !0,
    flexOrder: !0,
    gridArea: !0,
    gridRow: !0,
    gridRowEnd: !0,
    gridRowSpan: !0,
    gridRowStart: !0,
    gridColumn: !0,
    gridColumnEnd: !0,
    gridColumnSpan: !0,
    gridColumnStart: !0,
    fontWeight: !0,
    lineClamp: !0,
    lineHeight: !0,
    opacity: !0,
    order: !0,
    orphans: !0,
    tabSize: !0,
    widows: !0,
    zIndex: !0,
    zoom: !0,
    fillOpacity: !0,
    floodOpacity: !0,
    stopOpacity: !0,
    strokeDasharray: !0,
    strokeDashoffset: !0,
    strokeMiterlimit: !0,
    strokeOpacity: !0,
    strokeWidth: !0
  },
  qb = ["Webkit", "ms", "Moz", "O"];
Object.keys(pb).forEach(function (a) {
  qb.forEach(function (b) {
    b = b + a.charAt(0).toUpperCase() + a.substring(1);
    pb[b] = pb[a];
  });
});
function rb(a, b, c) {
  return null == b || "boolean" === typeof b || "" === b ? "" : c || "number" !== typeof b || 0 === b || pb.hasOwnProperty(a) && pb[a] ? ("" + b).trim() : b + "px";
}
function sb(a, b) {
  a = a.style;
  for (var c in b) {
    if (b.hasOwnProperty(c)) {
      var d = 0 === c.indexOf("--"),
        e = rb(c, b[c], d);
      "float" === c && (c = "cssFloat");
      d ? a.setProperty(c, e) : a[c] = e;
    }
  }
}
var tb = A({
  menuitem: !0
}, {
  area: !0,
  base: !0,
  br: !0,
  col: !0,
  embed: !0,
  hr: !0,
  img: !0,
  input: !0,
  keygen: !0,
  link: !0,
  meta: !0,
  param: !0,
  source: !0,
  track: !0,
  wbr: !0
});
function ub(a, b) {
  if (b) {
    if (tb[a] && (null != b.children || null != b.dangerouslySetInnerHTML)) throw Error(p(137, a));
    if (null != b.dangerouslySetInnerHTML) {
      if (null != b.children) throw Error(p(60));
      if ("object" !== typeof b.dangerouslySetInnerHTML || !("__html" in b.dangerouslySetInnerHTML)) throw Error(p(61));
    }
    if (null != b.style && "object" !== typeof b.style) throw Error(p(62));
  }
}
function vb(a, b) {
  if (-1 === a.indexOf("-")) return "string" === typeof b.is;
  switch (a) {
    case "annotation-xml":
    case "color-profile":
    case "font-face":
    case "font-face-src":
    case "font-face-uri":
    case "font-face-format":
    case "font-face-name":
    case "missing-glyph":
      return !1;
    default:
      return !0;
  }
}
var wb = null;
function xb(a) {
  a = a.target || a.srcElement || window;
  a.correspondingUseElement && (a = a.correspondingUseElement);
  return 3 === a.nodeType ? a.parentNode : a;
}
var yb = null,
  zb = null,
  Ab = null;
function Bb(a) {
  if (a = Cb(a)) {
    if ("function" !== typeof yb) throw Error(p(280));
    var b = a.stateNode;
    b && (b = Db(b), yb(a.stateNode, a.type, b));
  }
}
function Eb(a) {
  zb ? Ab ? Ab.push(a) : Ab = [a] : zb = a;
}
function Fb() {
  if (zb) {
    var a = zb,
      b = Ab;
    Ab = zb = null;
    Bb(a);
    if (b) for (a = 0; a < b.length; a++) {
      Bb(b[a]);
    }
  }
}
function Gb(a, b) {
  return a(b);
}
function Hb() {}
var Ib = !1;
function Jb(a, b, c) {
  if (Ib) return a(b, c);
  Ib = !0;
  try {
    return Gb(a, b, c);
  } finally {
    if (Ib = !1, null !== zb || null !== Ab) Hb(), Fb();
  }
}
function Kb(a, b) {
  var c = a.stateNode;
  if (null === c) return null;
  var d = Db(c);
  if (null === d) return null;
  c = d[b];
  a: switch (b) {
    case "onClick":
    case "onClickCapture":
    case "onDoubleClick":
    case "onDoubleClickCapture":
    case "onMouseDown":
    case "onMouseDownCapture":
    case "onMouseMove":
    case "onMouseMoveCapture":
    case "onMouseUp":
    case "onMouseUpCapture":
    case "onMouseEnter":
      (d = !d.disabled) || (a = a.type, d = !("button" === a || "input" === a || "select" === a || "textarea" === a));
      a = !d;
      break a;
    default:
      a = !1;
  }
  if (a) return null;
  if (c && "function" !== typeof c) throw Error(p(231, b, typeof c));
  return c;
}
var Lb = !1;
if (ia) try {
  var Mb = {};
  Object.defineProperty(Mb, "passive", {
    get: function get() {
      Lb = !0;
    }
  });
  window.addEventListener("test", Mb, Mb);
  window.removeEventListener("test", Mb, Mb);
} catch (a) {
  Lb = !1;
}
function Nb(a, b, c, d, e, f, g, h, k) {
  var l = Array.prototype.slice.call(arguments, 3);
  try {
    b.apply(c, l);
  } catch (m) {
    this.onError(m);
  }
}
var Ob = !1,
  Pb = null,
  Qb = !1,
  Rb = null,
  Sb = {
    onError: function onError(a) {
      Ob = !0;
      Pb = a;
    }
  };
function Tb(a, b, c, d, e, f, g, h, k) {
  Ob = !1;
  Pb = null;
  Nb.apply(Sb, arguments);
}
function Ub(a, b, c, d, e, f, g, h, k) {
  Tb.apply(this, arguments);
  if (Ob) {
    if (Ob) {
      var l = Pb;
      Ob = !1;
      Pb = null;
    } else throw Error(p(198));
    Qb || (Qb = !0, Rb = l);
  }
}
function Vb(a) {
  var b = a,
    c = a;
  if (a.alternate) for (; b.return;) {
    b = b.return;
  } else {
    a = b;
    do {
      b = a, 0 !== (b.flags & 4098) && (c = b.return), a = b.return;
    } while (a);
  }
  return 3 === b.tag ? c : null;
}
function Wb(a) {
  if (13 === a.tag) {
    var b = a.memoizedState;
    null === b && (a = a.alternate, null !== a && (b = a.memoizedState));
    if (null !== b) return b.dehydrated;
  }
  return null;
}
function Xb(a) {
  if (Vb(a) !== a) throw Error(p(188));
}
function Yb(a) {
  var b = a.alternate;
  if (!b) {
    b = Vb(a);
    if (null === b) throw Error(p(188));
    return b !== a ? null : a;
  }
  for (var c = a, d = b;;) {
    var e = c.return;
    if (null === e) break;
    var f = e.alternate;
    if (null === f) {
      d = e.return;
      if (null !== d) {
        c = d;
        continue;
      }
      break;
    }
    if (e.child === f.child) {
      for (f = e.child; f;) {
        if (f === c) return Xb(e), a;
        if (f === d) return Xb(e), b;
        f = f.sibling;
      }
      throw Error(p(188));
    }
    if (c.return !== d.return) c = e, d = f;else {
      for (var g = !1, h = e.child; h;) {
        if (h === c) {
          g = !0;
          c = e;
          d = f;
          break;
        }
        if (h === d) {
          g = !0;
          d = e;
          c = f;
          break;
        }
        h = h.sibling;
      }
      if (!g) {
        for (h = f.child; h;) {
          if (h === c) {
            g = !0;
            c = f;
            d = e;
            break;
          }
          if (h === d) {
            g = !0;
            d = f;
            c = e;
            break;
          }
          h = h.sibling;
        }
        if (!g) throw Error(p(189));
      }
    }
    if (c.alternate !== d) throw Error(p(190));
  }
  if (3 !== c.tag) throw Error(p(188));
  return c.stateNode.current === c ? a : b;
}
function Zb(a) {
  a = Yb(a);
  return null !== a ? $b(a) : null;
}
function $b(a) {
  if (5 === a.tag || 6 === a.tag) return a;
  for (a = a.child; null !== a;) {
    var b = $b(a);
    if (null !== b) return b;
    a = a.sibling;
  }
  return null;
}
var ac = ca.unstable_scheduleCallback,
  bc = ca.unstable_cancelCallback,
  cc = ca.unstable_shouldYield,
  dc = ca.unstable_requestPaint,
  B = ca.unstable_now,
  ec = ca.unstable_getCurrentPriorityLevel,
  fc = ca.unstable_ImmediatePriority,
  gc = ca.unstable_UserBlockingPriority,
  hc = ca.unstable_NormalPriority,
  ic = ca.unstable_LowPriority,
  jc = ca.unstable_IdlePriority,
  kc = null,
  lc = null;
function mc(a) {
  if (lc && "function" === typeof lc.onCommitFiberRoot) try {
    lc.onCommitFiberRoot(kc, a, void 0, 128 === (a.current.flags & 128));
  } catch (b) {}
}
var oc = Math.clz32 ? Math.clz32 : nc,
  pc = Math.log,
  qc = Math.LN2;
function nc(a) {
  a >>>= 0;
  return 0 === a ? 32 : 31 - (pc(a) / qc | 0) | 0;
}
var rc = 64,
  sc = 4194304;
function tc(a) {
  switch (a & -a) {
    case 1:
      return 1;
    case 2:
      return 2;
    case 4:
      return 4;
    case 8:
      return 8;
    case 16:
      return 16;
    case 32:
      return 32;
    case 64:
    case 128:
    case 256:
    case 512:
    case 1024:
    case 2048:
    case 4096:
    case 8192:
    case 16384:
    case 32768:
    case 65536:
    case 131072:
    case 262144:
    case 524288:
    case 1048576:
    case 2097152:
      return a & 4194240;
    case 4194304:
    case 8388608:
    case 16777216:
    case 33554432:
    case 67108864:
      return a & 130023424;
    case 134217728:
      return 134217728;
    case 268435456:
      return 268435456;
    case 536870912:
      return 536870912;
    case 1073741824:
      return 1073741824;
    default:
      return a;
  }
}
function uc(a, b) {
  var c = a.pendingLanes;
  if (0 === c) return 0;
  var d = 0,
    e = a.suspendedLanes,
    f = a.pingedLanes,
    g = c & 268435455;
  if (0 !== g) {
    var h = g & ~e;
    0 !== h ? d = tc(h) : (f &= g, 0 !== f && (d = tc(f)));
  } else g = c & ~e, 0 !== g ? d = tc(g) : 0 !== f && (d = tc(f));
  if (0 === d) return 0;
  if (0 !== b && b !== d && 0 === (b & e) && (e = d & -d, f = b & -b, e >= f || 16 === e && 0 !== (f & 4194240))) return b;
  0 !== (d & 4) && (d |= c & 16);
  b = a.entangledLanes;
  if (0 !== b) for (a = a.entanglements, b &= d; 0 < b;) {
    c = 31 - oc(b), e = 1 << c, d |= a[c], b &= ~e;
  }
  return d;
}
function vc(a, b) {
  switch (a) {
    case 1:
    case 2:
    case 4:
      return b + 250;
    case 8:
    case 16:
    case 32:
    case 64:
    case 128:
    case 256:
    case 512:
    case 1024:
    case 2048:
    case 4096:
    case 8192:
    case 16384:
    case 32768:
    case 65536:
    case 131072:
    case 262144:
    case 524288:
    case 1048576:
    case 2097152:
      return b + 5E3;
    case 4194304:
    case 8388608:
    case 16777216:
    case 33554432:
    case 67108864:
      return -1;
    case 134217728:
    case 268435456:
    case 536870912:
    case 1073741824:
      return -1;
    default:
      return -1;
  }
}
function wc(a, b) {
  for (var c = a.suspendedLanes, d = a.pingedLanes, e = a.expirationTimes, f = a.pendingLanes; 0 < f;) {
    var g = 31 - oc(f),
      h = 1 << g,
      k = e[g];
    if (-1 === k) {
      if (0 === (h & c) || 0 !== (h & d)) e[g] = vc(h, b);
    } else k <= b && (a.expiredLanes |= h);
    f &= ~h;
  }
}
function xc(a) {
  a = a.pendingLanes & -1073741825;
  return 0 !== a ? a : a & 1073741824 ? 1073741824 : 0;
}
function yc() {
  var a = rc;
  rc <<= 1;
  0 === (rc & 4194240) && (rc = 64);
  return a;
}
function zc(a) {
  for (var b = [], c = 0; 31 > c; c++) {
    b.push(a);
  }
  return b;
}
function Ac(a, b, c) {
  a.pendingLanes |= b;
  536870912 !== b && (a.suspendedLanes = 0, a.pingedLanes = 0);
  a = a.eventTimes;
  b = 31 - oc(b);
  a[b] = c;
}
function Bc(a, b) {
  var c = a.pendingLanes & ~b;
  a.pendingLanes = b;
  a.suspendedLanes = 0;
  a.pingedLanes = 0;
  a.expiredLanes &= b;
  a.mutableReadLanes &= b;
  a.entangledLanes &= b;
  b = a.entanglements;
  var d = a.eventTimes;
  for (a = a.expirationTimes; 0 < c;) {
    var e = 31 - oc(c),
      f = 1 << e;
    b[e] = 0;
    d[e] = -1;
    a[e] = -1;
    c &= ~f;
  }
}
function Cc(a, b) {
  var c = a.entangledLanes |= b;
  for (a = a.entanglements; c;) {
    var d = 31 - oc(c),
      e = 1 << d;
    e & b | a[d] & b && (a[d] |= b);
    c &= ~e;
  }
}
var C = 0;
function Dc(a) {
  a &= -a;
  return 1 < a ? 4 < a ? 0 !== (a & 268435455) ? 16 : 536870912 : 4 : 1;
}
var Ec,
  Fc,
  Gc,
  Hc,
  Ic,
  Jc = !1,
  Kc = [],
  Lc = null,
  Mc = null,
  Nc = null,
  Oc = new Map(),
  Pc = new Map(),
  Qc = [],
  Rc = "mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput copy cut paste click change contextmenu reset submit".split(" ");
function Sc(a, b) {
  switch (a) {
    case "focusin":
    case "focusout":
      Lc = null;
      break;
    case "dragenter":
    case "dragleave":
      Mc = null;
      break;
    case "mouseover":
    case "mouseout":
      Nc = null;
      break;
    case "pointerover":
    case "pointerout":
      Oc.delete(b.pointerId);
      break;
    case "gotpointercapture":
    case "lostpointercapture":
      Pc.delete(b.pointerId);
  }
}
function Tc(a, b, c, d, e, f) {
  if (null === a || a.nativeEvent !== f) return a = {
    blockedOn: b,
    domEventName: c,
    eventSystemFlags: d,
    nativeEvent: f,
    targetContainers: [e]
  }, null !== b && (b = Cb(b), null !== b && Fc(b)), a;
  a.eventSystemFlags |= d;
  b = a.targetContainers;
  null !== e && -1 === b.indexOf(e) && b.push(e);
  return a;
}
function Uc(a, b, c, d, e) {
  switch (b) {
    case "focusin":
      return Lc = Tc(Lc, a, b, c, d, e), !0;
    case "dragenter":
      return Mc = Tc(Mc, a, b, c, d, e), !0;
    case "mouseover":
      return Nc = Tc(Nc, a, b, c, d, e), !0;
    case "pointerover":
      var f = e.pointerId;
      Oc.set(f, Tc(Oc.get(f) || null, a, b, c, d, e));
      return !0;
    case "gotpointercapture":
      return f = e.pointerId, Pc.set(f, Tc(Pc.get(f) || null, a, b, c, d, e)), !0;
  }
  return !1;
}
function Vc(a) {
  var b = Wc(a.target);
  if (null !== b) {
    var c = Vb(b);
    if (null !== c) if (b = c.tag, 13 === b) {
      if (b = Wb(c), null !== b) {
        a.blockedOn = b;
        Ic(a.priority, function () {
          Gc(c);
        });
        return;
      }
    } else if (3 === b && c.stateNode.current.memoizedState.isDehydrated) {
      a.blockedOn = 3 === c.tag ? c.stateNode.containerInfo : null;
      return;
    }
  }
  a.blockedOn = null;
}
function Xc(a) {
  if (null !== a.blockedOn) return !1;
  for (var b = a.targetContainers; 0 < b.length;) {
    var c = Yc(a.domEventName, a.eventSystemFlags, b[0], a.nativeEvent);
    if (null === c) {
      c = a.nativeEvent;
      var d = new c.constructor(c.type, c);
      wb = d;
      c.target.dispatchEvent(d);
      wb = null;
    } else return b = Cb(c), null !== b && Fc(b), a.blockedOn = c, !1;
    b.shift();
  }
  return !0;
}
function Zc(a, b, c) {
  Xc(a) && c.delete(b);
}
function $c() {
  Jc = !1;
  null !== Lc && Xc(Lc) && (Lc = null);
  null !== Mc && Xc(Mc) && (Mc = null);
  null !== Nc && Xc(Nc) && (Nc = null);
  Oc.forEach(Zc);
  Pc.forEach(Zc);
}
function ad(a, b) {
  a.blockedOn === b && (a.blockedOn = null, Jc || (Jc = !0, ca.unstable_scheduleCallback(ca.unstable_NormalPriority, $c)));
}
function bd(a) {
  function b(b) {
    return ad(b, a);
  }
  if (0 < Kc.length) {
    ad(Kc[0], a);
    for (var c = 1; c < Kc.length; c++) {
      var d = Kc[c];
      d.blockedOn === a && (d.blockedOn = null);
    }
  }
  null !== Lc && ad(Lc, a);
  null !== Mc && ad(Mc, a);
  null !== Nc && ad(Nc, a);
  Oc.forEach(b);
  Pc.forEach(b);
  for (c = 0; c < Qc.length; c++) {
    d = Qc[c], d.blockedOn === a && (d.blockedOn = null);
  }
  for (; 0 < Qc.length && (c = Qc[0], null === c.blockedOn);) {
    Vc(c), null === c.blockedOn && Qc.shift();
  }
}
var cd = ua.ReactCurrentBatchConfig,
  dd = !0;
function ed(a, b, c, d) {
  var e = C,
    f = cd.transition;
  cd.transition = null;
  try {
    C = 1, fd(a, b, c, d);
  } finally {
    C = e, cd.transition = f;
  }
}
function gd(a, b, c, d) {
  var e = C,
    f = cd.transition;
  cd.transition = null;
  try {
    C = 4, fd(a, b, c, d);
  } finally {
    C = e, cd.transition = f;
  }
}
function fd(a, b, c, d) {
  if (dd) {
    var e = Yc(a, b, c, d);
    if (null === e) hd(a, b, d, id, c), Sc(a, d);else if (Uc(e, a, b, c, d)) d.stopPropagation();else if (Sc(a, d), b & 4 && -1 < Rc.indexOf(a)) {
      for (; null !== e;) {
        var f = Cb(e);
        null !== f && Ec(f);
        f = Yc(a, b, c, d);
        null === f && hd(a, b, d, id, c);
        if (f === e) break;
        e = f;
      }
      null !== e && d.stopPropagation();
    } else hd(a, b, d, null, c);
  }
}
var id = null;
function Yc(a, b, c, d) {
  id = null;
  a = xb(d);
  a = Wc(a);
  if (null !== a) if (b = Vb(a), null === b) a = null;else if (c = b.tag, 13 === c) {
    a = Wb(b);
    if (null !== a) return a;
    a = null;
  } else if (3 === c) {
    if (b.stateNode.current.memoizedState.isDehydrated) return 3 === b.tag ? b.stateNode.containerInfo : null;
    a = null;
  } else b !== a && (a = null);
  id = a;
  return null;
}
function jd(a) {
  switch (a) {
    case "cancel":
    case "click":
    case "close":
    case "contextmenu":
    case "copy":
    case "cut":
    case "auxclick":
    case "dblclick":
    case "dragend":
    case "dragstart":
    case "drop":
    case "focusin":
    case "focusout":
    case "input":
    case "invalid":
    case "keydown":
    case "keypress":
    case "keyup":
    case "mousedown":
    case "mouseup":
    case "paste":
    case "pause":
    case "play":
    case "pointercancel":
    case "pointerdown":
    case "pointerup":
    case "ratechange":
    case "reset":
    case "resize":
    case "seeked":
    case "submit":
    case "touchcancel":
    case "touchend":
    case "touchstart":
    case "volumechange":
    case "change":
    case "selectionchange":
    case "textInput":
    case "compositionstart":
    case "compositionend":
    case "compositionupdate":
    case "beforeblur":
    case "afterblur":
    case "beforeinput":
    case "blur":
    case "fullscreenchange":
    case "focus":
    case "hashchange":
    case "popstate":
    case "select":
    case "selectstart":
      return 1;
    case "drag":
    case "dragenter":
    case "dragexit":
    case "dragleave":
    case "dragover":
    case "mousemove":
    case "mouseout":
    case "mouseover":
    case "pointermove":
    case "pointerout":
    case "pointerover":
    case "scroll":
    case "toggle":
    case "touchmove":
    case "wheel":
    case "mouseenter":
    case "mouseleave":
    case "pointerenter":
    case "pointerleave":
      return 4;
    case "message":
      switch (ec()) {
        case fc:
          return 1;
        case gc:
          return 4;
        case hc:
        case ic:
          return 16;
        case jc:
          return 536870912;
        default:
          return 16;
      }
    default:
      return 16;
  }
}
var kd = null,
  ld = null,
  md = null;
function nd() {
  if (md) return md;
  var a,
    b = ld,
    c = b.length,
    d,
    e = "value" in kd ? kd.value : kd.textContent,
    f = e.length;
  for (a = 0; a < c && b[a] === e[a]; a++) {
    ;
  }
  var g = c - a;
  for (d = 1; d <= g && b[c - d] === e[f - d]; d++) {
    ;
  }
  return md = e.slice(a, 1 < d ? 1 - d : void 0);
}
function od(a) {
  var b = a.keyCode;
  "charCode" in a ? (a = a.charCode, 0 === a && 13 === b && (a = 13)) : a = b;
  10 === a && (a = 13);
  return 32 <= a || 13 === a ? a : 0;
}
function pd() {
  return !0;
}
function qd() {
  return !1;
}
function rd(a) {
  function b(b, d, e, f, g) {
    this._reactName = b;
    this._targetInst = e;
    this.type = d;
    this.nativeEvent = f;
    this.target = g;
    this.currentTarget = null;
    for (var c in a) {
      a.hasOwnProperty(c) && (b = a[c], this[c] = b ? b(f) : f[c]);
    }
    this.isDefaultPrevented = (null != f.defaultPrevented ? f.defaultPrevented : !1 === f.returnValue) ? pd : qd;
    this.isPropagationStopped = qd;
    return this;
  }
  A(b.prototype, {
    preventDefault: function preventDefault() {
      this.defaultPrevented = !0;
      var a = this.nativeEvent;
      a && (a.preventDefault ? a.preventDefault() : "unknown" !== typeof a.returnValue && (a.returnValue = !1), this.isDefaultPrevented = pd);
    },
    stopPropagation: function stopPropagation() {
      var a = this.nativeEvent;
      a && (a.stopPropagation ? a.stopPropagation() : "unknown" !== typeof a.cancelBubble && (a.cancelBubble = !0), this.isPropagationStopped = pd);
    },
    persist: function persist() {},
    isPersistent: pd
  });
  return b;
}
var sd = {
    eventPhase: 0,
    bubbles: 0,
    cancelable: 0,
    timeStamp: function timeStamp(a) {
      return a.timeStamp || Date.now();
    },
    defaultPrevented: 0,
    isTrusted: 0
  },
  td = rd(sd),
  ud = A({}, sd, {
    view: 0,
    detail: 0
  }),
  vd = rd(ud),
  wd,
  xd,
  yd,
  Ad = A({}, ud, {
    screenX: 0,
    screenY: 0,
    clientX: 0,
    clientY: 0,
    pageX: 0,
    pageY: 0,
    ctrlKey: 0,
    shiftKey: 0,
    altKey: 0,
    metaKey: 0,
    getModifierState: zd,
    button: 0,
    buttons: 0,
    relatedTarget: function relatedTarget(a) {
      return void 0 === a.relatedTarget ? a.fromElement === a.srcElement ? a.toElement : a.fromElement : a.relatedTarget;
    },
    movementX: function movementX(a) {
      if ("movementX" in a) return a.movementX;
      a !== yd && (yd && "mousemove" === a.type ? (wd = a.screenX - yd.screenX, xd = a.screenY - yd.screenY) : xd = wd = 0, yd = a);
      return wd;
    },
    movementY: function movementY(a) {
      return "movementY" in a ? a.movementY : xd;
    }
  }),
  Bd = rd(Ad),
  Cd = A({}, Ad, {
    dataTransfer: 0
  }),
  Dd = rd(Cd),
  Ed = A({}, ud, {
    relatedTarget: 0
  }),
  Fd = rd(Ed),
  Gd = A({}, sd, {
    animationName: 0,
    elapsedTime: 0,
    pseudoElement: 0
  }),
  Hd = rd(Gd),
  Id = A({}, sd, {
    clipboardData: function clipboardData(a) {
      return "clipboardData" in a ? a.clipboardData : window.clipboardData;
    }
  }),
  Jd = rd(Id),
  Kd = A({}, sd, {
    data: 0
  }),
  Ld = rd(Kd),
  Md = {
    Esc: "Escape",
    Spacebar: " ",
    Left: "ArrowLeft",
    Up: "ArrowUp",
    Right: "ArrowRight",
    Down: "ArrowDown",
    Del: "Delete",
    Win: "OS",
    Menu: "ContextMenu",
    Apps: "ContextMenu",
    Scroll: "ScrollLock",
    MozPrintableKey: "Unidentified"
  },
  Nd = {
    8: "Backspace",
    9: "Tab",
    12: "Clear",
    13: "Enter",
    16: "Shift",
    17: "Control",
    18: "Alt",
    19: "Pause",
    20: "CapsLock",
    27: "Escape",
    32: " ",
    33: "PageUp",
    34: "PageDown",
    35: "End",
    36: "Home",
    37: "ArrowLeft",
    38: "ArrowUp",
    39: "ArrowRight",
    40: "ArrowDown",
    45: "Insert",
    46: "Delete",
    112: "F1",
    113: "F2",
    114: "F3",
    115: "F4",
    116: "F5",
    117: "F6",
    118: "F7",
    119: "F8",
    120: "F9",
    121: "F10",
    122: "F11",
    123: "F12",
    144: "NumLock",
    145: "ScrollLock",
    224: "Meta"
  },
  Od = {
    Alt: "altKey",
    Control: "ctrlKey",
    Meta: "metaKey",
    Shift: "shiftKey"
  };
function Pd(a) {
  var b = this.nativeEvent;
  return b.getModifierState ? b.getModifierState(a) : (a = Od[a]) ? !!b[a] : !1;
}
function zd() {
  return Pd;
}
var Qd = A({}, ud, {
    key: function key(a) {
      if (a.key) {
        var b = Md[a.key] || a.key;
        if ("Unidentified" !== b) return b;
      }
      return "keypress" === a.type ? (a = od(a), 13 === a ? "Enter" : String.fromCharCode(a)) : "keydown" === a.type || "keyup" === a.type ? Nd[a.keyCode] || "Unidentified" : "";
    },
    code: 0,
    location: 0,
    ctrlKey: 0,
    shiftKey: 0,
    altKey: 0,
    metaKey: 0,
    repeat: 0,
    locale: 0,
    getModifierState: zd,
    charCode: function charCode(a) {
      return "keypress" === a.type ? od(a) : 0;
    },
    keyCode: function keyCode(a) {
      return "keydown" === a.type || "keyup" === a.type ? a.keyCode : 0;
    },
    which: function which(a) {
      return "keypress" === a.type ? od(a) : "keydown" === a.type || "keyup" === a.type ? a.keyCode : 0;
    }
  }),
  Rd = rd(Qd),
  Sd = A({}, Ad, {
    pointerId: 0,
    width: 0,
    height: 0,
    pressure: 0,
    tangentialPressure: 0,
    tiltX: 0,
    tiltY: 0,
    twist: 0,
    pointerType: 0,
    isPrimary: 0
  }),
  Td = rd(Sd),
  Ud = A({}, ud, {
    touches: 0,
    targetTouches: 0,
    changedTouches: 0,
    altKey: 0,
    metaKey: 0,
    ctrlKey: 0,
    shiftKey: 0,
    getModifierState: zd
  }),
  Vd = rd(Ud),
  Wd = A({}, sd, {
    propertyName: 0,
    elapsedTime: 0,
    pseudoElement: 0
  }),
  Xd = rd(Wd),
  Yd = A({}, Ad, {
    deltaX: function deltaX(a) {
      return "deltaX" in a ? a.deltaX : "wheelDeltaX" in a ? -a.wheelDeltaX : 0;
    },
    deltaY: function deltaY(a) {
      return "deltaY" in a ? a.deltaY : "wheelDeltaY" in a ? -a.wheelDeltaY : "wheelDelta" in a ? -a.wheelDelta : 0;
    },
    deltaZ: 0,
    deltaMode: 0
  }),
  Zd = rd(Yd),
  $d = [9, 13, 27, 32],
  ae = ia && "CompositionEvent" in window,
  be = null;
ia && "documentMode" in document && (be = document.documentMode);
var ce = ia && "TextEvent" in window && !be,
  de = ia && (!ae || be && 8 < be && 11 >= be),
  ee = String.fromCharCode(32),
  fe = !1;
function ge(a, b) {
  switch (a) {
    case "keyup":
      return -1 !== $d.indexOf(b.keyCode);
    case "keydown":
      return 229 !== b.keyCode;
    case "keypress":
    case "mousedown":
    case "focusout":
      return !0;
    default:
      return !1;
  }
}
function he(a) {
  a = a.detail;
  return "object" === typeof a && "data" in a ? a.data : null;
}
var ie = !1;
function je(a, b) {
  switch (a) {
    case "compositionend":
      return he(b);
    case "keypress":
      if (32 !== b.which) return null;
      fe = !0;
      return ee;
    case "textInput":
      return a = b.data, a === ee && fe ? null : a;
    default:
      return null;
  }
}
function ke(a, b) {
  if (ie) return "compositionend" === a || !ae && ge(a, b) ? (a = nd(), md = ld = kd = null, ie = !1, a) : null;
  switch (a) {
    case "paste":
      return null;
    case "keypress":
      if (!(b.ctrlKey || b.altKey || b.metaKey) || b.ctrlKey && b.altKey) {
        if (b.char && 1 < b.char.length) return b.char;
        if (b.which) return String.fromCharCode(b.which);
      }
      return null;
    case "compositionend":
      return de && "ko" !== b.locale ? null : b.data;
    default:
      return null;
  }
}
var le = {
  color: !0,
  date: !0,
  datetime: !0,
  "datetime-local": !0,
  email: !0,
  month: !0,
  number: !0,
  password: !0,
  range: !0,
  search: !0,
  tel: !0,
  text: !0,
  time: !0,
  url: !0,
  week: !0
};
function me(a) {
  var b = a && a.nodeName && a.nodeName.toLowerCase();
  return "input" === b ? !!le[a.type] : "textarea" === b ? !0 : !1;
}
function ne(a, b, c, d) {
  Eb(d);
  b = oe(b, "onChange");
  0 < b.length && (c = new td("onChange", "change", null, c, d), a.push({
    event: c,
    listeners: b
  }));
}
var pe = null,
  qe = null;
function re(a) {
  se(a, 0);
}
function te(a) {
  var b = ue(a);
  if (Wa(b)) return a;
}
function ve(a, b) {
  if ("change" === a) return b;
}
var we = !1;
if (ia) {
  var xe;
  if (ia) {
    var ye = ("oninput" in document);
    if (!ye) {
      var ze = document.createElement("div");
      ze.setAttribute("oninput", "return;");
      ye = "function" === typeof ze.oninput;
    }
    xe = ye;
  } else xe = !1;
  we = xe && (!document.documentMode || 9 < document.documentMode);
}
function Ae() {
  pe && (pe.detachEvent("onpropertychange", Be), qe = pe = null);
}
function Be(a) {
  if ("value" === a.propertyName && te(qe)) {
    var b = [];
    ne(b, qe, a, xb(a));
    Jb(re, b);
  }
}
function Ce(a, b, c) {
  "focusin" === a ? (Ae(), pe = b, qe = c, pe.attachEvent("onpropertychange", Be)) : "focusout" === a && Ae();
}
function De(a) {
  if ("selectionchange" === a || "keyup" === a || "keydown" === a) return te(qe);
}
function Ee(a, b) {
  if ("click" === a) return te(b);
}
function Fe(a, b) {
  if ("input" === a || "change" === a) return te(b);
}
function Ge(a, b) {
  return a === b && (0 !== a || 1 / a === 1 / b) || a !== a && b !== b;
}
var He = "function" === typeof Object.is ? Object.is : Ge;
function Ie(a, b) {
  if (He(a, b)) return !0;
  if ("object" !== typeof a || null === a || "object" !== typeof b || null === b) return !1;
  var c = Object.keys(a),
    d = Object.keys(b);
  if (c.length !== d.length) return !1;
  for (d = 0; d < c.length; d++) {
    var e = c[d];
    if (!ja.call(b, e) || !He(a[e], b[e])) return !1;
  }
  return !0;
}
function Je(a) {
  for (; a && a.firstChild;) {
    a = a.firstChild;
  }
  return a;
}
function Ke(a, b) {
  var c = Je(a);
  a = 0;
  for (var d; c;) {
    if (3 === c.nodeType) {
      d = a + c.textContent.length;
      if (a <= b && d >= b) return {
        node: c,
        offset: b - a
      };
      a = d;
    }
    a: {
      for (; c;) {
        if (c.nextSibling) {
          c = c.nextSibling;
          break a;
        }
        c = c.parentNode;
      }
      c = void 0;
    }
    c = Je(c);
  }
}
function Le(a, b) {
  return a && b ? a === b ? !0 : a && 3 === a.nodeType ? !1 : b && 3 === b.nodeType ? Le(a, b.parentNode) : "contains" in a ? a.contains(b) : a.compareDocumentPosition ? !!(a.compareDocumentPosition(b) & 16) : !1 : !1;
}
function Me() {
  for (var a = window, b = Xa(); b instanceof a.HTMLIFrameElement;) {
    try {
      var c = "string" === typeof b.contentWindow.location.href;
    } catch (d) {
      c = !1;
    }
    if (c) a = b.contentWindow;else break;
    b = Xa(a.document);
  }
  return b;
}
function Ne(a) {
  var b = a && a.nodeName && a.nodeName.toLowerCase();
  return b && ("input" === b && ("text" === a.type || "search" === a.type || "tel" === a.type || "url" === a.type || "password" === a.type) || "textarea" === b || "true" === a.contentEditable);
}
function Oe(a) {
  var b = Me(),
    c = a.focusedElem,
    d = a.selectionRange;
  if (b !== c && c && c.ownerDocument && Le(c.ownerDocument.documentElement, c)) {
    if (null !== d && Ne(c)) if (b = d.start, a = d.end, void 0 === a && (a = b), "selectionStart" in c) c.selectionStart = b, c.selectionEnd = Math.min(a, c.value.length);else if (a = (b = c.ownerDocument || document) && b.defaultView || window, a.getSelection) {
      a = a.getSelection();
      var e = c.textContent.length,
        f = Math.min(d.start, e);
      d = void 0 === d.end ? f : Math.min(d.end, e);
      !a.extend && f > d && (e = d, d = f, f = e);
      e = Ke(c, f);
      var g = Ke(c, d);
      e && g && (1 !== a.rangeCount || a.anchorNode !== e.node || a.anchorOffset !== e.offset || a.focusNode !== g.node || a.focusOffset !== g.offset) && (b = b.createRange(), b.setStart(e.node, e.offset), a.removeAllRanges(), f > d ? (a.addRange(b), a.extend(g.node, g.offset)) : (b.setEnd(g.node, g.offset), a.addRange(b)));
    }
    b = [];
    for (a = c; a = a.parentNode;) {
      1 === a.nodeType && b.push({
        element: a,
        left: a.scrollLeft,
        top: a.scrollTop
      });
    }
    "function" === typeof c.focus && c.focus();
    for (c = 0; c < b.length; c++) {
      a = b[c], a.element.scrollLeft = a.left, a.element.scrollTop = a.top;
    }
  }
}
var Pe = ia && "documentMode" in document && 11 >= document.documentMode,
  Qe = null,
  Re = null,
  Se = null,
  Te = !1;
function Ue(a, b, c) {
  var d = c.window === c ? c.document : 9 === c.nodeType ? c : c.ownerDocument;
  Te || null == Qe || Qe !== Xa(d) || (d = Qe, "selectionStart" in d && Ne(d) ? d = {
    start: d.selectionStart,
    end: d.selectionEnd
  } : (d = (d.ownerDocument && d.ownerDocument.defaultView || window).getSelection(), d = {
    anchorNode: d.anchorNode,
    anchorOffset: d.anchorOffset,
    focusNode: d.focusNode,
    focusOffset: d.focusOffset
  }), Se && Ie(Se, d) || (Se = d, d = oe(Re, "onSelect"), 0 < d.length && (b = new td("onSelect", "select", null, b, c), a.push({
    event: b,
    listeners: d
  }), b.target = Qe)));
}
function Ve(a, b) {
  var c = {};
  c[a.toLowerCase()] = b.toLowerCase();
  c["Webkit" + a] = "webkit" + b;
  c["Moz" + a] = "moz" + b;
  return c;
}
var We = {
    animationend: Ve("Animation", "AnimationEnd"),
    animationiteration: Ve("Animation", "AnimationIteration"),
    animationstart: Ve("Animation", "AnimationStart"),
    transitionend: Ve("Transition", "TransitionEnd")
  },
  Xe = {},
  Ye = {};
ia && (Ye = document.createElement("div").style, "AnimationEvent" in window || (delete We.animationend.animation, delete We.animationiteration.animation, delete We.animationstart.animation), "TransitionEvent" in window || delete We.transitionend.transition);
function Ze(a) {
  if (Xe[a]) return Xe[a];
  if (!We[a]) return a;
  var b = We[a],
    c;
  for (c in b) {
    if (b.hasOwnProperty(c) && c in Ye) return Xe[a] = b[c];
  }
  return a;
}
var $e = Ze("animationend"),
  af = Ze("animationiteration"),
  bf = Ze("animationstart"),
  cf = Ze("transitionend"),
  df = new Map(),
  ef = "abort auxClick cancel canPlay canPlayThrough click close contextMenu copy cut drag dragEnd dragEnter dragExit dragLeave dragOver dragStart drop durationChange emptied encrypted ended error gotPointerCapture input invalid keyDown keyPress keyUp load loadedData loadedMetadata loadStart lostPointerCapture mouseDown mouseMove mouseOut mouseOver mouseUp paste pause play playing pointerCancel pointerDown pointerMove pointerOut pointerOver pointerUp progress rateChange reset resize seeked seeking stalled submit suspend timeUpdate touchCancel touchEnd touchStart volumeChange scroll toggle touchMove waiting wheel".split(" ");
function ff(a, b) {
  df.set(a, b);
  fa(b, [a]);
}
for (var gf = 0; gf < ef.length; gf++) {
  var hf = ef[gf],
    jf = hf.toLowerCase(),
    kf = hf[0].toUpperCase() + hf.slice(1);
  ff(jf, "on" + kf);
}
ff($e, "onAnimationEnd");
ff(af, "onAnimationIteration");
ff(bf, "onAnimationStart");
ff("dblclick", "onDoubleClick");
ff("focusin", "onFocus");
ff("focusout", "onBlur");
ff(cf, "onTransitionEnd");
ha("onMouseEnter", ["mouseout", "mouseover"]);
ha("onMouseLeave", ["mouseout", "mouseover"]);
ha("onPointerEnter", ["pointerout", "pointerover"]);
ha("onPointerLeave", ["pointerout", "pointerover"]);
fa("onChange", "change click focusin focusout input keydown keyup selectionchange".split(" "));
fa("onSelect", "focusout contextmenu dragend focusin keydown keyup mousedown mouseup selectionchange".split(" "));
fa("onBeforeInput", ["compositionend", "keypress", "textInput", "paste"]);
fa("onCompositionEnd", "compositionend focusout keydown keypress keyup mousedown".split(" "));
fa("onCompositionStart", "compositionstart focusout keydown keypress keyup mousedown".split(" "));
fa("onCompositionUpdate", "compositionupdate focusout keydown keypress keyup mousedown".split(" "));
var lf = "abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange resize seeked seeking stalled suspend timeupdate volumechange waiting".split(" "),
  mf = new Set("cancel close invalid load scroll toggle".split(" ").concat(lf));
function nf(a, b, c) {
  var d = a.type || "unknown-event";
  a.currentTarget = c;
  Ub(d, b, void 0, a);
  a.currentTarget = null;
}
function se(a, b) {
  b = 0 !== (b & 4);
  for (var c = 0; c < a.length; c++) {
    var d = a[c],
      e = d.event;
    d = d.listeners;
    a: {
      var f = void 0;
      if (b) for (var g = d.length - 1; 0 <= g; g--) {
        var h = d[g],
          k = h.instance,
          l = h.currentTarget;
        h = h.listener;
        if (k !== f && e.isPropagationStopped()) break a;
        nf(e, h, l);
        f = k;
      } else for (g = 0; g < d.length; g++) {
        h = d[g];
        k = h.instance;
        l = h.currentTarget;
        h = h.listener;
        if (k !== f && e.isPropagationStopped()) break a;
        nf(e, h, l);
        f = k;
      }
    }
  }
  if (Qb) throw a = Rb, Qb = !1, Rb = null, a;
}
function D(a, b) {
  var c = b[of];
  void 0 === c && (c = b[of] = new Set());
  var d = a + "__bubble";
  c.has(d) || (pf(b, a, 2, !1), c.add(d));
}
function qf(a, b, c) {
  var d = 0;
  b && (d |= 4);
  pf(c, a, d, b);
}
var rf = "_reactListening" + Math.random().toString(36).slice(2);
function sf(a) {
  if (!a[rf]) {
    a[rf] = !0;
    da.forEach(function (b) {
      "selectionchange" !== b && (mf.has(b) || qf(b, !1, a), qf(b, !0, a));
    });
    var b = 9 === a.nodeType ? a : a.ownerDocument;
    null === b || b[rf] || (b[rf] = !0, qf("selectionchange", !1, b));
  }
}
function pf(a, b, c, d) {
  switch (jd(b)) {
    case 1:
      var e = ed;
      break;
    case 4:
      e = gd;
      break;
    default:
      e = fd;
  }
  c = e.bind(null, b, c, a);
  e = void 0;
  !Lb || "touchstart" !== b && "touchmove" !== b && "wheel" !== b || (e = !0);
  d ? void 0 !== e ? a.addEventListener(b, c, {
    capture: !0,
    passive: e
  }) : a.addEventListener(b, c, !0) : void 0 !== e ? a.addEventListener(b, c, {
    passive: e
  }) : a.addEventListener(b, c, !1);
}
function hd(a, b, c, d, e) {
  var f = d;
  if (0 === (b & 1) && 0 === (b & 2) && null !== d) a: for (;;) {
    if (null === d) return;
    var g = d.tag;
    if (3 === g || 4 === g) {
      var h = d.stateNode.containerInfo;
      if (h === e || 8 === h.nodeType && h.parentNode === e) break;
      if (4 === g) for (g = d.return; null !== g;) {
        var k = g.tag;
        if (3 === k || 4 === k) if (k = g.stateNode.containerInfo, k === e || 8 === k.nodeType && k.parentNode === e) return;
        g = g.return;
      }
      for (; null !== h;) {
        g = Wc(h);
        if (null === g) return;
        k = g.tag;
        if (5 === k || 6 === k) {
          d = f = g;
          continue a;
        }
        h = h.parentNode;
      }
    }
    d = d.return;
  }
  Jb(function () {
    var d = f,
      e = xb(c),
      g = [];
    a: {
      var h = df.get(a);
      if (void 0 !== h) {
        var k = td,
          n = a;
        switch (a) {
          case "keypress":
            if (0 === od(c)) break a;
          case "keydown":
          case "keyup":
            k = Rd;
            break;
          case "focusin":
            n = "focus";
            k = Fd;
            break;
          case "focusout":
            n = "blur";
            k = Fd;
            break;
          case "beforeblur":
          case "afterblur":
            k = Fd;
            break;
          case "click":
            if (2 === c.button) break a;
          case "auxclick":
          case "dblclick":
          case "mousedown":
          case "mousemove":
          case "mouseup":
          case "mouseout":
          case "mouseover":
          case "contextmenu":
            k = Bd;
            break;
          case "drag":
          case "dragend":
          case "dragenter":
          case "dragexit":
          case "dragleave":
          case "dragover":
          case "dragstart":
          case "drop":
            k = Dd;
            break;
          case "touchcancel":
          case "touchend":
          case "touchmove":
          case "touchstart":
            k = Vd;
            break;
          case $e:
          case af:
          case bf:
            k = Hd;
            break;
          case cf:
            k = Xd;
            break;
          case "scroll":
            k = vd;
            break;
          case "wheel":
            k = Zd;
            break;
          case "copy":
          case "cut":
          case "paste":
            k = Jd;
            break;
          case "gotpointercapture":
          case "lostpointercapture":
          case "pointercancel":
          case "pointerdown":
          case "pointermove":
          case "pointerout":
          case "pointerover":
          case "pointerup":
            k = Td;
        }
        var t = 0 !== (b & 4),
          J = !t && "scroll" === a,
          x = t ? null !== h ? h + "Capture" : null : h;
        t = [];
        for (var w = d, u; null !== w;) {
          u = w;
          var F = u.stateNode;
          5 === u.tag && null !== F && (u = F, null !== x && (F = Kb(w, x), null != F && t.push(tf(w, F, u))));
          if (J) break;
          w = w.return;
        }
        0 < t.length && (h = new k(h, n, null, c, e), g.push({
          event: h,
          listeners: t
        }));
      }
    }
    if (0 === (b & 7)) {
      a: {
        h = "mouseover" === a || "pointerover" === a;
        k = "mouseout" === a || "pointerout" === a;
        if (h && c !== wb && (n = c.relatedTarget || c.fromElement) && (Wc(n) || n[uf])) break a;
        if (k || h) {
          h = e.window === e ? e : (h = e.ownerDocument) ? h.defaultView || h.parentWindow : window;
          if (k) {
            if (n = c.relatedTarget || c.toElement, k = d, n = n ? Wc(n) : null, null !== n && (J = Vb(n), n !== J || 5 !== n.tag && 6 !== n.tag)) n = null;
          } else k = null, n = d;
          if (k !== n) {
            t = Bd;
            F = "onMouseLeave";
            x = "onMouseEnter";
            w = "mouse";
            if ("pointerout" === a || "pointerover" === a) t = Td, F = "onPointerLeave", x = "onPointerEnter", w = "pointer";
            J = null == k ? h : ue(k);
            u = null == n ? h : ue(n);
            h = new t(F, w + "leave", k, c, e);
            h.target = J;
            h.relatedTarget = u;
            F = null;
            Wc(e) === d && (t = new t(x, w + "enter", n, c, e), t.target = u, t.relatedTarget = J, F = t);
            J = F;
            if (k && n) b: {
              t = k;
              x = n;
              w = 0;
              for (u = t; u; u = vf(u)) {
                w++;
              }
              u = 0;
              for (F = x; F; F = vf(F)) {
                u++;
              }
              for (; 0 < w - u;) {
                t = vf(t), w--;
              }
              for (; 0 < u - w;) {
                x = vf(x), u--;
              }
              for (; w--;) {
                if (t === x || null !== x && t === x.alternate) break b;
                t = vf(t);
                x = vf(x);
              }
              t = null;
            } else t = null;
            null !== k && wf(g, h, k, t, !1);
            null !== n && null !== J && wf(g, J, n, t, !0);
          }
        }
      }
      a: {
        h = d ? ue(d) : window;
        k = h.nodeName && h.nodeName.toLowerCase();
        if ("select" === k || "input" === k && "file" === h.type) var na = ve;else if (me(h)) {
          if (we) na = Fe;else {
            na = De;
            var xa = Ce;
          }
        } else (k = h.nodeName) && "input" === k.toLowerCase() && ("checkbox" === h.type || "radio" === h.type) && (na = Ee);
        if (na && (na = na(a, d))) {
          ne(g, na, c, e);
          break a;
        }
        xa && xa(a, h, d);
        "focusout" === a && (xa = h._wrapperState) && xa.controlled && "number" === h.type && cb(h, "number", h.value);
      }
      xa = d ? ue(d) : window;
      switch (a) {
        case "focusin":
          if (me(xa) || "true" === xa.contentEditable) Qe = xa, Re = d, Se = null;
          break;
        case "focusout":
          Se = Re = Qe = null;
          break;
        case "mousedown":
          Te = !0;
          break;
        case "contextmenu":
        case "mouseup":
        case "dragend":
          Te = !1;
          Ue(g, c, e);
          break;
        case "selectionchange":
          if (Pe) break;
        case "keydown":
        case "keyup":
          Ue(g, c, e);
      }
      var $a;
      if (ae) b: {
        switch (a) {
          case "compositionstart":
            var ba = "onCompositionStart";
            break b;
          case "compositionend":
            ba = "onCompositionEnd";
            break b;
          case "compositionupdate":
            ba = "onCompositionUpdate";
            break b;
        }
        ba = void 0;
      } else ie ? ge(a, c) && (ba = "onCompositionEnd") : "keydown" === a && 229 === c.keyCode && (ba = "onCompositionStart");
      ba && (de && "ko" !== c.locale && (ie || "onCompositionStart" !== ba ? "onCompositionEnd" === ba && ie && ($a = nd()) : (kd = e, ld = "value" in kd ? kd.value : kd.textContent, ie = !0)), xa = oe(d, ba), 0 < xa.length && (ba = new Ld(ba, a, null, c, e), g.push({
        event: ba,
        listeners: xa
      }), $a ? ba.data = $a : ($a = he(c), null !== $a && (ba.data = $a))));
      if ($a = ce ? je(a, c) : ke(a, c)) d = oe(d, "onBeforeInput"), 0 < d.length && (e = new Ld("onBeforeInput", "beforeinput", null, c, e), g.push({
        event: e,
        listeners: d
      }), e.data = $a);
    }
    se(g, b);
  });
}
function tf(a, b, c) {
  return {
    instance: a,
    listener: b,
    currentTarget: c
  };
}
function oe(a, b) {
  for (var c = b + "Capture", d = []; null !== a;) {
    var e = a,
      f = e.stateNode;
    5 === e.tag && null !== f && (e = f, f = Kb(a, c), null != f && d.unshift(tf(a, f, e)), f = Kb(a, b), null != f && d.push(tf(a, f, e)));
    a = a.return;
  }
  return d;
}
function vf(a) {
  if (null === a) return null;
  do {
    a = a.return;
  } while (a && 5 !== a.tag);
  return a ? a : null;
}
function wf(a, b, c, d, e) {
  for (var f = b._reactName, g = []; null !== c && c !== d;) {
    var h = c,
      k = h.alternate,
      l = h.stateNode;
    if (null !== k && k === d) break;
    5 === h.tag && null !== l && (h = l, e ? (k = Kb(c, f), null != k && g.unshift(tf(c, k, h))) : e || (k = Kb(c, f), null != k && g.push(tf(c, k, h))));
    c = c.return;
  }
  0 !== g.length && a.push({
    event: b,
    listeners: g
  });
}
var xf = /\r\n?/g,
  yf = /\u0000|\uFFFD/g;
function zf(a) {
  return ("string" === typeof a ? a : "" + a).replace(xf, "\n").replace(yf, "");
}
function Af(a, b, c) {
  b = zf(b);
  if (zf(a) !== b && c) throw Error(p(425));
}
function Bf() {}
var Cf = null,
  Df = null;
function Ef(a, b) {
  return "textarea" === a || "noscript" === a || "string" === typeof b.children || "number" === typeof b.children || "object" === typeof b.dangerouslySetInnerHTML && null !== b.dangerouslySetInnerHTML && null != b.dangerouslySetInnerHTML.__html;
}
var Ff = "function" === typeof setTimeout ? setTimeout : void 0,
  Gf = "function" === typeof clearTimeout ? clearTimeout : void 0,
  Hf = "function" === typeof Promise ? Promise : void 0,
  Jf = "function" === typeof queueMicrotask ? queueMicrotask : "undefined" !== typeof Hf ? function (a) {
    return Hf.resolve(null).then(a).catch(If);
  } : Ff;
function If(a) {
  setTimeout(function () {
    throw a;
  });
}
function Kf(a, b) {
  var c = b,
    d = 0;
  do {
    var e = c.nextSibling;
    a.removeChild(c);
    if (e && 8 === e.nodeType) if (c = e.data, "/$" === c) {
      if (0 === d) {
        a.removeChild(e);
        bd(b);
        return;
      }
      d--;
    } else "$" !== c && "$?" !== c && "$!" !== c || d++;
    c = e;
  } while (c);
  bd(b);
}
function Lf(a) {
  for (; null != a; a = a.nextSibling) {
    var b = a.nodeType;
    if (1 === b || 3 === b) break;
    if (8 === b) {
      b = a.data;
      if ("$" === b || "$!" === b || "$?" === b) break;
      if ("/$" === b) return null;
    }
  }
  return a;
}
function Mf(a) {
  a = a.previousSibling;
  for (var b = 0; a;) {
    if (8 === a.nodeType) {
      var c = a.data;
      if ("$" === c || "$!" === c || "$?" === c) {
        if (0 === b) return a;
        b--;
      } else "/$" === c && b++;
    }
    a = a.previousSibling;
  }
  return null;
}
var Nf = Math.random().toString(36).slice(2),
  Of = "__reactFiber$" + Nf,
  Pf = "__reactProps$" + Nf,
  uf = "__reactContainer$" + Nf,
  of = "__reactEvents$" + Nf,
  Qf = "__reactListeners$" + Nf,
  Rf = "__reactHandles$" + Nf;
function Wc(a) {
  var b = a[Of];
  if (b) return b;
  for (var c = a.parentNode; c;) {
    if (b = c[uf] || c[Of]) {
      c = b.alternate;
      if (null !== b.child || null !== c && null !== c.child) for (a = Mf(a); null !== a;) {
        if (c = a[Of]) return c;
        a = Mf(a);
      }
      return b;
    }
    a = c;
    c = a.parentNode;
  }
  return null;
}
function Cb(a) {
  a = a[Of] || a[uf];
  return !a || 5 !== a.tag && 6 !== a.tag && 13 !== a.tag && 3 !== a.tag ? null : a;
}
function ue(a) {
  if (5 === a.tag || 6 === a.tag) return a.stateNode;
  throw Error(p(33));
}
function Db(a) {
  return a[Pf] || null;
}
var Sf = [],
  Tf = -1;
function Uf(a) {
  return {
    current: a
  };
}
function E(a) {
  0 > Tf || (a.current = Sf[Tf], Sf[Tf] = null, Tf--);
}
function G(a, b) {
  Tf++;
  Sf[Tf] = a.current;
  a.current = b;
}
var Vf = {},
  H = Uf(Vf),
  Wf = Uf(!1),
  Xf = Vf;
function Yf(a, b) {
  var c = a.type.contextTypes;
  if (!c) return Vf;
  var d = a.stateNode;
  if (d && d.__reactInternalMemoizedUnmaskedChildContext === b) return d.__reactInternalMemoizedMaskedChildContext;
  var e = {},
    f;
  for (f in c) {
    e[f] = b[f];
  }
  d && (a = a.stateNode, a.__reactInternalMemoizedUnmaskedChildContext = b, a.__reactInternalMemoizedMaskedChildContext = e);
  return e;
}
function Zf(a) {
  a = a.childContextTypes;
  return null !== a && void 0 !== a;
}
function $f() {
  E(Wf);
  E(H);
}
function ag(a, b, c) {
  if (H.current !== Vf) throw Error(p(168));
  G(H, b);
  G(Wf, c);
}
function bg(a, b, c) {
  var d = a.stateNode;
  b = b.childContextTypes;
  if ("function" !== typeof d.getChildContext) return c;
  d = d.getChildContext();
  for (var e in d) {
    if (!(e in b)) throw Error(p(108, Ra(a) || "Unknown", e));
  }
  return A({}, c, d);
}
function cg(a) {
  a = (a = a.stateNode) && a.__reactInternalMemoizedMergedChildContext || Vf;
  Xf = H.current;
  G(H, a);
  G(Wf, Wf.current);
  return !0;
}
function dg(a, b, c) {
  var d = a.stateNode;
  if (!d) throw Error(p(169));
  c ? (a = bg(a, b, Xf), d.__reactInternalMemoizedMergedChildContext = a, E(Wf), E(H), G(H, a)) : E(Wf);
  G(Wf, c);
}
var eg = null,
  fg = !1,
  gg = !1;
function hg(a) {
  null === eg ? eg = [a] : eg.push(a);
}
function ig(a) {
  fg = !0;
  hg(a);
}
function jg() {
  if (!gg && null !== eg) {
    gg = !0;
    var a = 0,
      b = C;
    try {
      var c = eg;
      for (C = 1; a < c.length; a++) {
        var d = c[a];
        do {
          d = d(!0);
        } while (null !== d);
      }
      eg = null;
      fg = !1;
    } catch (e) {
      throw null !== eg && (eg = eg.slice(a + 1)), ac(fc, jg), e;
    } finally {
      C = b, gg = !1;
    }
  }
  return null;
}
var kg = [],
  lg = 0,
  mg = null,
  ng = 0,
  og = [],
  pg = 0,
  qg = null,
  rg = 1,
  sg = "";
function tg(a, b) {
  kg[lg++] = ng;
  kg[lg++] = mg;
  mg = a;
  ng = b;
}
function ug(a, b, c) {
  og[pg++] = rg;
  og[pg++] = sg;
  og[pg++] = qg;
  qg = a;
  var d = rg;
  a = sg;
  var e = 32 - oc(d) - 1;
  d &= ~(1 << e);
  c += 1;
  var f = 32 - oc(b) + e;
  if (30 < f) {
    var g = e - e % 5;
    f = (d & (1 << g) - 1).toString(32);
    d >>= g;
    e -= g;
    rg = 1 << 32 - oc(b) + e | c << e | d;
    sg = f + a;
  } else rg = 1 << f | c << e | d, sg = a;
}
function vg(a) {
  null !== a.return && (tg(a, 1), ug(a, 1, 0));
}
function wg(a) {
  for (; a === mg;) {
    mg = kg[--lg], kg[lg] = null, ng = kg[--lg], kg[lg] = null;
  }
  for (; a === qg;) {
    qg = og[--pg], og[pg] = null, sg = og[--pg], og[pg] = null, rg = og[--pg], og[pg] = null;
  }
}
var xg = null,
  yg = null,
  I = !1,
  zg = null;
function Ag(a, b) {
  var c = Bg(5, null, null, 0);
  c.elementType = "DELETED";
  c.stateNode = b;
  c.return = a;
  b = a.deletions;
  null === b ? (a.deletions = [c], a.flags |= 16) : b.push(c);
}
function Cg(a, b) {
  switch (a.tag) {
    case 5:
      var c = a.type;
      b = 1 !== b.nodeType || c.toLowerCase() !== b.nodeName.toLowerCase() ? null : b;
      return null !== b ? (a.stateNode = b, xg = a, yg = Lf(b.firstChild), !0) : !1;
    case 6:
      return b = "" === a.pendingProps || 3 !== b.nodeType ? null : b, null !== b ? (a.stateNode = b, xg = a, yg = null, !0) : !1;
    case 13:
      return b = 8 !== b.nodeType ? null : b, null !== b ? (c = null !== qg ? {
        id: rg,
        overflow: sg
      } : null, a.memoizedState = {
        dehydrated: b,
        treeContext: c,
        retryLane: 1073741824
      }, c = Bg(18, null, null, 0), c.stateNode = b, c.return = a, a.child = c, xg = a, yg = null, !0) : !1;
    default:
      return !1;
  }
}
function Dg(a) {
  return 0 !== (a.mode & 1) && 0 === (a.flags & 128);
}
function Eg(a) {
  if (I) {
    var b = yg;
    if (b) {
      var c = b;
      if (!Cg(a, b)) {
        if (Dg(a)) throw Error(p(418));
        b = Lf(c.nextSibling);
        var d = xg;
        b && Cg(a, b) ? Ag(d, c) : (a.flags = a.flags & -4097 | 2, I = !1, xg = a);
      }
    } else {
      if (Dg(a)) throw Error(p(418));
      a.flags = a.flags & -4097 | 2;
      I = !1;
      xg = a;
    }
  }
}
function Fg(a) {
  for (a = a.return; null !== a && 5 !== a.tag && 3 !== a.tag && 13 !== a.tag;) {
    a = a.return;
  }
  xg = a;
}
function Gg(a) {
  if (a !== xg) return !1;
  if (!I) return Fg(a), I = !0, !1;
  var b;
  (b = 3 !== a.tag) && !(b = 5 !== a.tag) && (b = a.type, b = "head" !== b && "body" !== b && !Ef(a.type, a.memoizedProps));
  if (b && (b = yg)) {
    if (Dg(a)) throw Hg(), Error(p(418));
    for (; b;) {
      Ag(a, b), b = Lf(b.nextSibling);
    }
  }
  Fg(a);
  if (13 === a.tag) {
    a = a.memoizedState;
    a = null !== a ? a.dehydrated : null;
    if (!a) throw Error(p(317));
    a: {
      a = a.nextSibling;
      for (b = 0; a;) {
        if (8 === a.nodeType) {
          var c = a.data;
          if ("/$" === c) {
            if (0 === b) {
              yg = Lf(a.nextSibling);
              break a;
            }
            b--;
          } else "$" !== c && "$!" !== c && "$?" !== c || b++;
        }
        a = a.nextSibling;
      }
      yg = null;
    }
  } else yg = xg ? Lf(a.stateNode.nextSibling) : null;
  return !0;
}
function Hg() {
  for (var a = yg; a;) {
    a = Lf(a.nextSibling);
  }
}
function Ig() {
  yg = xg = null;
  I = !1;
}
function Jg(a) {
  null === zg ? zg = [a] : zg.push(a);
}
var Kg = ua.ReactCurrentBatchConfig;
function Lg(a, b) {
  if (a && a.defaultProps) {
    b = A({}, b);
    a = a.defaultProps;
    for (var c in a) {
      void 0 === b[c] && (b[c] = a[c]);
    }
    return b;
  }
  return b;
}
var Mg = Uf(null),
  Ng = null,
  Og = null,
  Pg = null;
function Qg() {
  Pg = Og = Ng = null;
}
function Rg(a) {
  var b = Mg.current;
  E(Mg);
  a._currentValue = b;
}
function Sg(a, b, c) {
  for (; null !== a;) {
    var d = a.alternate;
    (a.childLanes & b) !== b ? (a.childLanes |= b, null !== d && (d.childLanes |= b)) : null !== d && (d.childLanes & b) !== b && (d.childLanes |= b);
    if (a === c) break;
    a = a.return;
  }
}
function Tg(a, b) {
  Ng = a;
  Pg = Og = null;
  a = a.dependencies;
  null !== a && null !== a.firstContext && (0 !== (a.lanes & b) && (Ug = !0), a.firstContext = null);
}
function Vg(a) {
  var b = a._currentValue;
  if (Pg !== a) if (a = {
    context: a,
    memoizedValue: b,
    next: null
  }, null === Og) {
    if (null === Ng) throw Error(p(308));
    Og = a;
    Ng.dependencies = {
      lanes: 0,
      firstContext: a
    };
  } else Og = Og.next = a;
  return b;
}
var Wg = null;
function Xg(a) {
  null === Wg ? Wg = [a] : Wg.push(a);
}
function Yg(a, b, c, d) {
  var e = b.interleaved;
  null === e ? (c.next = c, Xg(b)) : (c.next = e.next, e.next = c);
  b.interleaved = c;
  return Zg(a, d);
}
function Zg(a, b) {
  a.lanes |= b;
  var c = a.alternate;
  null !== c && (c.lanes |= b);
  c = a;
  for (a = a.return; null !== a;) {
    a.childLanes |= b, c = a.alternate, null !== c && (c.childLanes |= b), c = a, a = a.return;
  }
  return 3 === c.tag ? c.stateNode : null;
}
var $g = !1;
function ah(a) {
  a.updateQueue = {
    baseState: a.memoizedState,
    firstBaseUpdate: null,
    lastBaseUpdate: null,
    shared: {
      pending: null,
      interleaved: null,
      lanes: 0
    },
    effects: null
  };
}
function bh(a, b) {
  a = a.updateQueue;
  b.updateQueue === a && (b.updateQueue = {
    baseState: a.baseState,
    firstBaseUpdate: a.firstBaseUpdate,
    lastBaseUpdate: a.lastBaseUpdate,
    shared: a.shared,
    effects: a.effects
  });
}
function ch(a, b) {
  return {
    eventTime: a,
    lane: b,
    tag: 0,
    payload: null,
    callback: null,
    next: null
  };
}
function dh(a, b, c) {
  var d = a.updateQueue;
  if (null === d) return null;
  d = d.shared;
  if (0 !== (K & 2)) {
    var e = d.pending;
    null === e ? b.next = b : (b.next = e.next, e.next = b);
    d.pending = b;
    return Zg(a, c);
  }
  e = d.interleaved;
  null === e ? (b.next = b, Xg(d)) : (b.next = e.next, e.next = b);
  d.interleaved = b;
  return Zg(a, c);
}
function eh(a, b, c) {
  b = b.updateQueue;
  if (null !== b && (b = b.shared, 0 !== (c & 4194240))) {
    var d = b.lanes;
    d &= a.pendingLanes;
    c |= d;
    b.lanes = c;
    Cc(a, c);
  }
}
function fh(a, b) {
  var c = a.updateQueue,
    d = a.alternate;
  if (null !== d && (d = d.updateQueue, c === d)) {
    var e = null,
      f = null;
    c = c.firstBaseUpdate;
    if (null !== c) {
      do {
        var g = {
          eventTime: c.eventTime,
          lane: c.lane,
          tag: c.tag,
          payload: c.payload,
          callback: c.callback,
          next: null
        };
        null === f ? e = f = g : f = f.next = g;
        c = c.next;
      } while (null !== c);
      null === f ? e = f = b : f = f.next = b;
    } else e = f = b;
    c = {
      baseState: d.baseState,
      firstBaseUpdate: e,
      lastBaseUpdate: f,
      shared: d.shared,
      effects: d.effects
    };
    a.updateQueue = c;
    return;
  }
  a = c.lastBaseUpdate;
  null === a ? c.firstBaseUpdate = b : a.next = b;
  c.lastBaseUpdate = b;
}
function gh(a, b, c, d) {
  var e = a.updateQueue;
  $g = !1;
  var f = e.firstBaseUpdate,
    g = e.lastBaseUpdate,
    h = e.shared.pending;
  if (null !== h) {
    e.shared.pending = null;
    var k = h,
      l = k.next;
    k.next = null;
    null === g ? f = l : g.next = l;
    g = k;
    var m = a.alternate;
    null !== m && (m = m.updateQueue, h = m.lastBaseUpdate, h !== g && (null === h ? m.firstBaseUpdate = l : h.next = l, m.lastBaseUpdate = k));
  }
  if (null !== f) {
    var q = e.baseState;
    g = 0;
    m = l = k = null;
    h = f;
    do {
      var r = h.lane,
        y = h.eventTime;
      if ((d & r) === r) {
        null !== m && (m = m.next = {
          eventTime: y,
          lane: 0,
          tag: h.tag,
          payload: h.payload,
          callback: h.callback,
          next: null
        });
        a: {
          var n = a,
            t = h;
          r = b;
          y = c;
          switch (t.tag) {
            case 1:
              n = t.payload;
              if ("function" === typeof n) {
                q = n.call(y, q, r);
                break a;
              }
              q = n;
              break a;
            case 3:
              n.flags = n.flags & -65537 | 128;
            case 0:
              n = t.payload;
              r = "function" === typeof n ? n.call(y, q, r) : n;
              if (null === r || void 0 === r) break a;
              q = A({}, q, r);
              break a;
            case 2:
              $g = !0;
          }
        }
        null !== h.callback && 0 !== h.lane && (a.flags |= 64, r = e.effects, null === r ? e.effects = [h] : r.push(h));
      } else y = {
        eventTime: y,
        lane: r,
        tag: h.tag,
        payload: h.payload,
        callback: h.callback,
        next: null
      }, null === m ? (l = m = y, k = q) : m = m.next = y, g |= r;
      h = h.next;
      if (null === h) if (h = e.shared.pending, null === h) break;else r = h, h = r.next, r.next = null, e.lastBaseUpdate = r, e.shared.pending = null;
    } while (1);
    null === m && (k = q);
    e.baseState = k;
    e.firstBaseUpdate = l;
    e.lastBaseUpdate = m;
    b = e.shared.interleaved;
    if (null !== b) {
      e = b;
      do {
        g |= e.lane, e = e.next;
      } while (e !== b);
    } else null === f && (e.shared.lanes = 0);
    hh |= g;
    a.lanes = g;
    a.memoizedState = q;
  }
}
function ih(a, b, c) {
  a = b.effects;
  b.effects = null;
  if (null !== a) for (b = 0; b < a.length; b++) {
    var d = a[b],
      e = d.callback;
    if (null !== e) {
      d.callback = null;
      d = c;
      if ("function" !== typeof e) throw Error(p(191, e));
      e.call(d);
    }
  }
}
var jh = new aa.Component().refs;
function kh(a, b, c, d) {
  b = a.memoizedState;
  c = c(d, b);
  c = null === c || void 0 === c ? b : A({}, b, c);
  a.memoizedState = c;
  0 === a.lanes && (a.updateQueue.baseState = c);
}
var nh = {
  isMounted: function isMounted(a) {
    return (a = a._reactInternals) ? Vb(a) === a : !1;
  },
  enqueueSetState: function enqueueSetState(a, b, c) {
    a = a._reactInternals;
    var d = L(),
      e = lh(a),
      f = ch(d, e);
    f.payload = b;
    void 0 !== c && null !== c && (f.callback = c);
    b = dh(a, f, e);
    null !== b && (mh(b, a, e, d), eh(b, a, e));
  },
  enqueueReplaceState: function enqueueReplaceState(a, b, c) {
    a = a._reactInternals;
    var d = L(),
      e = lh(a),
      f = ch(d, e);
    f.tag = 1;
    f.payload = b;
    void 0 !== c && null !== c && (f.callback = c);
    b = dh(a, f, e);
    null !== b && (mh(b, a, e, d), eh(b, a, e));
  },
  enqueueForceUpdate: function enqueueForceUpdate(a, b) {
    a = a._reactInternals;
    var c = L(),
      d = lh(a),
      e = ch(c, d);
    e.tag = 2;
    void 0 !== b && null !== b && (e.callback = b);
    b = dh(a, e, d);
    null !== b && (mh(b, a, d, c), eh(b, a, d));
  }
};
function oh(a, b, c, d, e, f, g) {
  a = a.stateNode;
  return "function" === typeof a.shouldComponentUpdate ? a.shouldComponentUpdate(d, f, g) : b.prototype && b.prototype.isPureReactComponent ? !Ie(c, d) || !Ie(e, f) : !0;
}
function ph(a, b, c) {
  var d = !1,
    e = Vf;
  var f = b.contextType;
  "object" === typeof f && null !== f ? f = Vg(f) : (e = Zf(b) ? Xf : H.current, d = b.contextTypes, f = (d = null !== d && void 0 !== d) ? Yf(a, e) : Vf);
  b = new b(c, f);
  a.memoizedState = null !== b.state && void 0 !== b.state ? b.state : null;
  b.updater = nh;
  a.stateNode = b;
  b._reactInternals = a;
  d && (a = a.stateNode, a.__reactInternalMemoizedUnmaskedChildContext = e, a.__reactInternalMemoizedMaskedChildContext = f);
  return b;
}
function qh(a, b, c, d) {
  a = b.state;
  "function" === typeof b.componentWillReceiveProps && b.componentWillReceiveProps(c, d);
  "function" === typeof b.UNSAFE_componentWillReceiveProps && b.UNSAFE_componentWillReceiveProps(c, d);
  b.state !== a && nh.enqueueReplaceState(b, b.state, null);
}
function rh(a, b, c, d) {
  var e = a.stateNode;
  e.props = c;
  e.state = a.memoizedState;
  e.refs = jh;
  ah(a);
  var f = b.contextType;
  "object" === typeof f && null !== f ? e.context = Vg(f) : (f = Zf(b) ? Xf : H.current, e.context = Yf(a, f));
  e.state = a.memoizedState;
  f = b.getDerivedStateFromProps;
  "function" === typeof f && (kh(a, b, f, c), e.state = a.memoizedState);
  "function" === typeof b.getDerivedStateFromProps || "function" === typeof e.getSnapshotBeforeUpdate || "function" !== typeof e.UNSAFE_componentWillMount && "function" !== typeof e.componentWillMount || (b = e.state, "function" === typeof e.componentWillMount && e.componentWillMount(), "function" === typeof e.UNSAFE_componentWillMount && e.UNSAFE_componentWillMount(), b !== e.state && nh.enqueueReplaceState(e, e.state, null), gh(a, c, e, d), e.state = a.memoizedState);
  "function" === typeof e.componentDidMount && (a.flags |= 4194308);
}
function sh(a, b, c) {
  a = c.ref;
  if (null !== a && "function" !== typeof a && "object" !== typeof a) {
    if (c._owner) {
      c = c._owner;
      if (c) {
        if (1 !== c.tag) throw Error(p(309));
        var d = c.stateNode;
      }
      if (!d) throw Error(p(147, a));
      var e = d,
        f = "" + a;
      if (null !== b && null !== b.ref && "function" === typeof b.ref && b.ref._stringRef === f) return b.ref;
      b = function b(a) {
        var b = e.refs;
        b === jh && (b = e.refs = {});
        null === a ? delete b[f] : b[f] = a;
      };
      b._stringRef = f;
      return b;
    }
    if ("string" !== typeof a) throw Error(p(284));
    if (!c._owner) throw Error(p(290, a));
  }
  return a;
}
function th(a, b) {
  a = Object.prototype.toString.call(b);
  throw Error(p(31, "[object Object]" === a ? "object with keys {" + Object.keys(b).join(", ") + "}" : a));
}
function uh(a) {
  var b = a._init;
  return b(a._payload);
}
function vh(a) {
  function b(b, c) {
    if (a) {
      var d = b.deletions;
      null === d ? (b.deletions = [c], b.flags |= 16) : d.push(c);
    }
  }
  function c(c, d) {
    if (!a) return null;
    for (; null !== d;) {
      b(c, d), d = d.sibling;
    }
    return null;
  }
  function d(a, b) {
    for (a = new Map(); null !== b;) {
      null !== b.key ? a.set(b.key, b) : a.set(b.index, b), b = b.sibling;
    }
    return a;
  }
  function e(a, b) {
    a = wh(a, b);
    a.index = 0;
    a.sibling = null;
    return a;
  }
  function f(b, c, d) {
    b.index = d;
    if (!a) return b.flags |= 1048576, c;
    d = b.alternate;
    if (null !== d) return d = d.index, d < c ? (b.flags |= 2, c) : d;
    b.flags |= 2;
    return c;
  }
  function g(b) {
    a && null === b.alternate && (b.flags |= 2);
    return b;
  }
  function h(a, b, c, d) {
    if (null === b || 6 !== b.tag) return b = xh(c, a.mode, d), b.return = a, b;
    b = e(b, c);
    b.return = a;
    return b;
  }
  function k(a, b, c, d) {
    var f = c.type;
    if (f === ya) return m(a, b, c.props.children, d, c.key);
    if (null !== b && (b.elementType === f || "object" === typeof f && null !== f && f.$$typeof === Ha && uh(f) === b.type)) return d = e(b, c.props), d.ref = sh(a, b, c), d.return = a, d;
    d = yh(c.type, c.key, c.props, null, a.mode, d);
    d.ref = sh(a, b, c);
    d.return = a;
    return d;
  }
  function l(a, b, c, d) {
    if (null === b || 4 !== b.tag || b.stateNode.containerInfo !== c.containerInfo || b.stateNode.implementation !== c.implementation) return b = zh(c, a.mode, d), b.return = a, b;
    b = e(b, c.children || []);
    b.return = a;
    return b;
  }
  function m(a, b, c, d, f) {
    if (null === b || 7 !== b.tag) return b = Ah(c, a.mode, d, f), b.return = a, b;
    b = e(b, c);
    b.return = a;
    return b;
  }
  function q(a, b, c) {
    if ("string" === typeof b && "" !== b || "number" === typeof b) return b = xh("" + b, a.mode, c), b.return = a, b;
    if ("object" === typeof b && null !== b) {
      switch (b.$$typeof) {
        case va:
          return c = yh(b.type, b.key, b.props, null, a.mode, c), c.ref = sh(a, null, b), c.return = a, c;
        case wa:
          return b = zh(b, a.mode, c), b.return = a, b;
        case Ha:
          var d = b._init;
          return q(a, d(b._payload), c);
      }
      if (eb(b) || Ka(b)) return b = Ah(b, a.mode, c, null), b.return = a, b;
      th(a, b);
    }
    return null;
  }
  function r(a, b, c, d) {
    var e = null !== b ? b.key : null;
    if ("string" === typeof c && "" !== c || "number" === typeof c) return null !== e ? null : h(a, b, "" + c, d);
    if ("object" === typeof c && null !== c) {
      switch (c.$$typeof) {
        case va:
          return c.key === e ? k(a, b, c, d) : null;
        case wa:
          return c.key === e ? l(a, b, c, d) : null;
        case Ha:
          return e = c._init, r(a, b, e(c._payload), d);
      }
      if (eb(c) || Ka(c)) return null !== e ? null : m(a, b, c, d, null);
      th(a, c);
    }
    return null;
  }
  function y(a, b, c, d, e) {
    if ("string" === typeof d && "" !== d || "number" === typeof d) return a = a.get(c) || null, h(b, a, "" + d, e);
    if ("object" === typeof d && null !== d) {
      switch (d.$$typeof) {
        case va:
          return a = a.get(null === d.key ? c : d.key) || null, k(b, a, d, e);
        case wa:
          return a = a.get(null === d.key ? c : d.key) || null, l(b, a, d, e);
        case Ha:
          var f = d._init;
          return y(a, b, c, f(d._payload), e);
      }
      if (eb(d) || Ka(d)) return a = a.get(c) || null, m(b, a, d, e, null);
      th(b, d);
    }
    return null;
  }
  function n(e, g, h, k) {
    for (var l = null, m = null, u = g, w = g = 0, x = null; null !== u && w < h.length; w++) {
      u.index > w ? (x = u, u = null) : x = u.sibling;
      var n = r(e, u, h[w], k);
      if (null === n) {
        null === u && (u = x);
        break;
      }
      a && u && null === n.alternate && b(e, u);
      g = f(n, g, w);
      null === m ? l = n : m.sibling = n;
      m = n;
      u = x;
    }
    if (w === h.length) return c(e, u), I && tg(e, w), l;
    if (null === u) {
      for (; w < h.length; w++) {
        u = q(e, h[w], k), null !== u && (g = f(u, g, w), null === m ? l = u : m.sibling = u, m = u);
      }
      I && tg(e, w);
      return l;
    }
    for (u = d(e, u); w < h.length; w++) {
      x = y(u, e, w, h[w], k), null !== x && (a && null !== x.alternate && u.delete(null === x.key ? w : x.key), g = f(x, g, w), null === m ? l = x : m.sibling = x, m = x);
    }
    a && u.forEach(function (a) {
      return b(e, a);
    });
    I && tg(e, w);
    return l;
  }
  function t(e, g, h, k) {
    var l = Ka(h);
    if ("function" !== typeof l) throw Error(p(150));
    h = l.call(h);
    if (null == h) throw Error(p(151));
    for (var u = l = null, m = g, w = g = 0, x = null, n = h.next(); null !== m && !n.done; w++, n = h.next()) {
      m.index > w ? (x = m, m = null) : x = m.sibling;
      var t = r(e, m, n.value, k);
      if (null === t) {
        null === m && (m = x);
        break;
      }
      a && m && null === t.alternate && b(e, m);
      g = f(t, g, w);
      null === u ? l = t : u.sibling = t;
      u = t;
      m = x;
    }
    if (n.done) return c(e, m), I && tg(e, w), l;
    if (null === m) {
      for (; !n.done; w++, n = h.next()) {
        n = q(e, n.value, k), null !== n && (g = f(n, g, w), null === u ? l = n : u.sibling = n, u = n);
      }
      I && tg(e, w);
      return l;
    }
    for (m = d(e, m); !n.done; w++, n = h.next()) {
      n = y(m, e, w, n.value, k), null !== n && (a && null !== n.alternate && m.delete(null === n.key ? w : n.key), g = f(n, g, w), null === u ? l = n : u.sibling = n, u = n);
    }
    a && m.forEach(function (a) {
      return b(e, a);
    });
    I && tg(e, w);
    return l;
  }
  function J(a, d, f, h) {
    "object" === typeof f && null !== f && f.type === ya && null === f.key && (f = f.props.children);
    if ("object" === typeof f && null !== f) {
      switch (f.$$typeof) {
        case va:
          a: {
            for (var k = f.key, l = d; null !== l;) {
              if (l.key === k) {
                k = f.type;
                if (k === ya) {
                  if (7 === l.tag) {
                    c(a, l.sibling);
                    d = e(l, f.props.children);
                    d.return = a;
                    a = d;
                    break a;
                  }
                } else if (l.elementType === k || "object" === typeof k && null !== k && k.$$typeof === Ha && uh(k) === l.type) {
                  c(a, l.sibling);
                  d = e(l, f.props);
                  d.ref = sh(a, l, f);
                  d.return = a;
                  a = d;
                  break a;
                }
                c(a, l);
                break;
              } else b(a, l);
              l = l.sibling;
            }
            f.type === ya ? (d = Ah(f.props.children, a.mode, h, f.key), d.return = a, a = d) : (h = yh(f.type, f.key, f.props, null, a.mode, h), h.ref = sh(a, d, f), h.return = a, a = h);
          }
          return g(a);
        case wa:
          a: {
            for (l = f.key; null !== d;) {
              if (d.key === l) {
                if (4 === d.tag && d.stateNode.containerInfo === f.containerInfo && d.stateNode.implementation === f.implementation) {
                  c(a, d.sibling);
                  d = e(d, f.children || []);
                  d.return = a;
                  a = d;
                  break a;
                } else {
                  c(a, d);
                  break;
                }
              } else b(a, d);
              d = d.sibling;
            }
            d = zh(f, a.mode, h);
            d.return = a;
            a = d;
          }
          return g(a);
        case Ha:
          return l = f._init, J(a, d, l(f._payload), h);
      }
      if (eb(f)) return n(a, d, f, h);
      if (Ka(f)) return t(a, d, f, h);
      th(a, f);
    }
    return "string" === typeof f && "" !== f || "number" === typeof f ? (f = "" + f, null !== d && 6 === d.tag ? (c(a, d.sibling), d = e(d, f), d.return = a, a = d) : (c(a, d), d = xh(f, a.mode, h), d.return = a, a = d), g(a)) : c(a, d);
  }
  return J;
}
var Bh = vh(!0),
  Ch = vh(!1),
  Dh = {},
  Eh = Uf(Dh),
  Fh = Uf(Dh),
  Gh = Uf(Dh);
function Hh(a) {
  if (a === Dh) throw Error(p(174));
  return a;
}
function Ih(a, b) {
  G(Gh, b);
  G(Fh, a);
  G(Eh, Dh);
  a = b.nodeType;
  switch (a) {
    case 9:
    case 11:
      b = (b = b.documentElement) ? b.namespaceURI : lb(null, "");
      break;
    default:
      a = 8 === a ? b.parentNode : b, b = a.namespaceURI || null, a = a.tagName, b = lb(b, a);
  }
  E(Eh);
  G(Eh, b);
}
function Jh() {
  E(Eh);
  E(Fh);
  E(Gh);
}
function Kh(a) {
  Hh(Gh.current);
  var b = Hh(Eh.current);
  var c = lb(b, a.type);
  b !== c && (G(Fh, a), G(Eh, c));
}
function Lh(a) {
  Fh.current === a && (E(Eh), E(Fh));
}
var M = Uf(0);
function Mh(a) {
  for (var b = a; null !== b;) {
    if (13 === b.tag) {
      var c = b.memoizedState;
      if (null !== c && (c = c.dehydrated, null === c || "$?" === c.data || "$!" === c.data)) return b;
    } else if (19 === b.tag && void 0 !== b.memoizedProps.revealOrder) {
      if (0 !== (b.flags & 128)) return b;
    } else if (null !== b.child) {
      b.child.return = b;
      b = b.child;
      continue;
    }
    if (b === a) break;
    for (; null === b.sibling;) {
      if (null === b.return || b.return === a) return null;
      b = b.return;
    }
    b.sibling.return = b.return;
    b = b.sibling;
  }
  return null;
}
var Nh = [];
function Oh() {
  for (var a = 0; a < Nh.length; a++) {
    Nh[a]._workInProgressVersionPrimary = null;
  }
  Nh.length = 0;
}
var Ph = ua.ReactCurrentDispatcher,
  Qh = ua.ReactCurrentBatchConfig,
  Rh = 0,
  N = null,
  O = null,
  P = null,
  Sh = !1,
  Th = !1,
  Uh = 0,
  Vh = 0;
function Q() {
  throw Error(p(321));
}
function Wh(a, b) {
  if (null === b) return !1;
  for (var c = 0; c < b.length && c < a.length; c++) {
    if (!He(a[c], b[c])) return !1;
  }
  return !0;
}
function Xh(a, b, c, d, e, f) {
  Rh = f;
  N = b;
  b.memoizedState = null;
  b.updateQueue = null;
  b.lanes = 0;
  Ph.current = null === a || null === a.memoizedState ? Yh : Zh;
  a = c(d, e);
  if (Th) {
    f = 0;
    do {
      Th = !1;
      Uh = 0;
      if (25 <= f) throw Error(p(301));
      f += 1;
      P = O = null;
      b.updateQueue = null;
      Ph.current = $h;
      a = c(d, e);
    } while (Th);
  }
  Ph.current = ai;
  b = null !== O && null !== O.next;
  Rh = 0;
  P = O = N = null;
  Sh = !1;
  if (b) throw Error(p(300));
  return a;
}
function bi() {
  var a = 0 !== Uh;
  Uh = 0;
  return a;
}
function ci() {
  var a = {
    memoizedState: null,
    baseState: null,
    baseQueue: null,
    queue: null,
    next: null
  };
  null === P ? N.memoizedState = P = a : P = P.next = a;
  return P;
}
function di() {
  if (null === O) {
    var a = N.alternate;
    a = null !== a ? a.memoizedState : null;
  } else a = O.next;
  var b = null === P ? N.memoizedState : P.next;
  if (null !== b) P = b, O = a;else {
    if (null === a) throw Error(p(310));
    O = a;
    a = {
      memoizedState: O.memoizedState,
      baseState: O.baseState,
      baseQueue: O.baseQueue,
      queue: O.queue,
      next: null
    };
    null === P ? N.memoizedState = P = a : P = P.next = a;
  }
  return P;
}
function ei(a, b) {
  return "function" === typeof b ? b(a) : b;
}
function fi(a) {
  var b = di(),
    c = b.queue;
  if (null === c) throw Error(p(311));
  c.lastRenderedReducer = a;
  var d = O,
    e = d.baseQueue,
    f = c.pending;
  if (null !== f) {
    if (null !== e) {
      var g = e.next;
      e.next = f.next;
      f.next = g;
    }
    d.baseQueue = e = f;
    c.pending = null;
  }
  if (null !== e) {
    f = e.next;
    d = d.baseState;
    var h = g = null,
      k = null,
      l = f;
    do {
      var m = l.lane;
      if ((Rh & m) === m) null !== k && (k = k.next = {
        lane: 0,
        action: l.action,
        hasEagerState: l.hasEagerState,
        eagerState: l.eagerState,
        next: null
      }), d = l.hasEagerState ? l.eagerState : a(d, l.action);else {
        var q = {
          lane: m,
          action: l.action,
          hasEagerState: l.hasEagerState,
          eagerState: l.eagerState,
          next: null
        };
        null === k ? (h = k = q, g = d) : k = k.next = q;
        N.lanes |= m;
        hh |= m;
      }
      l = l.next;
    } while (null !== l && l !== f);
    null === k ? g = d : k.next = h;
    He(d, b.memoizedState) || (Ug = !0);
    b.memoizedState = d;
    b.baseState = g;
    b.baseQueue = k;
    c.lastRenderedState = d;
  }
  a = c.interleaved;
  if (null !== a) {
    e = a;
    do {
      f = e.lane, N.lanes |= f, hh |= f, e = e.next;
    } while (e !== a);
  } else null === e && (c.lanes = 0);
  return [b.memoizedState, c.dispatch];
}
function gi(a) {
  var b = di(),
    c = b.queue;
  if (null === c) throw Error(p(311));
  c.lastRenderedReducer = a;
  var d = c.dispatch,
    e = c.pending,
    f = b.memoizedState;
  if (null !== e) {
    c.pending = null;
    var g = e = e.next;
    do {
      f = a(f, g.action), g = g.next;
    } while (g !== e);
    He(f, b.memoizedState) || (Ug = !0);
    b.memoizedState = f;
    null === b.baseQueue && (b.baseState = f);
    c.lastRenderedState = f;
  }
  return [f, d];
}
function hi() {}
function ii(a, b) {
  var c = N,
    d = di(),
    e = b(),
    f = !He(d.memoizedState, e);
  f && (d.memoizedState = e, Ug = !0);
  d = d.queue;
  ji(ki.bind(null, c, d, a), [a]);
  if (d.getSnapshot !== b || f || null !== P && P.memoizedState.tag & 1) {
    c.flags |= 2048;
    li(9, mi.bind(null, c, d, e, b), void 0, null);
    if (null === R) throw Error(p(349));
    0 !== (Rh & 30) || ni(c, b, e);
  }
  return e;
}
function ni(a, b, c) {
  a.flags |= 16384;
  a = {
    getSnapshot: b,
    value: c
  };
  b = N.updateQueue;
  null === b ? (b = {
    lastEffect: null,
    stores: null
  }, N.updateQueue = b, b.stores = [a]) : (c = b.stores, null === c ? b.stores = [a] : c.push(a));
}
function mi(a, b, c, d) {
  b.value = c;
  b.getSnapshot = d;
  oi(b) && pi(a);
}
function ki(a, b, c) {
  return c(function () {
    oi(b) && pi(a);
  });
}
function oi(a) {
  var b = a.getSnapshot;
  a = a.value;
  try {
    var c = b();
    return !He(a, c);
  } catch (d) {
    return !0;
  }
}
function pi(a) {
  var b = Zg(a, 1);
  null !== b && mh(b, a, 1, -1);
}
function qi(a) {
  var b = ci();
  "function" === typeof a && (a = a());
  b.memoizedState = b.baseState = a;
  a = {
    pending: null,
    interleaved: null,
    lanes: 0,
    dispatch: null,
    lastRenderedReducer: ei,
    lastRenderedState: a
  };
  b.queue = a;
  a = a.dispatch = ri.bind(null, N, a);
  return [b.memoizedState, a];
}
function li(a, b, c, d) {
  a = {
    tag: a,
    create: b,
    destroy: c,
    deps: d,
    next: null
  };
  b = N.updateQueue;
  null === b ? (b = {
    lastEffect: null,
    stores: null
  }, N.updateQueue = b, b.lastEffect = a.next = a) : (c = b.lastEffect, null === c ? b.lastEffect = a.next = a : (d = c.next, c.next = a, a.next = d, b.lastEffect = a));
  return a;
}
function si() {
  return di().memoizedState;
}
function ti(a, b, c, d) {
  var e = ci();
  N.flags |= a;
  e.memoizedState = li(1 | b, c, void 0, void 0 === d ? null : d);
}
function ui(a, b, c, d) {
  var e = di();
  d = void 0 === d ? null : d;
  var f = void 0;
  if (null !== O) {
    var g = O.memoizedState;
    f = g.destroy;
    if (null !== d && Wh(d, g.deps)) {
      e.memoizedState = li(b, c, f, d);
      return;
    }
  }
  N.flags |= a;
  e.memoizedState = li(1 | b, c, f, d);
}
function vi(a, b) {
  return ti(8390656, 8, a, b);
}
function ji(a, b) {
  return ui(2048, 8, a, b);
}
function wi(a, b) {
  return ui(4, 2, a, b);
}
function xi(a, b) {
  return ui(4, 4, a, b);
}
function yi(a, b) {
  if ("function" === typeof b) return a = a(), b(a), function () {
    b(null);
  };
  if (null !== b && void 0 !== b) return a = a(), b.current = a, function () {
    b.current = null;
  };
}
function zi(a, b, c) {
  c = null !== c && void 0 !== c ? c.concat([a]) : null;
  return ui(4, 4, yi.bind(null, b, a), c);
}
function Ai() {}
function Bi(a, b) {
  var c = di();
  b = void 0 === b ? null : b;
  var d = c.memoizedState;
  if (null !== d && null !== b && Wh(b, d[1])) return d[0];
  c.memoizedState = [a, b];
  return a;
}
function Ci(a, b) {
  var c = di();
  b = void 0 === b ? null : b;
  var d = c.memoizedState;
  if (null !== d && null !== b && Wh(b, d[1])) return d[0];
  a = a();
  c.memoizedState = [a, b];
  return a;
}
function Di(a, b, c) {
  if (0 === (Rh & 21)) return a.baseState && (a.baseState = !1, Ug = !0), a.memoizedState = c;
  He(c, b) || (c = yc(), N.lanes |= c, hh |= c, a.baseState = !0);
  return b;
}
function Ei(a, b) {
  var c = C;
  C = 0 !== c && 4 > c ? c : 4;
  a(!0);
  var d = Qh.transition;
  Qh.transition = {};
  try {
    a(!1), b();
  } finally {
    C = c, Qh.transition = d;
  }
}
function Fi() {
  return di().memoizedState;
}
function Gi(a, b, c) {
  var d = lh(a);
  c = {
    lane: d,
    action: c,
    hasEagerState: !1,
    eagerState: null,
    next: null
  };
  if (Hi(a)) Ii(b, c);else if (c = Yg(a, b, c, d), null !== c) {
    var e = L();
    mh(c, a, d, e);
    Ji(c, b, d);
  }
}
function ri(a, b, c) {
  var d = lh(a),
    e = {
      lane: d,
      action: c,
      hasEagerState: !1,
      eagerState: null,
      next: null
    };
  if (Hi(a)) Ii(b, e);else {
    var f = a.alternate;
    if (0 === a.lanes && (null === f || 0 === f.lanes) && (f = b.lastRenderedReducer, null !== f)) try {
      var g = b.lastRenderedState,
        h = f(g, c);
      e.hasEagerState = !0;
      e.eagerState = h;
      if (He(h, g)) {
        var k = b.interleaved;
        null === k ? (e.next = e, Xg(b)) : (e.next = k.next, k.next = e);
        b.interleaved = e;
        return;
      }
    } catch (l) {} finally {}
    c = Yg(a, b, e, d);
    null !== c && (e = L(), mh(c, a, d, e), Ji(c, b, d));
  }
}
function Hi(a) {
  var b = a.alternate;
  return a === N || null !== b && b === N;
}
function Ii(a, b) {
  Th = Sh = !0;
  var c = a.pending;
  null === c ? b.next = b : (b.next = c.next, c.next = b);
  a.pending = b;
}
function Ji(a, b, c) {
  if (0 !== (c & 4194240)) {
    var d = b.lanes;
    d &= a.pendingLanes;
    c |= d;
    b.lanes = c;
    Cc(a, c);
  }
}
var ai = {
    readContext: Vg,
    useCallback: Q,
    useContext: Q,
    useEffect: Q,
    useImperativeHandle: Q,
    useInsertionEffect: Q,
    useLayoutEffect: Q,
    useMemo: Q,
    useReducer: Q,
    useRef: Q,
    useState: Q,
    useDebugValue: Q,
    useDeferredValue: Q,
    useTransition: Q,
    useMutableSource: Q,
    useSyncExternalStore: Q,
    useId: Q,
    unstable_isNewReconciler: !1
  },
  Yh = {
    readContext: Vg,
    useCallback: function useCallback(a, b) {
      ci().memoizedState = [a, void 0 === b ? null : b];
      return a;
    },
    useContext: Vg,
    useEffect: vi,
    useImperativeHandle: function useImperativeHandle(a, b, c) {
      c = null !== c && void 0 !== c ? c.concat([a]) : null;
      return ti(4194308, 4, yi.bind(null, b, a), c);
    },
    useLayoutEffect: function useLayoutEffect(a, b) {
      return ti(4194308, 4, a, b);
    },
    useInsertionEffect: function useInsertionEffect(a, b) {
      return ti(4, 2, a, b);
    },
    useMemo: function useMemo(a, b) {
      var c = ci();
      b = void 0 === b ? null : b;
      a = a();
      c.memoizedState = [a, b];
      return a;
    },
    useReducer: function useReducer(a, b, c) {
      var d = ci();
      b = void 0 !== c ? c(b) : b;
      d.memoizedState = d.baseState = b;
      a = {
        pending: null,
        interleaved: null,
        lanes: 0,
        dispatch: null,
        lastRenderedReducer: a,
        lastRenderedState: b
      };
      d.queue = a;
      a = a.dispatch = Gi.bind(null, N, a);
      return [d.memoizedState, a];
    },
    useRef: function useRef(a) {
      var b = ci();
      a = {
        current: a
      };
      return b.memoizedState = a;
    },
    useState: qi,
    useDebugValue: Ai,
    useDeferredValue: function useDeferredValue(a) {
      return ci().memoizedState = a;
    },
    useTransition: function useTransition() {
      var a = qi(!1),
        b = a[0];
      a = Ei.bind(null, a[1]);
      ci().memoizedState = a;
      return [b, a];
    },
    useMutableSource: function useMutableSource() {},
    useSyncExternalStore: function useSyncExternalStore(a, b, c) {
      var d = N,
        e = ci();
      if (I) {
        if (void 0 === c) throw Error(p(407));
        c = c();
      } else {
        c = b();
        if (null === R) throw Error(p(349));
        0 !== (Rh & 30) || ni(d, b, c);
      }
      e.memoizedState = c;
      var f = {
        value: c,
        getSnapshot: b
      };
      e.queue = f;
      vi(ki.bind(null, d, f, a), [a]);
      d.flags |= 2048;
      li(9, mi.bind(null, d, f, c, b), void 0, null);
      return c;
    },
    useId: function useId() {
      var a = ci(),
        b = R.identifierPrefix;
      if (I) {
        var c = sg;
        var d = rg;
        c = (d & ~(1 << 32 - oc(d) - 1)).toString(32) + c;
        b = ":" + b + "R" + c;
        c = Uh++;
        0 < c && (b += "H" + c.toString(32));
        b += ":";
      } else c = Vh++, b = ":" + b + "r" + c.toString(32) + ":";
      return a.memoizedState = b;
    },
    unstable_isNewReconciler: !1
  },
  Zh = {
    readContext: Vg,
    useCallback: Bi,
    useContext: Vg,
    useEffect: ji,
    useImperativeHandle: zi,
    useInsertionEffect: wi,
    useLayoutEffect: xi,
    useMemo: Ci,
    useReducer: fi,
    useRef: si,
    useState: function useState() {
      return fi(ei);
    },
    useDebugValue: Ai,
    useDeferredValue: function useDeferredValue(a) {
      var b = di();
      return Di(b, O.memoizedState, a);
    },
    useTransition: function useTransition() {
      var a = fi(ei)[0],
        b = di().memoizedState;
      return [a, b];
    },
    useMutableSource: hi,
    useSyncExternalStore: ii,
    useId: Fi,
    unstable_isNewReconciler: !1
  },
  $h = {
    readContext: Vg,
    useCallback: Bi,
    useContext: Vg,
    useEffect: ji,
    useImperativeHandle: zi,
    useInsertionEffect: wi,
    useLayoutEffect: xi,
    useMemo: Ci,
    useReducer: gi,
    useRef: si,
    useState: function useState() {
      return gi(ei);
    },
    useDebugValue: Ai,
    useDeferredValue: function useDeferredValue(a) {
      var b = di();
      return null === O ? b.memoizedState = a : Di(b, O.memoizedState, a);
    },
    useTransition: function useTransition() {
      var a = gi(ei)[0],
        b = di().memoizedState;
      return [a, b];
    },
    useMutableSource: hi,
    useSyncExternalStore: ii,
    useId: Fi,
    unstable_isNewReconciler: !1
  };
function Ki(a, b) {
  try {
    var c = "",
      d = b;
    do {
      c += Pa(d), d = d.return;
    } while (d);
    var e = c;
  } catch (f) {
    e = "\nError generating stack: " + f.message + "\n" + f.stack;
  }
  return {
    value: a,
    source: b,
    stack: e,
    digest: null
  };
}
function Li(a, b, c) {
  return {
    value: a,
    source: null,
    stack: null != c ? c : null,
    digest: null != b ? b : null
  };
}
function Mi(a, b) {
  try {
    console.error(b.value);
  } catch (c) {
    setTimeout(function () {
      throw c;
    });
  }
}
var Ni = "function" === typeof WeakMap ? WeakMap : Map;
function Oi(a, b, c) {
  c = ch(-1, c);
  c.tag = 3;
  c.payload = {
    element: null
  };
  var d = b.value;
  c.callback = function () {
    Pi || (Pi = !0, Qi = d);
    Mi(a, b);
  };
  return c;
}
function Ri(a, b, c) {
  c = ch(-1, c);
  c.tag = 3;
  var d = a.type.getDerivedStateFromError;
  if ("function" === typeof d) {
    var e = b.value;
    c.payload = function () {
      return d(e);
    };
    c.callback = function () {
      Mi(a, b);
    };
  }
  var f = a.stateNode;
  null !== f && "function" === typeof f.componentDidCatch && (c.callback = function () {
    Mi(a, b);
    "function" !== typeof d && (null === Si ? Si = new Set([this]) : Si.add(this));
    var c = b.stack;
    this.componentDidCatch(b.value, {
      componentStack: null !== c ? c : ""
    });
  });
  return c;
}
function Ti(a, b, c) {
  var d = a.pingCache;
  if (null === d) {
    d = a.pingCache = new Ni();
    var e = new Set();
    d.set(b, e);
  } else e = d.get(b), void 0 === e && (e = new Set(), d.set(b, e));
  e.has(c) || (e.add(c), a = Ui.bind(null, a, b, c), b.then(a, a));
}
function Vi(a) {
  do {
    var b;
    if (b = 13 === a.tag) b = a.memoizedState, b = null !== b ? null !== b.dehydrated ? !0 : !1 : !0;
    if (b) return a;
    a = a.return;
  } while (null !== a);
  return null;
}
function Wi(a, b, c, d, e) {
  if (0 === (a.mode & 1)) return a === b ? a.flags |= 65536 : (a.flags |= 128, c.flags |= 131072, c.flags &= -52805, 1 === c.tag && (null === c.alternate ? c.tag = 17 : (b = ch(-1, 1), b.tag = 2, dh(c, b, 1))), c.lanes |= 1), a;
  a.flags |= 65536;
  a.lanes = e;
  return a;
}
var Xi = ua.ReactCurrentOwner,
  Ug = !1;
function Yi(a, b, c, d) {
  b.child = null === a ? Ch(b, null, c, d) : Bh(b, a.child, c, d);
}
function Zi(a, b, c, d, e) {
  c = c.render;
  var f = b.ref;
  Tg(b, e);
  d = Xh(a, b, c, d, f, e);
  c = bi();
  if (null !== a && !Ug) return b.updateQueue = a.updateQueue, b.flags &= -2053, a.lanes &= ~e, $i(a, b, e);
  I && c && vg(b);
  b.flags |= 1;
  Yi(a, b, d, e);
  return b.child;
}
function aj(a, b, c, d, e) {
  if (null === a) {
    var f = c.type;
    if ("function" === typeof f && !bj(f) && void 0 === f.defaultProps && null === c.compare && void 0 === c.defaultProps) return b.tag = 15, b.type = f, cj(a, b, f, d, e);
    a = yh(c.type, null, d, b, b.mode, e);
    a.ref = b.ref;
    a.return = b;
    return b.child = a;
  }
  f = a.child;
  if (0 === (a.lanes & e)) {
    var g = f.memoizedProps;
    c = c.compare;
    c = null !== c ? c : Ie;
    if (c(g, d) && a.ref === b.ref) return $i(a, b, e);
  }
  b.flags |= 1;
  a = wh(f, d);
  a.ref = b.ref;
  a.return = b;
  return b.child = a;
}
function cj(a, b, c, d, e) {
  if (null !== a) {
    var f = a.memoizedProps;
    if (Ie(f, d) && a.ref === b.ref) if (Ug = !1, b.pendingProps = d = f, 0 !== (a.lanes & e)) 0 !== (a.flags & 131072) && (Ug = !0);else return b.lanes = a.lanes, $i(a, b, e);
  }
  return dj(a, b, c, d, e);
}
function ej(a, b, c) {
  var d = b.pendingProps,
    e = d.children,
    f = null !== a ? a.memoizedState : null;
  if ("hidden" === d.mode) {
    if (0 === (b.mode & 1)) b.memoizedState = {
      baseLanes: 0,
      cachePool: null,
      transitions: null
    }, G(fj, gj), gj |= c;else {
      if (0 === (c & 1073741824)) return a = null !== f ? f.baseLanes | c : c, b.lanes = b.childLanes = 1073741824, b.memoizedState = {
        baseLanes: a,
        cachePool: null,
        transitions: null
      }, b.updateQueue = null, G(fj, gj), gj |= a, null;
      b.memoizedState = {
        baseLanes: 0,
        cachePool: null,
        transitions: null
      };
      d = null !== f ? f.baseLanes : c;
      G(fj, gj);
      gj |= d;
    }
  } else null !== f ? (d = f.baseLanes | c, b.memoizedState = null) : d = c, G(fj, gj), gj |= d;
  Yi(a, b, e, c);
  return b.child;
}
function hj(a, b) {
  var c = b.ref;
  if (null === a && null !== c || null !== a && a.ref !== c) b.flags |= 512, b.flags |= 2097152;
}
function dj(a, b, c, d, e) {
  var f = Zf(c) ? Xf : H.current;
  f = Yf(b, f);
  Tg(b, e);
  c = Xh(a, b, c, d, f, e);
  d = bi();
  if (null !== a && !Ug) return b.updateQueue = a.updateQueue, b.flags &= -2053, a.lanes &= ~e, $i(a, b, e);
  I && d && vg(b);
  b.flags |= 1;
  Yi(a, b, c, e);
  return b.child;
}
function ij(a, b, c, d, e) {
  if (Zf(c)) {
    var f = !0;
    cg(b);
  } else f = !1;
  Tg(b, e);
  if (null === b.stateNode) jj(a, b), ph(b, c, d), rh(b, c, d, e), d = !0;else if (null === a) {
    var g = b.stateNode,
      h = b.memoizedProps;
    g.props = h;
    var k = g.context,
      l = c.contextType;
    "object" === typeof l && null !== l ? l = Vg(l) : (l = Zf(c) ? Xf : H.current, l = Yf(b, l));
    var m = c.getDerivedStateFromProps,
      q = "function" === typeof m || "function" === typeof g.getSnapshotBeforeUpdate;
    q || "function" !== typeof g.UNSAFE_componentWillReceiveProps && "function" !== typeof g.componentWillReceiveProps || (h !== d || k !== l) && qh(b, g, d, l);
    $g = !1;
    var r = b.memoizedState;
    g.state = r;
    gh(b, d, g, e);
    k = b.memoizedState;
    h !== d || r !== k || Wf.current || $g ? ("function" === typeof m && (kh(b, c, m, d), k = b.memoizedState), (h = $g || oh(b, c, h, d, r, k, l)) ? (q || "function" !== typeof g.UNSAFE_componentWillMount && "function" !== typeof g.componentWillMount || ("function" === typeof g.componentWillMount && g.componentWillMount(), "function" === typeof g.UNSAFE_componentWillMount && g.UNSAFE_componentWillMount()), "function" === typeof g.componentDidMount && (b.flags |= 4194308)) : ("function" === typeof g.componentDidMount && (b.flags |= 4194308), b.memoizedProps = d, b.memoizedState = k), g.props = d, g.state = k, g.context = l, d = h) : ("function" === typeof g.componentDidMount && (b.flags |= 4194308), d = !1);
  } else {
    g = b.stateNode;
    bh(a, b);
    h = b.memoizedProps;
    l = b.type === b.elementType ? h : Lg(b.type, h);
    g.props = l;
    q = b.pendingProps;
    r = g.context;
    k = c.contextType;
    "object" === typeof k && null !== k ? k = Vg(k) : (k = Zf(c) ? Xf : H.current, k = Yf(b, k));
    var y = c.getDerivedStateFromProps;
    (m = "function" === typeof y || "function" === typeof g.getSnapshotBeforeUpdate) || "function" !== typeof g.UNSAFE_componentWillReceiveProps && "function" !== typeof g.componentWillReceiveProps || (h !== q || r !== k) && qh(b, g, d, k);
    $g = !1;
    r = b.memoizedState;
    g.state = r;
    gh(b, d, g, e);
    var n = b.memoizedState;
    h !== q || r !== n || Wf.current || $g ? ("function" === typeof y && (kh(b, c, y, d), n = b.memoizedState), (l = $g || oh(b, c, l, d, r, n, k) || !1) ? (m || "function" !== typeof g.UNSAFE_componentWillUpdate && "function" !== typeof g.componentWillUpdate || ("function" === typeof g.componentWillUpdate && g.componentWillUpdate(d, n, k), "function" === typeof g.UNSAFE_componentWillUpdate && g.UNSAFE_componentWillUpdate(d, n, k)), "function" === typeof g.componentDidUpdate && (b.flags |= 4), "function" === typeof g.getSnapshotBeforeUpdate && (b.flags |= 1024)) : ("function" !== typeof g.componentDidUpdate || h === a.memoizedProps && r === a.memoizedState || (b.flags |= 4), "function" !== typeof g.getSnapshotBeforeUpdate || h === a.memoizedProps && r === a.memoizedState || (b.flags |= 1024), b.memoizedProps = d, b.memoizedState = n), g.props = d, g.state = n, g.context = k, d = l) : ("function" !== typeof g.componentDidUpdate || h === a.memoizedProps && r === a.memoizedState || (b.flags |= 4), "function" !== typeof g.getSnapshotBeforeUpdate || h === a.memoizedProps && r === a.memoizedState || (b.flags |= 1024), d = !1);
  }
  return kj(a, b, c, d, f, e);
}
function kj(a, b, c, d, e, f) {
  hj(a, b);
  var g = 0 !== (b.flags & 128);
  if (!d && !g) return e && dg(b, c, !1), $i(a, b, f);
  d = b.stateNode;
  Xi.current = b;
  var h = g && "function" !== typeof c.getDerivedStateFromError ? null : d.render();
  b.flags |= 1;
  null !== a && g ? (b.child = Bh(b, a.child, null, f), b.child = Bh(b, null, h, f)) : Yi(a, b, h, f);
  b.memoizedState = d.state;
  e && dg(b, c, !0);
  return b.child;
}
function lj(a) {
  var b = a.stateNode;
  b.pendingContext ? ag(a, b.pendingContext, b.pendingContext !== b.context) : b.context && ag(a, b.context, !1);
  Ih(a, b.containerInfo);
}
function mj(a, b, c, d, e) {
  Ig();
  Jg(e);
  b.flags |= 256;
  Yi(a, b, c, d);
  return b.child;
}
var nj = {
  dehydrated: null,
  treeContext: null,
  retryLane: 0
};
function oj(a) {
  return {
    baseLanes: a,
    cachePool: null,
    transitions: null
  };
}
function pj(a, b, c) {
  var d = b.pendingProps,
    e = M.current,
    f = !1,
    g = 0 !== (b.flags & 128),
    h;
  (h = g) || (h = null !== a && null === a.memoizedState ? !1 : 0 !== (e & 2));
  if (h) f = !0, b.flags &= -129;else if (null === a || null !== a.memoizedState) e |= 1;
  G(M, e & 1);
  if (null === a) {
    Eg(b);
    a = b.memoizedState;
    if (null !== a && (a = a.dehydrated, null !== a)) return 0 === (b.mode & 1) ? b.lanes = 1 : "$!" === a.data ? b.lanes = 8 : b.lanes = 1073741824, null;
    g = d.children;
    a = d.fallback;
    return f ? (d = b.mode, f = b.child, g = {
      mode: "hidden",
      children: g
    }, 0 === (d & 1) && null !== f ? (f.childLanes = 0, f.pendingProps = g) : f = qj(g, d, 0, null), a = Ah(a, d, c, null), f.return = b, a.return = b, f.sibling = a, b.child = f, b.child.memoizedState = oj(c), b.memoizedState = nj, a) : rj(b, g);
  }
  e = a.memoizedState;
  if (null !== e && (h = e.dehydrated, null !== h)) return sj(a, b, g, d, h, e, c);
  if (f) {
    f = d.fallback;
    g = b.mode;
    e = a.child;
    h = e.sibling;
    var k = {
      mode: "hidden",
      children: d.children
    };
    0 === (g & 1) && b.child !== e ? (d = b.child, d.childLanes = 0, d.pendingProps = k, b.deletions = null) : (d = wh(e, k), d.subtreeFlags = e.subtreeFlags & 14680064);
    null !== h ? f = wh(h, f) : (f = Ah(f, g, c, null), f.flags |= 2);
    f.return = b;
    d.return = b;
    d.sibling = f;
    b.child = d;
    d = f;
    f = b.child;
    g = a.child.memoizedState;
    g = null === g ? oj(c) : {
      baseLanes: g.baseLanes | c,
      cachePool: null,
      transitions: g.transitions
    };
    f.memoizedState = g;
    f.childLanes = a.childLanes & ~c;
    b.memoizedState = nj;
    return d;
  }
  f = a.child;
  a = f.sibling;
  d = wh(f, {
    mode: "visible",
    children: d.children
  });
  0 === (b.mode & 1) && (d.lanes = c);
  d.return = b;
  d.sibling = null;
  null !== a && (c = b.deletions, null === c ? (b.deletions = [a], b.flags |= 16) : c.push(a));
  b.child = d;
  b.memoizedState = null;
  return d;
}
function rj(a, b) {
  b = qj({
    mode: "visible",
    children: b
  }, a.mode, 0, null);
  b.return = a;
  return a.child = b;
}
function tj(a, b, c, d) {
  null !== d && Jg(d);
  Bh(b, a.child, null, c);
  a = rj(b, b.pendingProps.children);
  a.flags |= 2;
  b.memoizedState = null;
  return a;
}
function sj(a, b, c, d, e, f, g) {
  if (c) {
    if (b.flags & 256) return b.flags &= -257, d = Li(Error(p(422))), tj(a, b, g, d);
    if (null !== b.memoizedState) return b.child = a.child, b.flags |= 128, null;
    f = d.fallback;
    e = b.mode;
    d = qj({
      mode: "visible",
      children: d.children
    }, e, 0, null);
    f = Ah(f, e, g, null);
    f.flags |= 2;
    d.return = b;
    f.return = b;
    d.sibling = f;
    b.child = d;
    0 !== (b.mode & 1) && Bh(b, a.child, null, g);
    b.child.memoizedState = oj(g);
    b.memoizedState = nj;
    return f;
  }
  if (0 === (b.mode & 1)) return tj(a, b, g, null);
  if ("$!" === e.data) {
    d = e.nextSibling && e.nextSibling.dataset;
    if (d) var h = d.dgst;
    d = h;
    f = Error(p(419));
    d = Li(f, d, void 0);
    return tj(a, b, g, d);
  }
  h = 0 !== (g & a.childLanes);
  if (Ug || h) {
    d = R;
    if (null !== d) {
      switch (g & -g) {
        case 4:
          e = 2;
          break;
        case 16:
          e = 8;
          break;
        case 64:
        case 128:
        case 256:
        case 512:
        case 1024:
        case 2048:
        case 4096:
        case 8192:
        case 16384:
        case 32768:
        case 65536:
        case 131072:
        case 262144:
        case 524288:
        case 1048576:
        case 2097152:
        case 4194304:
        case 8388608:
        case 16777216:
        case 33554432:
        case 67108864:
          e = 32;
          break;
        case 536870912:
          e = 268435456;
          break;
        default:
          e = 0;
      }
      e = 0 !== (e & (d.suspendedLanes | g)) ? 0 : e;
      0 !== e && e !== f.retryLane && (f.retryLane = e, Zg(a, e), mh(d, a, e, -1));
    }
    uj();
    d = Li(Error(p(421)));
    return tj(a, b, g, d);
  }
  if ("$?" === e.data) return b.flags |= 128, b.child = a.child, b = vj.bind(null, a), e._reactRetry = b, null;
  a = f.treeContext;
  yg = Lf(e.nextSibling);
  xg = b;
  I = !0;
  zg = null;
  null !== a && (og[pg++] = rg, og[pg++] = sg, og[pg++] = qg, rg = a.id, sg = a.overflow, qg = b);
  b = rj(b, d.children);
  b.flags |= 4096;
  return b;
}
function wj(a, b, c) {
  a.lanes |= b;
  var d = a.alternate;
  null !== d && (d.lanes |= b);
  Sg(a.return, b, c);
}
function xj(a, b, c, d, e) {
  var f = a.memoizedState;
  null === f ? a.memoizedState = {
    isBackwards: b,
    rendering: null,
    renderingStartTime: 0,
    last: d,
    tail: c,
    tailMode: e
  } : (f.isBackwards = b, f.rendering = null, f.renderingStartTime = 0, f.last = d, f.tail = c, f.tailMode = e);
}
function yj(a, b, c) {
  var d = b.pendingProps,
    e = d.revealOrder,
    f = d.tail;
  Yi(a, b, d.children, c);
  d = M.current;
  if (0 !== (d & 2)) d = d & 1 | 2, b.flags |= 128;else {
    if (null !== a && 0 !== (a.flags & 128)) a: for (a = b.child; null !== a;) {
      if (13 === a.tag) null !== a.memoizedState && wj(a, c, b);else if (19 === a.tag) wj(a, c, b);else if (null !== a.child) {
        a.child.return = a;
        a = a.child;
        continue;
      }
      if (a === b) break a;
      for (; null === a.sibling;) {
        if (null === a.return || a.return === b) break a;
        a = a.return;
      }
      a.sibling.return = a.return;
      a = a.sibling;
    }
    d &= 1;
  }
  G(M, d);
  if (0 === (b.mode & 1)) b.memoizedState = null;else switch (e) {
    case "forwards":
      c = b.child;
      for (e = null; null !== c;) {
        a = c.alternate, null !== a && null === Mh(a) && (e = c), c = c.sibling;
      }
      c = e;
      null === c ? (e = b.child, b.child = null) : (e = c.sibling, c.sibling = null);
      xj(b, !1, e, c, f);
      break;
    case "backwards":
      c = null;
      e = b.child;
      for (b.child = null; null !== e;) {
        a = e.alternate;
        if (null !== a && null === Mh(a)) {
          b.child = e;
          break;
        }
        a = e.sibling;
        e.sibling = c;
        c = e;
        e = a;
      }
      xj(b, !0, c, null, f);
      break;
    case "together":
      xj(b, !1, null, null, void 0);
      break;
    default:
      b.memoizedState = null;
  }
  return b.child;
}
function jj(a, b) {
  0 === (b.mode & 1) && null !== a && (a.alternate = null, b.alternate = null, b.flags |= 2);
}
function $i(a, b, c) {
  null !== a && (b.dependencies = a.dependencies);
  hh |= b.lanes;
  if (0 === (c & b.childLanes)) return null;
  if (null !== a && b.child !== a.child) throw Error(p(153));
  if (null !== b.child) {
    a = b.child;
    c = wh(a, a.pendingProps);
    b.child = c;
    for (c.return = b; null !== a.sibling;) {
      a = a.sibling, c = c.sibling = wh(a, a.pendingProps), c.return = b;
    }
    c.sibling = null;
  }
  return b.child;
}
function zj(a, b, c) {
  switch (b.tag) {
    case 3:
      lj(b);
      Ig();
      break;
    case 5:
      Kh(b);
      break;
    case 1:
      Zf(b.type) && cg(b);
      break;
    case 4:
      Ih(b, b.stateNode.containerInfo);
      break;
    case 10:
      var d = b.type._context,
        e = b.memoizedProps.value;
      G(Mg, d._currentValue);
      d._currentValue = e;
      break;
    case 13:
      d = b.memoizedState;
      if (null !== d) {
        if (null !== d.dehydrated) return G(M, M.current & 1), b.flags |= 128, null;
        if (0 !== (c & b.child.childLanes)) return pj(a, b, c);
        G(M, M.current & 1);
        a = $i(a, b, c);
        return null !== a ? a.sibling : null;
      }
      G(M, M.current & 1);
      break;
    case 19:
      d = 0 !== (c & b.childLanes);
      if (0 !== (a.flags & 128)) {
        if (d) return yj(a, b, c);
        b.flags |= 128;
      }
      e = b.memoizedState;
      null !== e && (e.rendering = null, e.tail = null, e.lastEffect = null);
      G(M, M.current);
      if (d) break;else return null;
    case 22:
    case 23:
      return b.lanes = 0, ej(a, b, c);
  }
  return $i(a, b, c);
}
var Aj, Bj, Cj, Dj;
Aj = function Aj(a, b) {
  for (var c = b.child; null !== c;) {
    if (5 === c.tag || 6 === c.tag) a.appendChild(c.stateNode);else if (4 !== c.tag && null !== c.child) {
      c.child.return = c;
      c = c.child;
      continue;
    }
    if (c === b) break;
    for (; null === c.sibling;) {
      if (null === c.return || c.return === b) return;
      c = c.return;
    }
    c.sibling.return = c.return;
    c = c.sibling;
  }
};
Bj = function Bj() {};
Cj = function Cj(a, b, c, d) {
  var e = a.memoizedProps;
  if (e !== d) {
    a = b.stateNode;
    Hh(Eh.current);
    var f = null;
    switch (c) {
      case "input":
        e = Ya(a, e);
        d = Ya(a, d);
        f = [];
        break;
      case "select":
        e = A({}, e, {
          value: void 0
        });
        d = A({}, d, {
          value: void 0
        });
        f = [];
        break;
      case "textarea":
        e = gb(a, e);
        d = gb(a, d);
        f = [];
        break;
      default:
        "function" !== typeof e.onClick && "function" === typeof d.onClick && (a.onclick = Bf);
    }
    ub(c, d);
    var g;
    c = null;
    for (l in e) {
      if (!d.hasOwnProperty(l) && e.hasOwnProperty(l) && null != e[l]) if ("style" === l) {
        var h = e[l];
        for (g in h) {
          h.hasOwnProperty(g) && (c || (c = {}), c[g] = "");
        }
      } else "dangerouslySetInnerHTML" !== l && "children" !== l && "suppressContentEditableWarning" !== l && "suppressHydrationWarning" !== l && "autoFocus" !== l && (ea.hasOwnProperty(l) ? f || (f = []) : (f = f || []).push(l, null));
    }
    for (l in d) {
      var k = d[l];
      h = null != e ? e[l] : void 0;
      if (d.hasOwnProperty(l) && k !== h && (null != k || null != h)) if ("style" === l) {
        if (h) {
          for (g in h) {
            !h.hasOwnProperty(g) || k && k.hasOwnProperty(g) || (c || (c = {}), c[g] = "");
          }
          for (g in k) {
            k.hasOwnProperty(g) && h[g] !== k[g] && (c || (c = {}), c[g] = k[g]);
          }
        } else c || (f || (f = []), f.push(l, c)), c = k;
      } else "dangerouslySetInnerHTML" === l ? (k = k ? k.__html : void 0, h = h ? h.__html : void 0, null != k && h !== k && (f = f || []).push(l, k)) : "children" === l ? "string" !== typeof k && "number" !== typeof k || (f = f || []).push(l, "" + k) : "suppressContentEditableWarning" !== l && "suppressHydrationWarning" !== l && (ea.hasOwnProperty(l) ? (null != k && "onScroll" === l && D("scroll", a), f || h === k || (f = [])) : (f = f || []).push(l, k));
    }
    c && (f = f || []).push("style", c);
    var l = f;
    if (b.updateQueue = l) b.flags |= 4;
  }
};
Dj = function Dj(a, b, c, d) {
  c !== d && (b.flags |= 4);
};
function Ej(a, b) {
  if (!I) switch (a.tailMode) {
    case "hidden":
      b = a.tail;
      for (var c = null; null !== b;) {
        null !== b.alternate && (c = b), b = b.sibling;
      }
      null === c ? a.tail = null : c.sibling = null;
      break;
    case "collapsed":
      c = a.tail;
      for (var d = null; null !== c;) {
        null !== c.alternate && (d = c), c = c.sibling;
      }
      null === d ? b || null === a.tail ? a.tail = null : a.tail.sibling = null : d.sibling = null;
  }
}
function S(a) {
  var b = null !== a.alternate && a.alternate.child === a.child,
    c = 0,
    d = 0;
  if (b) for (var e = a.child; null !== e;) {
    c |= e.lanes | e.childLanes, d |= e.subtreeFlags & 14680064, d |= e.flags & 14680064, e.return = a, e = e.sibling;
  } else for (e = a.child; null !== e;) {
    c |= e.lanes | e.childLanes, d |= e.subtreeFlags, d |= e.flags, e.return = a, e = e.sibling;
  }
  a.subtreeFlags |= d;
  a.childLanes = c;
  return b;
}
function Fj(a, b, c) {
  var d = b.pendingProps;
  wg(b);
  switch (b.tag) {
    case 2:
    case 16:
    case 15:
    case 0:
    case 11:
    case 7:
    case 8:
    case 12:
    case 9:
    case 14:
      return S(b), null;
    case 1:
      return Zf(b.type) && $f(), S(b), null;
    case 3:
      d = b.stateNode;
      Jh();
      E(Wf);
      E(H);
      Oh();
      d.pendingContext && (d.context = d.pendingContext, d.pendingContext = null);
      if (null === a || null === a.child) Gg(b) ? b.flags |= 4 : null === a || a.memoizedState.isDehydrated && 0 === (b.flags & 256) || (b.flags |= 1024, null !== zg && (Gj(zg), zg = null));
      Bj(a, b);
      S(b);
      return null;
    case 5:
      Lh(b);
      var e = Hh(Gh.current);
      c = b.type;
      if (null !== a && null != b.stateNode) Cj(a, b, c, d, e), a.ref !== b.ref && (b.flags |= 512, b.flags |= 2097152);else {
        if (!d) {
          if (null === b.stateNode) throw Error(p(166));
          S(b);
          return null;
        }
        a = Hh(Eh.current);
        if (Gg(b)) {
          d = b.stateNode;
          c = b.type;
          var f = b.memoizedProps;
          d[Of] = b;
          d[Pf] = f;
          a = 0 !== (b.mode & 1);
          switch (c) {
            case "dialog":
              D("cancel", d);
              D("close", d);
              break;
            case "iframe":
            case "object":
            case "embed":
              D("load", d);
              break;
            case "video":
            case "audio":
              for (e = 0; e < lf.length; e++) {
                D(lf[e], d);
              }
              break;
            case "source":
              D("error", d);
              break;
            case "img":
            case "image":
            case "link":
              D("error", d);
              D("load", d);
              break;
            case "details":
              D("toggle", d);
              break;
            case "input":
              Za(d, f);
              D("invalid", d);
              break;
            case "select":
              d._wrapperState = {
                wasMultiple: !!f.multiple
              };
              D("invalid", d);
              break;
            case "textarea":
              hb(d, f), D("invalid", d);
          }
          ub(c, f);
          e = null;
          for (var g in f) {
            if (f.hasOwnProperty(g)) {
              var h = f[g];
              "children" === g ? "string" === typeof h ? d.textContent !== h && (!0 !== f.suppressHydrationWarning && Af(d.textContent, h, a), e = ["children", h]) : "number" === typeof h && d.textContent !== "" + h && (!0 !== f.suppressHydrationWarning && Af(d.textContent, h, a), e = ["children", "" + h]) : ea.hasOwnProperty(g) && null != h && "onScroll" === g && D("scroll", d);
            }
          }
          switch (c) {
            case "input":
              Va(d);
              db(d, f, !0);
              break;
            case "textarea":
              Va(d);
              jb(d);
              break;
            case "select":
            case "option":
              break;
            default:
              "function" === typeof f.onClick && (d.onclick = Bf);
          }
          d = e;
          b.updateQueue = d;
          null !== d && (b.flags |= 4);
        } else {
          g = 9 === e.nodeType ? e : e.ownerDocument;
          "http://www.w3.org/1999/xhtml" === a && (a = kb(c));
          "http://www.w3.org/1999/xhtml" === a ? "script" === c ? (a = g.createElement("div"), a.innerHTML = "<script>\x3c/script>", a = a.removeChild(a.firstChild)) : "string" === typeof d.is ? a = g.createElement(c, {
            is: d.is
          }) : (a = g.createElement(c), "select" === c && (g = a, d.multiple ? g.multiple = !0 : d.size && (g.size = d.size))) : a = g.createElementNS(a, c);
          a[Of] = b;
          a[Pf] = d;
          Aj(a, b, !1, !1);
          b.stateNode = a;
          a: {
            g = vb(c, d);
            switch (c) {
              case "dialog":
                D("cancel", a);
                D("close", a);
                e = d;
                break;
              case "iframe":
              case "object":
              case "embed":
                D("load", a);
                e = d;
                break;
              case "video":
              case "audio":
                for (e = 0; e < lf.length; e++) {
                  D(lf[e], a);
                }
                e = d;
                break;
              case "source":
                D("error", a);
                e = d;
                break;
              case "img":
              case "image":
              case "link":
                D("error", a);
                D("load", a);
                e = d;
                break;
              case "details":
                D("toggle", a);
                e = d;
                break;
              case "input":
                Za(a, d);
                e = Ya(a, d);
                D("invalid", a);
                break;
              case "option":
                e = d;
                break;
              case "select":
                a._wrapperState = {
                  wasMultiple: !!d.multiple
                };
                e = A({}, d, {
                  value: void 0
                });
                D("invalid", a);
                break;
              case "textarea":
                hb(a, d);
                e = gb(a, d);
                D("invalid", a);
                break;
              default:
                e = d;
            }
            ub(c, e);
            h = e;
            for (f in h) {
              if (h.hasOwnProperty(f)) {
                var k = h[f];
                "style" === f ? sb(a, k) : "dangerouslySetInnerHTML" === f ? (k = k ? k.__html : void 0, null != k && nb(a, k)) : "children" === f ? "string" === typeof k ? ("textarea" !== c || "" !== k) && ob(a, k) : "number" === typeof k && ob(a, "" + k) : "suppressContentEditableWarning" !== f && "suppressHydrationWarning" !== f && "autoFocus" !== f && (ea.hasOwnProperty(f) ? null != k && "onScroll" === f && D("scroll", a) : null != k && ta(a, f, k, g));
              }
            }
            switch (c) {
              case "input":
                Va(a);
                db(a, d, !1);
                break;
              case "textarea":
                Va(a);
                jb(a);
                break;
              case "option":
                null != d.value && a.setAttribute("value", "" + Sa(d.value));
                break;
              case "select":
                a.multiple = !!d.multiple;
                f = d.value;
                null != f ? fb(a, !!d.multiple, f, !1) : null != d.defaultValue && fb(a, !!d.multiple, d.defaultValue, !0);
                break;
              default:
                "function" === typeof e.onClick && (a.onclick = Bf);
            }
            switch (c) {
              case "button":
              case "input":
              case "select":
              case "textarea":
                d = !!d.autoFocus;
                break a;
              case "img":
                d = !0;
                break a;
              default:
                d = !1;
            }
          }
          d && (b.flags |= 4);
        }
        null !== b.ref && (b.flags |= 512, b.flags |= 2097152);
      }
      S(b);
      return null;
    case 6:
      if (a && null != b.stateNode) Dj(a, b, a.memoizedProps, d);else {
        if ("string" !== typeof d && null === b.stateNode) throw Error(p(166));
        c = Hh(Gh.current);
        Hh(Eh.current);
        if (Gg(b)) {
          d = b.stateNode;
          c = b.memoizedProps;
          d[Of] = b;
          if (f = d.nodeValue !== c) if (a = xg, null !== a) switch (a.tag) {
            case 3:
              Af(d.nodeValue, c, 0 !== (a.mode & 1));
              break;
            case 5:
              !0 !== a.memoizedProps.suppressHydrationWarning && Af(d.nodeValue, c, 0 !== (a.mode & 1));
          }
          f && (b.flags |= 4);
        } else d = (9 === c.nodeType ? c : c.ownerDocument).createTextNode(d), d[Of] = b, b.stateNode = d;
      }
      S(b);
      return null;
    case 13:
      E(M);
      d = b.memoizedState;
      if (null === a || null !== a.memoizedState && null !== a.memoizedState.dehydrated) {
        if (I && null !== yg && 0 !== (b.mode & 1) && 0 === (b.flags & 128)) Hg(), Ig(), b.flags |= 98560, f = !1;else if (f = Gg(b), null !== d && null !== d.dehydrated) {
          if (null === a) {
            if (!f) throw Error(p(318));
            f = b.memoizedState;
            f = null !== f ? f.dehydrated : null;
            if (!f) throw Error(p(317));
            f[Of] = b;
          } else Ig(), 0 === (b.flags & 128) && (b.memoizedState = null), b.flags |= 4;
          S(b);
          f = !1;
        } else null !== zg && (Gj(zg), zg = null), f = !0;
        if (!f) return b.flags & 65536 ? b : null;
      }
      if (0 !== (b.flags & 128)) return b.lanes = c, b;
      d = null !== d;
      d !== (null !== a && null !== a.memoizedState) && d && (b.child.flags |= 8192, 0 !== (b.mode & 1) && (null === a || 0 !== (M.current & 1) ? 0 === T && (T = 3) : uj()));
      null !== b.updateQueue && (b.flags |= 4);
      S(b);
      return null;
    case 4:
      return Jh(), Bj(a, b), null === a && sf(b.stateNode.containerInfo), S(b), null;
    case 10:
      return Rg(b.type._context), S(b), null;
    case 17:
      return Zf(b.type) && $f(), S(b), null;
    case 19:
      E(M);
      f = b.memoizedState;
      if (null === f) return S(b), null;
      d = 0 !== (b.flags & 128);
      g = f.rendering;
      if (null === g) {
        if (d) Ej(f, !1);else {
          if (0 !== T || null !== a && 0 !== (a.flags & 128)) for (a = b.child; null !== a;) {
            g = Mh(a);
            if (null !== g) {
              b.flags |= 128;
              Ej(f, !1);
              d = g.updateQueue;
              null !== d && (b.updateQueue = d, b.flags |= 4);
              b.subtreeFlags = 0;
              d = c;
              for (c = b.child; null !== c;) {
                f = c, a = d, f.flags &= 14680066, g = f.alternate, null === g ? (f.childLanes = 0, f.lanes = a, f.child = null, f.subtreeFlags = 0, f.memoizedProps = null, f.memoizedState = null, f.updateQueue = null, f.dependencies = null, f.stateNode = null) : (f.childLanes = g.childLanes, f.lanes = g.lanes, f.child = g.child, f.subtreeFlags = 0, f.deletions = null, f.memoizedProps = g.memoizedProps, f.memoizedState = g.memoizedState, f.updateQueue = g.updateQueue, f.type = g.type, a = g.dependencies, f.dependencies = null === a ? null : {
                  lanes: a.lanes,
                  firstContext: a.firstContext
                }), c = c.sibling;
              }
              G(M, M.current & 1 | 2);
              return b.child;
            }
            a = a.sibling;
          }
          null !== f.tail && B() > Hj && (b.flags |= 128, d = !0, Ej(f, !1), b.lanes = 4194304);
        }
      } else {
        if (!d) if (a = Mh(g), null !== a) {
          if (b.flags |= 128, d = !0, c = a.updateQueue, null !== c && (b.updateQueue = c, b.flags |= 4), Ej(f, !0), null === f.tail && "hidden" === f.tailMode && !g.alternate && !I) return S(b), null;
        } else 2 * B() - f.renderingStartTime > Hj && 1073741824 !== c && (b.flags |= 128, d = !0, Ej(f, !1), b.lanes = 4194304);
        f.isBackwards ? (g.sibling = b.child, b.child = g) : (c = f.last, null !== c ? c.sibling = g : b.child = g, f.last = g);
      }
      if (null !== f.tail) return b = f.tail, f.rendering = b, f.tail = b.sibling, f.renderingStartTime = B(), b.sibling = null, c = M.current, G(M, d ? c & 1 | 2 : c & 1), b;
      S(b);
      return null;
    case 22:
    case 23:
      return Ij(), d = null !== b.memoizedState, null !== a && null !== a.memoizedState !== d && (b.flags |= 8192), d && 0 !== (b.mode & 1) ? 0 !== (gj & 1073741824) && (S(b), b.subtreeFlags & 6 && (b.flags |= 8192)) : S(b), null;
    case 24:
      return null;
    case 25:
      return null;
  }
  throw Error(p(156, b.tag));
}
function Jj(a, b) {
  wg(b);
  switch (b.tag) {
    case 1:
      return Zf(b.type) && $f(), a = b.flags, a & 65536 ? (b.flags = a & -65537 | 128, b) : null;
    case 3:
      return Jh(), E(Wf), E(H), Oh(), a = b.flags, 0 !== (a & 65536) && 0 === (a & 128) ? (b.flags = a & -65537 | 128, b) : null;
    case 5:
      return Lh(b), null;
    case 13:
      E(M);
      a = b.memoizedState;
      if (null !== a && null !== a.dehydrated) {
        if (null === b.alternate) throw Error(p(340));
        Ig();
      }
      a = b.flags;
      return a & 65536 ? (b.flags = a & -65537 | 128, b) : null;
    case 19:
      return E(M), null;
    case 4:
      return Jh(), null;
    case 10:
      return Rg(b.type._context), null;
    case 22:
    case 23:
      return Ij(), null;
    case 24:
      return null;
    default:
      return null;
  }
}
var Kj = !1,
  U = !1,
  Lj = "function" === typeof WeakSet ? WeakSet : Set,
  V = null;
function Mj(a, b) {
  var c = a.ref;
  if (null !== c) if ("function" === typeof c) try {
    c(null);
  } catch (d) {
    W(a, b, d);
  } else c.current = null;
}
function Nj(a, b, c) {
  try {
    c();
  } catch (d) {
    W(a, b, d);
  }
}
var Oj = !1;
function Pj(a, b) {
  Cf = dd;
  a = Me();
  if (Ne(a)) {
    if ("selectionStart" in a) var c = {
      start: a.selectionStart,
      end: a.selectionEnd
    };else a: {
      c = (c = a.ownerDocument) && c.defaultView || window;
      var d = c.getSelection && c.getSelection();
      if (d && 0 !== d.rangeCount) {
        c = d.anchorNode;
        var e = d.anchorOffset,
          f = d.focusNode;
        d = d.focusOffset;
        try {
          c.nodeType, f.nodeType;
        } catch (F) {
          c = null;
          break a;
        }
        var g = 0,
          h = -1,
          k = -1,
          l = 0,
          m = 0,
          q = a,
          r = null;
        b: for (;;) {
          for (var y;;) {
            q !== c || 0 !== e && 3 !== q.nodeType || (h = g + e);
            q !== f || 0 !== d && 3 !== q.nodeType || (k = g + d);
            3 === q.nodeType && (g += q.nodeValue.length);
            if (null === (y = q.firstChild)) break;
            r = q;
            q = y;
          }
          for (;;) {
            if (q === a) break b;
            r === c && ++l === e && (h = g);
            r === f && ++m === d && (k = g);
            if (null !== (y = q.nextSibling)) break;
            q = r;
            r = q.parentNode;
          }
          q = y;
        }
        c = -1 === h || -1 === k ? null : {
          start: h,
          end: k
        };
      } else c = null;
    }
    c = c || {
      start: 0,
      end: 0
    };
  } else c = null;
  Df = {
    focusedElem: a,
    selectionRange: c
  };
  dd = !1;
  for (V = b; null !== V;) {
    if (b = V, a = b.child, 0 !== (b.subtreeFlags & 1028) && null !== a) a.return = b, V = a;else for (; null !== V;) {
      b = V;
      try {
        var n = b.alternate;
        if (0 !== (b.flags & 1024)) switch (b.tag) {
          case 0:
          case 11:
          case 15:
            break;
          case 1:
            if (null !== n) {
              var t = n.memoizedProps,
                J = n.memoizedState,
                x = b.stateNode,
                w = x.getSnapshotBeforeUpdate(b.elementType === b.type ? t : Lg(b.type, t), J);
              x.__reactInternalSnapshotBeforeUpdate = w;
            }
            break;
          case 3:
            var u = b.stateNode.containerInfo;
            1 === u.nodeType ? u.textContent = "" : 9 === u.nodeType && u.documentElement && u.removeChild(u.documentElement);
            break;
          case 5:
          case 6:
          case 4:
          case 17:
            break;
          default:
            throw Error(p(163));
        }
      } catch (F) {
        W(b, b.return, F);
      }
      a = b.sibling;
      if (null !== a) {
        a.return = b.return;
        V = a;
        break;
      }
      V = b.return;
    }
  }
  n = Oj;
  Oj = !1;
  return n;
}
function Qj(a, b, c) {
  var d = b.updateQueue;
  d = null !== d ? d.lastEffect : null;
  if (null !== d) {
    var e = d = d.next;
    do {
      if ((e.tag & a) === a) {
        var f = e.destroy;
        e.destroy = void 0;
        void 0 !== f && Nj(b, c, f);
      }
      e = e.next;
    } while (e !== d);
  }
}
function Rj(a, b) {
  b = b.updateQueue;
  b = null !== b ? b.lastEffect : null;
  if (null !== b) {
    var c = b = b.next;
    do {
      if ((c.tag & a) === a) {
        var d = c.create;
        c.destroy = d();
      }
      c = c.next;
    } while (c !== b);
  }
}
function Sj(a) {
  var b = a.ref;
  if (null !== b) {
    var c = a.stateNode;
    switch (a.tag) {
      case 5:
        a = c;
        break;
      default:
        a = c;
    }
    "function" === typeof b ? b(a) : b.current = a;
  }
}
function Tj(a) {
  var b = a.alternate;
  null !== b && (a.alternate = null, Tj(b));
  a.child = null;
  a.deletions = null;
  a.sibling = null;
  5 === a.tag && (b = a.stateNode, null !== b && (delete b[Of], delete b[Pf], delete b[of], delete b[Qf], delete b[Rf]));
  a.stateNode = null;
  a.return = null;
  a.dependencies = null;
  a.memoizedProps = null;
  a.memoizedState = null;
  a.pendingProps = null;
  a.stateNode = null;
  a.updateQueue = null;
}
function Uj(a) {
  return 5 === a.tag || 3 === a.tag || 4 === a.tag;
}
function Vj(a) {
  a: for (;;) {
    for (; null === a.sibling;) {
      if (null === a.return || Uj(a.return)) return null;
      a = a.return;
    }
    a.sibling.return = a.return;
    for (a = a.sibling; 5 !== a.tag && 6 !== a.tag && 18 !== a.tag;) {
      if (a.flags & 2) continue a;
      if (null === a.child || 4 === a.tag) continue a;else a.child.return = a, a = a.child;
    }
    if (!(a.flags & 2)) return a.stateNode;
  }
}
function Wj(a, b, c) {
  var d = a.tag;
  if (5 === d || 6 === d) a = a.stateNode, b ? 8 === c.nodeType ? c.parentNode.insertBefore(a, b) : c.insertBefore(a, b) : (8 === c.nodeType ? (b = c.parentNode, b.insertBefore(a, c)) : (b = c, b.appendChild(a)), c = c._reactRootContainer, null !== c && void 0 !== c || null !== b.onclick || (b.onclick = Bf));else if (4 !== d && (a = a.child, null !== a)) for (Wj(a, b, c), a = a.sibling; null !== a;) {
    Wj(a, b, c), a = a.sibling;
  }
}
function Xj(a, b, c) {
  var d = a.tag;
  if (5 === d || 6 === d) a = a.stateNode, b ? c.insertBefore(a, b) : c.appendChild(a);else if (4 !== d && (a = a.child, null !== a)) for (Xj(a, b, c), a = a.sibling; null !== a;) {
    Xj(a, b, c), a = a.sibling;
  }
}
var X = null,
  Yj = !1;
function Zj(a, b, c) {
  for (c = c.child; null !== c;) {
    ak(a, b, c), c = c.sibling;
  }
}
function ak(a, b, c) {
  if (lc && "function" === typeof lc.onCommitFiberUnmount) try {
    lc.onCommitFiberUnmount(kc, c);
  } catch (h) {}
  switch (c.tag) {
    case 5:
      U || Mj(c, b);
    case 6:
      var d = X,
        e = Yj;
      X = null;
      Zj(a, b, c);
      X = d;
      Yj = e;
      null !== X && (Yj ? (a = X, c = c.stateNode, 8 === a.nodeType ? a.parentNode.removeChild(c) : a.removeChild(c)) : X.removeChild(c.stateNode));
      break;
    case 18:
      null !== X && (Yj ? (a = X, c = c.stateNode, 8 === a.nodeType ? Kf(a.parentNode, c) : 1 === a.nodeType && Kf(a, c), bd(a)) : Kf(X, c.stateNode));
      break;
    case 4:
      d = X;
      e = Yj;
      X = c.stateNode.containerInfo;
      Yj = !0;
      Zj(a, b, c);
      X = d;
      Yj = e;
      break;
    case 0:
    case 11:
    case 14:
    case 15:
      if (!U && (d = c.updateQueue, null !== d && (d = d.lastEffect, null !== d))) {
        e = d = d.next;
        do {
          var f = e,
            g = f.destroy;
          f = f.tag;
          void 0 !== g && (0 !== (f & 2) ? Nj(c, b, g) : 0 !== (f & 4) && Nj(c, b, g));
          e = e.next;
        } while (e !== d);
      }
      Zj(a, b, c);
      break;
    case 1:
      if (!U && (Mj(c, b), d = c.stateNode, "function" === typeof d.componentWillUnmount)) try {
        d.props = c.memoizedProps, d.state = c.memoizedState, d.componentWillUnmount();
      } catch (h) {
        W(c, b, h);
      }
      Zj(a, b, c);
      break;
    case 21:
      Zj(a, b, c);
      break;
    case 22:
      c.mode & 1 ? (U = (d = U) || null !== c.memoizedState, Zj(a, b, c), U = d) : Zj(a, b, c);
      break;
    default:
      Zj(a, b, c);
  }
}
function bk(a) {
  var b = a.updateQueue;
  if (null !== b) {
    a.updateQueue = null;
    var c = a.stateNode;
    null === c && (c = a.stateNode = new Lj());
    b.forEach(function (b) {
      var d = ck.bind(null, a, b);
      c.has(b) || (c.add(b), b.then(d, d));
    });
  }
}
function dk(a, b) {
  var c = b.deletions;
  if (null !== c) for (var d = 0; d < c.length; d++) {
    var e = c[d];
    try {
      var f = a,
        g = b,
        h = g;
      a: for (; null !== h;) {
        switch (h.tag) {
          case 5:
            X = h.stateNode;
            Yj = !1;
            break a;
          case 3:
            X = h.stateNode.containerInfo;
            Yj = !0;
            break a;
          case 4:
            X = h.stateNode.containerInfo;
            Yj = !0;
            break a;
        }
        h = h.return;
      }
      if (null === X) throw Error(p(160));
      ak(f, g, e);
      X = null;
      Yj = !1;
      var k = e.alternate;
      null !== k && (k.return = null);
      e.return = null;
    } catch (l) {
      W(e, b, l);
    }
  }
  if (b.subtreeFlags & 12854) for (b = b.child; null !== b;) {
    ek(b, a), b = b.sibling;
  }
}
function ek(a, b) {
  var c = a.alternate,
    d = a.flags;
  switch (a.tag) {
    case 0:
    case 11:
    case 14:
    case 15:
      dk(b, a);
      fk(a);
      if (d & 4) {
        try {
          Qj(3, a, a.return), Rj(3, a);
        } catch (t) {
          W(a, a.return, t);
        }
        try {
          Qj(5, a, a.return);
        } catch (t) {
          W(a, a.return, t);
        }
      }
      break;
    case 1:
      dk(b, a);
      fk(a);
      d & 512 && null !== c && Mj(c, c.return);
      break;
    case 5:
      dk(b, a);
      fk(a);
      d & 512 && null !== c && Mj(c, c.return);
      if (a.flags & 32) {
        var e = a.stateNode;
        try {
          ob(e, "");
        } catch (t) {
          W(a, a.return, t);
        }
      }
      if (d & 4 && (e = a.stateNode, null != e)) {
        var f = a.memoizedProps,
          g = null !== c ? c.memoizedProps : f,
          h = a.type,
          k = a.updateQueue;
        a.updateQueue = null;
        if (null !== k) try {
          "input" === h && "radio" === f.type && null != f.name && ab(e, f);
          vb(h, g);
          var l = vb(h, f);
          for (g = 0; g < k.length; g += 2) {
            var m = k[g],
              q = k[g + 1];
            "style" === m ? sb(e, q) : "dangerouslySetInnerHTML" === m ? nb(e, q) : "children" === m ? ob(e, q) : ta(e, m, q, l);
          }
          switch (h) {
            case "input":
              bb(e, f);
              break;
            case "textarea":
              ib(e, f);
              break;
            case "select":
              var r = e._wrapperState.wasMultiple;
              e._wrapperState.wasMultiple = !!f.multiple;
              var y = f.value;
              null != y ? fb(e, !!f.multiple, y, !1) : r !== !!f.multiple && (null != f.defaultValue ? fb(e, !!f.multiple, f.defaultValue, !0) : fb(e, !!f.multiple, f.multiple ? [] : "", !1));
          }
          e[Pf] = f;
        } catch (t) {
          W(a, a.return, t);
        }
      }
      break;
    case 6:
      dk(b, a);
      fk(a);
      if (d & 4) {
        if (null === a.stateNode) throw Error(p(162));
        e = a.stateNode;
        f = a.memoizedProps;
        try {
          e.nodeValue = f;
        } catch (t) {
          W(a, a.return, t);
        }
      }
      break;
    case 3:
      dk(b, a);
      fk(a);
      if (d & 4 && null !== c && c.memoizedState.isDehydrated) try {
        bd(b.containerInfo);
      } catch (t) {
        W(a, a.return, t);
      }
      break;
    case 4:
      dk(b, a);
      fk(a);
      break;
    case 13:
      dk(b, a);
      fk(a);
      e = a.child;
      e.flags & 8192 && (f = null !== e.memoizedState, e.stateNode.isHidden = f, !f || null !== e.alternate && null !== e.alternate.memoizedState || (gk = B()));
      d & 4 && bk(a);
      break;
    case 22:
      m = null !== c && null !== c.memoizedState;
      a.mode & 1 ? (U = (l = U) || m, dk(b, a), U = l) : dk(b, a);
      fk(a);
      if (d & 8192) {
        l = null !== a.memoizedState;
        if ((a.stateNode.isHidden = l) && !m && 0 !== (a.mode & 1)) for (V = a, m = a.child; null !== m;) {
          for (q = V = m; null !== V;) {
            r = V;
            y = r.child;
            switch (r.tag) {
              case 0:
              case 11:
              case 14:
              case 15:
                Qj(4, r, r.return);
                break;
              case 1:
                Mj(r, r.return);
                var n = r.stateNode;
                if ("function" === typeof n.componentWillUnmount) {
                  d = r;
                  c = r.return;
                  try {
                    b = d, n.props = b.memoizedProps, n.state = b.memoizedState, n.componentWillUnmount();
                  } catch (t) {
                    W(d, c, t);
                  }
                }
                break;
              case 5:
                Mj(r, r.return);
                break;
              case 22:
                if (null !== r.memoizedState) {
                  hk(q);
                  continue;
                }
            }
            null !== y ? (y.return = r, V = y) : hk(q);
          }
          m = m.sibling;
        }
        a: for (m = null, q = a;;) {
          if (5 === q.tag) {
            if (null === m) {
              m = q;
              try {
                e = q.stateNode, l ? (f = e.style, "function" === typeof f.setProperty ? f.setProperty("display", "none", "important") : f.display = "none") : (h = q.stateNode, k = q.memoizedProps.style, g = void 0 !== k && null !== k && k.hasOwnProperty("display") ? k.display : null, h.style.display = rb("display", g));
              } catch (t) {
                W(a, a.return, t);
              }
            }
          } else if (6 === q.tag) {
            if (null === m) try {
              q.stateNode.nodeValue = l ? "" : q.memoizedProps;
            } catch (t) {
              W(a, a.return, t);
            }
          } else if ((22 !== q.tag && 23 !== q.tag || null === q.memoizedState || q === a) && null !== q.child) {
            q.child.return = q;
            q = q.child;
            continue;
          }
          if (q === a) break a;
          for (; null === q.sibling;) {
            if (null === q.return || q.return === a) break a;
            m === q && (m = null);
            q = q.return;
          }
          m === q && (m = null);
          q.sibling.return = q.return;
          q = q.sibling;
        }
      }
      break;
    case 19:
      dk(b, a);
      fk(a);
      d & 4 && bk(a);
      break;
    case 21:
      break;
    default:
      dk(b, a), fk(a);
  }
}
function fk(a) {
  var b = a.flags;
  if (b & 2) {
    try {
      a: {
        for (var c = a.return; null !== c;) {
          if (Uj(c)) {
            var d = c;
            break a;
          }
          c = c.return;
        }
        throw Error(p(160));
      }
      switch (d.tag) {
        case 5:
          var e = d.stateNode;
          d.flags & 32 && (ob(e, ""), d.flags &= -33);
          var f = Vj(a);
          Xj(a, f, e);
          break;
        case 3:
        case 4:
          var g = d.stateNode.containerInfo,
            h = Vj(a);
          Wj(a, h, g);
          break;
        default:
          throw Error(p(161));
      }
    } catch (k) {
      W(a, a.return, k);
    }
    a.flags &= -3;
  }
  b & 4096 && (a.flags &= -4097);
}
function ik(a, b, c) {
  V = a;
  jk(a, b, c);
}
function jk(a, b, c) {
  for (var d = 0 !== (a.mode & 1); null !== V;) {
    var e = V,
      f = e.child;
    if (22 === e.tag && d) {
      var g = null !== e.memoizedState || Kj;
      if (!g) {
        var h = e.alternate,
          k = null !== h && null !== h.memoizedState || U;
        h = Kj;
        var l = U;
        Kj = g;
        if ((U = k) && !l) for (V = e; null !== V;) {
          g = V, k = g.child, 22 === g.tag && null !== g.memoizedState ? kk(e) : null !== k ? (k.return = g, V = k) : kk(e);
        }
        for (; null !== f;) {
          V = f, jk(f, b, c), f = f.sibling;
        }
        V = e;
        Kj = h;
        U = l;
      }
      lk(a, b, c);
    } else 0 !== (e.subtreeFlags & 8772) && null !== f ? (f.return = e, V = f) : lk(a, b, c);
  }
}
function lk(a) {
  for (; null !== V;) {
    var b = V;
    if (0 !== (b.flags & 8772)) {
      var c = b.alternate;
      try {
        if (0 !== (b.flags & 8772)) switch (b.tag) {
          case 0:
          case 11:
          case 15:
            U || Rj(5, b);
            break;
          case 1:
            var d = b.stateNode;
            if (b.flags & 4 && !U) if (null === c) d.componentDidMount();else {
              var e = b.elementType === b.type ? c.memoizedProps : Lg(b.type, c.memoizedProps);
              d.componentDidUpdate(e, c.memoizedState, d.__reactInternalSnapshotBeforeUpdate);
            }
            var f = b.updateQueue;
            null !== f && ih(b, f, d);
            break;
          case 3:
            var g = b.updateQueue;
            if (null !== g) {
              c = null;
              if (null !== b.child) switch (b.child.tag) {
                case 5:
                  c = b.child.stateNode;
                  break;
                case 1:
                  c = b.child.stateNode;
              }
              ih(b, g, c);
            }
            break;
          case 5:
            var h = b.stateNode;
            if (null === c && b.flags & 4) {
              c = h;
              var k = b.memoizedProps;
              switch (b.type) {
                case "button":
                case "input":
                case "select":
                case "textarea":
                  k.autoFocus && c.focus();
                  break;
                case "img":
                  k.src && (c.src = k.src);
              }
            }
            break;
          case 6:
            break;
          case 4:
            break;
          case 12:
            break;
          case 13:
            if (null === b.memoizedState) {
              var l = b.alternate;
              if (null !== l) {
                var m = l.memoizedState;
                if (null !== m) {
                  var q = m.dehydrated;
                  null !== q && bd(q);
                }
              }
            }
            break;
          case 19:
          case 17:
          case 21:
          case 22:
          case 23:
          case 25:
            break;
          default:
            throw Error(p(163));
        }
        U || b.flags & 512 && Sj(b);
      } catch (r) {
        W(b, b.return, r);
      }
    }
    if (b === a) {
      V = null;
      break;
    }
    c = b.sibling;
    if (null !== c) {
      c.return = b.return;
      V = c;
      break;
    }
    V = b.return;
  }
}
function hk(a) {
  for (; null !== V;) {
    var b = V;
    if (b === a) {
      V = null;
      break;
    }
    var c = b.sibling;
    if (null !== c) {
      c.return = b.return;
      V = c;
      break;
    }
    V = b.return;
  }
}
function kk(a) {
  for (; null !== V;) {
    var b = V;
    try {
      switch (b.tag) {
        case 0:
        case 11:
        case 15:
          var c = b.return;
          try {
            Rj(4, b);
          } catch (k) {
            W(b, c, k);
          }
          break;
        case 1:
          var d = b.stateNode;
          if ("function" === typeof d.componentDidMount) {
            var e = b.return;
            try {
              d.componentDidMount();
            } catch (k) {
              W(b, e, k);
            }
          }
          var f = b.return;
          try {
            Sj(b);
          } catch (k) {
            W(b, f, k);
          }
          break;
        case 5:
          var g = b.return;
          try {
            Sj(b);
          } catch (k) {
            W(b, g, k);
          }
      }
    } catch (k) {
      W(b, b.return, k);
    }
    if (b === a) {
      V = null;
      break;
    }
    var h = b.sibling;
    if (null !== h) {
      h.return = b.return;
      V = h;
      break;
    }
    V = b.return;
  }
}
var mk = Math.ceil,
  nk = ua.ReactCurrentDispatcher,
  ok = ua.ReactCurrentOwner,
  pk = ua.ReactCurrentBatchConfig,
  K = 0,
  R = null,
  Y = null,
  Z = 0,
  gj = 0,
  fj = Uf(0),
  T = 0,
  qk = null,
  hh = 0,
  rk = 0,
  sk = 0,
  tk = null,
  uk = null,
  gk = 0,
  Hj = Infinity,
  vk = null,
  Pi = !1,
  Qi = null,
  Si = null,
  wk = !1,
  xk = null,
  yk = 0,
  zk = 0,
  Ak = null,
  Bk = -1,
  Ck = 0;
function L() {
  return 0 !== (K & 6) ? B() : -1 !== Bk ? Bk : Bk = B();
}
function lh(a) {
  if (0 === (a.mode & 1)) return 1;
  if (0 !== (K & 2) && 0 !== Z) return Z & -Z;
  if (null !== Kg.transition) return 0 === Ck && (Ck = yc()), Ck;
  a = C;
  if (0 !== a) return a;
  a = window.event;
  a = void 0 === a ? 16 : jd(a.type);
  return a;
}
function mh(a, b, c, d) {
  if (50 < zk) throw zk = 0, Ak = null, Error(p(185));
  Ac(a, c, d);
  if (0 === (K & 2) || a !== R) a === R && (0 === (K & 2) && (rk |= c), 4 === T && Dk(a, Z)), Ek(a, d), 1 === c && 0 === K && 0 === (b.mode & 1) && (Hj = B() + 500, fg && jg());
}
function Ek(a, b) {
  var c = a.callbackNode;
  wc(a, b);
  var d = uc(a, a === R ? Z : 0);
  if (0 === d) null !== c && bc(c), a.callbackNode = null, a.callbackPriority = 0;else if (b = d & -d, a.callbackPriority !== b) {
    null != c && bc(c);
    if (1 === b) 0 === a.tag ? ig(Fk.bind(null, a)) : hg(Fk.bind(null, a)), Jf(function () {
      0 === (K & 6) && jg();
    }), c = null;else {
      switch (Dc(d)) {
        case 1:
          c = fc;
          break;
        case 4:
          c = gc;
          break;
        case 16:
          c = hc;
          break;
        case 536870912:
          c = jc;
          break;
        default:
          c = hc;
      }
      c = Gk(c, Hk.bind(null, a));
    }
    a.callbackPriority = b;
    a.callbackNode = c;
  }
}
function Hk(a, b) {
  Bk = -1;
  Ck = 0;
  if (0 !== (K & 6)) throw Error(p(327));
  var c = a.callbackNode;
  if (Ik() && a.callbackNode !== c) return null;
  var d = uc(a, a === R ? Z : 0);
  if (0 === d) return null;
  if (0 !== (d & 30) || 0 !== (d & a.expiredLanes) || b) b = Jk(a, d);else {
    b = d;
    var e = K;
    K |= 2;
    var f = Kk();
    if (R !== a || Z !== b) vk = null, Hj = B() + 500, Lk(a, b);
    do {
      try {
        Mk();
        break;
      } catch (h) {
        Nk(a, h);
      }
    } while (1);
    Qg();
    nk.current = f;
    K = e;
    null !== Y ? b = 0 : (R = null, Z = 0, b = T);
  }
  if (0 !== b) {
    2 === b && (e = xc(a), 0 !== e && (d = e, b = Ok(a, e)));
    if (1 === b) throw c = qk, Lk(a, 0), Dk(a, d), Ek(a, B()), c;
    if (6 === b) Dk(a, d);else {
      e = a.current.alternate;
      if (0 === (d & 30) && !Pk(e) && (b = Jk(a, d), 2 === b && (f = xc(a), 0 !== f && (d = f, b = Ok(a, f))), 1 === b)) throw c = qk, Lk(a, 0), Dk(a, d), Ek(a, B()), c;
      a.finishedWork = e;
      a.finishedLanes = d;
      switch (b) {
        case 0:
        case 1:
          throw Error(p(345));
        case 2:
          Qk(a, uk, vk);
          break;
        case 3:
          Dk(a, d);
          if ((d & 130023424) === d && (b = gk + 500 - B(), 10 < b)) {
            if (0 !== uc(a, 0)) break;
            e = a.suspendedLanes;
            if ((e & d) !== d) {
              L();
              a.pingedLanes |= a.suspendedLanes & e;
              break;
            }
            a.timeoutHandle = Ff(Qk.bind(null, a, uk, vk), b);
            break;
          }
          Qk(a, uk, vk);
          break;
        case 4:
          Dk(a, d);
          if ((d & 4194240) === d) break;
          b = a.eventTimes;
          for (e = -1; 0 < d;) {
            var g = 31 - oc(d);
            f = 1 << g;
            g = b[g];
            g > e && (e = g);
            d &= ~f;
          }
          d = e;
          d = B() - d;
          d = (120 > d ? 120 : 480 > d ? 480 : 1080 > d ? 1080 : 1920 > d ? 1920 : 3E3 > d ? 3E3 : 4320 > d ? 4320 : 1960 * mk(d / 1960)) - d;
          if (10 < d) {
            a.timeoutHandle = Ff(Qk.bind(null, a, uk, vk), d);
            break;
          }
          Qk(a, uk, vk);
          break;
        case 5:
          Qk(a, uk, vk);
          break;
        default:
          throw Error(p(329));
      }
    }
  }
  Ek(a, B());
  return a.callbackNode === c ? Hk.bind(null, a) : null;
}
function Ok(a, b) {
  var c = tk;
  a.current.memoizedState.isDehydrated && (Lk(a, b).flags |= 256);
  a = Jk(a, b);
  2 !== a && (b = uk, uk = c, null !== b && Gj(b));
  return a;
}
function Gj(a) {
  null === uk ? uk = a : uk.push.apply(uk, a);
}
function Pk(a) {
  for (var b = a;;) {
    if (b.flags & 16384) {
      var c = b.updateQueue;
      if (null !== c && (c = c.stores, null !== c)) for (var d = 0; d < c.length; d++) {
        var e = c[d],
          f = e.getSnapshot;
        e = e.value;
        try {
          if (!He(f(), e)) return !1;
        } catch (g) {
          return !1;
        }
      }
    }
    c = b.child;
    if (b.subtreeFlags & 16384 && null !== c) c.return = b, b = c;else {
      if (b === a) break;
      for (; null === b.sibling;) {
        if (null === b.return || b.return === a) return !0;
        b = b.return;
      }
      b.sibling.return = b.return;
      b = b.sibling;
    }
  }
  return !0;
}
function Dk(a, b) {
  b &= ~sk;
  b &= ~rk;
  a.suspendedLanes |= b;
  a.pingedLanes &= ~b;
  for (a = a.expirationTimes; 0 < b;) {
    var c = 31 - oc(b),
      d = 1 << c;
    a[c] = -1;
    b &= ~d;
  }
}
function Fk(a) {
  if (0 !== (K & 6)) throw Error(p(327));
  Ik();
  var b = uc(a, 0);
  if (0 === (b & 1)) return Ek(a, B()), null;
  var c = Jk(a, b);
  if (0 !== a.tag && 2 === c) {
    var d = xc(a);
    0 !== d && (b = d, c = Ok(a, d));
  }
  if (1 === c) throw c = qk, Lk(a, 0), Dk(a, b), Ek(a, B()), c;
  if (6 === c) throw Error(p(345));
  a.finishedWork = a.current.alternate;
  a.finishedLanes = b;
  Qk(a, uk, vk);
  Ek(a, B());
  return null;
}
function Rk(a, b) {
  var c = K;
  K |= 1;
  try {
    return a(b);
  } finally {
    K = c, 0 === K && (Hj = B() + 500, fg && jg());
  }
}
function Sk(a) {
  null !== xk && 0 === xk.tag && 0 === (K & 6) && Ik();
  var b = K;
  K |= 1;
  var c = pk.transition,
    d = C;
  try {
    if (pk.transition = null, C = 1, a) return a();
  } finally {
    C = d, pk.transition = c, K = b, 0 === (K & 6) && jg();
  }
}
function Ij() {
  gj = fj.current;
  E(fj);
}
function Lk(a, b) {
  a.finishedWork = null;
  a.finishedLanes = 0;
  var c = a.timeoutHandle;
  -1 !== c && (a.timeoutHandle = -1, Gf(c));
  if (null !== Y) for (c = Y.return; null !== c;) {
    var d = c;
    wg(d);
    switch (d.tag) {
      case 1:
        d = d.type.childContextTypes;
        null !== d && void 0 !== d && $f();
        break;
      case 3:
        Jh();
        E(Wf);
        E(H);
        Oh();
        break;
      case 5:
        Lh(d);
        break;
      case 4:
        Jh();
        break;
      case 13:
        E(M);
        break;
      case 19:
        E(M);
        break;
      case 10:
        Rg(d.type._context);
        break;
      case 22:
      case 23:
        Ij();
    }
    c = c.return;
  }
  R = a;
  Y = a = wh(a.current, null);
  Z = gj = b;
  T = 0;
  qk = null;
  sk = rk = hh = 0;
  uk = tk = null;
  if (null !== Wg) {
    for (b = 0; b < Wg.length; b++) {
      if (c = Wg[b], d = c.interleaved, null !== d) {
        c.interleaved = null;
        var e = d.next,
          f = c.pending;
        if (null !== f) {
          var g = f.next;
          f.next = e;
          d.next = g;
        }
        c.pending = d;
      }
    }
    Wg = null;
  }
  return a;
}
function Nk(a, b) {
  do {
    var c = Y;
    try {
      Qg();
      Ph.current = ai;
      if (Sh) {
        for (var d = N.memoizedState; null !== d;) {
          var e = d.queue;
          null !== e && (e.pending = null);
          d = d.next;
        }
        Sh = !1;
      }
      Rh = 0;
      P = O = N = null;
      Th = !1;
      Uh = 0;
      ok.current = null;
      if (null === c || null === c.return) {
        T = 1;
        qk = b;
        Y = null;
        break;
      }
      a: {
        var f = a,
          g = c.return,
          h = c,
          k = b;
        b = Z;
        h.flags |= 32768;
        if (null !== k && "object" === typeof k && "function" === typeof k.then) {
          var l = k,
            m = h,
            q = m.tag;
          if (0 === (m.mode & 1) && (0 === q || 11 === q || 15 === q)) {
            var r = m.alternate;
            r ? (m.updateQueue = r.updateQueue, m.memoizedState = r.memoizedState, m.lanes = r.lanes) : (m.updateQueue = null, m.memoizedState = null);
          }
          var y = Vi(g);
          if (null !== y) {
            y.flags &= -257;
            Wi(y, g, h, f, b);
            y.mode & 1 && Ti(f, l, b);
            b = y;
            k = l;
            var n = b.updateQueue;
            if (null === n) {
              var t = new Set();
              t.add(k);
              b.updateQueue = t;
            } else n.add(k);
            break a;
          } else {
            if (0 === (b & 1)) {
              Ti(f, l, b);
              uj();
              break a;
            }
            k = Error(p(426));
          }
        } else if (I && h.mode & 1) {
          var J = Vi(g);
          if (null !== J) {
            0 === (J.flags & 65536) && (J.flags |= 256);
            Wi(J, g, h, f, b);
            Jg(Ki(k, h));
            break a;
          }
        }
        f = k = Ki(k, h);
        4 !== T && (T = 2);
        null === tk ? tk = [f] : tk.push(f);
        f = g;
        do {
          switch (f.tag) {
            case 3:
              f.flags |= 65536;
              b &= -b;
              f.lanes |= b;
              var x = Oi(f, k, b);
              fh(f, x);
              break a;
            case 1:
              h = k;
              var w = f.type,
                u = f.stateNode;
              if (0 === (f.flags & 128) && ("function" === typeof w.getDerivedStateFromError || null !== u && "function" === typeof u.componentDidCatch && (null === Si || !Si.has(u)))) {
                f.flags |= 65536;
                b &= -b;
                f.lanes |= b;
                var F = Ri(f, h, b);
                fh(f, F);
                break a;
              }
          }
          f = f.return;
        } while (null !== f);
      }
      Tk(c);
    } catch (na) {
      b = na;
      Y === c && null !== c && (Y = c = c.return);
      continue;
    }
    break;
  } while (1);
}
function Kk() {
  var a = nk.current;
  nk.current = ai;
  return null === a ? ai : a;
}
function uj() {
  if (0 === T || 3 === T || 2 === T) T = 4;
  null === R || 0 === (hh & 268435455) && 0 === (rk & 268435455) || Dk(R, Z);
}
function Jk(a, b) {
  var c = K;
  K |= 2;
  var d = Kk();
  if (R !== a || Z !== b) vk = null, Lk(a, b);
  do {
    try {
      Uk();
      break;
    } catch (e) {
      Nk(a, e);
    }
  } while (1);
  Qg();
  K = c;
  nk.current = d;
  if (null !== Y) throw Error(p(261));
  R = null;
  Z = 0;
  return T;
}
function Uk() {
  for (; null !== Y;) {
    Vk(Y);
  }
}
function Mk() {
  for (; null !== Y && !cc();) {
    Vk(Y);
  }
}
function Vk(a) {
  var b = Wk(a.alternate, a, gj);
  a.memoizedProps = a.pendingProps;
  null === b ? Tk(a) : Y = b;
  ok.current = null;
}
function Tk(a) {
  var b = a;
  do {
    var c = b.alternate;
    a = b.return;
    if (0 === (b.flags & 32768)) {
      if (c = Fj(c, b, gj), null !== c) {
        Y = c;
        return;
      }
    } else {
      c = Jj(c, b);
      if (null !== c) {
        c.flags &= 32767;
        Y = c;
        return;
      }
      if (null !== a) a.flags |= 32768, a.subtreeFlags = 0, a.deletions = null;else {
        T = 6;
        Y = null;
        return;
      }
    }
    b = b.sibling;
    if (null !== b) {
      Y = b;
      return;
    }
    Y = b = a;
  } while (null !== b);
  0 === T && (T = 5);
}
function Qk(a, b, c) {
  var d = C,
    e = pk.transition;
  try {
    pk.transition = null, C = 1, Xk(a, b, c, d);
  } finally {
    pk.transition = e, C = d;
  }
  return null;
}
function Xk(a, b, c, d) {
  do {
    Ik();
  } while (null !== xk);
  if (0 !== (K & 6)) throw Error(p(327));
  c = a.finishedWork;
  var e = a.finishedLanes;
  if (null === c) return null;
  a.finishedWork = null;
  a.finishedLanes = 0;
  if (c === a.current) throw Error(p(177));
  a.callbackNode = null;
  a.callbackPriority = 0;
  var f = c.lanes | c.childLanes;
  Bc(a, f);
  a === R && (Y = R = null, Z = 0);
  0 === (c.subtreeFlags & 2064) && 0 === (c.flags & 2064) || wk || (wk = !0, Gk(hc, function () {
    Ik();
    return null;
  }));
  f = 0 !== (c.flags & 15990);
  if (0 !== (c.subtreeFlags & 15990) || f) {
    f = pk.transition;
    pk.transition = null;
    var g = C;
    C = 1;
    var h = K;
    K |= 4;
    ok.current = null;
    Pj(a, c);
    ek(c, a);
    Oe(Df);
    dd = !!Cf;
    Df = Cf = null;
    a.current = c;
    ik(c, a, e);
    dc();
    K = h;
    C = g;
    pk.transition = f;
  } else a.current = c;
  wk && (wk = !1, xk = a, yk = e);
  f = a.pendingLanes;
  0 === f && (Si = null);
  mc(c.stateNode, d);
  Ek(a, B());
  if (null !== b) for (d = a.onRecoverableError, c = 0; c < b.length; c++) {
    e = b[c], d(e.value, {
      componentStack: e.stack,
      digest: e.digest
    });
  }
  if (Pi) throw Pi = !1, a = Qi, Qi = null, a;
  0 !== (yk & 1) && 0 !== a.tag && Ik();
  f = a.pendingLanes;
  0 !== (f & 1) ? a === Ak ? zk++ : (zk = 0, Ak = a) : zk = 0;
  jg();
  return null;
}
function Ik() {
  if (null !== xk) {
    var a = Dc(yk),
      b = pk.transition,
      c = C;
    try {
      pk.transition = null;
      C = 16 > a ? 16 : a;
      if (null === xk) var d = !1;else {
        a = xk;
        xk = null;
        yk = 0;
        if (0 !== (K & 6)) throw Error(p(331));
        var e = K;
        K |= 4;
        for (V = a.current; null !== V;) {
          var f = V,
            g = f.child;
          if (0 !== (V.flags & 16)) {
            var h = f.deletions;
            if (null !== h) {
              for (var k = 0; k < h.length; k++) {
                var l = h[k];
                for (V = l; null !== V;) {
                  var m = V;
                  switch (m.tag) {
                    case 0:
                    case 11:
                    case 15:
                      Qj(8, m, f);
                  }
                  var q = m.child;
                  if (null !== q) q.return = m, V = q;else for (; null !== V;) {
                    m = V;
                    var r = m.sibling,
                      y = m.return;
                    Tj(m);
                    if (m === l) {
                      V = null;
                      break;
                    }
                    if (null !== r) {
                      r.return = y;
                      V = r;
                      break;
                    }
                    V = y;
                  }
                }
              }
              var n = f.alternate;
              if (null !== n) {
                var t = n.child;
                if (null !== t) {
                  n.child = null;
                  do {
                    var J = t.sibling;
                    t.sibling = null;
                    t = J;
                  } while (null !== t);
                }
              }
              V = f;
            }
          }
          if (0 !== (f.subtreeFlags & 2064) && null !== g) g.return = f, V = g;else b: for (; null !== V;) {
            f = V;
            if (0 !== (f.flags & 2048)) switch (f.tag) {
              case 0:
              case 11:
              case 15:
                Qj(9, f, f.return);
            }
            var x = f.sibling;
            if (null !== x) {
              x.return = f.return;
              V = x;
              break b;
            }
            V = f.return;
          }
        }
        var w = a.current;
        for (V = w; null !== V;) {
          g = V;
          var u = g.child;
          if (0 !== (g.subtreeFlags & 2064) && null !== u) u.return = g, V = u;else b: for (g = w; null !== V;) {
            h = V;
            if (0 !== (h.flags & 2048)) try {
              switch (h.tag) {
                case 0:
                case 11:
                case 15:
                  Rj(9, h);
              }
            } catch (na) {
              W(h, h.return, na);
            }
            if (h === g) {
              V = null;
              break b;
            }
            var F = h.sibling;
            if (null !== F) {
              F.return = h.return;
              V = F;
              break b;
            }
            V = h.return;
          }
        }
        K = e;
        jg();
        if (lc && "function" === typeof lc.onPostCommitFiberRoot) try {
          lc.onPostCommitFiberRoot(kc, a);
        } catch (na) {}
        d = !0;
      }
      return d;
    } finally {
      C = c, pk.transition = b;
    }
  }
  return !1;
}
function Yk(a, b, c) {
  b = Ki(c, b);
  b = Oi(a, b, 1);
  a = dh(a, b, 1);
  b = L();
  null !== a && (Ac(a, 1, b), Ek(a, b));
}
function W(a, b, c) {
  if (3 === a.tag) Yk(a, a, c);else for (; null !== b;) {
    if (3 === b.tag) {
      Yk(b, a, c);
      break;
    } else if (1 === b.tag) {
      var d = b.stateNode;
      if ("function" === typeof b.type.getDerivedStateFromError || "function" === typeof d.componentDidCatch && (null === Si || !Si.has(d))) {
        a = Ki(c, a);
        a = Ri(b, a, 1);
        b = dh(b, a, 1);
        a = L();
        null !== b && (Ac(b, 1, a), Ek(b, a));
        break;
      }
    }
    b = b.return;
  }
}
function Ui(a, b, c) {
  var d = a.pingCache;
  null !== d && d.delete(b);
  b = L();
  a.pingedLanes |= a.suspendedLanes & c;
  R === a && (Z & c) === c && (4 === T || 3 === T && (Z & 130023424) === Z && 500 > B() - gk ? Lk(a, 0) : sk |= c);
  Ek(a, b);
}
function Zk(a, b) {
  0 === b && (0 === (a.mode & 1) ? b = 1 : (b = sc, sc <<= 1, 0 === (sc & 130023424) && (sc = 4194304)));
  var c = L();
  a = Zg(a, b);
  null !== a && (Ac(a, b, c), Ek(a, c));
}
function vj(a) {
  var b = a.memoizedState,
    c = 0;
  null !== b && (c = b.retryLane);
  Zk(a, c);
}
function ck(a, b) {
  var c = 0;
  switch (a.tag) {
    case 13:
      var d = a.stateNode;
      var e = a.memoizedState;
      null !== e && (c = e.retryLane);
      break;
    case 19:
      d = a.stateNode;
      break;
    default:
      throw Error(p(314));
  }
  null !== d && d.delete(b);
  Zk(a, c);
}
var Wk;
Wk = function Wk(a, b, c) {
  if (null !== a) {
    if (a.memoizedProps !== b.pendingProps || Wf.current) Ug = !0;else {
      if (0 === (a.lanes & c) && 0 === (b.flags & 128)) return Ug = !1, zj(a, b, c);
      Ug = 0 !== (a.flags & 131072) ? !0 : !1;
    }
  } else Ug = !1, I && 0 !== (b.flags & 1048576) && ug(b, ng, b.index);
  b.lanes = 0;
  switch (b.tag) {
    case 2:
      var d = b.type;
      jj(a, b);
      a = b.pendingProps;
      var e = Yf(b, H.current);
      Tg(b, c);
      e = Xh(null, b, d, a, e, c);
      var f = bi();
      b.flags |= 1;
      "object" === typeof e && null !== e && "function" === typeof e.render && void 0 === e.$$typeof ? (b.tag = 1, b.memoizedState = null, b.updateQueue = null, Zf(d) ? (f = !0, cg(b)) : f = !1, b.memoizedState = null !== e.state && void 0 !== e.state ? e.state : null, ah(b), e.updater = nh, b.stateNode = e, e._reactInternals = b, rh(b, d, a, c), b = kj(null, b, d, !0, f, c)) : (b.tag = 0, I && f && vg(b), Yi(null, b, e, c), b = b.child);
      return b;
    case 16:
      d = b.elementType;
      a: {
        jj(a, b);
        a = b.pendingProps;
        e = d._init;
        d = e(d._payload);
        b.type = d;
        e = b.tag = $k(d);
        a = Lg(d, a);
        switch (e) {
          case 0:
            b = dj(null, b, d, a, c);
            break a;
          case 1:
            b = ij(null, b, d, a, c);
            break a;
          case 11:
            b = Zi(null, b, d, a, c);
            break a;
          case 14:
            b = aj(null, b, d, Lg(d.type, a), c);
            break a;
        }
        throw Error(p(306, d, ""));
      }
      return b;
    case 0:
      return d = b.type, e = b.pendingProps, e = b.elementType === d ? e : Lg(d, e), dj(a, b, d, e, c);
    case 1:
      return d = b.type, e = b.pendingProps, e = b.elementType === d ? e : Lg(d, e), ij(a, b, d, e, c);
    case 3:
      a: {
        lj(b);
        if (null === a) throw Error(p(387));
        d = b.pendingProps;
        f = b.memoizedState;
        e = f.element;
        bh(a, b);
        gh(b, d, null, c);
        var g = b.memoizedState;
        d = g.element;
        if (f.isDehydrated) {
          if (f = {
            element: d,
            isDehydrated: !1,
            cache: g.cache,
            pendingSuspenseBoundaries: g.pendingSuspenseBoundaries,
            transitions: g.transitions
          }, b.updateQueue.baseState = f, b.memoizedState = f, b.flags & 256) {
            e = Ki(Error(p(423)), b);
            b = mj(a, b, d, c, e);
            break a;
          } else if (d !== e) {
            e = Ki(Error(p(424)), b);
            b = mj(a, b, d, c, e);
            break a;
          } else for (yg = Lf(b.stateNode.containerInfo.firstChild), xg = b, I = !0, zg = null, c = Ch(b, null, d, c), b.child = c; c;) {
            c.flags = c.flags & -3 | 4096, c = c.sibling;
          }
        } else {
          Ig();
          if (d === e) {
            b = $i(a, b, c);
            break a;
          }
          Yi(a, b, d, c);
        }
        b = b.child;
      }
      return b;
    case 5:
      return Kh(b), null === a && Eg(b), d = b.type, e = b.pendingProps, f = null !== a ? a.memoizedProps : null, g = e.children, Ef(d, e) ? g = null : null !== f && Ef(d, f) && (b.flags |= 32), hj(a, b), Yi(a, b, g, c), b.child;
    case 6:
      return null === a && Eg(b), null;
    case 13:
      return pj(a, b, c);
    case 4:
      return Ih(b, b.stateNode.containerInfo), d = b.pendingProps, null === a ? b.child = Bh(b, null, d, c) : Yi(a, b, d, c), b.child;
    case 11:
      return d = b.type, e = b.pendingProps, e = b.elementType === d ? e : Lg(d, e), Zi(a, b, d, e, c);
    case 7:
      return Yi(a, b, b.pendingProps, c), b.child;
    case 8:
      return Yi(a, b, b.pendingProps.children, c), b.child;
    case 12:
      return Yi(a, b, b.pendingProps.children, c), b.child;
    case 10:
      a: {
        d = b.type._context;
        e = b.pendingProps;
        f = b.memoizedProps;
        g = e.value;
        G(Mg, d._currentValue);
        d._currentValue = g;
        if (null !== f) if (He(f.value, g)) {
          if (f.children === e.children && !Wf.current) {
            b = $i(a, b, c);
            break a;
          }
        } else for (f = b.child, null !== f && (f.return = b); null !== f;) {
          var h = f.dependencies;
          if (null !== h) {
            g = f.child;
            for (var k = h.firstContext; null !== k;) {
              if (k.context === d) {
                if (1 === f.tag) {
                  k = ch(-1, c & -c);
                  k.tag = 2;
                  var l = f.updateQueue;
                  if (null !== l) {
                    l = l.shared;
                    var m = l.pending;
                    null === m ? k.next = k : (k.next = m.next, m.next = k);
                    l.pending = k;
                  }
                }
                f.lanes |= c;
                k = f.alternate;
                null !== k && (k.lanes |= c);
                Sg(f.return, c, b);
                h.lanes |= c;
                break;
              }
              k = k.next;
            }
          } else if (10 === f.tag) g = f.type === b.type ? null : f.child;else if (18 === f.tag) {
            g = f.return;
            if (null === g) throw Error(p(341));
            g.lanes |= c;
            h = g.alternate;
            null !== h && (h.lanes |= c);
            Sg(g, c, b);
            g = f.sibling;
          } else g = f.child;
          if (null !== g) g.return = f;else for (g = f; null !== g;) {
            if (g === b) {
              g = null;
              break;
            }
            f = g.sibling;
            if (null !== f) {
              f.return = g.return;
              g = f;
              break;
            }
            g = g.return;
          }
          f = g;
        }
        Yi(a, b, e.children, c);
        b = b.child;
      }
      return b;
    case 9:
      return e = b.type, d = b.pendingProps.children, Tg(b, c), e = Vg(e), d = d(e), b.flags |= 1, Yi(a, b, d, c), b.child;
    case 14:
      return d = b.type, e = Lg(d, b.pendingProps), e = Lg(d.type, e), aj(a, b, d, e, c);
    case 15:
      return cj(a, b, b.type, b.pendingProps, c);
    case 17:
      return d = b.type, e = b.pendingProps, e = b.elementType === d ? e : Lg(d, e), jj(a, b), b.tag = 1, Zf(d) ? (a = !0, cg(b)) : a = !1, Tg(b, c), ph(b, d, e), rh(b, d, e, c), kj(null, b, d, !0, a, c);
    case 19:
      return yj(a, b, c);
    case 22:
      return ej(a, b, c);
  }
  throw Error(p(156, b.tag));
};
function Gk(a, b) {
  return ac(a, b);
}
function al(a, b, c, d) {
  this.tag = a;
  this.key = c;
  this.sibling = this.child = this.return = this.stateNode = this.type = this.elementType = null;
  this.index = 0;
  this.ref = null;
  this.pendingProps = b;
  this.dependencies = this.memoizedState = this.updateQueue = this.memoizedProps = null;
  this.mode = d;
  this.subtreeFlags = this.flags = 0;
  this.deletions = null;
  this.childLanes = this.lanes = 0;
  this.alternate = null;
}
function Bg(a, b, c, d) {
  return new al(a, b, c, d);
}
function bj(a) {
  a = a.prototype;
  return !(!a || !a.isReactComponent);
}
function $k(a) {
  if ("function" === typeof a) return bj(a) ? 1 : 0;
  if (void 0 !== a && null !== a) {
    a = a.$$typeof;
    if (a === Da) return 11;
    if (a === Ga) return 14;
  }
  return 2;
}
function wh(a, b) {
  var c = a.alternate;
  null === c ? (c = Bg(a.tag, b, a.key, a.mode), c.elementType = a.elementType, c.type = a.type, c.stateNode = a.stateNode, c.alternate = a, a.alternate = c) : (c.pendingProps = b, c.type = a.type, c.flags = 0, c.subtreeFlags = 0, c.deletions = null);
  c.flags = a.flags & 14680064;
  c.childLanes = a.childLanes;
  c.lanes = a.lanes;
  c.child = a.child;
  c.memoizedProps = a.memoizedProps;
  c.memoizedState = a.memoizedState;
  c.updateQueue = a.updateQueue;
  b = a.dependencies;
  c.dependencies = null === b ? null : {
    lanes: b.lanes,
    firstContext: b.firstContext
  };
  c.sibling = a.sibling;
  c.index = a.index;
  c.ref = a.ref;
  return c;
}
function yh(a, b, c, d, e, f) {
  var g = 2;
  d = a;
  if ("function" === typeof a) bj(a) && (g = 1);else if ("string" === typeof a) g = 5;else a: switch (a) {
    case ya:
      return Ah(c.children, e, f, b);
    case za:
      g = 8;
      e |= 8;
      break;
    case Aa:
      return a = Bg(12, c, b, e | 2), a.elementType = Aa, a.lanes = f, a;
    case Ea:
      return a = Bg(13, c, b, e), a.elementType = Ea, a.lanes = f, a;
    case Fa:
      return a = Bg(19, c, b, e), a.elementType = Fa, a.lanes = f, a;
    case Ia:
      return qj(c, e, f, b);
    default:
      if ("object" === typeof a && null !== a) switch (a.$$typeof) {
        case Ba:
          g = 10;
          break a;
        case Ca:
          g = 9;
          break a;
        case Da:
          g = 11;
          break a;
        case Ga:
          g = 14;
          break a;
        case Ha:
          g = 16;
          d = null;
          break a;
      }
      throw Error(p(130, null == a ? a : typeof a, ""));
  }
  b = Bg(g, c, b, e);
  b.elementType = a;
  b.type = d;
  b.lanes = f;
  return b;
}
function Ah(a, b, c, d) {
  a = Bg(7, a, d, b);
  a.lanes = c;
  return a;
}
function qj(a, b, c, d) {
  a = Bg(22, a, d, b);
  a.elementType = Ia;
  a.lanes = c;
  a.stateNode = {
    isHidden: !1
  };
  return a;
}
function xh(a, b, c) {
  a = Bg(6, a, null, b);
  a.lanes = c;
  return a;
}
function zh(a, b, c) {
  b = Bg(4, null !== a.children ? a.children : [], a.key, b);
  b.lanes = c;
  b.stateNode = {
    containerInfo: a.containerInfo,
    pendingChildren: null,
    implementation: a.implementation
  };
  return b;
}
function bl(a, b, c, d, e) {
  this.tag = b;
  this.containerInfo = a;
  this.finishedWork = this.pingCache = this.current = this.pendingChildren = null;
  this.timeoutHandle = -1;
  this.callbackNode = this.pendingContext = this.context = null;
  this.callbackPriority = 0;
  this.eventTimes = zc(0);
  this.expirationTimes = zc(-1);
  this.entangledLanes = this.finishedLanes = this.mutableReadLanes = this.expiredLanes = this.pingedLanes = this.suspendedLanes = this.pendingLanes = 0;
  this.entanglements = zc(0);
  this.identifierPrefix = d;
  this.onRecoverableError = e;
  this.mutableSourceEagerHydrationData = null;
}
function cl(a, b, c, d, e, f, g, h, k) {
  a = new bl(a, b, c, h, k);
  1 === b ? (b = 1, !0 === f && (b |= 8)) : b = 0;
  f = Bg(3, null, null, b);
  a.current = f;
  f.stateNode = a;
  f.memoizedState = {
    element: d,
    isDehydrated: c,
    cache: null,
    transitions: null,
    pendingSuspenseBoundaries: null
  };
  ah(f);
  return a;
}
function dl(a, b, c) {
  var d = 3 < arguments.length && void 0 !== arguments[3] ? arguments[3] : null;
  return {
    $$typeof: wa,
    key: null == d ? null : "" + d,
    children: a,
    containerInfo: b,
    implementation: c
  };
}
function el(a) {
  if (!a) return Vf;
  a = a._reactInternals;
  a: {
    if (Vb(a) !== a || 1 !== a.tag) throw Error(p(170));
    var b = a;
    do {
      switch (b.tag) {
        case 3:
          b = b.stateNode.context;
          break a;
        case 1:
          if (Zf(b.type)) {
            b = b.stateNode.__reactInternalMemoizedMergedChildContext;
            break a;
          }
      }
      b = b.return;
    } while (null !== b);
    throw Error(p(171));
  }
  if (1 === a.tag) {
    var c = a.type;
    if (Zf(c)) return bg(a, c, b);
  }
  return b;
}
function fl(a, b, c, d, e, f, g, h, k) {
  a = cl(c, d, !0, a, e, f, g, h, k);
  a.context = el(null);
  c = a.current;
  d = L();
  e = lh(c);
  f = ch(d, e);
  f.callback = void 0 !== b && null !== b ? b : null;
  dh(c, f, e);
  a.current.lanes = e;
  Ac(a, e, d);
  Ek(a, d);
  return a;
}
function gl(a, b, c, d) {
  var e = b.current,
    f = L(),
    g = lh(e);
  c = el(c);
  null === b.context ? b.context = c : b.pendingContext = c;
  b = ch(f, g);
  b.payload = {
    element: a
  };
  d = void 0 === d ? null : d;
  null !== d && (b.callback = d);
  a = dh(e, b, g);
  null !== a && (mh(a, e, g, f), eh(a, e, g));
  return g;
}
function hl(a) {
  a = a.current;
  if (!a.child) return null;
  switch (a.child.tag) {
    case 5:
      return a.child.stateNode;
    default:
      return a.child.stateNode;
  }
}
function il(a, b) {
  a = a.memoizedState;
  if (null !== a && null !== a.dehydrated) {
    var c = a.retryLane;
    a.retryLane = 0 !== c && c < b ? c : b;
  }
}
function jl(a, b) {
  il(a, b);
  (a = a.alternate) && il(a, b);
}
function kl() {
  return null;
}
var ll = "function" === typeof reportError ? reportError : function (a) {
  console.error(a);
};
function ml(a) {
  this._internalRoot = a;
}
nl.prototype.render = ml.prototype.render = function (a) {
  var b = this._internalRoot;
  if (null === b) throw Error(p(409));
  gl(a, b, null, null);
};
nl.prototype.unmount = ml.prototype.unmount = function () {
  var a = this._internalRoot;
  if (null !== a) {
    this._internalRoot = null;
    var b = a.containerInfo;
    Sk(function () {
      gl(null, a, null, null);
    });
    b[uf] = null;
  }
};
function nl(a) {
  this._internalRoot = a;
}
nl.prototype.unstable_scheduleHydration = function (a) {
  if (a) {
    var b = Hc();
    a = {
      blockedOn: null,
      target: a,
      priority: b
    };
    for (var c = 0; c < Qc.length && 0 !== b && b < Qc[c].priority; c++) {
      ;
    }
    Qc.splice(c, 0, a);
    0 === c && Vc(a);
  }
};
function ol(a) {
  return !(!a || 1 !== a.nodeType && 9 !== a.nodeType && 11 !== a.nodeType);
}
function pl(a) {
  return !(!a || 1 !== a.nodeType && 9 !== a.nodeType && 11 !== a.nodeType && (8 !== a.nodeType || " react-mount-point-unstable " !== a.nodeValue));
}
function ql() {}
function rl(a, b, c, d, e) {
  if (e) {
    if ("function" === typeof d) {
      var f = d;
      d = function d() {
        var a = hl(g);
        f.call(a);
      };
    }
    var g = fl(b, d, a, 0, null, !1, !1, "", ql);
    a._reactRootContainer = g;
    a[uf] = g.current;
    sf(8 === a.nodeType ? a.parentNode : a);
    Sk();
    return g;
  }
  for (; e = a.lastChild;) {
    a.removeChild(e);
  }
  if ("function" === typeof d) {
    var h = d;
    d = function d() {
      var a = hl(k);
      h.call(a);
    };
  }
  var k = cl(a, 0, !1, null, null, !1, !1, "", ql);
  a._reactRootContainer = k;
  a[uf] = k.current;
  sf(8 === a.nodeType ? a.parentNode : a);
  Sk(function () {
    gl(b, k, c, d);
  });
  return k;
}
function sl(a, b, c, d, e) {
  var f = c._reactRootContainer;
  if (f) {
    var g = f;
    if ("function" === typeof e) {
      var h = e;
      e = function e() {
        var a = hl(g);
        h.call(a);
      };
    }
    gl(b, g, a, e);
  } else g = rl(c, b, a, e, d);
  return hl(g);
}
Ec = function Ec(a) {
  switch (a.tag) {
    case 3:
      var b = a.stateNode;
      if (b.current.memoizedState.isDehydrated) {
        var c = tc(b.pendingLanes);
        0 !== c && (Cc(b, c | 1), Ek(b, B()), 0 === (K & 6) && (Hj = B() + 500, jg()));
      }
      break;
    case 13:
      Sk(function () {
        var b = Zg(a, 1);
        if (null !== b) {
          var c = L();
          mh(b, a, 1, c);
        }
      }), jl(a, 1);
  }
};
Fc = function Fc(a) {
  if (13 === a.tag) {
    var b = Zg(a, 134217728);
    if (null !== b) {
      var c = L();
      mh(b, a, 134217728, c);
    }
    jl(a, 134217728);
  }
};
Gc = function Gc(a) {
  if (13 === a.tag) {
    var b = lh(a),
      c = Zg(a, b);
    if (null !== c) {
      var d = L();
      mh(c, a, b, d);
    }
    jl(a, b);
  }
};
Hc = function Hc() {
  return C;
};
Ic = function Ic(a, b) {
  var c = C;
  try {
    return C = a, b();
  } finally {
    C = c;
  }
};
yb = function yb(a, b, c) {
  switch (b) {
    case "input":
      bb(a, c);
      b = c.name;
      if ("radio" === c.type && null != b) {
        for (c = a; c.parentNode;) {
          c = c.parentNode;
        }
        c = c.querySelectorAll("input[name=" + JSON.stringify("" + b) + '][type="radio"]');
        for (b = 0; b < c.length; b++) {
          var d = c[b];
          if (d !== a && d.form === a.form) {
            var e = Db(d);
            if (!e) throw Error(p(90));
            Wa(d);
            bb(d, e);
          }
        }
      }
      break;
    case "textarea":
      ib(a, c);
      break;
    case "select":
      b = c.value, null != b && fb(a, !!c.multiple, b, !1);
  }
};
Gb = Rk;
Hb = Sk;
var tl = {
    usingClientEntryPoint: !1,
    Events: [Cb, ue, Db, Eb, Fb, Rk]
  },
  ul = {
    findFiberByHostInstance: Wc,
    bundleType: 0,
    version: "18.2.0",
    rendererPackageName: "react-dom"
  };
var vl = {
  bundleType: ul.bundleType,
  version: ul.version,
  rendererPackageName: ul.rendererPackageName,
  rendererConfig: ul.rendererConfig,
  overrideHookState: null,
  overrideHookStateDeletePath: null,
  overrideHookStateRenamePath: null,
  overrideProps: null,
  overridePropsDeletePath: null,
  overridePropsRenamePath: null,
  setErrorHandler: null,
  setSuspenseHandler: null,
  scheduleUpdate: null,
  currentDispatcherRef: ua.ReactCurrentDispatcher,
  findHostInstanceByFiber: function findHostInstanceByFiber(a) {
    a = Zb(a);
    return null === a ? null : a.stateNode;
  },
  findFiberByHostInstance: ul.findFiberByHostInstance || kl,
  findHostInstancesForRefresh: null,
  scheduleRefresh: null,
  scheduleRoot: null,
  setRefreshHandler: null,
  getCurrentFiber: null,
  reconcilerVersion: "18.2.0-next-9e3b772b8-20220608"
};
if ("undefined" !== typeof __REACT_DEVTOOLS_GLOBAL_HOOK__) {
  var wl = __REACT_DEVTOOLS_GLOBAL_HOOK__;
  if (!wl.isDisabled && wl.supportsFiber) try {
    kc = wl.inject(vl), lc = wl;
  } catch (a) {}
}
exports.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = tl;
exports.createPortal = function (a, b) {
  var c = 2 < arguments.length && void 0 !== arguments[2] ? arguments[2] : null;
  if (!ol(b)) throw Error(p(200));
  return dl(a, b, null, c);
};
exports.createRoot = function (a, b) {
  if (!ol(a)) throw Error(p(299));
  var c = !1,
    d = "",
    e = ll;
  null !== b && void 0 !== b && (!0 === b.unstable_strictMode && (c = !0), void 0 !== b.identifierPrefix && (d = b.identifierPrefix), void 0 !== b.onRecoverableError && (e = b.onRecoverableError));
  b = cl(a, 1, !1, null, null, c, !1, d, e);
  a[uf] = b.current;
  sf(8 === a.nodeType ? a.parentNode : a);
  return new ml(b);
};
exports.findDOMNode = function (a) {
  if (null == a) return null;
  if (1 === a.nodeType) return a;
  var b = a._reactInternals;
  if (void 0 === b) {
    if ("function" === typeof a.render) throw Error(p(188));
    a = Object.keys(a).join(",");
    throw Error(p(268, a));
  }
  a = Zb(b);
  a = null === a ? null : a.stateNode;
  return a;
};
exports.flushSync = function (a) {
  return Sk(a);
};
exports.hydrate = function (a, b, c) {
  if (!pl(b)) throw Error(p(200));
  return sl(null, a, b, !0, c);
};
exports.hydrateRoot = function (a, b, c) {
  if (!ol(a)) throw Error(p(405));
  var d = null != c && c.hydratedSources || null,
    e = !1,
    f = "",
    g = ll;
  null !== c && void 0 !== c && (!0 === c.unstable_strictMode && (e = !0), void 0 !== c.identifierPrefix && (f = c.identifierPrefix), void 0 !== c.onRecoverableError && (g = c.onRecoverableError));
  b = fl(b, null, a, 1, null != c ? c : null, e, !1, f, g);
  a[uf] = b.current;
  sf(a);
  if (d) for (a = 0; a < d.length; a++) {
    c = d[a], e = c._getVersion, e = e(c._source), null == b.mutableSourceEagerHydrationData ? b.mutableSourceEagerHydrationData = [c, e] : b.mutableSourceEagerHydrationData.push(c, e);
  }
  return new nl(b);
};
exports.render = function (a, b, c) {
  if (!pl(b)) throw Error(p(200));
  return sl(null, a, b, !1, c);
};
exports.unmountComponentAtNode = function (a) {
  if (!pl(a)) throw Error(p(40));
  return a._reactRootContainer ? (Sk(function () {
    sl(null, null, a, !1, function () {
      a._reactRootContainer = null;
      a[uf] = null;
    });
  }), !0) : !1;
};
exports.unstable_batchedUpdates = Rk;
exports.unstable_renderSubtreeIntoContainer = function (a, b, c, d) {
  if (!pl(c)) throw Error(p(200));
  if (null == a || void 0 === a._reactInternals) throw Error(p(38));
  return sl(a, b, c, !1, d);
};
exports.version = "18.2.0-next-9e3b772b8-20220608";

/***/ }),

/***/ 1250:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";


var m = __webpack_require__(4164);
if (true) {
  exports.createRoot = m.createRoot;
  exports.hydrateRoot = m.hydrateRoot;
} else { var i; }

/***/ }),

/***/ 4164:
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";


function checkDCE() {
  /* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */
  if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === 'undefined' || typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE !== 'function') {
    return;
  }
  if (false) {}
  try {
    // Verify that the code above has been dead code eliminated (DCE'd).
    __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(checkDCE);
  } catch (err) {
    // DevTools shouldn't crash React, no matter what.
    // We should still report in case we break this code.
    console.error(err);
  }
}
if (true) {
  // DCE check should happen before ReactDOM bundle executes so that
  // DevTools can report bad minification during injection.
  checkDCE();
  module.exports = __webpack_require__(4463);
} else {}

/***/ }),

/***/ 7470:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

(function (global, factory) {
   true ? factory(exports, __webpack_require__(2791)) : 0;
})(this, function (exports, React) {
  'use strict';

  function _interopNamespace(e) {
    if (e && e.__esModule) return e;
    var n = Object.create(null);
    if (e) {
      Object.keys(e).forEach(function (k) {
        if (k !== 'default') {
          var d = Object.getOwnPropertyDescriptor(e, k);
          Object.defineProperty(n, k, d.get ? d : {
            enumerable: true,
            get: function get() {
              return e[k];
            }
          });
        }
      });
    }
    n["default"] = e;
    return Object.freeze(n);
  }
  var React__namespace = /*#__PURE__*/_interopNamespace(React);
  function _setPrototypeOf(o, p) {
    _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {
      o.__proto__ = p;
      return o;
    };
    return _setPrototypeOf(o, p);
  }
  function _inheritsLoose(subClass, superClass) {
    subClass.prototype = Object.create(superClass.prototype);
    subClass.prototype.constructor = subClass;
    _setPrototypeOf(subClass, superClass);
  }
  var changedArray = function changedArray(a, b) {
    if (a === void 0) {
      a = [];
    }
    if (b === void 0) {
      b = [];
    }
    return a.length !== b.length || a.some(function (item, index) {
      return !Object.is(item, b[index]);
    });
  };
  var initialState = {
    error: null
  };
  var ErrorBoundary = /*#__PURE__*/function (_React$Component) {
    _inheritsLoose(ErrorBoundary, _React$Component);
    function ErrorBoundary() {
      var _this;
      for (var _len = arguments.length, _args = new Array(_len), _key = 0; _key < _len; _key++) {
        _args[_key] = arguments[_key];
      }
      _this = _React$Component.call.apply(_React$Component, [this].concat(_args)) || this;
      _this.state = initialState;
      _this.resetErrorBoundary = function () {
        var _this$props;
        for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
          args[_key2] = arguments[_key2];
        }
        _this.props.onReset == null ? void 0 : (_this$props = _this.props).onReset.apply(_this$props, args);
        _this.reset();
      };
      return _this;
    }
    ErrorBoundary.getDerivedStateFromError = function getDerivedStateFromError(error) {
      return {
        error: error
      };
    };
    var _proto = ErrorBoundary.prototype;
    _proto.reset = function reset() {
      this.setState(initialState);
    };
    _proto.componentDidCatch = function componentDidCatch(error, info) {
      var _this$props$onError, _this$props2;
      (_this$props$onError = (_this$props2 = this.props).onError) == null ? void 0 : _this$props$onError.call(_this$props2, error, info);
    };
    _proto.componentDidUpdate = function componentDidUpdate(prevProps, prevState) {
      var error = this.state.error;
      var resetKeys = this.props.resetKeys; // There's an edge case where if the thing that triggered the error
      // happens to *also* be in the resetKeys array, we'd end up resetting
      // the error boundary immediately. This would likely trigger a second
      // error to be thrown.
      // So we make sure that we don't check the resetKeys on the first call
      // of cDU after the error is set

      if (error !== null && prevState.error !== null && changedArray(prevProps.resetKeys, resetKeys)) {
        var _this$props$onResetKe, _this$props3;
        (_this$props$onResetKe = (_this$props3 = this.props).onResetKeysChange) == null ? void 0 : _this$props$onResetKe.call(_this$props3, prevProps.resetKeys, resetKeys);
        this.reset();
      }
    };
    _proto.render = function render() {
      var error = this.state.error;
      var _this$props4 = this.props,
        fallbackRender = _this$props4.fallbackRender,
        FallbackComponent = _this$props4.FallbackComponent,
        fallback = _this$props4.fallback;
      if (error !== null) {
        var _props = {
          error: error,
          resetErrorBoundary: this.resetErrorBoundary
        };
        if ( /*#__PURE__*/React__namespace.isValidElement(fallback)) {
          return fallback;
        } else if (typeof fallbackRender === 'function') {
          return fallbackRender(_props);
        } else if (FallbackComponent) {
          return /*#__PURE__*/React__namespace.createElement(FallbackComponent, _props);
        } else {
          throw new Error('react-error-boundary requires either a fallback, fallbackRender, or FallbackComponent prop');
        }
      }
      return this.props.children;
    };
    return ErrorBoundary;
  }(React__namespace.Component);
  function withErrorBoundary(Component, errorBoundaryProps) {
    var Wrapped = function Wrapped(props) {
      return /*#__PURE__*/React__namespace.createElement(ErrorBoundary, errorBoundaryProps, /*#__PURE__*/React__namespace.createElement(Component, props));
    }; // Format for display in DevTools

    var name = Component.displayName || Component.name || 'Unknown';
    Wrapped.displayName = "withErrorBoundary(" + name + ")";
    return Wrapped;
  }
  function useErrorHandler(givenError) {
    var _React$useState = React__namespace.useState(null),
      error = _React$useState[0],
      setError = _React$useState[1];
    if (givenError != null) throw givenError;
    if (error != null) throw error;
    return setError;
  }
  /*
  eslint
    @typescript-eslint/sort-type-union-intersection-members: "off",
    @typescript-eslint/no-throw-literal: "off",
    @typescript-eslint/prefer-nullish-coalescing: "off"
  */

  exports.ErrorBoundary = ErrorBoundary;
  exports.useErrorHandler = useErrorHandler;
  exports.withErrorBoundary = withErrorBoundary;
  Object.defineProperty(exports, '__esModule', {
    value: true
  });
});

/***/ }),

/***/ 1372:
/***/ (function(__unused_webpack_module, exports) {

"use strict";
var __webpack_unused_export__;
/**
 * @license React
 * react-is.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


var b = Symbol.for("react.element"),
  c = Symbol.for("react.portal"),
  d = Symbol.for("react.fragment"),
  e = Symbol.for("react.strict_mode"),
  f = Symbol.for("react.profiler"),
  g = Symbol.for("react.provider"),
  h = Symbol.for("react.context"),
  k = Symbol.for("react.server_context"),
  l = Symbol.for("react.forward_ref"),
  m = Symbol.for("react.suspense"),
  n = Symbol.for("react.suspense_list"),
  p = Symbol.for("react.memo"),
  q = Symbol.for("react.lazy"),
  t = Symbol.for("react.offscreen"),
  u;
u = Symbol.for("react.module.reference");
function v(a) {
  if ("object" === typeof a && null !== a) {
    var r = a.$$typeof;
    switch (r) {
      case b:
        switch (a = a.type, a) {
          case d:
          case f:
          case e:
          case m:
          case n:
            return a;
          default:
            switch (a = a && a.$$typeof, a) {
              case k:
              case h:
              case l:
              case q:
              case p:
              case g:
                return a;
              default:
                return r;
            }
        }
      case c:
        return r;
    }
  }
}
__webpack_unused_export__ = h;
__webpack_unused_export__ = g;
__webpack_unused_export__ = b;
__webpack_unused_export__ = l;
__webpack_unused_export__ = d;
__webpack_unused_export__ = q;
__webpack_unused_export__ = p;
__webpack_unused_export__ = c;
__webpack_unused_export__ = f;
__webpack_unused_export__ = e;
__webpack_unused_export__ = m;
__webpack_unused_export__ = n;
__webpack_unused_export__ = function () {
  return !1;
};
__webpack_unused_export__ = function () {
  return !1;
};
__webpack_unused_export__ = function (a) {
  return v(a) === h;
};
__webpack_unused_export__ = function (a) {
  return v(a) === g;
};
__webpack_unused_export__ = function (a) {
  return "object" === typeof a && null !== a && a.$$typeof === b;
};
__webpack_unused_export__ = function (a) {
  return v(a) === l;
};
__webpack_unused_export__ = function (a) {
  return v(a) === d;
};
__webpack_unused_export__ = function (a) {
  return v(a) === q;
};
__webpack_unused_export__ = function (a) {
  return v(a) === p;
};
__webpack_unused_export__ = function (a) {
  return v(a) === c;
};
__webpack_unused_export__ = function (a) {
  return v(a) === f;
};
__webpack_unused_export__ = function (a) {
  return v(a) === e;
};
__webpack_unused_export__ = function (a) {
  return v(a) === m;
};
__webpack_unused_export__ = function (a) {
  return v(a) === n;
};
__webpack_unused_export__ = function (a) {
  return "string" === typeof a || "function" === typeof a || a === d || a === f || a === e || a === m || a === n || a === t || "object" === typeof a && null !== a && (a.$$typeof === q || a.$$typeof === p || a.$$typeof === g || a.$$typeof === h || a.$$typeof === l || a.$$typeof === u || void 0 !== a.getModuleId) ? !0 : !1;
};
__webpack_unused_export__ = v;

/***/ }),

/***/ 7441:
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";


if (true) {
  /* unused reexport */ __webpack_require__(1372);
} else {}

/***/ }),

/***/ 6374:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
/**
 * @license React
 * react-jsx-runtime.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


var f = __webpack_require__(2791),
  k = Symbol.for("react.element"),
  l = Symbol.for("react.fragment"),
  m = Object.prototype.hasOwnProperty,
  n = f.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,
  p = {
    key: !0,
    ref: !0,
    __self: !0,
    __source: !0
  };
function q(c, a, g) {
  var b,
    d = {},
    e = null,
    h = null;
  void 0 !== g && (e = "" + g);
  void 0 !== a.key && (e = "" + a.key);
  void 0 !== a.ref && (h = a.ref);
  for (b in a) {
    m.call(a, b) && !p.hasOwnProperty(b) && (d[b] = a[b]);
  }
  if (c && c.defaultProps) for (b in a = c.defaultProps, a) {
    void 0 === d[b] && (d[b] = a[b]);
  }
  return {
    $$typeof: k,
    type: c,
    key: e,
    ref: h,
    props: d,
    _owner: n.current
  };
}
exports.Fragment = l;
exports.jsx = q;
exports.jsxs = q;

/***/ }),

/***/ 9117:
/***/ (function(__unused_webpack_module, exports) {

"use strict";
/**
 * @license React
 * react.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


var l = Symbol.for("react.element"),
  n = Symbol.for("react.portal"),
  p = Symbol.for("react.fragment"),
  q = Symbol.for("react.strict_mode"),
  r = Symbol.for("react.profiler"),
  t = Symbol.for("react.provider"),
  u = Symbol.for("react.context"),
  v = Symbol.for("react.forward_ref"),
  w = Symbol.for("react.suspense"),
  x = Symbol.for("react.memo"),
  y = Symbol.for("react.lazy"),
  z = Symbol.iterator;
function A(a) {
  if (null === a || "object" !== typeof a) return null;
  a = z && a[z] || a["@@iterator"];
  return "function" === typeof a ? a : null;
}
var B = {
    isMounted: function isMounted() {
      return !1;
    },
    enqueueForceUpdate: function enqueueForceUpdate() {},
    enqueueReplaceState: function enqueueReplaceState() {},
    enqueueSetState: function enqueueSetState() {}
  },
  C = Object.assign,
  D = {};
function E(a, b, e) {
  this.props = a;
  this.context = b;
  this.refs = D;
  this.updater = e || B;
}
E.prototype.isReactComponent = {};
E.prototype.setState = function (a, b) {
  if ("object" !== typeof a && "function" !== typeof a && null != a) throw Error("setState(...): takes an object of state variables to update or a function which returns an object of state variables.");
  this.updater.enqueueSetState(this, a, b, "setState");
};
E.prototype.forceUpdate = function (a) {
  this.updater.enqueueForceUpdate(this, a, "forceUpdate");
};
function F() {}
F.prototype = E.prototype;
function G(a, b, e) {
  this.props = a;
  this.context = b;
  this.refs = D;
  this.updater = e || B;
}
var H = G.prototype = new F();
H.constructor = G;
C(H, E.prototype);
H.isPureReactComponent = !0;
var I = Array.isArray,
  J = Object.prototype.hasOwnProperty,
  K = {
    current: null
  },
  L = {
    key: !0,
    ref: !0,
    __self: !0,
    __source: !0
  };
function M(a, b, e) {
  var d,
    c = {},
    k = null,
    h = null;
  if (null != b) for (d in void 0 !== b.ref && (h = b.ref), void 0 !== b.key && (k = "" + b.key), b) {
    J.call(b, d) && !L.hasOwnProperty(d) && (c[d] = b[d]);
  }
  var g = arguments.length - 2;
  if (1 === g) c.children = e;else if (1 < g) {
    for (var f = Array(g), m = 0; m < g; m++) {
      f[m] = arguments[m + 2];
    }
    c.children = f;
  }
  if (a && a.defaultProps) for (d in g = a.defaultProps, g) {
    void 0 === c[d] && (c[d] = g[d]);
  }
  return {
    $$typeof: l,
    type: a,
    key: k,
    ref: h,
    props: c,
    _owner: K.current
  };
}
function N(a, b) {
  return {
    $$typeof: l,
    type: a.type,
    key: b,
    ref: a.ref,
    props: a.props,
    _owner: a._owner
  };
}
function O(a) {
  return "object" === typeof a && null !== a && a.$$typeof === l;
}
function escape(a) {
  var b = {
    "=": "=0",
    ":": "=2"
  };
  return "$" + a.replace(/[=:]/g, function (a) {
    return b[a];
  });
}
var P = /\/+/g;
function Q(a, b) {
  return "object" === typeof a && null !== a && null != a.key ? escape("" + a.key) : b.toString(36);
}
function R(a, b, e, d, c) {
  var k = typeof a;
  if ("undefined" === k || "boolean" === k) a = null;
  var h = !1;
  if (null === a) h = !0;else switch (k) {
    case "string":
    case "number":
      h = !0;
      break;
    case "object":
      switch (a.$$typeof) {
        case l:
        case n:
          h = !0;
      }
  }
  if (h) return h = a, c = c(h), a = "" === d ? "." + Q(h, 0) : d, I(c) ? (e = "", null != a && (e = a.replace(P, "$&/") + "/"), R(c, b, e, "", function (a) {
    return a;
  })) : null != c && (O(c) && (c = N(c, e + (!c.key || h && h.key === c.key ? "" : ("" + c.key).replace(P, "$&/") + "/") + a)), b.push(c)), 1;
  h = 0;
  d = "" === d ? "." : d + ":";
  if (I(a)) for (var g = 0; g < a.length; g++) {
    k = a[g];
    var f = d + Q(k, g);
    h += R(k, b, e, f, c);
  } else if (f = A(a), "function" === typeof f) for (a = f.call(a), g = 0; !(k = a.next()).done;) {
    k = k.value, f = d + Q(k, g++), h += R(k, b, e, f, c);
  } else if ("object" === k) throw b = String(a), Error("Objects are not valid as a React child (found: " + ("[object Object]" === b ? "object with keys {" + Object.keys(a).join(", ") + "}" : b) + "). If you meant to render a collection of children, use an array instead.");
  return h;
}
function S(a, b, e) {
  if (null == a) return a;
  var d = [],
    c = 0;
  R(a, d, "", "", function (a) {
    return b.call(e, a, c++);
  });
  return d;
}
function T(a) {
  if (-1 === a._status) {
    var b = a._result;
    b = b();
    b.then(function (b) {
      if (0 === a._status || -1 === a._status) a._status = 1, a._result = b;
    }, function (b) {
      if (0 === a._status || -1 === a._status) a._status = 2, a._result = b;
    });
    -1 === a._status && (a._status = 0, a._result = b);
  }
  if (1 === a._status) return a._result.default;
  throw a._result;
}
var U = {
    current: null
  },
  V = {
    transition: null
  },
  W = {
    ReactCurrentDispatcher: U,
    ReactCurrentBatchConfig: V,
    ReactCurrentOwner: K
  };
exports.Children = {
  map: S,
  forEach: function forEach(a, b, e) {
    S(a, function () {
      b.apply(this, arguments);
    }, e);
  },
  count: function count(a) {
    var b = 0;
    S(a, function () {
      b++;
    });
    return b;
  },
  toArray: function toArray(a) {
    return S(a, function (a) {
      return a;
    }) || [];
  },
  only: function only(a) {
    if (!O(a)) throw Error("React.Children.only expected to receive a single React element child.");
    return a;
  }
};
exports.Component = E;
exports.Fragment = p;
exports.Profiler = r;
exports.PureComponent = G;
exports.StrictMode = q;
exports.Suspense = w;
exports.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = W;
exports.cloneElement = function (a, b, e) {
  if (null === a || void 0 === a) throw Error("React.cloneElement(...): The argument must be a React element, but you passed " + a + ".");
  var d = C({}, a.props),
    c = a.key,
    k = a.ref,
    h = a._owner;
  if (null != b) {
    void 0 !== b.ref && (k = b.ref, h = K.current);
    void 0 !== b.key && (c = "" + b.key);
    if (a.type && a.type.defaultProps) var g = a.type.defaultProps;
    for (f in b) {
      J.call(b, f) && !L.hasOwnProperty(f) && (d[f] = void 0 === b[f] && void 0 !== g ? g[f] : b[f]);
    }
  }
  var f = arguments.length - 2;
  if (1 === f) d.children = e;else if (1 < f) {
    g = Array(f);
    for (var m = 0; m < f; m++) {
      g[m] = arguments[m + 2];
    }
    d.children = g;
  }
  return {
    $$typeof: l,
    type: a.type,
    key: c,
    ref: k,
    props: d,
    _owner: h
  };
};
exports.createContext = function (a) {
  a = {
    $$typeof: u,
    _currentValue: a,
    _currentValue2: a,
    _threadCount: 0,
    Provider: null,
    Consumer: null,
    _defaultValue: null,
    _globalName: null
  };
  a.Provider = {
    $$typeof: t,
    _context: a
  };
  return a.Consumer = a;
};
exports.createElement = M;
exports.createFactory = function (a) {
  var b = M.bind(null, a);
  b.type = a;
  return b;
};
exports.createRef = function () {
  return {
    current: null
  };
};
exports.forwardRef = function (a) {
  return {
    $$typeof: v,
    render: a
  };
};
exports.isValidElement = O;
exports.lazy = function (a) {
  return {
    $$typeof: y,
    _payload: {
      _status: -1,
      _result: a
    },
    _init: T
  };
};
exports.memo = function (a, b) {
  return {
    $$typeof: x,
    type: a,
    compare: void 0 === b ? null : b
  };
};
exports.startTransition = function (a) {
  var b = V.transition;
  V.transition = {};
  try {
    a();
  } finally {
    V.transition = b;
  }
};
exports.unstable_act = function () {
  throw Error("act(...) is not supported in production builds of React.");
};
exports.useCallback = function (a, b) {
  return U.current.useCallback(a, b);
};
exports.useContext = function (a) {
  return U.current.useContext(a);
};
exports.useDebugValue = function () {};
exports.useDeferredValue = function (a) {
  return U.current.useDeferredValue(a);
};
exports.useEffect = function (a, b) {
  return U.current.useEffect(a, b);
};
exports.useId = function () {
  return U.current.useId();
};
exports.useImperativeHandle = function (a, b, e) {
  return U.current.useImperativeHandle(a, b, e);
};
exports.useInsertionEffect = function (a, b) {
  return U.current.useInsertionEffect(a, b);
};
exports.useLayoutEffect = function (a, b) {
  return U.current.useLayoutEffect(a, b);
};
exports.useMemo = function (a, b) {
  return U.current.useMemo(a, b);
};
exports.useReducer = function (a, b, e) {
  return U.current.useReducer(a, b, e);
};
exports.useRef = function (a) {
  return U.current.useRef(a);
};
exports.useState = function (a) {
  return U.current.useState(a);
};
exports.useSyncExternalStore = function (a, b, e) {
  return U.current.useSyncExternalStore(a, b, e);
};
exports.useTransition = function () {
  return U.current.useTransition();
};
exports.version = "18.2.0";

/***/ }),

/***/ 2791:
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";


if (true) {
  module.exports = __webpack_require__(9117);
} else {}

/***/ }),

/***/ 184:
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";


if (true) {
  module.exports = __webpack_require__(6374);
} else {}

/***/ }),

/***/ 6813:
/***/ (function(__unused_webpack_module, exports) {

"use strict";
/**
 * @license React
 * scheduler.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


function f(a, b) {
  var c = a.length;
  a.push(b);
  a: for (; 0 < c;) {
    var d = c - 1 >>> 1,
      e = a[d];
    if (0 < g(e, b)) a[d] = b, a[c] = e, c = d;else break a;
  }
}
function h(a) {
  return 0 === a.length ? null : a[0];
}
function k(a) {
  if (0 === a.length) return null;
  var b = a[0],
    c = a.pop();
  if (c !== b) {
    a[0] = c;
    a: for (var d = 0, e = a.length, w = e >>> 1; d < w;) {
      var m = 2 * (d + 1) - 1,
        C = a[m],
        n = m + 1,
        x = a[n];
      if (0 > g(C, c)) n < e && 0 > g(x, C) ? (a[d] = x, a[n] = c, d = n) : (a[d] = C, a[m] = c, d = m);else if (n < e && 0 > g(x, c)) a[d] = x, a[n] = c, d = n;else break a;
    }
  }
  return b;
}
function g(a, b) {
  var c = a.sortIndex - b.sortIndex;
  return 0 !== c ? c : a.id - b.id;
}
if ("object" === typeof performance && "function" === typeof performance.now) {
  var l = performance;
  exports.unstable_now = function () {
    return l.now();
  };
} else {
  var p = Date,
    q = p.now();
  exports.unstable_now = function () {
    return p.now() - q;
  };
}
var r = [],
  t = [],
  u = 1,
  v = null,
  y = 3,
  z = !1,
  A = !1,
  B = !1,
  D = "function" === typeof setTimeout ? setTimeout : null,
  E = "function" === typeof clearTimeout ? clearTimeout : null,
  F = "undefined" !== typeof setImmediate ? setImmediate : null;
"undefined" !== typeof navigator && void 0 !== navigator.scheduling && void 0 !== navigator.scheduling.isInputPending && navigator.scheduling.isInputPending.bind(navigator.scheduling);
function G(a) {
  for (var b = h(t); null !== b;) {
    if (null === b.callback) k(t);else if (b.startTime <= a) k(t), b.sortIndex = b.expirationTime, f(r, b);else break;
    b = h(t);
  }
}
function H(a) {
  B = !1;
  G(a);
  if (!A) if (null !== h(r)) A = !0, I(J);else {
    var b = h(t);
    null !== b && K(H, b.startTime - a);
  }
}
function J(a, b) {
  A = !1;
  B && (B = !1, E(L), L = -1);
  z = !0;
  var c = y;
  try {
    G(b);
    for (v = h(r); null !== v && (!(v.expirationTime > b) || a && !M());) {
      var d = v.callback;
      if ("function" === typeof d) {
        v.callback = null;
        y = v.priorityLevel;
        var e = d(v.expirationTime <= b);
        b = exports.unstable_now();
        "function" === typeof e ? v.callback = e : v === h(r) && k(r);
        G(b);
      } else k(r);
      v = h(r);
    }
    if (null !== v) var w = !0;else {
      var m = h(t);
      null !== m && K(H, m.startTime - b);
      w = !1;
    }
    return w;
  } finally {
    v = null, y = c, z = !1;
  }
}
var N = !1,
  O = null,
  L = -1,
  P = 5,
  Q = -1;
function M() {
  return exports.unstable_now() - Q < P ? !1 : !0;
}
function R() {
  if (null !== O) {
    var a = exports.unstable_now();
    Q = a;
    var b = !0;
    try {
      b = O(!0, a);
    } finally {
      b ? S() : (N = !1, O = null);
    }
  } else N = !1;
}
var S;
if ("function" === typeof F) S = function S() {
  F(R);
};else if ("undefined" !== typeof MessageChannel) {
  var T = new MessageChannel(),
    U = T.port2;
  T.port1.onmessage = R;
  S = function S() {
    U.postMessage(null);
  };
} else S = function S() {
  D(R, 0);
};
function I(a) {
  O = a;
  N || (N = !0, S());
}
function K(a, b) {
  L = D(function () {
    a(exports.unstable_now());
  }, b);
}
exports.unstable_IdlePriority = 5;
exports.unstable_ImmediatePriority = 1;
exports.unstable_LowPriority = 4;
exports.unstable_NormalPriority = 3;
exports.unstable_Profiling = null;
exports.unstable_UserBlockingPriority = 2;
exports.unstable_cancelCallback = function (a) {
  a.callback = null;
};
exports.unstable_continueExecution = function () {
  A || z || (A = !0, I(J));
};
exports.unstable_forceFrameRate = function (a) {
  0 > a || 125 < a ? console.error("forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported") : P = 0 < a ? Math.floor(1E3 / a) : 5;
};
exports.unstable_getCurrentPriorityLevel = function () {
  return y;
};
exports.unstable_getFirstCallbackNode = function () {
  return h(r);
};
exports.unstable_next = function (a) {
  switch (y) {
    case 1:
    case 2:
    case 3:
      var b = 3;
      break;
    default:
      b = y;
  }
  var c = y;
  y = b;
  try {
    return a();
  } finally {
    y = c;
  }
};
exports.unstable_pauseExecution = function () {};
exports.unstable_requestPaint = function () {};
exports.unstable_runWithPriority = function (a, b) {
  switch (a) {
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
      break;
    default:
      a = 3;
  }
  var c = y;
  y = a;
  try {
    return b();
  } finally {
    y = c;
  }
};
exports.unstable_scheduleCallback = function (a, b, c) {
  var d = exports.unstable_now();
  "object" === typeof c && null !== c ? (c = c.delay, c = "number" === typeof c && 0 < c ? d + c : d) : c = d;
  switch (a) {
    case 1:
      var e = -1;
      break;
    case 2:
      e = 250;
      break;
    case 5:
      e = 1073741823;
      break;
    case 4:
      e = 1E4;
      break;
    default:
      e = 5E3;
  }
  e = c + e;
  a = {
    id: u++,
    callback: b,
    priorityLevel: a,
    startTime: c,
    expirationTime: e,
    sortIndex: -1
  };
  c > d ? (a.sortIndex = c, f(t, a), null === h(r) && a === h(t) && (B ? (E(L), L = -1) : B = !0, K(H, c - d))) : (a.sortIndex = e, f(r, a), A || z || (A = !0, I(J)));
  return a;
};
exports.unstable_shouldYield = M;
exports.unstable_wrapCallback = function (a) {
  var b = y;
  return function () {
    var c = y;
    y = b;
    try {
      return a.apply(this, arguments);
    } finally {
      y = c;
    }
  };
};

/***/ }),

/***/ 5296:
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";


if (true) {
  module.exports = __webpack_require__(6813);
} else {}

/***/ }),

/***/ 4404:
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var _toConsumableArray = (__webpack_require__(861)["default"]);
var _createClass = (__webpack_require__(9728)["default"]);
var _classCallCheck = (__webpack_require__(6690)["default"]);
var _possibleConstructorReturn = (__webpack_require__(4993)["default"]);
var _assertThisInitialized = (__webpack_require__(6115)["default"]);
var _inherits = (__webpack_require__(1655)["default"]);
var _createSuper = (__webpack_require__(6389)["default"]);
var _wrapNativeSuper = (__webpack_require__(3496)["default"]);
var _createForOfIteratorHelper = (__webpack_require__(4704)["default"]);
var ShortUniqueId = function () {
  var __defProp = Object.defineProperty;
  var __getOwnPropSymbols = Object.getOwnPropertySymbols;
  var __hasOwnProp = Object.prototype.hasOwnProperty;
  var __propIsEnum = Object.prototype.propertyIsEnumerable;
  var __defNormalProp = function __defNormalProp(obj, key, value) {
    return key in obj ? __defProp(obj, key, {
      enumerable: true,
      configurable: true,
      writable: true,
      value: value
    }) : obj[key] = value;
  };
  var __spreadValues = function __spreadValues(a, b) {
    for (var prop in b || (b = {})) {
      if (__hasOwnProp.call(b, prop)) __defNormalProp(a, prop, b[prop]);
    }
    if (__getOwnPropSymbols) {
      var _iterator = _createForOfIteratorHelper(__getOwnPropSymbols(b)),
        _step;
      try {
        for (_iterator.s(); !(_step = _iterator.n()).done;) {
          var prop = _step.value;
          if (__propIsEnum.call(b, prop)) __defNormalProp(a, prop, b[prop]);
        }
      } catch (err) {
        _iterator.e(err);
      } finally {
        _iterator.f();
      }
    }
    return a;
  };
  var __markAsModule = function __markAsModule(target) {
    return __defProp(target, "__esModule", {
      value: true
    });
  };
  var __export = function __export(target, all) {
    __markAsModule(target);
    for (var name in all) {
      __defProp(target, name, {
        get: all[name],
        enumerable: true
      });
    }
  };

  // src/index.ts
  var src_exports = {};
  __export(src_exports, {
    DEFAULT_UUID_LENGTH: function DEFAULT_UUID_LENGTH() {
      return _DEFAULT_UUID_LENGTH;
    },
    default: function _default() {
      return ShortUniqueId;
    }
  });

  // package.json
  var version = "4.4.4";

  // src/index.ts
  var _DEFAULT_UUID_LENGTH = 6;
  var DEFAULT_OPTIONS = {
    dictionary: "alphanum",
    shuffle: true,
    debug: false,
    length: _DEFAULT_UUID_LENGTH
  };
  var _ShortUniqueId = /*#__PURE__*/function (_Function) {
    "use strict";

    _inherits(_ShortUniqueId, _Function);
    var _super = _createSuper(_ShortUniqueId);
    function _ShortUniqueId() {
      var _this;
      var argOptions = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
      _classCallCheck(this, _ShortUniqueId);
      _this = _super.call(this);
      _this.dictIndex = 0;
      _this.dictRange = [];
      _this.lowerBound = 0;
      _this.upperBound = 0;
      _this.dictLength = 0;
      _this._digit_first_ascii = 48;
      _this._digit_last_ascii = 58;
      _this._alpha_lower_first_ascii = 97;
      _this._alpha_lower_last_ascii = 123;
      _this._hex_last_ascii = 103;
      _this._alpha_upper_first_ascii = 65;
      _this._alpha_upper_last_ascii = 91;
      _this._number_dict_ranges = {
        digits: [_this._digit_first_ascii, _this._digit_last_ascii]
      };
      _this._alpha_dict_ranges = {
        lowerCase: [_this._alpha_lower_first_ascii, _this._alpha_lower_last_ascii],
        upperCase: [_this._alpha_upper_first_ascii, _this._alpha_upper_last_ascii]
      };
      _this._alpha_lower_dict_ranges = {
        lowerCase: [_this._alpha_lower_first_ascii, _this._alpha_lower_last_ascii]
      };
      _this._alpha_upper_dict_ranges = {
        upperCase: [_this._alpha_upper_first_ascii, _this._alpha_upper_last_ascii]
      };
      _this._alphanum_dict_ranges = {
        digits: [_this._digit_first_ascii, _this._digit_last_ascii],
        lowerCase: [_this._alpha_lower_first_ascii, _this._alpha_lower_last_ascii],
        upperCase: [_this._alpha_upper_first_ascii, _this._alpha_upper_last_ascii]
      };
      _this._alphanum_lower_dict_ranges = {
        digits: [_this._digit_first_ascii, _this._digit_last_ascii],
        lowerCase: [_this._alpha_lower_first_ascii, _this._alpha_lower_last_ascii]
      };
      _this._alphanum_upper_dict_ranges = {
        digits: [_this._digit_first_ascii, _this._digit_last_ascii],
        upperCase: [_this._alpha_upper_first_ascii, _this._alpha_upper_last_ascii]
      };
      _this._hex_dict_ranges = {
        decDigits: [_this._digit_first_ascii, _this._digit_last_ascii],
        alphaDigits: [_this._alpha_lower_first_ascii, _this._hex_last_ascii]
      };
      _this.log = function () {
        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
          args[_key] = arguments[_key];
        }
        var finalArgs = [].concat(args);
        finalArgs[0] = "[short-unique-id] ".concat(args[0]);
        if (_this.debug === true) {
          if (typeof console !== "undefined" && console !== null) {
            var _console;
            return (_console = console).log.apply(_console, _toConsumableArray(finalArgs));
          }
        }
      };
      _this.setDictionary = function (dictionary, shuffle) {
        var finalDict;
        if (dictionary && Array.isArray(dictionary) && dictionary.length > 1) {
          finalDict = dictionary;
        } else {
          finalDict = [];
          var i;
          _this.dictIndex = i = 0;
          var rangesName = "_".concat(dictionary, "_dict_ranges");
          var ranges = _this[rangesName];
          Object.keys(ranges).forEach(function (rangeType) {
            var rangeTypeKey = rangeType;
            _this.dictRange = ranges[rangeTypeKey];
            _this.lowerBound = _this.dictRange[0];
            _this.upperBound = _this.dictRange[1];
            for (_this.dictIndex = i = _this.lowerBound; _this.lowerBound <= _this.upperBound ? i < _this.upperBound : i > _this.upperBound; _this.dictIndex = _this.lowerBound <= _this.upperBound ? i += 1 : i -= 1) {
              finalDict.push(String.fromCharCode(_this.dictIndex));
            }
          });
        }
        if (shuffle) {
          var PROBABILITY = 0.5;
          finalDict = finalDict.sort(function () {
            return Math.random() - PROBABILITY;
          });
        }
        _this.dict = finalDict;
        _this.dictLength = _this.dict.length;
        _this.counter = 0;
      };
      _this.seq = function () {
        return _this.sequentialUUID();
      };
      _this.sequentialUUID = function () {
        var counterDiv;
        var counterRem;
        var id = "";
        counterDiv = _this.counter;
        do {
          counterRem = counterDiv % _this.dictLength;
          counterDiv = Math.trunc(counterDiv / _this.dictLength);
          id += _this.dict[counterRem];
        } while (counterDiv !== 0);
        _this.counter += 1;
        return id;
      };
      _this.randomUUID = function () {
        var uuidLength = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : _this.uuidLength || _DEFAULT_UUID_LENGTH;
        var id;
        var randomPartIdx;
        var j;
        if (uuidLength === null || typeof uuidLength === "undefined" || uuidLength < 1) {
          throw new Error("Invalid UUID Length Provided");
        }
        var isPositive = uuidLength >= 0;
        id = "";
        for (j = 0; j < uuidLength; j += 1) {
          randomPartIdx = parseInt((Math.random() * _this.dictLength).toFixed(0), 10) % _this.dictLength;
          id += _this.dict[randomPartIdx];
        }
        return id;
      };
      _this.availableUUIDs = function () {
        var uuidLength = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : _this.uuidLength;
        return parseFloat(Math.pow(_toConsumableArray(new Set(_this.dict)).length, uuidLength).toFixed(0));
      };
      _this.approxMaxBeforeCollision = function () {
        var rounds = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : _this.availableUUIDs(_this.uuidLength);
        return parseFloat(Math.sqrt(Math.PI / 2 * rounds).toFixed(20));
      };
      _this.collisionProbability = function () {
        var rounds = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : _this.availableUUIDs(_this.uuidLength);
        var uuidLength = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _this.uuidLength;
        return parseFloat((_this.approxMaxBeforeCollision(rounds) / _this.availableUUIDs(uuidLength)).toFixed(20));
      };
      _this.uniqueness = function () {
        var rounds = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : _this.availableUUIDs(_this.uuidLength);
        var score = parseFloat((1 - _this.approxMaxBeforeCollision(rounds) / rounds).toFixed(20));
        return score > 1 ? 1 : score < 0 ? 0 : score;
      };
      _this.getVersion = function () {
        return _this.version;
      };
      _this.stamp = function (finalLength) {
        if (typeof finalLength !== "number" || finalLength < 10) {
          throw new Error("Param finalLength must be number greater than 10");
        }
        var hexStamp = Math.floor(+new Date() / 1e3).toString(16);
        var idLength = finalLength - 9;
        var rndIdx = Math.round(Math.random() * (idLength > 15 ? 15 : idLength));
        var id = _this.randomUUID(idLength);
        return "".concat(id.substr(0, rndIdx)).concat(hexStamp).concat(id.substr(rndIdx)).concat(rndIdx.toString(16));
      };
      _this.parseStamp = function (stamp) {
        if (stamp.length < 10) {
          throw new Error("Stamp length invalid");
        }
        var rndIdx = parseInt(stamp.substr(stamp.length - 1, 1), 16);
        return new Date(parseInt(stamp.substr(rndIdx, 8), 16) * 1e3);
      };
      var options = __spreadValues(__spreadValues({}, DEFAULT_OPTIONS), argOptions);
      _this.counter = 0;
      _this.debug = false;
      _this.dict = [];
      _this.version = version;
      var dictionary = options.dictionary,
        shuffle = options.shuffle,
        length = options.length;
      _this.uuidLength = length;
      _this.setDictionary(dictionary, shuffle);
      _this.debug = options.debug;
      _this.log(_this.dict);
      _this.log("Generator instantiated with Dictionary Size ".concat(_this.dictLength));
      return _possibleConstructorReturn(_this, new Proxy(_assertThisInitialized(_this), {
        apply: function apply(target, that, args) {
          var _this2;
          return (_this2 = _this).randomUUID.apply(_this2, _toConsumableArray(args));
        }
      }));
    }
    return _createClass(_ShortUniqueId);
  }( /*#__PURE__*/_wrapNativeSuper(Function));
  var ShortUniqueId = _ShortUniqueId;
  ShortUniqueId.default = _ShortUniqueId;
  return src_exports;
}();
 true && (module.exports = ShortUniqueId.default), 'undefined' != typeof window && (ShortUniqueId = ShortUniqueId.default);

/***/ }),

/***/ 83:
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
module.exports = __webpack_require__.p + "static/media/menuLogo.c4e869c13107a40dab48.png";

/***/ }),

/***/ 3897:
/***/ (function(module) {

function _arrayLikeToArray(arr, len) {
  if (len == null || len > arr.length) len = arr.length;
  for (var i = 0, arr2 = new Array(len); i < len; i++) {
    arr2[i] = arr[i];
  }
  return arr2;
}
module.exports = _arrayLikeToArray, module.exports.__esModule = true, module.exports["default"] = module.exports;

/***/ }),

/***/ 3405:
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var arrayLikeToArray = __webpack_require__(3897);
function _arrayWithoutHoles(arr) {
  if (Array.isArray(arr)) return arrayLikeToArray(arr);
}
module.exports = _arrayWithoutHoles, module.exports.__esModule = true, module.exports["default"] = module.exports;

/***/ }),

/***/ 6115:
/***/ (function(module) {

function _assertThisInitialized(self) {
  if (self === void 0) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }
  return self;
}
module.exports = _assertThisInitialized, module.exports.__esModule = true, module.exports["default"] = module.exports;

/***/ }),

/***/ 6690:
/***/ (function(module) {

function _classCallCheck(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}
module.exports = _classCallCheck, module.exports.__esModule = true, module.exports["default"] = module.exports;

/***/ }),

/***/ 3515:
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var setPrototypeOf = __webpack_require__(6015);
var isNativeReflectConstruct = __webpack_require__(9617);
function _construct(Parent, args, Class) {
  if (isNativeReflectConstruct()) {
    module.exports = _construct = Reflect.construct.bind(), module.exports.__esModule = true, module.exports["default"] = module.exports;
  } else {
    module.exports = _construct = function _construct(Parent, args, Class) {
      var a = [null];
      a.push.apply(a, args);
      var Constructor = Function.bind.apply(Parent, a);
      var instance = new Constructor();
      if (Class) setPrototypeOf(instance, Class.prototype);
      return instance;
    }, module.exports.__esModule = true, module.exports["default"] = module.exports;
  }
  return _construct.apply(null, arguments);
}
module.exports = _construct, module.exports.__esModule = true, module.exports["default"] = module.exports;

/***/ }),

/***/ 9728:
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var toPropertyKey = __webpack_require__(4062);
function _defineProperties(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor) descriptor.writable = true;
    Object.defineProperty(target, toPropertyKey(descriptor.key), descriptor);
  }
}
function _createClass(Constructor, protoProps, staticProps) {
  if (protoProps) _defineProperties(Constructor.prototype, protoProps);
  if (staticProps) _defineProperties(Constructor, staticProps);
  Object.defineProperty(Constructor, "prototype", {
    writable: false
  });
  return Constructor;
}
module.exports = _createClass, module.exports.__esModule = true, module.exports["default"] = module.exports;

/***/ }),

/***/ 4704:
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var unsupportedIterableToArray = __webpack_require__(6116);
function _createForOfIteratorHelper(o, allowArrayLike) {
  var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"];
  if (!it) {
    if (Array.isArray(o) || (it = unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") {
      if (it) o = it;
      var i = 0;
      var F = function F() {};
      return {
        s: F,
        n: function n() {
          if (i >= o.length) return {
            done: true
          };
          return {
            done: false,
            value: o[i++]
          };
        },
        e: function e(_e) {
          throw _e;
        },
        f: F
      };
    }
    throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
  }
  var normalCompletion = true,
    didErr = false,
    err;
  return {
    s: function s() {
      it = it.call(o);
    },
    n: function n() {
      var step = it.next();
      normalCompletion = step.done;
      return step;
    },
    e: function e(_e2) {
      didErr = true;
      err = _e2;
    },
    f: function f() {
      try {
        if (!normalCompletion && it["return"] != null) it["return"]();
      } finally {
        if (didErr) throw err;
      }
    }
  };
}
module.exports = _createForOfIteratorHelper, module.exports.__esModule = true, module.exports["default"] = module.exports;

/***/ }),

/***/ 6389:
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var getPrototypeOf = __webpack_require__(3808);
var isNativeReflectConstruct = __webpack_require__(9617);
var possibleConstructorReturn = __webpack_require__(4993);
function _createSuper(Derived) {
  var hasNativeReflectConstruct = isNativeReflectConstruct();
  return function _createSuperInternal() {
    var Super = getPrototypeOf(Derived),
      result;
    if (hasNativeReflectConstruct) {
      var NewTarget = getPrototypeOf(this).constructor;
      result = Reflect.construct(Super, arguments, NewTarget);
    } else {
      result = Super.apply(this, arguments);
    }
    return possibleConstructorReturn(this, result);
  };
}
module.exports = _createSuper, module.exports.__esModule = true, module.exports["default"] = module.exports;

/***/ }),

/***/ 3808:
/***/ (function(module) {

function _getPrototypeOf(o) {
  module.exports = _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) {
    return o.__proto__ || Object.getPrototypeOf(o);
  }, module.exports.__esModule = true, module.exports["default"] = module.exports;
  return _getPrototypeOf(o);
}
module.exports = _getPrototypeOf, module.exports.__esModule = true, module.exports["default"] = module.exports;

/***/ }),

/***/ 1655:
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var setPrototypeOf = __webpack_require__(6015);
function _inherits(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function");
  }
  subClass.prototype = Object.create(superClass && superClass.prototype, {
    constructor: {
      value: subClass,
      writable: true,
      configurable: true
    }
  });
  Object.defineProperty(subClass, "prototype", {
    writable: false
  });
  if (superClass) setPrototypeOf(subClass, superClass);
}
module.exports = _inherits, module.exports.__esModule = true, module.exports["default"] = module.exports;

/***/ }),

/***/ 4836:
/***/ (function(module) {

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : {
    "default": obj
  };
}
module.exports = _interopRequireDefault, module.exports.__esModule = true, module.exports["default"] = module.exports;

/***/ }),

/***/ 6035:
/***/ (function(module) {

function _isNativeFunction(fn) {
  return Function.toString.call(fn).indexOf("[native code]") !== -1;
}
module.exports = _isNativeFunction, module.exports.__esModule = true, module.exports["default"] = module.exports;

/***/ }),

/***/ 9617:
/***/ (function(module) {

function _isNativeReflectConstruct() {
  if (typeof Reflect === "undefined" || !Reflect.construct) return false;
  if (Reflect.construct.sham) return false;
  if (typeof Proxy === "function") return true;
  try {
    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));
    return true;
  } catch (e) {
    return false;
  }
}
module.exports = _isNativeReflectConstruct, module.exports.__esModule = true, module.exports["default"] = module.exports;

/***/ }),

/***/ 9498:
/***/ (function(module) {

function _iterableToArray(iter) {
  if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter);
}
module.exports = _iterableToArray, module.exports.__esModule = true, module.exports["default"] = module.exports;

/***/ }),

/***/ 2281:
/***/ (function(module) {

function _nonIterableSpread() {
  throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
module.exports = _nonIterableSpread, module.exports.__esModule = true, module.exports["default"] = module.exports;

/***/ }),

/***/ 4993:
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var _typeof = (__webpack_require__(8698)["default"]);
var assertThisInitialized = __webpack_require__(6115);
function _possibleConstructorReturn(self, call) {
  if (call && (_typeof(call) === "object" || typeof call === "function")) {
    return call;
  } else if (call !== void 0) {
    throw new TypeError("Derived constructors may only return object or undefined");
  }
  return assertThisInitialized(self);
}
module.exports = _possibleConstructorReturn, module.exports.__esModule = true, module.exports["default"] = module.exports;

/***/ }),

/***/ 6015:
/***/ (function(module) {

function _setPrototypeOf(o, p) {
  module.exports = _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) {
    o.__proto__ = p;
    return o;
  }, module.exports.__esModule = true, module.exports["default"] = module.exports;
  return _setPrototypeOf(o, p);
}
module.exports = _setPrototypeOf, module.exports.__esModule = true, module.exports["default"] = module.exports;

/***/ }),

/***/ 861:
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var arrayWithoutHoles = __webpack_require__(3405);
var iterableToArray = __webpack_require__(9498);
var unsupportedIterableToArray = __webpack_require__(6116);
var nonIterableSpread = __webpack_require__(2281);
function _toConsumableArray(arr) {
  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();
}
module.exports = _toConsumableArray, module.exports.__esModule = true, module.exports["default"] = module.exports;

/***/ }),

/***/ 5036:
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var _typeof = (__webpack_require__(8698)["default"]);
function _toPrimitive(input, hint) {
  if (_typeof(input) !== "object" || input === null) return input;
  var prim = input[Symbol.toPrimitive];
  if (prim !== undefined) {
    var res = prim.call(input, hint || "default");
    if (_typeof(res) !== "object") return res;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return (hint === "string" ? String : Number)(input);
}
module.exports = _toPrimitive, module.exports.__esModule = true, module.exports["default"] = module.exports;

/***/ }),

/***/ 4062:
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var _typeof = (__webpack_require__(8698)["default"]);
var toPrimitive = __webpack_require__(5036);
function _toPropertyKey(arg) {
  var key = toPrimitive(arg, "string");
  return _typeof(key) === "symbol" ? key : String(key);
}
module.exports = _toPropertyKey, module.exports.__esModule = true, module.exports["default"] = module.exports;

/***/ }),

/***/ 8698:
/***/ (function(module) {

function _typeof(obj) {
  "@babel/helpers - typeof";

  return (module.exports = _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) {
    return typeof obj;
  } : function (obj) {
    return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
  }, module.exports.__esModule = true, module.exports["default"] = module.exports), _typeof(obj);
}
module.exports = _typeof, module.exports.__esModule = true, module.exports["default"] = module.exports;

/***/ }),

/***/ 6116:
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var arrayLikeToArray = __webpack_require__(3897);
function _unsupportedIterableToArray(o, minLen) {
  if (!o) return;
  if (typeof o === "string") return arrayLikeToArray(o, minLen);
  var n = Object.prototype.toString.call(o).slice(8, -1);
  if (n === "Object" && o.constructor) n = o.constructor.name;
  if (n === "Map" || n === "Set") return Array.from(o);
  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);
}
module.exports = _unsupportedIterableToArray, module.exports.__esModule = true, module.exports["default"] = module.exports;

/***/ }),

/***/ 3496:
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var getPrototypeOf = __webpack_require__(3808);
var setPrototypeOf = __webpack_require__(6015);
var isNativeFunction = __webpack_require__(6035);
var construct = __webpack_require__(3515);
function _wrapNativeSuper(Class) {
  var _cache = typeof Map === "function" ? new Map() : undefined;
  module.exports = _wrapNativeSuper = function _wrapNativeSuper(Class) {
    if (Class === null || !isNativeFunction(Class)) return Class;
    if (typeof Class !== "function") {
      throw new TypeError("Super expression must either be null or a function");
    }
    if (typeof _cache !== "undefined") {
      if (_cache.has(Class)) return _cache.get(Class);
      _cache.set(Class, Wrapper);
    }
    function Wrapper() {
      return construct(Class, arguments, getPrototypeOf(this).constructor);
    }
    Wrapper.prototype = Object.create(Class.prototype, {
      constructor: {
        value: Wrapper,
        enumerable: false,
        writable: true,
        configurable: true
      }
    });
    return setPrototypeOf(Wrapper, Class);
  }, module.exports.__esModule = true, module.exports["default"] = module.exports;
  return _wrapNativeSuper(Class);
}
module.exports = _wrapNativeSuper, module.exports.__esModule = true, module.exports["default"] = module.exports;

/***/ }),

/***/ 907:
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Z": function() { return /* binding */ _arrayLikeToArray; }
/* harmony export */ });
function _arrayLikeToArray(arr, len) {
  if (len == null || len > arr.length) len = arr.length;
  for (var i = 0, arr2 = new Array(len); i < len; i++) {
    arr2[i] = arr[i];
  }
  return arr2;
}

/***/ }),

/***/ 3878:
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Z": function() { return /* binding */ _arrayWithHoles; }
/* harmony export */ });
function _arrayWithHoles(arr) {
  if (Array.isArray(arr)) return arr;
}

/***/ }),

/***/ 4942:
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Z": function() { return /* binding */ _defineProperty; }
/* harmony export */ });
/* harmony import */ var _toPropertyKey_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(9142);

function _defineProperty(obj, key, value) {
  key = (0,_toPropertyKey_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z)(key);
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }
  return obj;
}

/***/ }),

/***/ 7462:
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Z": function() { return /* binding */ _extends; }
/* harmony export */ });
function _extends() {
  _extends = Object.assign ? Object.assign.bind() : function (target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends.apply(this, arguments);
}

/***/ }),

/***/ 9199:
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Z": function() { return /* binding */ _iterableToArray; }
/* harmony export */ });
function _iterableToArray(iter) {
  if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter);
}

/***/ }),

/***/ 5267:
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Z": function() { return /* binding */ _nonIterableRest; }
/* harmony export */ });
function _nonIterableRest() {
  throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}

/***/ }),

/***/ 3366:
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Z": function() { return /* binding */ _objectWithoutPropertiesLoose; }
/* harmony export */ });
function _objectWithoutPropertiesLoose(source, excluded) {
  if (source == null) return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i;
  for (i = 0; i < sourceKeys.length; i++) {
    key = sourceKeys[i];
    if (excluded.indexOf(key) >= 0) continue;
    target[key] = source[key];
  }
  return target;
}

/***/ }),

/***/ 9439:
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";

// EXPORTS
__webpack_require__.d(__webpack_exports__, {
  "Z": function() { return /* binding */ _slicedToArray; }
});

// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js
var arrayWithHoles = __webpack_require__(3878);
;// CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js
function _iterableToArrayLimit(arr, i) {
  var _i = null == arr ? null : "undefined" != typeof Symbol && arr[Symbol.iterator] || arr["@@iterator"];
  if (null != _i) {
    var _s,
      _e,
      _x,
      _r,
      _arr = [],
      _n = !0,
      _d = !1;
    try {
      if (_x = (_i = _i.call(arr)).next, 0 === i) {
        if (Object(_i) !== _i) return;
        _n = !1;
      } else for (; !(_n = (_s = _x.call(_i)).done) && (_arr.push(_s.value), _arr.length !== i); _n = !0) {
        ;
      }
    } catch (err) {
      _d = !0, _e = err;
    } finally {
      try {
        if (!_n && null != _i["return"] && (_r = _i["return"](), Object(_r) !== _r)) return;
      } finally {
        if (_d) throw _e;
      }
    }
    return _arr;
  }
}
// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js
var unsupportedIterableToArray = __webpack_require__(181);
// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/nonIterableRest.js
var nonIterableRest = __webpack_require__(5267);
;// CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/esm/slicedToArray.js




function _slicedToArray(arr, i) {
  return (0,arrayWithHoles/* default */.Z)(arr) || _iterableToArrayLimit(arr, i) || (0,unsupportedIterableToArray/* default */.Z)(arr, i) || (0,nonIterableRest/* default */.Z)();
}

/***/ }),

/***/ 3433:
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";

// EXPORTS
__webpack_require__.d(__webpack_exports__, {
  "Z": function() { return /* binding */ _toConsumableArray; }
});

// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js
var arrayLikeToArray = __webpack_require__(907);
;// CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js

function _arrayWithoutHoles(arr) {
  if (Array.isArray(arr)) return (0,arrayLikeToArray/* default */.Z)(arr);
}
// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/iterableToArray.js
var iterableToArray = __webpack_require__(9199);
// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js
var unsupportedIterableToArray = __webpack_require__(181);
;// CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js
function _nonIterableSpread() {
  throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
;// CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/esm/toConsumableArray.js




function _toConsumableArray(arr) {
  return _arrayWithoutHoles(arr) || (0,iterableToArray/* default */.Z)(arr) || (0,unsupportedIterableToArray/* default */.Z)(arr) || _nonIterableSpread();
}

/***/ }),

/***/ 9142:
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";

// EXPORTS
__webpack_require__.d(__webpack_exports__, {
  "Z": function() { return /* binding */ _toPropertyKey; }
});

// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/typeof.js
var esm_typeof = __webpack_require__(1002);
;// CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/esm/toPrimitive.js

function _toPrimitive(input, hint) {
  if ((0,esm_typeof/* default */.Z)(input) !== "object" || input === null) return input;
  var prim = input[Symbol.toPrimitive];
  if (prim !== undefined) {
    var res = prim.call(input, hint || "default");
    if ((0,esm_typeof/* default */.Z)(res) !== "object") return res;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return (hint === "string" ? String : Number)(input);
}
;// CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/esm/toPropertyKey.js


function _toPropertyKey(arg) {
  var key = _toPrimitive(arg, "string");
  return (0,esm_typeof/* default */.Z)(key) === "symbol" ? key : String(key);
}

/***/ }),

/***/ 1002:
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Z": function() { return /* binding */ _typeof; }
/* harmony export */ });
function _typeof(obj) {
  "@babel/helpers - typeof";

  return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) {
    return typeof obj;
  } : function (obj) {
    return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
  }, _typeof(obj);
}

/***/ }),

/***/ 181:
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Z": function() { return /* binding */ _unsupportedIterableToArray; }
/* harmony export */ });
/* harmony import */ var _arrayLikeToArray_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(907);

function _unsupportedIterableToArray(o, minLen) {
  if (!o) return;
  if (typeof o === "string") return (0,_arrayLikeToArray_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z)(o, minLen);
  var n = Object.prototype.toString.call(o).slice(8, -1);
  if (n === "Object" && o.constructor) n = o.constructor.name;
  if (n === "Map" || n === "Set") return Array.from(o);
  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return (0,_arrayLikeToArray_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z)(o, minLen);
}

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = __webpack_modules__;
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/compat get default export */
/******/ 	!function() {
/******/ 		// getDefaultExport function for compatibility with non-harmony modules
/******/ 		__webpack_require__.n = function(module) {
/******/ 			var getter = module && module.__esModule ?
/******/ 				function() { return module['default']; } :
/******/ 				function() { return module; };
/******/ 			__webpack_require__.d(getter, { a: getter });
/******/ 			return getter;
/******/ 		};
/******/ 	}();
/******/ 	
/******/ 	/* webpack/runtime/create fake namespace object */
/******/ 	!function() {
/******/ 		var getProto = Object.getPrototypeOf ? function(obj) { return Object.getPrototypeOf(obj); } : function(obj) { return obj.__proto__; };
/******/ 		var leafPrototypes;
/******/ 		// create a fake namespace object
/******/ 		// mode & 1: value is a module id, require it
/******/ 		// mode & 2: merge all properties of value into the ns
/******/ 		// mode & 4: return value when already ns object
/******/ 		// mode & 16: return value when it's Promise-like
/******/ 		// mode & 8|1: behave like require
/******/ 		__webpack_require__.t = function(value, mode) {
/******/ 			if(mode & 1) value = this(value);
/******/ 			if(mode & 8) return value;
/******/ 			if(typeof value === 'object' && value) {
/******/ 				if((mode & 4) && value.__esModule) return value;
/******/ 				if((mode & 16) && typeof value.then === 'function') return value;
/******/ 			}
/******/ 			var ns = Object.create(null);
/******/ 			__webpack_require__.r(ns);
/******/ 			var def = {};
/******/ 			leafPrototypes = leafPrototypes || [null, getProto({}), getProto([]), getProto(getProto)];
/******/ 			for(var current = mode & 2 && value; typeof current == 'object' && !~leafPrototypes.indexOf(current); current = getProto(current)) {
/******/ 				Object.getOwnPropertyNames(current).forEach(function(key) { def[key] = function() { return value[key]; }; });
/******/ 			}
/******/ 			def['default'] = function() { return value; };
/******/ 			__webpack_require__.d(ns, def);
/******/ 			return ns;
/******/ 		};
/******/ 	}();
/******/ 	
/******/ 	/* webpack/runtime/define property getters */
/******/ 	!function() {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = function(exports, definition) {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	}();
/******/ 	
/******/ 	/* webpack/runtime/ensure chunk */
/******/ 	!function() {
/******/ 		__webpack_require__.f = {};
/******/ 		// This file contains only the entry chunk.
/******/ 		// The chunk loading function for additional chunks
/******/ 		__webpack_require__.e = function(chunkId) {
/******/ 			return Promise.all(Object.keys(__webpack_require__.f).reduce(function(promises, key) {
/******/ 				__webpack_require__.f[key](chunkId, promises);
/******/ 				return promises;
/******/ 			}, []));
/******/ 		};
/******/ 	}();
/******/ 	
/******/ 	/* webpack/runtime/get javascript chunk filename */
/******/ 	!function() {
/******/ 		// This function allow to reference async chunks
/******/ 		__webpack_require__.u = function(chunkId) {
/******/ 			// return url for filenames based on template
/******/ 			return "static/js/" + chunkId + "." + "b8a6212f" + ".chunk.js";
/******/ 		};
/******/ 	}();
/******/ 	
/******/ 	/* webpack/runtime/get mini-css chunk filename */
/******/ 	!function() {
/******/ 		// This function allow to reference async chunks
/******/ 		__webpack_require__.miniCssF = function(chunkId) {
/******/ 			// return url for filenames based on template
/******/ 			return undefined;
/******/ 		};
/******/ 	}();
/******/ 	
/******/ 	/* webpack/runtime/global */
/******/ 	!function() {
/******/ 		__webpack_require__.g = (function() {
/******/ 			if (typeof globalThis === 'object') return globalThis;
/******/ 			try {
/******/ 				return this || new Function('return this')();
/******/ 			} catch (e) {
/******/ 				if (typeof window === 'object') return window;
/******/ 			}
/******/ 		})();
/******/ 	}();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	!function() {
/******/ 		__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }
/******/ 	}();
/******/ 	
/******/ 	/* webpack/runtime/load script */
/******/ 	!function() {
/******/ 		var inProgress = {};
/******/ 		var dataWebpackPrefix = "working-title:";
/******/ 		// loadScript function to load a script via script tag
/******/ 		__webpack_require__.l = function(url, done, key, chunkId) {
/******/ 			if(inProgress[url]) { inProgress[url].push(done); return; }
/******/ 			var script, needAttach;
/******/ 			if(key !== undefined) {
/******/ 				var scripts = document.getElementsByTagName("script");
/******/ 				for(var i = 0; i < scripts.length; i++) {
/******/ 					var s = scripts[i];
/******/ 					if(s.getAttribute("src") == url || s.getAttribute("data-webpack") == dataWebpackPrefix + key) { script = s; break; }
/******/ 				}
/******/ 			}
/******/ 			if(!script) {
/******/ 				needAttach = true;
/******/ 				script = document.createElement('script');
/******/ 		
/******/ 				script.charset = 'utf-8';
/******/ 				script.timeout = 120;
/******/ 				if (__webpack_require__.nc) {
/******/ 					script.setAttribute("nonce", __webpack_require__.nc);
/******/ 				}
/******/ 				script.setAttribute("data-webpack", dataWebpackPrefix + key);
/******/ 				script.src = url;
/******/ 			}
/******/ 			inProgress[url] = [done];
/******/ 			var onScriptComplete = function(prev, event) {
/******/ 				// avoid mem leaks in IE.
/******/ 				script.onerror = script.onload = null;
/******/ 				clearTimeout(timeout);
/******/ 				var doneFns = inProgress[url];
/******/ 				delete inProgress[url];
/******/ 				script.parentNode && script.parentNode.removeChild(script);
/******/ 				doneFns && doneFns.forEach(function(fn) { return fn(event); });
/******/ 				if(prev) return prev(event);
/******/ 			};
/******/ 			var timeout = setTimeout(onScriptComplete.bind(null, undefined, { type: 'timeout', target: script }), 120000);
/******/ 			script.onerror = onScriptComplete.bind(null, script.onerror);
/******/ 			script.onload = onScriptComplete.bind(null, script.onload);
/******/ 			needAttach && document.head.appendChild(script);
/******/ 		};
/******/ 	}();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	!function() {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = function(exports) {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	}();
/******/ 	
/******/ 	/* webpack/runtime/publicPath */
/******/ 	!function() {
/******/ 		__webpack_require__.p = "/";
/******/ 	}();
/******/ 	
/******/ 	/* webpack/runtime/jsonp chunk loading */
/******/ 	!function() {
/******/ 		// no baseURI
/******/ 		
/******/ 		// object to store loaded and loading chunks
/******/ 		// undefined = chunk not loaded, null = chunk preloaded/prefetched
/******/ 		// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded
/******/ 		var installedChunks = {
/******/ 			179: 0
/******/ 		};
/******/ 		
/******/ 		__webpack_require__.f.j = function(chunkId, promises) {
/******/ 				// JSONP chunk loading for javascript
/******/ 				var installedChunkData = __webpack_require__.o(installedChunks, chunkId) ? installedChunks[chunkId] : undefined;
/******/ 				if(installedChunkData !== 0) { // 0 means "already installed".
/******/ 		
/******/ 					// a Promise means "currently loading".
/******/ 					if(installedChunkData) {
/******/ 						promises.push(installedChunkData[2]);
/******/ 					} else {
/******/ 						if(true) { // all chunks have JS
/******/ 							// setup Promise in chunk cache
/******/ 							var promise = new Promise(function(resolve, reject) { installedChunkData = installedChunks[chunkId] = [resolve, reject]; });
/******/ 							promises.push(installedChunkData[2] = promise);
/******/ 		
/******/ 							// start chunk loading
/******/ 							var url = __webpack_require__.p + __webpack_require__.u(chunkId);
/******/ 							// create error before stack unwound to get useful stacktrace later
/******/ 							var error = new Error();
/******/ 							var loadingEnded = function(event) {
/******/ 								if(__webpack_require__.o(installedChunks, chunkId)) {
/******/ 									installedChunkData = installedChunks[chunkId];
/******/ 									if(installedChunkData !== 0) installedChunks[chunkId] = undefined;
/******/ 									if(installedChunkData) {
/******/ 										var errorType = event && (event.type === 'load' ? 'missing' : event.type);
/******/ 										var realSrc = event && event.target && event.target.src;
/******/ 										error.message = 'Loading chunk ' + chunkId + ' failed.\n(' + errorType + ': ' + realSrc + ')';
/******/ 										error.name = 'ChunkLoadError';
/******/ 										error.type = errorType;
/******/ 										error.request = realSrc;
/******/ 										installedChunkData[1](error);
/******/ 									}
/******/ 								}
/******/ 							};
/******/ 							__webpack_require__.l(url, loadingEnded, "chunk-" + chunkId, chunkId);
/******/ 						} else installedChunks[chunkId] = 0;
/******/ 					}
/******/ 				}
/******/ 		};
/******/ 		
/******/ 		// no prefetching
/******/ 		
/******/ 		// no preloaded
/******/ 		
/******/ 		// no HMR
/******/ 		
/******/ 		// no HMR manifest
/******/ 		
/******/ 		// no on chunks loaded
/******/ 		
/******/ 		// install a JSONP callback for chunk loading
/******/ 		var webpackJsonpCallback = function(parentChunkLoadingFunction, data) {
/******/ 			var chunkIds = data[0];
/******/ 			var moreModules = data[1];
/******/ 			var runtime = data[2];
/******/ 			// add "moreModules" to the modules object,
/******/ 			// then flag all "chunkIds" as loaded and fire callback
/******/ 			var moduleId, chunkId, i = 0;
/******/ 			if(chunkIds.some(function(id) { return installedChunks[id] !== 0; })) {
/******/ 				for(moduleId in moreModules) {
/******/ 					if(__webpack_require__.o(moreModules, moduleId)) {
/******/ 						__webpack_require__.m[moduleId] = moreModules[moduleId];
/******/ 					}
/******/ 				}
/******/ 				if(runtime) var result = runtime(__webpack_require__);
/******/ 			}
/******/ 			if(parentChunkLoadingFunction) parentChunkLoadingFunction(data);
/******/ 			for(;i < chunkIds.length; i++) {
/******/ 				chunkId = chunkIds[i];
/******/ 				if(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {
/******/ 					installedChunks[chunkId][0]();
/******/ 				}
/******/ 				installedChunks[chunkId] = 0;
/******/ 			}
/******/ 		
/******/ 		}
/******/ 		
/******/ 		var chunkLoadingGlobal = self["webpackChunkworking_title"] = self["webpackChunkworking_title"] || [];
/******/ 		chunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));
/******/ 		chunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));
/******/ 	}();
/******/ 	
/************************************************************************/
var __webpack_exports__ = {};
// This entry need to be wrapped in an IIFE because it need to be in strict mode.
!function() {
"use strict";

// EXTERNAL MODULE: ./node_modules/react/index.js
var react = __webpack_require__(2791);
var react_namespaceObject = /*#__PURE__*/__webpack_require__.t(react, 2);
// EXTERNAL MODULE: ./node_modules/react-dom/client.js
var client = __webpack_require__(1250);
// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/slicedToArray.js + 1 modules
var slicedToArray = __webpack_require__(9439);
;// CONCATENATED MODULE: ./node_modules/mobx/dist/mobx.esm.js
var niceErrors = {
  0: "Invalid value for configuration 'enforceActions', expected 'never', 'always' or 'observed'",
  1: function _(annotationType, key) {
    return "Cannot apply '" + annotationType + "' to '" + key.toString() + "': Field not found.";
  },
  /*
  2(prop) {
      return `invalid decorator for '${prop.toString()}'`
  },
  3(prop) {
      return `Cannot decorate '${prop.toString()}': action can only be used on properties with a function value.`
  },
  4(prop) {
      return `Cannot decorate '${prop.toString()}': computed can only be used on getter properties.`
  },
  */
  5: "'keys()' can only be used on observable objects, arrays, sets and maps",
  6: "'values()' can only be used on observable objects, arrays, sets and maps",
  7: "'entries()' can only be used on observable objects, arrays and maps",
  8: "'set()' can only be used on observable objects, arrays and maps",
  9: "'remove()' can only be used on observable objects, arrays and maps",
  10: "'has()' can only be used on observable objects, arrays and maps",
  11: "'get()' can only be used on observable objects, arrays and maps",
  12: "Invalid annotation",
  13: "Dynamic observable objects cannot be frozen. If you're passing observables to 3rd party component/function that calls Object.freeze, pass copy instead: toJS(observable)",
  14: "Intercept handlers should return nothing or a change object",
  15: "Observable arrays cannot be frozen. If you're passing observables to 3rd party component/function that calls Object.freeze, pass copy instead: toJS(observable)",
  16: "Modification exception: the internal structure of an observable array was changed.",
  17: function _(index, length) {
    return "[mobx.array] Index out of bounds, " + index + " is larger than " + length;
  },
  18: "mobx.map requires Map polyfill for the current browser. Check babel-polyfill or core-js/es6/map.js",
  19: function _(other) {
    return "Cannot initialize from classes that inherit from Map: " + other.constructor.name;
  },
  20: function _(other) {
    return "Cannot initialize map from " + other;
  },
  21: function _(dataStructure) {
    return "Cannot convert to map from '" + dataStructure + "'";
  },
  22: "mobx.set requires Set polyfill for the current browser. Check babel-polyfill or core-js/es6/set.js",
  23: "It is not possible to get index atoms from arrays",
  24: function _(thing) {
    return "Cannot obtain administration from " + thing;
  },
  25: function _(property, name) {
    return "the entry '" + property + "' does not exist in the observable map '" + name + "'";
  },
  26: "please specify a property",
  27: function _(property, name) {
    return "no observable property '" + property.toString() + "' found on the observable object '" + name + "'";
  },
  28: function _(thing) {
    return "Cannot obtain atom from " + thing;
  },
  29: "Expecting some object",
  30: "invalid action stack. did you forget to finish an action?",
  31: "missing option for computed: get",
  32: function _(name, derivation) {
    return "Cycle detected in computation " + name + ": " + derivation;
  },
  33: function _(name) {
    return "The setter of computed value '" + name + "' is trying to update itself. Did you intend to update an _observable_ value, instead of the computed property?";
  },
  34: function _(name) {
    return "[ComputedValue '" + name + "'] It is not possible to assign a new value to a computed value.";
  },
  35: "There are multiple, different versions of MobX active. Make sure MobX is loaded only once or use `configure({ isolateGlobalState: true })`",
  36: "isolateGlobalState should be called before MobX is running any reactions",
  37: function _(method) {
    return "[mobx] `observableArray." + method + "()` mutates the array in-place, which is not allowed inside a derivation. Use `array.slice()." + method + "()` instead";
  },
  38: "'ownKeys()' can only be used on observable objects",
  39: "'defineProperty()' can only be used on observable objects"
};
var errors =  false ? 0 : {};
function die(error) {
  for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
    args[_key - 1] = arguments[_key];
  }
  if (false) { var e; }
  throw new Error(typeof error === "number" ? "[MobX] minified error nr: " + error + (args.length ? " " + args.map(String).join(",") : "") + ". Find the full error at: https://github.com/mobxjs/mobx/blob/main/packages/mobx/src/errors.ts" : "[MobX] " + error);
}
var mockGlobal = {};
function getGlobal() {
  if (typeof globalThis !== "undefined") {
    return globalThis;
  }
  if (typeof window !== "undefined") {
    return window;
  }
  if (typeof __webpack_require__.g !== "undefined") {
    return __webpack_require__.g;
  }
  if (typeof self !== "undefined") {
    return self;
  }
  return mockGlobal;
}
var mobx_esm_assign = Object.assign;
var getDescriptor = Object.getOwnPropertyDescriptor;
var defineProperty = Object.defineProperty;
var objectPrototype = Object.prototype;
var EMPTY_ARRAY = [];
Object.freeze(EMPTY_ARRAY);
var EMPTY_OBJECT = {};
Object.freeze(EMPTY_OBJECT);
var hasProxy = typeof Proxy !== "undefined";
var plainObjectString = /*#__PURE__*/Object.toString();
function assertProxies() {
  if (!hasProxy) {
    die( false ? 0 : "Proxy not available");
  }
}
function warnAboutProxyRequirement(msg) {
  if (false) {}
}
function getNextId() {
  return ++globalState.mobxGuid;
}
/**
 * Makes sure that the provided function is invoked at most once.
 */

function once(func) {
  var invoked = false;
  return function () {
    if (invoked) {
      return;
    }
    invoked = true;
    return func.apply(this, arguments);
  };
}
var noop = function noop() {};
function isFunction(fn) {
  return typeof fn === "function";
}
function isStringish(value) {
  var t = typeof value;
  switch (t) {
    case "string":
    case "symbol":
    case "number":
      return true;
  }
  return false;
}
function isObject(value) {
  return value !== null && typeof value === "object";
}
function isPlainObject(value) {
  if (!isObject(value)) {
    return false;
  }
  var proto = Object.getPrototypeOf(value);
  if (proto == null) {
    return true;
  }
  var protoConstructor = Object.hasOwnProperty.call(proto, "constructor") && proto.constructor;
  return typeof protoConstructor === "function" && protoConstructor.toString() === plainObjectString;
} // https://stackoverflow.com/a/37865170

function isGenerator(obj) {
  var constructor = obj == null ? void 0 : obj.constructor;
  if (!constructor) {
    return false;
  }
  if ("GeneratorFunction" === constructor.name || "GeneratorFunction" === constructor.displayName) {
    return true;
  }
  return false;
}
function addHiddenProp(object, propName, value) {
  defineProperty(object, propName, {
    enumerable: false,
    writable: true,
    configurable: true,
    value: value
  });
}
function addHiddenFinalProp(object, propName, value) {
  defineProperty(object, propName, {
    enumerable: false,
    writable: false,
    configurable: true,
    value: value
  });
}
function createInstanceofPredicate(name, theClass) {
  var propName = "isMobX" + name;
  theClass.prototype[propName] = true;
  return function (x) {
    return isObject(x) && x[propName] === true;
  };
}
function isES6Map(thing) {
  return thing instanceof Map;
}
function isES6Set(thing) {
  return thing instanceof Set;
}
var hasGetOwnPropertySymbols = typeof Object.getOwnPropertySymbols !== "undefined";
/**
 * Returns the following: own enumerable keys and symbols.
 */

function getPlainObjectKeys(object) {
  var keys = Object.keys(object); // Not supported in IE, so there are not going to be symbol props anyway...

  if (!hasGetOwnPropertySymbols) {
    return keys;
  }
  var symbols = Object.getOwnPropertySymbols(object);
  if (!symbols.length) {
    return keys;
  }
  return [].concat(keys, symbols.filter(function (s) {
    return objectPrototype.propertyIsEnumerable.call(object, s);
  }));
} // From Immer utils
// Returns all own keys, including non-enumerable and symbolic

var ownKeys = typeof Reflect !== "undefined" && Reflect.ownKeys ? Reflect.ownKeys : hasGetOwnPropertySymbols ? function (obj) {
  return Object.getOwnPropertyNames(obj).concat(Object.getOwnPropertySymbols(obj));
} : /* istanbul ignore next */
Object.getOwnPropertyNames;
function stringifyKey(key) {
  if (typeof key === "string") {
    return key;
  }
  if (typeof key === "symbol") {
    return key.toString();
  }
  return new String(key).toString();
}
function toPrimitive(value) {
  return value === null ? null : typeof value === "object" ? "" + value : value;
}
function hasProp(target, prop) {
  return objectPrototype.hasOwnProperty.call(target, prop);
} // From Immer utils

var getOwnPropertyDescriptors = Object.getOwnPropertyDescriptors || function getOwnPropertyDescriptors(target) {
  // Polyfill needed for Hermes and IE, see https://github.com/facebook/hermes/issues/274
  var res = {}; // Note: without polyfill for ownKeys, symbols won't be picked up

  ownKeys(target).forEach(function (key) {
    res[key] = getDescriptor(target, key);
  });
  return res;
};
function _defineProperties(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor) descriptor.writable = true;
    Object.defineProperty(target, descriptor.key, descriptor);
  }
}
function mobx_esm_createClass(Constructor, protoProps, staticProps) {
  if (protoProps) _defineProperties(Constructor.prototype, protoProps);
  if (staticProps) _defineProperties(Constructor, staticProps);
  Object.defineProperty(Constructor, "prototype", {
    writable: false
  });
  return Constructor;
}
function _extends() {
  _extends = Object.assign || function (target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends.apply(this, arguments);
}
function _inheritsLoose(subClass, superClass) {
  subClass.prototype = Object.create(superClass.prototype);
  subClass.prototype.constructor = subClass;
  _setPrototypeOf(subClass, superClass);
}
function _setPrototypeOf(o, p) {
  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {
    o.__proto__ = p;
    return o;
  };
  return _setPrototypeOf(o, p);
}
function _assertThisInitialized(self) {
  if (self === void 0) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }
  return self;
}
function _unsupportedIterableToArray(o, minLen) {
  if (!o) return;
  if (typeof o === "string") return _arrayLikeToArray(o, minLen);
  var n = Object.prototype.toString.call(o).slice(8, -1);
  if (n === "Object" && o.constructor) n = o.constructor.name;
  if (n === "Map" || n === "Set") return Array.from(o);
  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);
}
function _arrayLikeToArray(arr, len) {
  if (len == null || len > arr.length) len = arr.length;
  for (var i = 0, arr2 = new Array(len); i < len; i++) {
    arr2[i] = arr[i];
  }
  return arr2;
}
function _createForOfIteratorHelperLoose(o, allowArrayLike) {
  var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"];
  if (it) return (it = it.call(o)).next.bind(it);
  if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") {
    if (it) o = it;
    var i = 0;
    return function () {
      if (i >= o.length) return {
        done: true
      };
      return {
        done: false,
        value: o[i++]
      };
    };
  }
  throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
var storedAnnotationsSymbol = /*#__PURE__*/Symbol("mobx-stored-annotations");
/**
 * Creates a function that acts as
 * - decorator
 * - annotation object
 */

function createDecoratorAnnotation(annotation) {
  function decorator(target, property) {
    storeAnnotation(target, property, annotation);
  }
  return Object.assign(decorator, annotation);
}
/**
 * Stores annotation to prototype,
 * so it can be inspected later by `makeObservable` called from constructor
 */

function storeAnnotation(prototype, key, annotation) {
  if (!hasProp(prototype, storedAnnotationsSymbol)) {
    addHiddenProp(prototype, storedAnnotationsSymbol, _extends({}, prototype[storedAnnotationsSymbol]));
  } // @override must override something

  if (false) { var fieldName; } // Cannot re-decorate

  assertNotDecorated(prototype, annotation, key); // Ignore override

  if (!isOverride(annotation)) {
    prototype[storedAnnotationsSymbol][key] = annotation;
  }
}
function assertNotDecorated(prototype, annotation, key) {
  if (false) { var requestedAnnotationType, currentAnnotationType, fieldName; }
}
/**
 * Collects annotations from prototypes and stores them on target (instance)
 */

function collectStoredAnnotations(target) {
  if (!hasProp(target, storedAnnotationsSymbol)) {
    if (false) {} // We need a copy as we will remove annotation from the list once it's applied.

    addHiddenProp(target, storedAnnotationsSymbol, _extends({}, target[storedAnnotationsSymbol]));
  }
  return target[storedAnnotationsSymbol];
}
var $mobx = /*#__PURE__*/Symbol("mobx administration");
var Atom = /*#__PURE__*/function () {
  // for effective unobserving. BaseAtom has true, for extra optimization, so its onBecomeUnobserved never gets called, because it's not needed

  /**
   * Create a new atom. For debugging purposes it is recommended to give it a name.
   * The onBecomeObserved and onBecomeUnobserved callbacks can be used for resource management.
   */
  function Atom(name_) {
    if (name_ === void 0) {
      name_ =  false ? 0 : "Atom";
    }
    this.name_ = void 0;
    this.isPendingUnobservation_ = false;
    this.isBeingObserved_ = false;
    this.observers_ = new Set();
    this.diffValue_ = 0;
    this.lastAccessedBy_ = 0;
    this.lowestObserverState_ = IDerivationState_.NOT_TRACKING_;
    this.onBOL = void 0;
    this.onBUOL = void 0;
    this.name_ = name_;
  } // onBecomeObservedListeners

  var _proto = Atom.prototype;
  _proto.onBO = function onBO() {
    if (this.onBOL) {
      this.onBOL.forEach(function (listener) {
        return listener();
      });
    }
  };
  _proto.onBUO = function onBUO() {
    if (this.onBUOL) {
      this.onBUOL.forEach(function (listener) {
        return listener();
      });
    }
  }
  /**
   * Invoke this method to notify mobx that your atom has been used somehow.
   * Returns true if there is currently a reactive context.
   */;

  _proto.reportObserved = function reportObserved$1() {
    return reportObserved(this);
  }
  /**
   * Invoke this method _after_ this method has changed to signal mobx that all its observers should invalidate.
   */;

  _proto.reportChanged = function reportChanged() {
    startBatch();
    propagateChanged(this);
    endBatch();
  };
  _proto.toString = function toString() {
    return this.name_;
  };
  return Atom;
}();
var isAtom = /*#__PURE__*/createInstanceofPredicate("Atom", Atom);
function createAtom(name, onBecomeObservedHandler, onBecomeUnobservedHandler) {
  if (onBecomeObservedHandler === void 0) {
    onBecomeObservedHandler = noop;
  }
  if (onBecomeUnobservedHandler === void 0) {
    onBecomeUnobservedHandler = noop;
  }
  var atom = new Atom(name); // default `noop` listener will not initialize the hook Set

  if (onBecomeObservedHandler !== noop) {
    onBecomeObserved(atom, onBecomeObservedHandler);
  }
  if (onBecomeUnobservedHandler !== noop) {
    onBecomeUnobserved(atom, onBecomeUnobservedHandler);
  }
  return atom;
}
function identityComparer(a, b) {
  return a === b;
}
function structuralComparer(a, b) {
  return mobx_esm_deepEqual(a, b);
}
function shallowComparer(a, b) {
  return mobx_esm_deepEqual(a, b, 1);
}
function defaultComparer(a, b) {
  if (Object.is) {
    return Object.is(a, b);
  }
  return a === b ? a !== 0 || 1 / a === 1 / b : a !== a && b !== b;
}
var comparer = {
  identity: identityComparer,
  structural: structuralComparer,
  "default": defaultComparer,
  shallow: shallowComparer
};
function deepEnhancer(v, _, name) {
  // it is an observable already, done
  if (isObservable(v)) {
    return v;
  } // something that can be converted and mutated?

  if (Array.isArray(v)) {
    return mobx_esm_observable.array(v, {
      name: name
    });
  }
  if (isPlainObject(v)) {
    return mobx_esm_observable.object(v, undefined, {
      name: name
    });
  }
  if (isES6Map(v)) {
    return mobx_esm_observable.map(v, {
      name: name
    });
  }
  if (isES6Set(v)) {
    return mobx_esm_observable.set(v, {
      name: name
    });
  }
  if (typeof v === "function" && !isAction(v) && !isFlow(v)) {
    if (isGenerator(v)) {
      return flow(v);
    } else {
      return autoAction(name, v);
    }
  }
  return v;
}
function shallowEnhancer(v, _, name) {
  if (v === undefined || v === null) {
    return v;
  }
  if (isObservableObject(v) || isObservableArray(v) || isObservableMap(v) || isObservableSet(v)) {
    return v;
  }
  if (Array.isArray(v)) {
    return mobx_esm_observable.array(v, {
      name: name,
      deep: false
    });
  }
  if (isPlainObject(v)) {
    return mobx_esm_observable.object(v, undefined, {
      name: name,
      deep: false
    });
  }
  if (isES6Map(v)) {
    return mobx_esm_observable.map(v, {
      name: name,
      deep: false
    });
  }
  if (isES6Set(v)) {
    return mobx_esm_observable.set(v, {
      name: name,
      deep: false
    });
  }
  if (false) {}
}
function referenceEnhancer(newValue) {
  // never turn into an observable
  return newValue;
}
function refStructEnhancer(v, oldValue) {
  if (false) {}
  if (mobx_esm_deepEqual(v, oldValue)) {
    return oldValue;
  }
  return v;
}
var OVERRIDE = "override";
var override = /*#__PURE__*/createDecoratorAnnotation({
  annotationType_: OVERRIDE,
  make_: make_,
  extend_: extend_
});
function isOverride(annotation) {
  return annotation.annotationType_ === OVERRIDE;
}
function make_(adm, key) {
  // Must not be plain object
  if (false) {} // Must override something

  if (false) {}
  return 0
  /* Cancel */;
}

function extend_(adm, key, descriptor, proxyTrap) {
  die("'" + this.annotationType_ + "' can only be used with 'makeObservable'");
}
function createActionAnnotation(name, options) {
  return {
    annotationType_: name,
    options_: options,
    make_: make_$1,
    extend_: extend_$1
  };
}
function make_$1(adm, key, descriptor, source) {
  var _this$options_;

  // bound
  if ((_this$options_ = this.options_) != null && _this$options_.bound) {
    return this.extend_(adm, key, descriptor, false) === null ? 0
    /* Cancel */ : 1
    /* Break */;
  } // own

  if (source === adm.target_) {
    return this.extend_(adm, key, descriptor, false) === null ? 0
    /* Cancel */ : 2
    /* Continue */;
  } // prototype

  if (isAction(descriptor.value)) {
    // A prototype could have been annotated already by other constructor,
    // rest of the proto chain must be annotated already
    return 1
    /* Break */;
  }

  var actionDescriptor = createActionDescriptor(adm, this, key, descriptor, false);
  defineProperty(source, key, actionDescriptor);
  return 2
  /* Continue */;
}

function extend_$1(adm, key, descriptor, proxyTrap) {
  var actionDescriptor = createActionDescriptor(adm, this, key, descriptor);
  return adm.defineProperty_(key, actionDescriptor, proxyTrap);
}
function assertActionDescriptor(adm, _ref, key, _ref2) {
  var annotationType_ = _ref.annotationType_;
  var value = _ref2.value;
  if (false) {}
}
function createActionDescriptor(adm, annotation, key, descriptor,
// provides ability to disable safeDescriptors for prototypes
safeDescriptors) {
  var _annotation$options_, _annotation$options_$, _annotation$options_2, _annotation$options_$2, _annotation$options_3, _annotation$options_4, _adm$proxy_2;
  if (safeDescriptors === void 0) {
    safeDescriptors = globalState.safeDescriptors;
  }
  assertActionDescriptor(adm, annotation, key, descriptor);
  var value = descriptor.value;
  if ((_annotation$options_ = annotation.options_) != null && _annotation$options_.bound) {
    var _adm$proxy_;
    value = value.bind((_adm$proxy_ = adm.proxy_) != null ? _adm$proxy_ : adm.target_);
  }
  return {
    value: createAction((_annotation$options_$ = (_annotation$options_2 = annotation.options_) == null ? void 0 : _annotation$options_2.name) != null ? _annotation$options_$ : key.toString(), value, (_annotation$options_$2 = (_annotation$options_3 = annotation.options_) == null ? void 0 : _annotation$options_3.autoAction) != null ? _annotation$options_$2 : false,
    // https://github.com/mobxjs/mobx/discussions/3140
    (_annotation$options_4 = annotation.options_) != null && _annotation$options_4.bound ? (_adm$proxy_2 = adm.proxy_) != null ? _adm$proxy_2 : adm.target_ : undefined),
    // Non-configurable for classes
    // prevents accidental field redefinition in subclass
    configurable: safeDescriptors ? adm.isPlainObject_ : true,
    // https://github.com/mobxjs/mobx/pull/2641#issuecomment-737292058
    enumerable: false,
    // Non-obsevable, therefore non-writable
    // Also prevents rewriting in subclass constructor
    writable: safeDescriptors ? false : true
  };
}
function createFlowAnnotation(name, options) {
  return {
    annotationType_: name,
    options_: options,
    make_: make_$2,
    extend_: extend_$2
  };
}
function make_$2(adm, key, descriptor, source) {
  var _this$options_;

  // own
  if (source === adm.target_) {
    return this.extend_(adm, key, descriptor, false) === null ? 0
    /* Cancel */ : 2
    /* Continue */;
  } // prototype
  // bound - must annotate protos to support super.flow()

  if ((_this$options_ = this.options_) != null && _this$options_.bound && (!hasProp(adm.target_, key) || !isFlow(adm.target_[key]))) {
    if (this.extend_(adm, key, descriptor, false) === null) {
      return 0
      /* Cancel */;
    }
  }

  if (isFlow(descriptor.value)) {
    // A prototype could have been annotated already by other constructor,
    // rest of the proto chain must be annotated already
    return 1
    /* Break */;
  }

  var flowDescriptor = createFlowDescriptor(adm, this, key, descriptor, false, false);
  defineProperty(source, key, flowDescriptor);
  return 2
  /* Continue */;
}

function extend_$2(adm, key, descriptor, proxyTrap) {
  var _this$options_2;
  var flowDescriptor = createFlowDescriptor(adm, this, key, descriptor, (_this$options_2 = this.options_) == null ? void 0 : _this$options_2.bound);
  return adm.defineProperty_(key, flowDescriptor, proxyTrap);
}
function assertFlowDescriptor(adm, _ref, key, _ref2) {
  var annotationType_ = _ref.annotationType_;
  var value = _ref2.value;
  if (false) {}
}
function createFlowDescriptor(adm, annotation, key, descriptor, bound,
// provides ability to disable safeDescriptors for prototypes
safeDescriptors) {
  if (safeDescriptors === void 0) {
    safeDescriptors = globalState.safeDescriptors;
  }
  assertFlowDescriptor(adm, annotation, key, descriptor);
  var value = descriptor.value; // In case of flow.bound, the descriptor can be from already annotated prototype

  if (!isFlow(value)) {
    value = flow(value);
  }
  if (bound) {
    var _adm$proxy_;

    // We do not keep original function around, so we bind the existing flow
    value = value.bind((_adm$proxy_ = adm.proxy_) != null ? _adm$proxy_ : adm.target_); // This is normally set by `flow`, but `bind` returns new function...

    value.isMobXFlow = true;
  }
  return {
    value: value,
    // Non-configurable for classes
    // prevents accidental field redefinition in subclass
    configurable: safeDescriptors ? adm.isPlainObject_ : true,
    // https://github.com/mobxjs/mobx/pull/2641#issuecomment-737292058
    enumerable: false,
    // Non-obsevable, therefore non-writable
    // Also prevents rewriting in subclass constructor
    writable: safeDescriptors ? false : true
  };
}
function createComputedAnnotation(name, options) {
  return {
    annotationType_: name,
    options_: options,
    make_: make_$3,
    extend_: extend_$3
  };
}
function make_$3(adm, key, descriptor) {
  return this.extend_(adm, key, descriptor, false) === null ? 0
  /* Cancel */ : 1
  /* Break */;
}

function extend_$3(adm, key, descriptor, proxyTrap) {
  assertComputedDescriptor(adm, this, key, descriptor);
  return adm.defineComputedProperty_(key, _extends({}, this.options_, {
    get: descriptor.get,
    set: descriptor.set
  }), proxyTrap);
}
function assertComputedDescriptor(adm, _ref, key, _ref2) {
  var annotationType_ = _ref.annotationType_;
  var get = _ref2.get;
  if (false) {}
}
function createObservableAnnotation(name, options) {
  return {
    annotationType_: name,
    options_: options,
    make_: make_$4,
    extend_: extend_$4
  };
}
function make_$4(adm, key, descriptor) {
  return this.extend_(adm, key, descriptor, false) === null ? 0
  /* Cancel */ : 1
  /* Break */;
}

function extend_$4(adm, key, descriptor, proxyTrap) {
  var _this$options_$enhanc, _this$options_;
  assertObservableDescriptor(adm, this, key, descriptor);
  return adm.defineObservableProperty_(key, descriptor.value, (_this$options_$enhanc = (_this$options_ = this.options_) == null ? void 0 : _this$options_.enhancer) != null ? _this$options_$enhanc : deepEnhancer, proxyTrap);
}
function assertObservableDescriptor(adm, _ref, key, descriptor) {
  var annotationType_ = _ref.annotationType_;
  if (false) {}
}
var AUTO = "true";
var autoAnnotation = /*#__PURE__*/createAutoAnnotation();
function createAutoAnnotation(options) {
  return {
    annotationType_: AUTO,
    options_: options,
    make_: make_$5,
    extend_: extend_$5
  };
}
function make_$5(adm, key, descriptor, source) {
  var _this$options_3, _this$options_4;

  // getter -> computed
  if (descriptor.get) {
    return computed.make_(adm, key, descriptor, source);
  } // lone setter -> action setter

  if (descriptor.set) {
    // TODO make action applicable to setter and delegate to action.make_
    var set = createAction(key.toString(), descriptor.set); // own

    if (source === adm.target_) {
      return adm.defineProperty_(key, {
        configurable: globalState.safeDescriptors ? adm.isPlainObject_ : true,
        set: set
      }) === null ? 0
      /* Cancel */ : 2
      /* Continue */;
    } // proto

    defineProperty(source, key, {
      configurable: true,
      set: set
    });
    return 2
    /* Continue */;
  } // function on proto -> autoAction/flow

  if (source !== adm.target_ && typeof descriptor.value === "function") {
    var _this$options_2;
    if (isGenerator(descriptor.value)) {
      var _this$options_;
      var flowAnnotation = (_this$options_ = this.options_) != null && _this$options_.autoBind ? flow.bound : flow;
      return flowAnnotation.make_(adm, key, descriptor, source);
    }
    var actionAnnotation = (_this$options_2 = this.options_) != null && _this$options_2.autoBind ? autoAction.bound : autoAction;
    return actionAnnotation.make_(adm, key, descriptor, source);
  } // other -> observable
  // Copy props from proto as well, see test:
  // "decorate should work with Object.create"

  var observableAnnotation = ((_this$options_3 = this.options_) == null ? void 0 : _this$options_3.deep) === false ? mobx_esm_observable.ref : mobx_esm_observable; // if function respect autoBind option

  if (typeof descriptor.value === "function" && (_this$options_4 = this.options_) != null && _this$options_4.autoBind) {
    var _adm$proxy_;
    descriptor.value = descriptor.value.bind((_adm$proxy_ = adm.proxy_) != null ? _adm$proxy_ : adm.target_);
  }
  return observableAnnotation.make_(adm, key, descriptor, source);
}
function extend_$5(adm, key, descriptor, proxyTrap) {
  var _this$options_5, _this$options_6;

  // getter -> computed
  if (descriptor.get) {
    return computed.extend_(adm, key, descriptor, proxyTrap);
  } // lone setter -> action setter

  if (descriptor.set) {
    // TODO make action applicable to setter and delegate to action.extend_
    return adm.defineProperty_(key, {
      configurable: globalState.safeDescriptors ? adm.isPlainObject_ : true,
      set: createAction(key.toString(), descriptor.set)
    }, proxyTrap);
  } // other -> observable
  // if function respect autoBind option

  if (typeof descriptor.value === "function" && (_this$options_5 = this.options_) != null && _this$options_5.autoBind) {
    var _adm$proxy_2;
    descriptor.value = descriptor.value.bind((_adm$proxy_2 = adm.proxy_) != null ? _adm$proxy_2 : adm.target_);
  }
  var observableAnnotation = ((_this$options_6 = this.options_) == null ? void 0 : _this$options_6.deep) === false ? mobx_esm_observable.ref : mobx_esm_observable;
  return observableAnnotation.extend_(adm, key, descriptor, proxyTrap);
}
var OBSERVABLE = "observable";
var OBSERVABLE_REF = "observable.ref";
var OBSERVABLE_SHALLOW = "observable.shallow";
var OBSERVABLE_STRUCT = "observable.struct"; // Predefined bags of create observable options, to avoid allocating temporarily option objects
// in the majority of cases

var defaultCreateObservableOptions = {
  deep: true,
  name: undefined,
  defaultDecorator: undefined,
  proxy: true
};
Object.freeze(defaultCreateObservableOptions);
function asCreateObservableOptions(thing) {
  return thing || defaultCreateObservableOptions;
}
var observableAnnotation = /*#__PURE__*/createObservableAnnotation(OBSERVABLE);
var observableRefAnnotation = /*#__PURE__*/createObservableAnnotation(OBSERVABLE_REF, {
  enhancer: referenceEnhancer
});
var observableShallowAnnotation = /*#__PURE__*/createObservableAnnotation(OBSERVABLE_SHALLOW, {
  enhancer: shallowEnhancer
});
var observableStructAnnotation = /*#__PURE__*/createObservableAnnotation(OBSERVABLE_STRUCT, {
  enhancer: refStructEnhancer
});
var observableDecoratorAnnotation = /*#__PURE__*/createDecoratorAnnotation(observableAnnotation);
function getEnhancerFromOptions(options) {
  return options.deep === true ? deepEnhancer : options.deep === false ? referenceEnhancer : getEnhancerFromAnnotation(options.defaultDecorator);
}
function getAnnotationFromOptions(options) {
  var _options$defaultDecor;
  return options ? (_options$defaultDecor = options.defaultDecorator) != null ? _options$defaultDecor : createAutoAnnotation(options) : undefined;
}
function getEnhancerFromAnnotation(annotation) {
  var _annotation$options_$, _annotation$options_;
  return !annotation ? deepEnhancer : (_annotation$options_$ = (_annotation$options_ = annotation.options_) == null ? void 0 : _annotation$options_.enhancer) != null ? _annotation$options_$ : deepEnhancer;
}
/**
 * Turns an object, array or function into a reactive structure.
 * @param v the value which should become observable.
 */

function createObservable(v, arg2, arg3) {
  // @observable someProp;
  if (isStringish(arg2)) {
    storeAnnotation(v, arg2, observableAnnotation);
    return;
  } // already observable - ignore

  if (isObservable(v)) {
    return v;
  } // plain object

  if (isPlainObject(v)) {
    return mobx_esm_observable.object(v, arg2, arg3);
  } // Array

  if (Array.isArray(v)) {
    return mobx_esm_observable.array(v, arg2);
  } // Map

  if (isES6Map(v)) {
    return mobx_esm_observable.map(v, arg2);
  } // Set

  if (isES6Set(v)) {
    return mobx_esm_observable.set(v, arg2);
  } // other object - ignore

  if (typeof v === "object" && v !== null) {
    return v;
  } // anything else

  return mobx_esm_observable.box(v, arg2);
}
Object.assign(createObservable, observableDecoratorAnnotation);
var observableFactories = {
  box: function box(value, options) {
    var o = asCreateObservableOptions(options);
    return new ObservableValue(value, getEnhancerFromOptions(o), o.name, true, o.equals);
  },
  array: function array(initialValues, options) {
    var o = asCreateObservableOptions(options);
    return (globalState.useProxies === false || o.proxy === false ? createLegacyArray : createObservableArray)(initialValues, getEnhancerFromOptions(o), o.name);
  },
  map: function map(initialValues, options) {
    var o = asCreateObservableOptions(options);
    return new ObservableMap(initialValues, getEnhancerFromOptions(o), o.name);
  },
  set: function set(initialValues, options) {
    var o = asCreateObservableOptions(options);
    return new ObservableSet(initialValues, getEnhancerFromOptions(o), o.name);
  },
  object: function object(props, decorators, options) {
    return extendObservable(globalState.useProxies === false || (options == null ? void 0 : options.proxy) === false ? asObservableObject({}, options) : asDynamicObservableObject({}, options), props, decorators);
  },
  ref: /*#__PURE__*/createDecoratorAnnotation(observableRefAnnotation),
  shallow: /*#__PURE__*/createDecoratorAnnotation(observableShallowAnnotation),
  deep: observableDecoratorAnnotation,
  struct: /*#__PURE__*/createDecoratorAnnotation(observableStructAnnotation)
}; // eslint-disable-next-line

var mobx_esm_observable = /*#__PURE__*/mobx_esm_assign(createObservable, observableFactories);
var COMPUTED = "computed";
var COMPUTED_STRUCT = "computed.struct";
var computedAnnotation = /*#__PURE__*/createComputedAnnotation(COMPUTED);
var computedStructAnnotation = /*#__PURE__*/createComputedAnnotation(COMPUTED_STRUCT, {
  equals: comparer.structural
});
/**
 * Decorator for class properties: @computed get value() { return expr; }.
 * For legacy purposes also invokable as ES5 observable created: `computed(() => expr)`;
 */

var computed = function computed(arg1, arg2) {
  if (isStringish(arg2)) {
    // @computed
    return storeAnnotation(arg1, arg2, computedAnnotation);
  }
  if (isPlainObject(arg1)) {
    // @computed({ options })
    return createDecoratorAnnotation(createComputedAnnotation(COMPUTED, arg1));
  } // computed(expr, options?)

  if (false) {}
  var opts = isPlainObject(arg2) ? arg2 : {};
  opts.get = arg1;
  opts.name || (opts.name = arg1.name || "");
  /* for generated name */

  return new ComputedValue(opts);
};
Object.assign(computed, computedAnnotation);
computed.struct = /*#__PURE__*/createDecoratorAnnotation(computedStructAnnotation);
var _getDescriptor$config, _getDescriptor;
// mobx versions

var currentActionId = 0;
var nextActionId = 1;
var isFunctionNameConfigurable = (_getDescriptor$config = (_getDescriptor = /*#__PURE__*/getDescriptor(function () {}, "name")) == null ? void 0 : _getDescriptor.configurable) != null ? _getDescriptor$config : false; // we can safely recycle this object

var tmpNameDescriptor = {
  value: "action",
  configurable: true,
  writable: false,
  enumerable: false
};
function createAction(actionName, fn, autoAction, ref) {
  if (autoAction === void 0) {
    autoAction = false;
  }
  if (false) {}
  function res() {
    return executeAction(actionName, autoAction, fn, ref || this, arguments);
  }
  res.isMobxAction = true;
  if (isFunctionNameConfigurable) {
    tmpNameDescriptor.value = actionName;
    Object.defineProperty(res, "name", tmpNameDescriptor);
  }
  return res;
}
function executeAction(actionName, canRunAsDerivation, fn, scope, args) {
  var runInfo = _startAction(actionName, canRunAsDerivation, scope, args);
  try {
    return fn.apply(scope, args);
  } catch (err) {
    runInfo.error_ = err;
    throw err;
  } finally {
    _endAction(runInfo);
  }
}
function _startAction(actionName, canRunAsDerivation,
// true for autoAction
scope, args) {
  var notifySpy_ =  false && 0;
  var startTime_ = 0;
  if (false) { var flattenedArgs; }
  var prevDerivation_ = globalState.trackingDerivation;
  var runAsAction = !canRunAsDerivation || !prevDerivation_;
  startBatch();
  var prevAllowStateChanges_ = globalState.allowStateChanges; // by default preserve previous allow

  if (runAsAction) {
    untrackedStart();
    prevAllowStateChanges_ = allowStateChangesStart(true);
  }
  var prevAllowStateReads_ = allowStateReadsStart(true);
  var runInfo = {
    runAsAction_: runAsAction,
    prevDerivation_: prevDerivation_,
    prevAllowStateChanges_: prevAllowStateChanges_,
    prevAllowStateReads_: prevAllowStateReads_,
    notifySpy_: notifySpy_,
    startTime_: startTime_,
    actionId_: nextActionId++,
    parentActionId_: currentActionId
  };
  currentActionId = runInfo.actionId_;
  return runInfo;
}
function _endAction(runInfo) {
  if (currentActionId !== runInfo.actionId_) {
    die(30);
  }
  currentActionId = runInfo.parentActionId_;
  if (runInfo.error_ !== undefined) {
    globalState.suppressReactionErrors = true;
  }
  allowStateChangesEnd(runInfo.prevAllowStateChanges_);
  allowStateReadsEnd(runInfo.prevAllowStateReads_);
  endBatch();
  if (runInfo.runAsAction_) {
    untrackedEnd(runInfo.prevDerivation_);
  }
  if (false) {}
  globalState.suppressReactionErrors = false;
}
function allowStateChanges(allowStateChanges, func) {
  var prev = allowStateChangesStart(allowStateChanges);
  try {
    return func();
  } finally {
    allowStateChangesEnd(prev);
  }
}
function allowStateChangesStart(allowStateChanges) {
  var prev = globalState.allowStateChanges;
  globalState.allowStateChanges = allowStateChanges;
  return prev;
}
function allowStateChangesEnd(prev) {
  globalState.allowStateChanges = prev;
}
var _Symbol$toPrimitive;
var CREATE = "create";
_Symbol$toPrimitive = Symbol.toPrimitive;
var ObservableValue = /*#__PURE__*/function (_Atom) {
  _inheritsLoose(ObservableValue, _Atom);
  function ObservableValue(value, enhancer, name_, notifySpy, equals) {
    var _this;
    if (name_ === void 0) {
      name_ =  false ? 0 : "ObservableValue";
    }
    if (notifySpy === void 0) {
      notifySpy = true;
    }
    if (equals === void 0) {
      equals = comparer["default"];
    }
    _this = _Atom.call(this, name_) || this;
    _this.enhancer = void 0;
    _this.name_ = void 0;
    _this.equals = void 0;
    _this.hasUnreportedChange_ = false;
    _this.interceptors_ = void 0;
    _this.changeListeners_ = void 0;
    _this.value_ = void 0;
    _this.dehancer = void 0;
    _this.enhancer = enhancer;
    _this.name_ = name_;
    _this.equals = equals;
    _this.value_ = enhancer(value, undefined, name_);
    if (false) {}
    return _this;
  }
  var _proto = ObservableValue.prototype;
  _proto.dehanceValue = function dehanceValue(value) {
    if (this.dehancer !== undefined) {
      return this.dehancer(value);
    }
    return value;
  };
  _proto.set = function set(newValue) {
    var oldValue = this.value_;
    newValue = this.prepareNewValue_(newValue);
    if (newValue !== globalState.UNCHANGED) {
      var notifySpy = isSpyEnabled();
      if (false) {}
      this.setNewValue_(newValue);
      if (false) {}
    }
  };
  _proto.prepareNewValue_ = function prepareNewValue_(newValue) {
    checkIfStateModificationsAreAllowed(this);
    if (hasInterceptors(this)) {
      var change = interceptChange(this, {
        object: this,
        type: UPDATE,
        newValue: newValue
      });
      if (!change) {
        return globalState.UNCHANGED;
      }
      newValue = change.newValue;
    } // apply modifier

    newValue = this.enhancer(newValue, this.value_, this.name_);
    return this.equals(this.value_, newValue) ? globalState.UNCHANGED : newValue;
  };
  _proto.setNewValue_ = function setNewValue_(newValue) {
    var oldValue = this.value_;
    this.value_ = newValue;
    this.reportChanged();
    if (hasListeners(this)) {
      notifyListeners(this, {
        type: UPDATE,
        object: this,
        newValue: newValue,
        oldValue: oldValue
      });
    }
  };
  _proto.get = function get() {
    this.reportObserved();
    return this.dehanceValue(this.value_);
  };
  _proto.intercept_ = function intercept_(handler) {
    return registerInterceptor(this, handler);
  };
  _proto.observe_ = function observe_(listener, fireImmediately) {
    if (fireImmediately) {
      listener({
        observableKind: "value",
        debugObjectName: this.name_,
        object: this,
        type: UPDATE,
        newValue: this.value_,
        oldValue: undefined
      });
    }
    return registerListener(this, listener);
  };
  _proto.raw = function raw() {
    // used by MST ot get undehanced value
    return this.value_;
  };
  _proto.toJSON = function toJSON() {
    return this.get();
  };
  _proto.toString = function toString() {
    return this.name_ + "[" + this.value_ + "]";
  };
  _proto.valueOf = function valueOf() {
    return toPrimitive(this.get());
  };
  _proto[_Symbol$toPrimitive] = function () {
    return this.valueOf();
  };
  return ObservableValue;
}(Atom);
var isObservableValue = /*#__PURE__*/createInstanceofPredicate("ObservableValue", ObservableValue);
var _Symbol$toPrimitive$1;
/**
 * A node in the state dependency root that observes other nodes, and can be observed itself.
 *
 * ComputedValue will remember the result of the computation for the duration of the batch, or
 * while being observed.
 *
 * During this time it will recompute only when one of its direct dependencies changed,
 * but only when it is being accessed with `ComputedValue.get()`.
 *
 * Implementation description:
 * 1. First time it's being accessed it will compute and remember result
 *    give back remembered result until 2. happens
 * 2. First time any deep dependency change, propagate POSSIBLY_STALE to all observers, wait for 3.
 * 3. When it's being accessed, recompute if any shallow dependency changed.
 *    if result changed: propagate STALE to all observers, that were POSSIBLY_STALE from the last step.
 *    go to step 2. either way
 *
 * If at any point it's outside batch and it isn't observed: reset everything and go to 1.
 */

_Symbol$toPrimitive$1 = Symbol.toPrimitive;
var ComputedValue = /*#__PURE__*/function () {
  // nodes we are looking at. Our value depends on these nodes
  // during tracking it's an array with new observed observers
  // to check for cycles
  // N.B: unminified as it is used by MST

  /**
   * Create a new computed value based on a function expression.
   *
   * The `name` property is for debug purposes only.
   *
   * The `equals` property specifies the comparer function to use to determine if a newly produced
   * value differs from the previous value. Two comparers are provided in the library; `defaultComparer`
   * compares based on identity comparison (===), and `structuralComparer` deeply compares the structure.
   * Structural comparison can be convenient if you always produce a new aggregated object and
   * don't want to notify observers if it is structurally the same.
   * This is useful for working with vectors, mouse coordinates etc.
   */
  function ComputedValue(options) {
    this.dependenciesState_ = IDerivationState_.NOT_TRACKING_;
    this.observing_ = [];
    this.newObserving_ = null;
    this.isBeingObserved_ = false;
    this.isPendingUnobservation_ = false;
    this.observers_ = new Set();
    this.diffValue_ = 0;
    this.runId_ = 0;
    this.lastAccessedBy_ = 0;
    this.lowestObserverState_ = IDerivationState_.UP_TO_DATE_;
    this.unboundDepsCount_ = 0;
    this.value_ = new CaughtException(null);
    this.name_ = void 0;
    this.triggeredBy_ = void 0;
    this.isComputing_ = false;
    this.isRunningSetter_ = false;
    this.derivation = void 0;
    this.setter_ = void 0;
    this.isTracing_ = TraceMode.NONE;
    this.scope_ = void 0;
    this.equals_ = void 0;
    this.requiresReaction_ = void 0;
    this.keepAlive_ = void 0;
    this.onBOL = void 0;
    this.onBUOL = void 0;
    if (!options.get) {
      die(31);
    }
    this.derivation = options.get;
    this.name_ = options.name || ( false ? 0 : "ComputedValue");
    if (options.set) {
      this.setter_ = createAction( false ? 0 : "ComputedValue-setter", options.set);
    }
    this.equals_ = options.equals || (options.compareStructural || options.struct ? comparer.structural : comparer["default"]);
    this.scope_ = options.context;
    this.requiresReaction_ = options.requiresReaction;
    this.keepAlive_ = !!options.keepAlive;
  }
  var _proto = ComputedValue.prototype;
  _proto.onBecomeStale_ = function onBecomeStale_() {
    propagateMaybeChanged(this);
  };
  _proto.onBO = function onBO() {
    if (this.onBOL) {
      this.onBOL.forEach(function (listener) {
        return listener();
      });
    }
  };
  _proto.onBUO = function onBUO() {
    if (this.onBUOL) {
      this.onBUOL.forEach(function (listener) {
        return listener();
      });
    }
  }
  /**
   * Returns the current value of this computed value.
   * Will evaluate its computation first if needed.
   */;

  _proto.get = function get() {
    if (this.isComputing_) {
      die(32, this.name_, this.derivation);
    }
    if (globalState.inBatch === 0 &&
    // !globalState.trackingDerivatpion &&
    this.observers_.size === 0 && !this.keepAlive_) {
      if (shouldCompute(this)) {
        this.warnAboutUntrackedRead_();
        startBatch(); // See perf test 'computed memoization'

        this.value_ = this.computeValue_(false);
        endBatch();
      }
    } else {
      reportObserved(this);
      if (shouldCompute(this)) {
        var prevTrackingContext = globalState.trackingContext;
        if (this.keepAlive_ && !prevTrackingContext) {
          globalState.trackingContext = this;
        }
        if (this.trackAndCompute()) {
          propagateChangeConfirmed(this);
        }
        globalState.trackingContext = prevTrackingContext;
      }
    }
    var result = this.value_;
    if (isCaughtException(result)) {
      throw result.cause;
    }
    return result;
  };
  _proto.set = function set(value) {
    if (this.setter_) {
      if (this.isRunningSetter_) {
        die(33, this.name_);
      }
      this.isRunningSetter_ = true;
      try {
        this.setter_.call(this.scope_, value);
      } finally {
        this.isRunningSetter_ = false;
      }
    } else {
      die(34, this.name_);
    }
  };
  _proto.trackAndCompute = function trackAndCompute() {
    // N.B: unminified as it is used by MST
    var oldValue = this.value_;
    var wasSuspended = /* see #1208 */
    this.dependenciesState_ === IDerivationState_.NOT_TRACKING_;
    var newValue = this.computeValue_(true);
    var changed = wasSuspended || isCaughtException(oldValue) || isCaughtException(newValue) || !this.equals_(oldValue, newValue);
    if (changed) {
      this.value_ = newValue;
      if (false) {}
    }
    return changed;
  };
  _proto.computeValue_ = function computeValue_(track) {
    this.isComputing_ = true; // don't allow state changes during computation

    var prev = allowStateChangesStart(false);
    var res;
    if (track) {
      res = trackDerivedFunction(this, this.derivation, this.scope_);
    } else {
      if (globalState.disableErrorBoundaries === true) {
        res = this.derivation.call(this.scope_);
      } else {
        try {
          res = this.derivation.call(this.scope_);
        } catch (e) {
          res = new CaughtException(e);
        }
      }
    }
    allowStateChangesEnd(prev);
    this.isComputing_ = false;
    return res;
  };
  _proto.suspend_ = function suspend_() {
    if (!this.keepAlive_) {
      clearObserving(this);
      this.value_ = undefined; // don't hold on to computed value!

      if (false) {}
    }
  };
  _proto.observe_ = function observe_(listener, fireImmediately) {
    var _this = this;
    var firstTime = true;
    var prevValue = undefined;
    return autorun(function () {
      // TODO: why is this in a different place than the spyReport() function? in all other observables it's called in the same place
      var newValue = _this.get();
      if (!firstTime || fireImmediately) {
        var prevU = untrackedStart();
        listener({
          observableKind: "computed",
          debugObjectName: _this.name_,
          type: UPDATE,
          object: _this,
          newValue: newValue,
          oldValue: prevValue
        });
        untrackedEnd(prevU);
      }
      firstTime = false;
      prevValue = newValue;
    });
  };
  _proto.warnAboutUntrackedRead_ = function warnAboutUntrackedRead_() {
    if (true) {
      return;
    }
    if (this.isTracing_ !== TraceMode.NONE) {
      console.log("[mobx.trace] Computed value '" + this.name_ + "' is being read outside a reactive context. Doing a full recompute.");
    }
    if (typeof this.requiresReaction_ === "boolean" ? this.requiresReaction_ : globalState.computedRequiresReaction) {
      console.warn("[mobx] Computed value '" + this.name_ + "' is being read outside a reactive context. Doing a full recompute.");
    }
  };
  _proto.toString = function toString() {
    return this.name_ + "[" + this.derivation.toString() + "]";
  };
  _proto.valueOf = function valueOf() {
    return toPrimitive(this.get());
  };
  _proto[_Symbol$toPrimitive$1] = function () {
    return this.valueOf();
  };
  return ComputedValue;
}();
var isComputedValue = /*#__PURE__*/createInstanceofPredicate("ComputedValue", ComputedValue);
var IDerivationState_;
(function (IDerivationState_) {
  // before being run or (outside batch and not being observed)
  // at this point derivation is not holding any data about dependency tree
  IDerivationState_[IDerivationState_["NOT_TRACKING_"] = -1] = "NOT_TRACKING_"; // no shallow dependency changed since last computation
  // won't recalculate derivation
  // this is what makes mobx fast

  IDerivationState_[IDerivationState_["UP_TO_DATE_"] = 0] = "UP_TO_DATE_"; // some deep dependency changed, but don't know if shallow dependency changed
  // will require to check first if UP_TO_DATE or POSSIBLY_STALE
  // currently only ComputedValue will propagate POSSIBLY_STALE
  //
  // having this state is second big optimization:
  // don't have to recompute on every dependency change, but only when it's needed

  IDerivationState_[IDerivationState_["POSSIBLY_STALE_"] = 1] = "POSSIBLY_STALE_"; // A shallow dependency has changed since last computation and the derivation
  // will need to recompute when it's needed next.

  IDerivationState_[IDerivationState_["STALE_"] = 2] = "STALE_";
})(IDerivationState_ || (IDerivationState_ = {}));
var TraceMode;
(function (TraceMode) {
  TraceMode[TraceMode["NONE"] = 0] = "NONE";
  TraceMode[TraceMode["LOG"] = 1] = "LOG";
  TraceMode[TraceMode["BREAK"] = 2] = "BREAK";
})(TraceMode || (TraceMode = {}));
var CaughtException = function CaughtException(cause) {
  this.cause = void 0;
  this.cause = cause; // Empty
};

function isCaughtException(e) {
  return e instanceof CaughtException;
}
/**
 * Finds out whether any dependency of the derivation has actually changed.
 * If dependenciesState is 1 then it will recalculate dependencies,
 * if any dependency changed it will propagate it by changing dependenciesState to 2.
 *
 * By iterating over the dependencies in the same order that they were reported and
 * stopping on the first change, all the recalculations are only called for ComputedValues
 * that will be tracked by derivation. That is because we assume that if the first x
 * dependencies of the derivation doesn't change then the derivation should run the same way
 * up until accessing x-th dependency.
 */

function shouldCompute(derivation) {
  switch (derivation.dependenciesState_) {
    case IDerivationState_.UP_TO_DATE_:
      return false;
    case IDerivationState_.NOT_TRACKING_:
    case IDerivationState_.STALE_:
      return true;
    case IDerivationState_.POSSIBLY_STALE_:
      {
        // state propagation can occur outside of action/reactive context #2195
        var prevAllowStateReads = allowStateReadsStart(true);
        var prevUntracked = untrackedStart(); // no need for those computeds to be reported, they will be picked up in trackDerivedFunction.

        var obs = derivation.observing_,
          l = obs.length;
        for (var i = 0; i < l; i++) {
          var obj = obs[i];
          if (isComputedValue(obj)) {
            if (globalState.disableErrorBoundaries) {
              obj.get();
            } else {
              try {
                obj.get();
              } catch (e) {
                // we are not interested in the value *or* exception at this moment, but if there is one, notify all
                untrackedEnd(prevUntracked);
                allowStateReadsEnd(prevAllowStateReads);
                return true;
              }
            } // if ComputedValue `obj` actually changed it will be computed and propagated to its observers.
            // and `derivation` is an observer of `obj`
            // invariantShouldCompute(derivation)

            if (derivation.dependenciesState_ === IDerivationState_.STALE_) {
              untrackedEnd(prevUntracked);
              allowStateReadsEnd(prevAllowStateReads);
              return true;
            }
          }
        }
        changeDependenciesStateTo0(derivation);
        untrackedEnd(prevUntracked);
        allowStateReadsEnd(prevAllowStateReads);
        return false;
      }
  }
}
function isComputingDerivation() {
  return globalState.trackingDerivation !== null; // filter out actions inside computations
}

function checkIfStateModificationsAreAllowed(atom) {
  if (true) {
    return;
  }
  var hasObservers = atom.observers_.size > 0; // Should not be possible to change observed state outside strict mode, except during initialization, see #563

  if (!globalState.allowStateChanges && (hasObservers || globalState.enforceActions === "always")) {
    console.warn("[MobX] " + (globalState.enforceActions ? "Since strict-mode is enabled, changing (observed) observable values without using an action is not allowed. Tried to modify: " : "Side effects like changing state are not allowed at this point. Are you trying to modify state from, for example, a computed value or the render function of a React component? You can wrap side effects in 'runInAction' (or decorate functions with 'action') if needed. Tried to modify: ") + atom.name_);
  }
}
function checkIfStateReadsAreAllowed(observable) {
  if (false) {}
}
/**
 * Executes the provided function `f` and tracks which observables are being accessed.
 * The tracking information is stored on the `derivation` object and the derivation is registered
 * as observer of any of the accessed observables.
 */

function trackDerivedFunction(derivation, f, context) {
  var prevAllowStateReads = allowStateReadsStart(true); // pre allocate array allocation + room for variation in deps
  // array will be trimmed by bindDependencies

  changeDependenciesStateTo0(derivation);
  derivation.newObserving_ = new Array(derivation.observing_.length + 100);
  derivation.unboundDepsCount_ = 0;
  derivation.runId_ = ++globalState.runId;
  var prevTracking = globalState.trackingDerivation;
  globalState.trackingDerivation = derivation;
  globalState.inBatch++;
  var result;
  if (globalState.disableErrorBoundaries === true) {
    result = f.call(context);
  } else {
    try {
      result = f.call(context);
    } catch (e) {
      result = new CaughtException(e);
    }
  }
  globalState.inBatch--;
  globalState.trackingDerivation = prevTracking;
  bindDependencies(derivation);
  warnAboutDerivationWithoutDependencies(derivation);
  allowStateReadsEnd(prevAllowStateReads);
  return result;
}
function warnAboutDerivationWithoutDependencies(derivation) {
  if (true) {
    return;
  }
  if (derivation.observing_.length !== 0) {
    return;
  }
  if (typeof derivation.requiresObservable_ === "boolean" ? derivation.requiresObservable_ : globalState.reactionRequiresObservable) {
    console.warn("[mobx] Derivation '" + derivation.name_ + "' is created/updated without reading any observable value.");
  }
}
/**
 * diffs newObserving with observing.
 * update observing to be newObserving with unique observables
 * notify observers that become observed/unobserved
 */

function bindDependencies(derivation) {
  // invariant(derivation.dependenciesState !== IDerivationState.NOT_TRACKING, "INTERNAL ERROR bindDependencies expects derivation.dependenciesState !== -1");
  var prevObserving = derivation.observing_;
  var observing = derivation.observing_ = derivation.newObserving_;
  var lowestNewObservingDerivationState = IDerivationState_.UP_TO_DATE_; // Go through all new observables and check diffValue: (this list can contain duplicates):
  //   0: first occurrence, change to 1 and keep it
  //   1: extra occurrence, drop it

  var i0 = 0,
    l = derivation.unboundDepsCount_;
  for (var i = 0; i < l; i++) {
    var dep = observing[i];
    if (dep.diffValue_ === 0) {
      dep.diffValue_ = 1;
      if (i0 !== i) {
        observing[i0] = dep;
      }
      i0++;
    } // Upcast is 'safe' here, because if dep is IObservable, `dependenciesState` will be undefined,
    // not hitting the condition

    if (dep.dependenciesState_ > lowestNewObservingDerivationState) {
      lowestNewObservingDerivationState = dep.dependenciesState_;
    }
  }
  observing.length = i0;
  derivation.newObserving_ = null; // newObserving shouldn't be needed outside tracking (statement moved down to work around FF bug, see #614)
  // Go through all old observables and check diffValue: (it is unique after last bindDependencies)
  //   0: it's not in new observables, unobserve it
  //   1: it keeps being observed, don't want to notify it. change to 0

  l = prevObserving.length;
  while (l--) {
    var _dep = prevObserving[l];
    if (_dep.diffValue_ === 0) {
      removeObserver(_dep, derivation);
    }
    _dep.diffValue_ = 0;
  } // Go through all new observables and check diffValue: (now it should be unique)
  //   0: it was set to 0 in last loop. don't need to do anything.
  //   1: it wasn't observed, let's observe it. set back to 0

  while (i0--) {
    var _dep2 = observing[i0];
    if (_dep2.diffValue_ === 1) {
      _dep2.diffValue_ = 0;
      addObserver(_dep2, derivation);
    }
  } // Some new observed derivations may become stale during this derivation computation
  // so they have had no chance to propagate staleness (#916)

  if (lowestNewObservingDerivationState !== IDerivationState_.UP_TO_DATE_) {
    derivation.dependenciesState_ = lowestNewObservingDerivationState;
    derivation.onBecomeStale_();
  }
}
function clearObserving(derivation) {
  // invariant(globalState.inBatch > 0, "INTERNAL ERROR clearObserving should be called only inside batch");
  var obs = derivation.observing_;
  derivation.observing_ = [];
  var i = obs.length;
  while (i--) {
    removeObserver(obs[i], derivation);
  }
  derivation.dependenciesState_ = IDerivationState_.NOT_TRACKING_;
}
function untracked(action) {
  var prev = untrackedStart();
  try {
    return action();
  } finally {
    untrackedEnd(prev);
  }
}
function untrackedStart() {
  var prev = globalState.trackingDerivation;
  globalState.trackingDerivation = null;
  return prev;
}
function untrackedEnd(prev) {
  globalState.trackingDerivation = prev;
}
function allowStateReadsStart(allowStateReads) {
  var prev = globalState.allowStateReads;
  globalState.allowStateReads = allowStateReads;
  return prev;
}
function allowStateReadsEnd(prev) {
  globalState.allowStateReads = prev;
}
/**
 * needed to keep `lowestObserverState` correct. when changing from (2 or 1) to 0
 *
 */

function changeDependenciesStateTo0(derivation) {
  if (derivation.dependenciesState_ === IDerivationState_.UP_TO_DATE_) {
    return;
  }
  derivation.dependenciesState_ = IDerivationState_.UP_TO_DATE_;
  var obs = derivation.observing_;
  var i = obs.length;
  while (i--) {
    obs[i].lowestObserverState_ = IDerivationState_.UP_TO_DATE_;
  }
}

/**
 * These values will persist if global state is reset
 */

var persistentKeys = (/* unused pure expression or super */ null && (["mobxGuid", "spyListeners", "enforceActions", "computedRequiresReaction", "reactionRequiresObservable", "observableRequiresReaction", "allowStateReads", "disableErrorBoundaries", "runId", "UNCHANGED", "useProxies"]));
var MobXGlobals = function MobXGlobals() {
  this.version = 6;
  this.UNCHANGED = {};
  this.trackingDerivation = null;
  this.trackingContext = null;
  this.runId = 0;
  this.mobxGuid = 0;
  this.inBatch = 0;
  this.pendingUnobservations = [];
  this.pendingReactions = [];
  this.isRunningReactions = false;
  this.allowStateChanges = false;
  this.allowStateReads = true;
  this.enforceActions = true;
  this.spyListeners = [];
  this.globalReactionErrorHandlers = [];
  this.computedRequiresReaction = false;
  this.reactionRequiresObservable = false;
  this.observableRequiresReaction = false;
  this.disableErrorBoundaries = false;
  this.suppressReactionErrors = false;
  this.useProxies = true;
  this.verifyProxies = false;
  this.safeDescriptors = true;
};
var canMergeGlobalState = true;
var isolateCalled = false;
var globalState = /*#__PURE__*/function () {
  var global = /*#__PURE__*/getGlobal();
  if (global.__mobxInstanceCount > 0 && !global.__mobxGlobals) {
    canMergeGlobalState = false;
  }
  if (global.__mobxGlobals && global.__mobxGlobals.version !== new MobXGlobals().version) {
    canMergeGlobalState = false;
  }
  if (!canMergeGlobalState) {
    // Because this is a IIFE we need to let isolateCalled a chance to change
    // so we run it after the event loop completed at least 1 iteration
    setTimeout(function () {
      if (!isolateCalled) {
        die(35);
      }
    }, 1);
    return new MobXGlobals();
  } else if (global.__mobxGlobals) {
    global.__mobxInstanceCount += 1;
    if (!global.__mobxGlobals.UNCHANGED) {
      global.__mobxGlobals.UNCHANGED = {};
    } // make merge backward compatible

    return global.__mobxGlobals;
  } else {
    global.__mobxInstanceCount = 1;
    return global.__mobxGlobals = /*#__PURE__*/new MobXGlobals();
  }
}();
function isolateGlobalState() {
  if (globalState.pendingReactions.length || globalState.inBatch || globalState.isRunningReactions) {
    die(36);
  }
  isolateCalled = true;
  if (canMergeGlobalState) {
    var global = getGlobal();
    if (--global.__mobxInstanceCount === 0) {
      global.__mobxGlobals = undefined;
    }
    globalState = new MobXGlobals();
  }
}
function getGlobalState() {
  return globalState;
}
/**
 * For testing purposes only; this will break the internal state of existing observables,
 * but can be used to get back at a stable state after throwing errors
 */

function resetGlobalState() {
  var defaultGlobals = new MobXGlobals();
  for (var key in defaultGlobals) {
    if (persistentKeys.indexOf(key) === -1) {
      globalState[key] = defaultGlobals[key];
    }
  }
  globalState.allowStateChanges = !globalState.enforceActions;
}
function hasObservers(observable) {
  return observable.observers_ && observable.observers_.size > 0;
}
function getObservers(observable) {
  return observable.observers_;
} // function invariantObservers(observable: IObservable) {
//     const list = observable.observers
//     const map = observable.observersIndexes
//     const l = list.length
//     for (let i = 0; i < l; i++) {
//         const id = list[i].__mapid
//         if (i) {
//             invariant(map[id] === i, "INTERNAL ERROR maps derivation.__mapid to index in list") // for performance
//         } else {
//             invariant(!(id in map), "INTERNAL ERROR observer on index 0 shouldn't be held in map.") // for performance
//         }
//     }
//     invariant(
//         list.length === 0 || Object.keys(map).length === list.length - 1,
//         "INTERNAL ERROR there is no junk in map"
//     )
// }

function addObserver(observable, node) {
  // invariant(node.dependenciesState !== -1, "INTERNAL ERROR, can add only dependenciesState !== -1");
  // invariant(observable._observers.indexOf(node) === -1, "INTERNAL ERROR add already added node");
  // invariantObservers(observable);
  observable.observers_.add(node);
  if (observable.lowestObserverState_ > node.dependenciesState_) {
    observable.lowestObserverState_ = node.dependenciesState_;
  } // invariantObservers(observable);
  // invariant(observable._observers.indexOf(node) !== -1, "INTERNAL ERROR didn't add node");
}

function removeObserver(observable, node) {
  // invariant(globalState.inBatch > 0, "INTERNAL ERROR, remove should be called only inside batch");
  // invariant(observable._observers.indexOf(node) !== -1, "INTERNAL ERROR remove already removed node");
  // invariantObservers(observable);
  observable.observers_["delete"](node);
  if (observable.observers_.size === 0) {
    // deleting last observer
    queueForUnobservation(observable);
  } // invariantObservers(observable);
  // invariant(observable._observers.indexOf(node) === -1, "INTERNAL ERROR remove already removed node2");
}

function queueForUnobservation(observable) {
  if (observable.isPendingUnobservation_ === false) {
    // invariant(observable._observers.length === 0, "INTERNAL ERROR, should only queue for unobservation unobserved observables");
    observable.isPendingUnobservation_ = true;
    globalState.pendingUnobservations.push(observable);
  }
}
/**
 * Batch starts a transaction, at least for purposes of memoizing ComputedValues when nothing else does.
 * During a batch `onBecomeUnobserved` will be called at most once per observable.
 * Avoids unnecessary recalculations.
 */

function startBatch() {
  globalState.inBatch++;
}
function endBatch() {
  if (--globalState.inBatch === 0) {
    runReactions(); // the batch is actually about to finish, all unobserving should happen here.

    var list = globalState.pendingUnobservations;
    for (var i = 0; i < list.length; i++) {
      var observable = list[i];
      observable.isPendingUnobservation_ = false;
      if (observable.observers_.size === 0) {
        if (observable.isBeingObserved_) {
          // if this observable had reactive observers, trigger the hooks
          observable.isBeingObserved_ = false;
          observable.onBUO();
        }
        if (observable instanceof ComputedValue) {
          // computed values are automatically teared down when the last observer leaves
          // this process happens recursively, this computed might be the last observabe of another, etc..
          observable.suspend_();
        }
      }
    }
    globalState.pendingUnobservations = [];
  }
}
function reportObserved(observable) {
  checkIfStateReadsAreAllowed(observable);
  var derivation = globalState.trackingDerivation;
  if (derivation !== null) {
    /**
     * Simple optimization, give each derivation run an unique id (runId)
     * Check if last time this observable was accessed the same runId is used
     * if this is the case, the relation is already known
     */
    if (derivation.runId_ !== observable.lastAccessedBy_) {
      observable.lastAccessedBy_ = derivation.runId_; // Tried storing newObserving, or observing, or both as Set, but performance didn't come close...

      derivation.newObserving_[derivation.unboundDepsCount_++] = observable;
      if (!observable.isBeingObserved_ && globalState.trackingContext) {
        observable.isBeingObserved_ = true;
        observable.onBO();
      }
    }
    return observable.isBeingObserved_;
  } else if (observable.observers_.size === 0 && globalState.inBatch > 0) {
    queueForUnobservation(observable);
  }
  return false;
} // function invariantLOS(observable: IObservable, msg: string) {
//     // it's expensive so better not run it in produciton. but temporarily helpful for testing
//     const min = getObservers(observable).reduce((a, b) => Math.min(a, b.dependenciesState), 2)
//     if (min >= observable.lowestObserverState) return // <- the only assumption about `lowestObserverState`
//     throw new Error(
//         "lowestObserverState is wrong for " +
//             msg +
//             " because " +
//             min +
//             " < " +
//             observable.lowestObserverState
//     )
// }

/**
 * NOTE: current propagation mechanism will in case of self reruning autoruns behave unexpectedly
 * It will propagate changes to observers from previous run
 * It's hard or maybe impossible (with reasonable perf) to get it right with current approach
 * Hopefully self reruning autoruns aren't a feature people should depend on
 * Also most basic use cases should be ok
 */
// Called by Atom when its value changes

function propagateChanged(observable) {
  // invariantLOS(observable, "changed start");
  if (observable.lowestObserverState_ === IDerivationState_.STALE_) {
    return;
  }
  observable.lowestObserverState_ = IDerivationState_.STALE_; // Ideally we use for..of here, but the downcompiled version is really slow...

  observable.observers_.forEach(function (d) {
    if (d.dependenciesState_ === IDerivationState_.UP_TO_DATE_) {
      if (false) {}
      d.onBecomeStale_();
    }
    d.dependenciesState_ = IDerivationState_.STALE_;
  }); // invariantLOS(observable, "changed end");
} // Called by ComputedValue when it recalculate and its value changed

function propagateChangeConfirmed(observable) {
  // invariantLOS(observable, "confirmed start");
  if (observable.lowestObserverState_ === IDerivationState_.STALE_) {
    return;
  }
  observable.lowestObserverState_ = IDerivationState_.STALE_;
  observable.observers_.forEach(function (d) {
    if (d.dependenciesState_ === IDerivationState_.POSSIBLY_STALE_) {
      d.dependenciesState_ = IDerivationState_.STALE_;
      if (false) {}
    } else if (d.dependenciesState_ === IDerivationState_.UP_TO_DATE_ // this happens during computing of `d`, just keep lowestObserverState up to date.
    ) {
      observable.lowestObserverState_ = IDerivationState_.UP_TO_DATE_;
    }
  }); // invariantLOS(observable, "confirmed end");
} // Used by computed when its dependency changed, but we don't wan't to immediately recompute.

function propagateMaybeChanged(observable) {
  // invariantLOS(observable, "maybe start");
  if (observable.lowestObserverState_ !== IDerivationState_.UP_TO_DATE_) {
    return;
  }
  observable.lowestObserverState_ = IDerivationState_.POSSIBLY_STALE_;
  observable.observers_.forEach(function (d) {
    if (d.dependenciesState_ === IDerivationState_.UP_TO_DATE_) {
      d.dependenciesState_ = IDerivationState_.POSSIBLY_STALE_;
      d.onBecomeStale_();
    }
  }); // invariantLOS(observable, "maybe end");
}

function logTraceInfo(derivation, observable) {
  console.log("[mobx.trace] '" + derivation.name_ + "' is invalidated due to a change in: '" + observable.name_ + "'");
  if (derivation.isTracing_ === TraceMode.BREAK) {
    var lines = [];
    printDepTree(getDependencyTree(derivation), lines, 1); // prettier-ignore

    new Function("debugger;\n/*\nTracing '" + derivation.name_ + "'\n\nYou are entering this break point because derivation '" + derivation.name_ + "' is being traced and '" + observable.name_ + "' is now forcing it to update.\nJust follow the stacktrace you should now see in the devtools to see precisely what piece of your code is causing this update\nThe stackframe you are looking for is at least ~6-8 stack-frames up.\n\n" + (derivation instanceof ComputedValue ? derivation.derivation.toString().replace(/[*]\//g, "/") : "") + "\n\nThe dependencies for this derivation are:\n\n" + lines.join("\n") + "\n*/\n    ")();
  }
}
function printDepTree(tree, lines, depth) {
  if (lines.length >= 1000) {
    lines.push("(and many more)");
    return;
  }
  lines.push("" + "\t".repeat(depth - 1) + tree.name);
  if (tree.dependencies) {
    tree.dependencies.forEach(function (child) {
      return printDepTree(child, lines, depth + 1);
    });
  }
}
var Reaction = /*#__PURE__*/function () {
  // nodes we are looking at. Our value depends on these nodes
  function Reaction(name_, onInvalidate_, errorHandler_, requiresObservable_) {
    if (name_ === void 0) {
      name_ =  false ? 0 : "Reaction";
    }
    this.name_ = void 0;
    this.onInvalidate_ = void 0;
    this.errorHandler_ = void 0;
    this.requiresObservable_ = void 0;
    this.observing_ = [];
    this.newObserving_ = [];
    this.dependenciesState_ = IDerivationState_.NOT_TRACKING_;
    this.diffValue_ = 0;
    this.runId_ = 0;
    this.unboundDepsCount_ = 0;
    this.isDisposed_ = false;
    this.isScheduled_ = false;
    this.isTrackPending_ = false;
    this.isRunning_ = false;
    this.isTracing_ = TraceMode.NONE;
    this.name_ = name_;
    this.onInvalidate_ = onInvalidate_;
    this.errorHandler_ = errorHandler_;
    this.requiresObservable_ = requiresObservable_;
  }
  var _proto = Reaction.prototype;
  _proto.onBecomeStale_ = function onBecomeStale_() {
    this.schedule_();
  };
  _proto.schedule_ = function schedule_() {
    if (!this.isScheduled_) {
      this.isScheduled_ = true;
      globalState.pendingReactions.push(this);
      runReactions();
    }
  };
  _proto.isScheduled = function isScheduled() {
    return this.isScheduled_;
  }
  /**
   * internal, use schedule() if you intend to kick off a reaction
   */;

  _proto.runReaction_ = function runReaction_() {
    if (!this.isDisposed_) {
      startBatch();
      this.isScheduled_ = false;
      var prev = globalState.trackingContext;
      globalState.trackingContext = this;
      if (shouldCompute(this)) {
        this.isTrackPending_ = true;
        try {
          this.onInvalidate_();
          if (false) {}
        } catch (e) {
          this.reportExceptionInDerivation_(e);
        }
      }
      globalState.trackingContext = prev;
      endBatch();
    }
  };
  _proto.track = function track(fn) {
    if (this.isDisposed_) {
      return; // console.warn("Reaction already disposed") // Note: Not a warning / error in mobx 4 either
    }

    startBatch();
    var notify = isSpyEnabled();
    var startTime;
    if (false) {}
    this.isRunning_ = true;
    var prevReaction = globalState.trackingContext; // reactions could create reactions...

    globalState.trackingContext = this;
    var result = trackDerivedFunction(this, fn, undefined);
    globalState.trackingContext = prevReaction;
    this.isRunning_ = false;
    this.isTrackPending_ = false;
    if (this.isDisposed_) {
      // disposed during last run. Clean up everything that was bound after the dispose call.
      clearObserving(this);
    }
    if (isCaughtException(result)) {
      this.reportExceptionInDerivation_(result.cause);
    }
    if (false) {}
    endBatch();
  };
  _proto.reportExceptionInDerivation_ = function reportExceptionInDerivation_(error) {
    var _this = this;
    if (this.errorHandler_) {
      this.errorHandler_(error, this);
      return;
    }
    if (globalState.disableErrorBoundaries) {
      throw error;
    }
    var message =  false ? 0 : "[mobx] uncaught error in '" + this + "'";
    if (!globalState.suppressReactionErrors) {
      console.error(message, error);
      /** If debugging brought you here, please, read the above message :-). Tnx! */
    } else if (false) {} // prettier-ignore

    if (false) {}
    globalState.globalReactionErrorHandlers.forEach(function (f) {
      return f(error, _this);
    });
  };
  _proto.dispose = function dispose() {
    if (!this.isDisposed_) {
      this.isDisposed_ = true;
      if (!this.isRunning_) {
        // if disposed while running, clean up later. Maybe not optimal, but rare case
        startBatch();
        clearObserving(this);
        endBatch();
      }
    }
  };
  _proto.getDisposer_ = function getDisposer_() {
    var r = this.dispose.bind(this);
    r[$mobx] = this;
    return r;
  };
  _proto.toString = function toString() {
    return "Reaction[" + this.name_ + "]";
  };
  _proto.trace = function trace$1(enterBreakPoint) {
    if (enterBreakPoint === void 0) {
      enterBreakPoint = false;
    }
    trace(this, enterBreakPoint);
  };
  return Reaction;
}();
function onReactionError(handler) {
  globalState.globalReactionErrorHandlers.push(handler);
  return function () {
    var idx = globalState.globalReactionErrorHandlers.indexOf(handler);
    if (idx >= 0) {
      globalState.globalReactionErrorHandlers.splice(idx, 1);
    }
  };
}
/**
 * Magic number alert!
 * Defines within how many times a reaction is allowed to re-trigger itself
 * until it is assumed that this is gonna be a never ending loop...
 */

var MAX_REACTION_ITERATIONS = 100;
var reactionScheduler = function reactionScheduler(f) {
  return f();
};
function runReactions() {
  // Trampolining, if runReactions are already running, new reactions will be picked up
  if (globalState.inBatch > 0 || globalState.isRunningReactions) {
    return;
  }
  reactionScheduler(runReactionsHelper);
}
function runReactionsHelper() {
  globalState.isRunningReactions = true;
  var allReactions = globalState.pendingReactions;
  var iterations = 0; // While running reactions, new reactions might be triggered.
  // Hence we work with two variables and check whether
  // we converge to no remaining reactions after a while.

  while (allReactions.length > 0) {
    if (++iterations === MAX_REACTION_ITERATIONS) {
      console.error( false ? 0 : "[mobx] cycle in reaction: " + allReactions[0]);
      allReactions.splice(0); // clear reactions
    }

    var remainingReactions = allReactions.splice(0);
    for (var i = 0, l = remainingReactions.length; i < l; i++) {
      remainingReactions[i].runReaction_();
    }
  }
  globalState.isRunningReactions = false;
}
var isReaction = /*#__PURE__*/createInstanceofPredicate("Reaction", Reaction);
function setReactionScheduler(fn) {
  var baseScheduler = reactionScheduler;
  reactionScheduler = function reactionScheduler(f) {
    return fn(function () {
      return baseScheduler(f);
    });
  };
}
function isSpyEnabled() {
  return  false && 0;
}
function spyReport(event) {
  if (true) {
    return;
  } // dead code elimination can do the rest

  if (!globalState.spyListeners.length) {
    return;
  }
  var listeners = globalState.spyListeners;
  for (var i = 0, l = listeners.length; i < l; i++) {
    listeners[i](event);
  }
}
function spyReportStart(event) {
  if (true) {
    return;
  }
  var change = _extends({}, event, {
    spyReportStart: true
  });
  spyReport(change);
}
var END_EVENT = {
  type: "report-end",
  spyReportEnd: true
};
function spyReportEnd(change) {
  if (true) {
    return;
  }
  if (change) {
    spyReport(_extends({}, change, {
      type: "report-end",
      spyReportEnd: true
    }));
  } else {
    spyReport(END_EVENT);
  }
}
function spy(listener) {
  if (true) {
    console.warn("[mobx.spy] Is a no-op in production builds");
    return function () {};
  } else {}
}
var ACTION = "action";
var ACTION_BOUND = "action.bound";
var AUTOACTION = "autoAction";
var AUTOACTION_BOUND = "autoAction.bound";
var DEFAULT_ACTION_NAME = "<unnamed action>";
var actionAnnotation = /*#__PURE__*/createActionAnnotation(ACTION);
var actionBoundAnnotation = /*#__PURE__*/createActionAnnotation(ACTION_BOUND, {
  bound: true
});
var autoActionAnnotation = /*#__PURE__*/createActionAnnotation(AUTOACTION, {
  autoAction: true
});
var autoActionBoundAnnotation = /*#__PURE__*/createActionAnnotation(AUTOACTION_BOUND, {
  autoAction: true,
  bound: true
});
function createActionFactory(autoAction) {
  var res = function action(arg1, arg2) {
    // action(fn() {})
    if (isFunction(arg1)) {
      return createAction(arg1.name || DEFAULT_ACTION_NAME, arg1, autoAction);
    } // action("name", fn() {})

    if (isFunction(arg2)) {
      return createAction(arg1, arg2, autoAction);
    } // @action

    if (isStringish(arg2)) {
      return storeAnnotation(arg1, arg2, autoAction ? autoActionAnnotation : actionAnnotation);
    } // action("name") & @action("name")

    if (isStringish(arg1)) {
      return createDecoratorAnnotation(createActionAnnotation(autoAction ? AUTOACTION : ACTION, {
        name: arg1,
        autoAction: autoAction
      }));
    }
    if (false) {}
  };
  return res;
}
var action = /*#__PURE__*/createActionFactory(false);
Object.assign(action, actionAnnotation);
var autoAction = /*#__PURE__*/createActionFactory(true);
Object.assign(autoAction, autoActionAnnotation);
action.bound = /*#__PURE__*/createDecoratorAnnotation(actionBoundAnnotation);
autoAction.bound = /*#__PURE__*/createDecoratorAnnotation(autoActionBoundAnnotation);
function mobx_esm_runInAction(fn) {
  return executeAction(fn.name || DEFAULT_ACTION_NAME, false, fn, this, undefined);
}
function isAction(thing) {
  return isFunction(thing) && thing.isMobxAction === true;
}

/**
 * Creates a named reactive view and keeps it alive, so that the view is always
 * updated if one of the dependencies changes, even when the view is not further used by something else.
 * @param view The reactive view
 * @returns disposer function, which can be used to stop the view from being updated in the future.
 */

function autorun(view, opts) {
  var _opts$name, _opts;
  if (opts === void 0) {
    opts = EMPTY_OBJECT;
  }
  if (false) {}
  var name = (_opts$name = (_opts = opts) == null ? void 0 : _opts.name) != null ? _opts$name :  false ? 0 : "Autorun";
  var runSync = !opts.scheduler && !opts.delay;
  var reaction;
  if (runSync) {
    // normal autorun
    reaction = new Reaction(name, function () {
      this.track(reactionRunner);
    }, opts.onError, opts.requiresObservable);
  } else {
    var scheduler = createSchedulerFromOptions(opts); // debounced autorun

    var isScheduled = false;
    reaction = new Reaction(name, function () {
      if (!isScheduled) {
        isScheduled = true;
        scheduler(function () {
          isScheduled = false;
          if (!reaction.isDisposed_) {
            reaction.track(reactionRunner);
          }
        });
      }
    }, opts.onError, opts.requiresObservable);
  }
  function reactionRunner() {
    view(reaction);
  }
  reaction.schedule_();
  return reaction.getDisposer_();
}
var run = function run(f) {
  return f();
};
function createSchedulerFromOptions(opts) {
  return opts.scheduler ? opts.scheduler : opts.delay ? function (f) {
    return setTimeout(f, opts.delay);
  } : run;
}
function reaction(expression, effect, opts) {
  var _opts$name2;
  if (opts === void 0) {
    opts = EMPTY_OBJECT;
  }
  if (false) {}
  var name = (_opts$name2 = opts.name) != null ? _opts$name2 :  false ? 0 : "Reaction";
  var effectAction = action(name, opts.onError ? wrapErrorHandler(opts.onError, effect) : effect);
  var runSync = !opts.scheduler && !opts.delay;
  var scheduler = createSchedulerFromOptions(opts);
  var firstTime = true;
  var isScheduled = false;
  var value;
  var oldValue;
  var equals = opts.compareStructural ? comparer.structural : opts.equals || comparer["default"];
  var r = new Reaction(name, function () {
    if (firstTime || runSync) {
      reactionRunner();
    } else if (!isScheduled) {
      isScheduled = true;
      scheduler(reactionRunner);
    }
  }, opts.onError, opts.requiresObservable);
  function reactionRunner() {
    isScheduled = false;
    if (r.isDisposed_) {
      return;
    }
    var changed = false;
    r.track(function () {
      var nextValue = allowStateChanges(false, function () {
        return expression(r);
      });
      changed = firstTime || !equals(value, nextValue);
      oldValue = value;
      value = nextValue;
    });
    if (firstTime && opts.fireImmediately) {
      effectAction(value, oldValue, r);
    } else if (!firstTime && changed) {
      effectAction(value, oldValue, r);
    }
    firstTime = false;
  }
  r.schedule_();
  return r.getDisposer_();
}
function wrapErrorHandler(errorHandler, baseFn) {
  return function () {
    try {
      return baseFn.apply(this, arguments);
    } catch (e) {
      errorHandler.call(this, e);
    }
  };
}
var ON_BECOME_OBSERVED = "onBO";
var ON_BECOME_UNOBSERVED = "onBUO";
function onBecomeObserved(thing, arg2, arg3) {
  return interceptHook(ON_BECOME_OBSERVED, thing, arg2, arg3);
}
function onBecomeUnobserved(thing, arg2, arg3) {
  return interceptHook(ON_BECOME_UNOBSERVED, thing, arg2, arg3);
}
function interceptHook(hook, thing, arg2, arg3) {
  var atom = typeof arg3 === "function" ? getAtom(thing, arg2) : getAtom(thing);
  var cb = isFunction(arg3) ? arg3 : arg2;
  var listenersKey = hook + "L";
  if (atom[listenersKey]) {
    atom[listenersKey].add(cb);
  } else {
    atom[listenersKey] = new Set([cb]);
  }
  return function () {
    var hookListeners = atom[listenersKey];
    if (hookListeners) {
      hookListeners["delete"](cb);
      if (hookListeners.size === 0) {
        delete atom[listenersKey];
      }
    }
  };
}
var NEVER = "never";
var ALWAYS = "always";
var OBSERVED = "observed"; // const IF_AVAILABLE = "ifavailable"

function configure(options) {
  if (options.isolateGlobalState === true) {
    isolateGlobalState();
  }
  var useProxies = options.useProxies,
    enforceActions = options.enforceActions;
  if (useProxies !== undefined) {
    globalState.useProxies = useProxies === ALWAYS ? true : useProxies === NEVER ? false : typeof Proxy !== "undefined";
  }
  if (useProxies === "ifavailable") {
    globalState.verifyProxies = true;
  }
  if (enforceActions !== undefined) {
    var ea = enforceActions === ALWAYS ? ALWAYS : enforceActions === OBSERVED;
    globalState.enforceActions = ea;
    globalState.allowStateChanges = ea === true || ea === ALWAYS ? false : true;
  }
  ["computedRequiresReaction", "reactionRequiresObservable", "observableRequiresReaction", "disableErrorBoundaries", "safeDescriptors"].forEach(function (key) {
    if (key in options) {
      globalState[key] = !!options[key];
    }
  });
  globalState.allowStateReads = !globalState.observableRequiresReaction;
  if (false) {}
  if (options.reactionScheduler) {
    setReactionScheduler(options.reactionScheduler);
  }
}
function extendObservable(target, properties, annotations, options) {
  if (false) {} // Pull descriptors first, so we don't have to deal with props added by administration ($mobx)

  var descriptors = getOwnPropertyDescriptors(properties);
  var adm = asObservableObject(target, options)[$mobx];
  startBatch();
  try {
    ownKeys(descriptors).forEach(function (key) {
      adm.extend_(key, descriptors[key],
      // must pass "undefined" for { key: undefined }
      !annotations ? true : key in annotations ? annotations[key] : true);
    });
  } finally {
    endBatch();
  }
  return target;
}
function getDependencyTree(thing, property) {
  return nodeToDependencyTree(getAtom(thing, property));
}
function nodeToDependencyTree(node) {
  var result = {
    name: node.name_
  };
  if (node.observing_ && node.observing_.length > 0) {
    result.dependencies = unique(node.observing_).map(nodeToDependencyTree);
  }
  return result;
}
function getObserverTree(thing, property) {
  return nodeToObserverTree(getAtom(thing, property));
}
function nodeToObserverTree(node) {
  var result = {
    name: node.name_
  };
  if (hasObservers(node)) {
    result.observers = Array.from(getObservers(node)).map(nodeToObserverTree);
  }
  return result;
}
function unique(list) {
  return Array.from(new Set(list));
}
var generatorId = 0;
function FlowCancellationError() {
  this.message = "FLOW_CANCELLED";
}
FlowCancellationError.prototype = /*#__PURE__*/Object.create(Error.prototype);
function isFlowCancellationError(error) {
  return error instanceof FlowCancellationError;
}
var flowAnnotation = /*#__PURE__*/createFlowAnnotation("flow");
var flowBoundAnnotation = /*#__PURE__*/createFlowAnnotation("flow.bound", {
  bound: true
});
var flow = /*#__PURE__*/Object.assign(function flow(arg1, arg2) {
  // @flow
  if (isStringish(arg2)) {
    return storeAnnotation(arg1, arg2, flowAnnotation);
  } // flow(fn)

  if (false) {}
  var generator = arg1;
  var name = generator.name || "<unnamed flow>"; // Implementation based on https://github.com/tj/co/blob/master/index.js

  var res = function res() {
    var ctx = this;
    var args = arguments;
    var runId = ++generatorId;
    var gen = action(name + " - runid: " + runId + " - init", generator).apply(ctx, args);
    var rejector;
    var pendingPromise = undefined;
    var promise = new Promise(function (resolve, reject) {
      var stepId = 0;
      rejector = reject;
      function onFulfilled(res) {
        pendingPromise = undefined;
        var ret;
        try {
          ret = action(name + " - runid: " + runId + " - yield " + stepId++, gen.next).call(gen, res);
        } catch (e) {
          return reject(e);
        }
        next(ret);
      }
      function onRejected(err) {
        pendingPromise = undefined;
        var ret;
        try {
          ret = action(name + " - runid: " + runId + " - yield " + stepId++, gen["throw"]).call(gen, err);
        } catch (e) {
          return reject(e);
        }
        next(ret);
      }
      function next(ret) {
        if (isFunction(ret == null ? void 0 : ret.then)) {
          // an async iterator
          ret.then(next, reject);
          return;
        }
        if (ret.done) {
          return resolve(ret.value);
        }
        pendingPromise = Promise.resolve(ret.value);
        return pendingPromise.then(onFulfilled, onRejected);
      }
      onFulfilled(undefined); // kick off the process
    });

    promise.cancel = action(name + " - runid: " + runId + " - cancel", function () {
      try {
        if (pendingPromise) {
          cancelPromise(pendingPromise);
        } // Finally block can return (or yield) stuff..

        var _res = gen["return"](undefined); // eat anything that promise would do, it's cancelled!

        var yieldedPromise = Promise.resolve(_res.value);
        yieldedPromise.then(noop, noop);
        cancelPromise(yieldedPromise); // maybe it can be cancelled :)
        // reject our original promise

        rejector(new FlowCancellationError());
      } catch (e) {
        rejector(e); // there could be a throwing finally block
      }
    });

    return promise;
  };
  res.isMobXFlow = true;
  return res;
}, flowAnnotation);
flow.bound = /*#__PURE__*/createDecoratorAnnotation(flowBoundAnnotation);
function cancelPromise(promise) {
  if (isFunction(promise.cancel)) {
    promise.cancel();
  }
}
function flowResult(result) {
  return result; // just tricking TypeScript :)
}

function isFlow(fn) {
  return (fn == null ? void 0 : fn.isMobXFlow) === true;
}
function interceptReads(thing, propOrHandler, handler) {
  var target;
  if (isObservableMap(thing) || isObservableArray(thing) || isObservableValue(thing)) {
    target = getAdministration(thing);
  } else if (isObservableObject(thing)) {
    if (false) {}
    target = getAdministration(thing, propOrHandler);
  } else if (false) {}
  if (false) {}
  target.dehancer = typeof propOrHandler === "function" ? propOrHandler : handler;
  return function () {
    target.dehancer = undefined;
  };
}
function intercept(thing, propOrHandler, handler) {
  if (isFunction(handler)) {
    return interceptProperty(thing, propOrHandler, handler);
  } else {
    return interceptInterceptable(thing, propOrHandler);
  }
}
function interceptInterceptable(thing, handler) {
  return getAdministration(thing).intercept_(handler);
}
function interceptProperty(thing, property, handler) {
  return getAdministration(thing, property).intercept_(handler);
}
function _isComputed(value, property) {
  if (property === undefined) {
    return isComputedValue(value);
  }
  if (isObservableObject(value) === false) {
    return false;
  }
  if (!value[$mobx].values_.has(property)) {
    return false;
  }
  var atom = getAtom(value, property);
  return isComputedValue(atom);
}
function isComputed(value) {
  if (false) {}
  return _isComputed(value);
}
function isComputedProp(value, propName) {
  if (false) {}
  return _isComputed(value, propName);
}
function _isObservable(value, property) {
  if (!value) {
    return false;
  }
  if (property !== undefined) {
    if (false) {}
    if (isObservableObject(value)) {
      return value[$mobx].values_.has(property);
    }
    return false;
  } // For first check, see #701

  return isObservableObject(value) || !!value[$mobx] || isAtom(value) || isReaction(value) || isComputedValue(value);
}
function isObservable(value) {
  if (false) {}
  return _isObservable(value);
}
function isObservableProp(value, propName) {
  if (false) {}
  return _isObservable(value, propName);
}
function keys(obj) {
  if (isObservableObject(obj)) {
    return obj[$mobx].keys_();
  }
  if (isObservableMap(obj) || isObservableSet(obj)) {
    return Array.from(obj.keys());
  }
  if (isObservableArray(obj)) {
    return obj.map(function (_, index) {
      return index;
    });
  }
  die(5);
}
function values(obj) {
  if (isObservableObject(obj)) {
    return keys(obj).map(function (key) {
      return obj[key];
    });
  }
  if (isObservableMap(obj)) {
    return keys(obj).map(function (key) {
      return obj.get(key);
    });
  }
  if (isObservableSet(obj)) {
    return Array.from(obj.values());
  }
  if (isObservableArray(obj)) {
    return obj.slice();
  }
  die(6);
}
function entries(obj) {
  if (isObservableObject(obj)) {
    return keys(obj).map(function (key) {
      return [key, obj[key]];
    });
  }
  if (isObservableMap(obj)) {
    return keys(obj).map(function (key) {
      return [key, obj.get(key)];
    });
  }
  if (isObservableSet(obj)) {
    return Array.from(obj.entries());
  }
  if (isObservableArray(obj)) {
    return obj.map(function (key, index) {
      return [index, key];
    });
  }
  die(7);
}
function set(obj, key, value) {
  if (arguments.length === 2 && !isObservableSet(obj)) {
    startBatch();
    var _values = key;
    try {
      for (var _key in _values) {
        set(obj, _key, _values[_key]);
      }
    } finally {
      endBatch();
    }
    return;
  }
  if (isObservableObject(obj)) {
    obj[$mobx].set_(key, value);
  } else if (isObservableMap(obj)) {
    obj.set(key, value);
  } else if (isObservableSet(obj)) {
    obj.add(key);
  } else if (isObservableArray(obj)) {
    if (typeof key !== "number") {
      key = parseInt(key, 10);
    }
    if (key < 0) {
      die("Invalid index: '" + key + "'");
    }
    startBatch();
    if (key >= obj.length) {
      obj.length = key + 1;
    }
    obj[key] = value;
    endBatch();
  } else {
    die(8);
  }
}
function remove(obj, key) {
  if (isObservableObject(obj)) {
    obj[$mobx].delete_(key);
  } else if (isObservableMap(obj)) {
    obj["delete"](key);
  } else if (isObservableSet(obj)) {
    obj["delete"](key);
  } else if (isObservableArray(obj)) {
    if (typeof key !== "number") {
      key = parseInt(key, 10);
    }
    obj.splice(key, 1);
  } else {
    die(9);
  }
}
function has(obj, key) {
  if (isObservableObject(obj)) {
    return obj[$mobx].has_(key);
  } else if (isObservableMap(obj)) {
    return obj.has(key);
  } else if (isObservableSet(obj)) {
    return obj.has(key);
  } else if (isObservableArray(obj)) {
    return key >= 0 && key < obj.length;
  }
  die(10);
}
function get(obj, key) {
  if (!has(obj, key)) {
    return undefined;
  }
  if (isObservableObject(obj)) {
    return obj[$mobx].get_(key);
  } else if (isObservableMap(obj)) {
    return obj.get(key);
  } else if (isObservableArray(obj)) {
    return obj[key];
  }
  die(11);
}
function apiDefineProperty(obj, key, descriptor) {
  if (isObservableObject(obj)) {
    return obj[$mobx].defineProperty_(key, descriptor);
  }
  die(39);
}
function apiOwnKeys(obj) {
  if (isObservableObject(obj)) {
    return obj[$mobx].ownKeys_();
  }
  die(38);
}
function observe(thing, propOrCb, cbOrFire, fireImmediately) {
  if (isFunction(cbOrFire)) {
    return observeObservableProperty(thing, propOrCb, cbOrFire, fireImmediately);
  } else {
    return observeObservable(thing, propOrCb, cbOrFire);
  }
}
function observeObservable(thing, listener, fireImmediately) {
  return getAdministration(thing).observe_(listener, fireImmediately);
}
function observeObservableProperty(thing, property, listener, fireImmediately) {
  return getAdministration(thing, property).observe_(listener, fireImmediately);
}
function cache(map, key, value) {
  map.set(key, value);
  return value;
}
function toJSHelper(source, __alreadySeen) {
  if (source == null || typeof source !== "object" || source instanceof Date || !isObservable(source)) {
    return source;
  }
  if (isObservableValue(source) || isComputedValue(source)) {
    return toJSHelper(source.get(), __alreadySeen);
  }
  if (__alreadySeen.has(source)) {
    return __alreadySeen.get(source);
  }
  if (isObservableArray(source)) {
    var res = cache(__alreadySeen, source, new Array(source.length));
    source.forEach(function (value, idx) {
      res[idx] = toJSHelper(value, __alreadySeen);
    });
    return res;
  }
  if (isObservableSet(source)) {
    var _res = cache(__alreadySeen, source, new Set());
    source.forEach(function (value) {
      _res.add(toJSHelper(value, __alreadySeen));
    });
    return _res;
  }
  if (isObservableMap(source)) {
    var _res2 = cache(__alreadySeen, source, new Map());
    source.forEach(function (value, key) {
      _res2.set(key, toJSHelper(value, __alreadySeen));
    });
    return _res2;
  } else {
    // must be observable object
    var _res3 = cache(__alreadySeen, source, {});
    apiOwnKeys(source).forEach(function (key) {
      if (objectPrototype.propertyIsEnumerable.call(source, key)) {
        _res3[key] = toJSHelper(source[key], __alreadySeen);
      }
    });
    return _res3;
  }
}
/**
 * Recursively converts an observable to it's non-observable native counterpart.
 * It does NOT recurse into non-observables, these are left as they are, even if they contain observables.
 * Computed and other non-enumerable properties are completely ignored.
 * Complex scenarios require custom solution, eg implementing `toJSON` or using `serializr` lib.
 */

function toJS(source, options) {
  if (false) {}
  return toJSHelper(source, new Map());
}
function trace() {
  if (true) {
    die("trace() is not available in production builds");
  }
  var enterBreakPoint = false;
  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
    args[_key] = arguments[_key];
  }
  if (typeof args[args.length - 1] === "boolean") {
    enterBreakPoint = args.pop();
  }
  var derivation = getAtomFromArgs(args);
  if (!derivation) {
    return die("'trace(break?)' can only be used inside a tracked computed value or a Reaction. Consider passing in the computed value or reaction explicitly");
  }
  if (derivation.isTracing_ === TraceMode.NONE) {
    console.log("[mobx.trace] '" + derivation.name_ + "' tracing enabled");
  }
  derivation.isTracing_ = enterBreakPoint ? TraceMode.BREAK : TraceMode.LOG;
}
function getAtomFromArgs(args) {
  switch (args.length) {
    case 0:
      return globalState.trackingDerivation;
    case 1:
      return getAtom(args[0]);
    case 2:
      return getAtom(args[0], args[1]);
  }
}

/**
 * During a transaction no views are updated until the end of the transaction.
 * The transaction will be run synchronously nonetheless.
 *
 * @param action a function that updates some reactive state
 * @returns any value that was returned by the 'action' parameter.
 */

function transaction(action, thisArg) {
  if (thisArg === void 0) {
    thisArg = undefined;
  }
  startBatch();
  try {
    return action.apply(thisArg);
  } finally {
    endBatch();
  }
}
function when(predicate, arg1, arg2) {
  if (arguments.length === 1 || arg1 && typeof arg1 === "object") {
    return whenPromise(predicate, arg1);
  }
  return _when(predicate, arg1, arg2 || {});
}
function _when(predicate, effect, opts) {
  var timeoutHandle;
  if (typeof opts.timeout === "number") {
    var error = new Error("WHEN_TIMEOUT");
    timeoutHandle = setTimeout(function () {
      if (!disposer[$mobx].isDisposed_) {
        disposer();
        if (opts.onError) {
          opts.onError(error);
        } else {
          throw error;
        }
      }
    }, opts.timeout);
  }
  opts.name =  false ? 0 : "When";
  var effectAction = createAction( false ? 0 : "When-effect", effect); // eslint-disable-next-line

  var disposer = autorun(function (r) {
    // predicate should not change state
    var cond = allowStateChanges(false, predicate);
    if (cond) {
      r.dispose();
      if (timeoutHandle) {
        clearTimeout(timeoutHandle);
      }
      effectAction();
    }
  }, opts);
  return disposer;
}
function whenPromise(predicate, opts) {
  var _opts$signal;
  if (false) {}
  if (opts != null && (_opts$signal = opts.signal) != null && _opts$signal.aborted) {
    return Object.assign(Promise.reject(new Error("WHEN_ABORTED")), {
      cancel: function cancel() {
        return null;
      }
    });
  }
  var cancel;
  var abort;
  var res = new Promise(function (resolve, reject) {
    var _opts$signal2;
    var disposer = _when(predicate, resolve, _extends({}, opts, {
      onError: reject
    }));
    cancel = function cancel() {
      disposer();
      reject(new Error("WHEN_CANCELLED"));
    };
    abort = function abort() {
      disposer();
      reject(new Error("WHEN_ABORTED"));
    };
    opts == null ? void 0 : (_opts$signal2 = opts.signal) == null ? void 0 : _opts$signal2.addEventListener("abort", abort);
  })["finally"](function () {
    var _opts$signal3;
    return opts == null ? void 0 : (_opts$signal3 = opts.signal) == null ? void 0 : _opts$signal3.removeEventListener("abort", abort);
  });
  res.cancel = cancel;
  return res;
}
function getAdm(target) {
  return target[$mobx];
} // Optimization: we don't need the intermediate objects and could have a completely custom administration for DynamicObjects,
// and skip either the internal values map, or the base object with its property descriptors!

var objectProxyTraps = {
  has: function has(target, name) {
    if (false) {}
    return getAdm(target).has_(name);
  },
  get: function get(target, name) {
    return getAdm(target).get_(name);
  },
  set: function set(target, name, value) {
    var _getAdm$set_;
    if (!isStringish(name)) {
      return false;
    }
    if (false) {} // null (intercepted) -> true (success)

    return (_getAdm$set_ = getAdm(target).set_(name, value, true)) != null ? _getAdm$set_ : true;
  },
  deleteProperty: function deleteProperty(target, name) {
    var _getAdm$delete_;
    if (false) {}
    if (!isStringish(name)) {
      return false;
    } // null (intercepted) -> true (success)

    return (_getAdm$delete_ = getAdm(target).delete_(name, true)) != null ? _getAdm$delete_ : true;
  },
  defineProperty: function defineProperty(target, name, descriptor) {
    var _getAdm$definePropert;
    if (false) {} // null (intercepted) -> true (success)

    return (_getAdm$definePropert = getAdm(target).defineProperty_(name, descriptor)) != null ? _getAdm$definePropert : true;
  },
  ownKeys: function ownKeys(target) {
    if (false) {}
    return getAdm(target).ownKeys_();
  },
  preventExtensions: function preventExtensions(target) {
    die(13);
  }
};
function asDynamicObservableObject(target, options) {
  var _target$$mobx, _target$$mobx$proxy_;
  assertProxies();
  target = asObservableObject(target, options);
  return (_target$$mobx$proxy_ = (_target$$mobx = target[$mobx]).proxy_) != null ? _target$$mobx$proxy_ : _target$$mobx.proxy_ = new Proxy(target, objectProxyTraps);
}
function hasInterceptors(interceptable) {
  return interceptable.interceptors_ !== undefined && interceptable.interceptors_.length > 0;
}
function registerInterceptor(interceptable, handler) {
  var interceptors = interceptable.interceptors_ || (interceptable.interceptors_ = []);
  interceptors.push(handler);
  return once(function () {
    var idx = interceptors.indexOf(handler);
    if (idx !== -1) {
      interceptors.splice(idx, 1);
    }
  });
}
function interceptChange(interceptable, change) {
  var prevU = untrackedStart();
  try {
    // Interceptor can modify the array, copy it to avoid concurrent modification, see #1950
    var interceptors = [].concat(interceptable.interceptors_ || []);
    for (var i = 0, l = interceptors.length; i < l; i++) {
      change = interceptors[i](change);
      if (change && !change.type) {
        die(14);
      }
      if (!change) {
        break;
      }
    }
    return change;
  } finally {
    untrackedEnd(prevU);
  }
}
function hasListeners(listenable) {
  return listenable.changeListeners_ !== undefined && listenable.changeListeners_.length > 0;
}
function registerListener(listenable, handler) {
  var listeners = listenable.changeListeners_ || (listenable.changeListeners_ = []);
  listeners.push(handler);
  return once(function () {
    var idx = listeners.indexOf(handler);
    if (idx !== -1) {
      listeners.splice(idx, 1);
    }
  });
}
function notifyListeners(listenable, change) {
  var prevU = untrackedStart();
  var listeners = listenable.changeListeners_;
  if (!listeners) {
    return;
  }
  listeners = listeners.slice();
  for (var i = 0, l = listeners.length; i < l; i++) {
    listeners[i](change);
  }
  untrackedEnd(prevU);
}
function makeObservable(target, annotations, options) {
  var adm = asObservableObject(target, options)[$mobx];
  startBatch();
  try {
    var _annotations;
    if (false) {} // Default to decorators

    (_annotations = annotations) != null ? _annotations : annotations = collectStoredAnnotations(target); // Annotate

    ownKeys(annotations).forEach(function (key) {
      return adm.make_(key, annotations[key]);
    });
  } finally {
    endBatch();
  }
  return target;
} // proto[keysSymbol] = new Set<PropertyKey>()

var keysSymbol = /*#__PURE__*/Symbol("mobx-keys");
function makeAutoObservable(target, overrides, options) {
  if (false) {} // Optimization: avoid visiting protos
  // Assumes that annotation.make_/.extend_ works the same for plain objects

  if (isPlainObject(target)) {
    return extendObservable(target, target, overrides, options);
  }
  var adm = asObservableObject(target, options)[$mobx]; // Optimization: cache keys on proto
  // Assumes makeAutoObservable can be called only once per object and can't be used in subclass

  if (!target[keysSymbol]) {
    var proto = Object.getPrototypeOf(target);
    var keys = new Set([].concat(ownKeys(target), ownKeys(proto)));
    keys["delete"]("constructor");
    keys["delete"]($mobx);
    addHiddenProp(proto, keysSymbol, keys);
  }
  startBatch();
  try {
    target[keysSymbol].forEach(function (key) {
      return adm.make_(key,
      // must pass "undefined" for { key: undefined }
      !overrides ? true : key in overrides ? overrides[key] : true);
    });
  } finally {
    endBatch();
  }
  return target;
}
var SPLICE = "splice";
var UPDATE = "update";
var MAX_SPLICE_SIZE = 10000; // See e.g. https://github.com/mobxjs/mobx/issues/859

var arrayTraps = {
  get: function get(target, name) {
    var adm = target[$mobx];
    if (name === $mobx) {
      return adm;
    }
    if (name === "length") {
      return adm.getArrayLength_();
    }
    if (typeof name === "string" && !isNaN(name)) {
      return adm.get_(parseInt(name));
    }
    if (hasProp(arrayExtensions, name)) {
      return arrayExtensions[name];
    }
    return target[name];
  },
  set: function set(target, name, value) {
    var adm = target[$mobx];
    if (name === "length") {
      adm.setArrayLength_(value);
    }
    if (typeof name === "symbol" || isNaN(name)) {
      target[name] = value;
    } else {
      // numeric string
      adm.set_(parseInt(name), value);
    }
    return true;
  },
  preventExtensions: function preventExtensions() {
    die(15);
  }
};
var ObservableArrayAdministration = /*#__PURE__*/function () {
  // this is the prop that gets proxied, so can't replace it!
  function ObservableArrayAdministration(name, enhancer, owned_, legacyMode_) {
    if (name === void 0) {
      name =  false ? 0 : "ObservableArray";
    }
    this.owned_ = void 0;
    this.legacyMode_ = void 0;
    this.atom_ = void 0;
    this.values_ = [];
    this.interceptors_ = void 0;
    this.changeListeners_ = void 0;
    this.enhancer_ = void 0;
    this.dehancer = void 0;
    this.proxy_ = void 0;
    this.lastKnownLength_ = 0;
    this.owned_ = owned_;
    this.legacyMode_ = legacyMode_;
    this.atom_ = new Atom(name);
    this.enhancer_ = function (newV, oldV) {
      return enhancer(newV, oldV,  false ? 0 : "ObservableArray[..]");
    };
  }
  var _proto = ObservableArrayAdministration.prototype;
  _proto.dehanceValue_ = function dehanceValue_(value) {
    if (this.dehancer !== undefined) {
      return this.dehancer(value);
    }
    return value;
  };
  _proto.dehanceValues_ = function dehanceValues_(values) {
    if (this.dehancer !== undefined && values.length > 0) {
      return values.map(this.dehancer);
    }
    return values;
  };
  _proto.intercept_ = function intercept_(handler) {
    return registerInterceptor(this, handler);
  };
  _proto.observe_ = function observe_(listener, fireImmediately) {
    if (fireImmediately === void 0) {
      fireImmediately = false;
    }
    if (fireImmediately) {
      listener({
        observableKind: "array",
        object: this.proxy_,
        debugObjectName: this.atom_.name_,
        type: "splice",
        index: 0,
        added: this.values_.slice(),
        addedCount: this.values_.length,
        removed: [],
        removedCount: 0
      });
    }
    return registerListener(this, listener);
  };
  _proto.getArrayLength_ = function getArrayLength_() {
    this.atom_.reportObserved();
    return this.values_.length;
  };
  _proto.setArrayLength_ = function setArrayLength_(newLength) {
    if (typeof newLength !== "number" || isNaN(newLength) || newLength < 0) {
      die("Out of range: " + newLength);
    }
    var currentLength = this.values_.length;
    if (newLength === currentLength) {
      return;
    } else if (newLength > currentLength) {
      var newItems = new Array(newLength - currentLength);
      for (var i = 0; i < newLength - currentLength; i++) {
        newItems[i] = undefined;
      } // No Array.fill everywhere...

      this.spliceWithArray_(currentLength, 0, newItems);
    } else {
      this.spliceWithArray_(newLength, currentLength - newLength);
    }
  };
  _proto.updateArrayLength_ = function updateArrayLength_(oldLength, delta) {
    if (oldLength !== this.lastKnownLength_) {
      die(16);
    }
    this.lastKnownLength_ += delta;
    if (this.legacyMode_ && delta > 0) {
      reserveArrayBuffer(oldLength + delta + 1);
    }
  };
  _proto.spliceWithArray_ = function spliceWithArray_(index, deleteCount, newItems) {
    var _this = this;
    checkIfStateModificationsAreAllowed(this.atom_);
    var length = this.values_.length;
    if (index === undefined) {
      index = 0;
    } else if (index > length) {
      index = length;
    } else if (index < 0) {
      index = Math.max(0, length + index);
    }
    if (arguments.length === 1) {
      deleteCount = length - index;
    } else if (deleteCount === undefined || deleteCount === null) {
      deleteCount = 0;
    } else {
      deleteCount = Math.max(0, Math.min(deleteCount, length - index));
    }
    if (newItems === undefined) {
      newItems = EMPTY_ARRAY;
    }
    if (hasInterceptors(this)) {
      var change = interceptChange(this, {
        object: this.proxy_,
        type: SPLICE,
        index: index,
        removedCount: deleteCount,
        added: newItems
      });
      if (!change) {
        return EMPTY_ARRAY;
      }
      deleteCount = change.removedCount;
      newItems = change.added;
    }
    newItems = newItems.length === 0 ? newItems : newItems.map(function (v) {
      return _this.enhancer_(v, undefined);
    });
    if (this.legacyMode_ || "production" !== "production") {
      var lengthDelta = newItems.length - deleteCount;
      this.updateArrayLength_(length, lengthDelta); // checks if internal array wasn't modified
    }

    var res = this.spliceItemsIntoValues_(index, deleteCount, newItems);
    if (deleteCount !== 0 || newItems.length !== 0) {
      this.notifyArraySplice_(index, newItems, res);
    }
    return this.dehanceValues_(res);
  };
  _proto.spliceItemsIntoValues_ = function spliceItemsIntoValues_(index, deleteCount, newItems) {
    if (newItems.length < MAX_SPLICE_SIZE) {
      var _this$values_;
      return (_this$values_ = this.values_).splice.apply(_this$values_, [index, deleteCount].concat(newItems));
    } else {
      // The items removed by the splice
      var res = this.values_.slice(index, index + deleteCount); // The items that that should remain at the end of the array

      var oldItems = this.values_.slice(index + deleteCount); // New length is the previous length + addition count - deletion count

      this.values_.length += newItems.length - deleteCount;
      for (var i = 0; i < newItems.length; i++) {
        this.values_[index + i] = newItems[i];
      }
      for (var _i = 0; _i < oldItems.length; _i++) {
        this.values_[index + newItems.length + _i] = oldItems[_i];
      }
      return res;
    }
  };
  _proto.notifyArrayChildUpdate_ = function notifyArrayChildUpdate_(index, newValue, oldValue) {
    var notifySpy = !this.owned_ && isSpyEnabled();
    var notify = hasListeners(this);
    var change = notify || notifySpy ? {
      observableKind: "array",
      object: this.proxy_,
      type: UPDATE,
      debugObjectName: this.atom_.name_,
      index: index,
      newValue: newValue,
      oldValue: oldValue
    } : null; // The reason why this is on right hand side here (and not above), is this way the uglifier will drop it, but it won't
    // cause any runtime overhead in development mode without NODE_ENV set, unless spying is enabled

    if (false) {}
    this.atom_.reportChanged();
    if (notify) {
      notifyListeners(this, change);
    }
    if (false) {}
  };
  _proto.notifyArraySplice_ = function notifyArraySplice_(index, added, removed) {
    var notifySpy = !this.owned_ && isSpyEnabled();
    var notify = hasListeners(this);
    var change = notify || notifySpy ? {
      observableKind: "array",
      object: this.proxy_,
      debugObjectName: this.atom_.name_,
      type: SPLICE,
      index: index,
      removed: removed,
      added: added,
      removedCount: removed.length,
      addedCount: added.length
    } : null;
    if (false) {}
    this.atom_.reportChanged(); // conform: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/observe

    if (notify) {
      notifyListeners(this, change);
    }
    if (false) {}
  };
  _proto.get_ = function get_(index) {
    if (this.legacyMode_ && index >= this.values_.length) {
      console.warn( false ? 0 : "[mobx] Out of bounds read: " + index);
      return undefined;
    }
    this.atom_.reportObserved();
    return this.dehanceValue_(this.values_[index]);
  };
  _proto.set_ = function set_(index, newValue) {
    var values = this.values_;
    if (this.legacyMode_ && index > values.length) {
      // out of bounds
      die(17, index, values.length);
    }
    if (index < values.length) {
      // update at index in range
      checkIfStateModificationsAreAllowed(this.atom_);
      var oldValue = values[index];
      if (hasInterceptors(this)) {
        var change = interceptChange(this, {
          type: UPDATE,
          object: this.proxy_,
          index: index,
          newValue: newValue
        });
        if (!change) {
          return;
        }
        newValue = change.newValue;
      }
      newValue = this.enhancer_(newValue, oldValue);
      var changed = newValue !== oldValue;
      if (changed) {
        values[index] = newValue;
        this.notifyArrayChildUpdate_(index, newValue, oldValue);
      }
    } else {
      // For out of bound index, we don't create an actual sparse array,
      // but rather fill the holes with undefined (same as setArrayLength_).
      // This could be considered a bug.
      var newItems = new Array(index + 1 - values.length);
      for (var i = 0; i < newItems.length - 1; i++) {
        newItems[i] = undefined;
      } // No Array.fill everywhere...

      newItems[newItems.length - 1] = newValue;
      this.spliceWithArray_(values.length, 0, newItems);
    }
  };
  return ObservableArrayAdministration;
}();
function createObservableArray(initialValues, enhancer, name, owned) {
  if (name === void 0) {
    name =  false ? 0 : "ObservableArray";
  }
  if (owned === void 0) {
    owned = false;
  }
  assertProxies();
  var adm = new ObservableArrayAdministration(name, enhancer, owned, false);
  addHiddenFinalProp(adm.values_, $mobx, adm);
  var proxy = new Proxy(adm.values_, arrayTraps);
  adm.proxy_ = proxy;
  if (initialValues && initialValues.length) {
    var prev = allowStateChangesStart(true);
    adm.spliceWithArray_(0, 0, initialValues);
    allowStateChangesEnd(prev);
  }
  return proxy;
} // eslint-disable-next-line

var arrayExtensions = {
  clear: function clear() {
    return this.splice(0);
  },
  replace: function replace(newItems) {
    var adm = this[$mobx];
    return adm.spliceWithArray_(0, adm.values_.length, newItems);
  },
  // Used by JSON.stringify
  toJSON: function toJSON() {
    return this.slice();
  },
  /*
   * functions that do alter the internal structure of the array, (based on lib.es6.d.ts)
   * since these functions alter the inner structure of the array, the have side effects.
   * Because the have side effects, they should not be used in computed function,
   * and for that reason the do not call dependencyState.notifyObserved
   */
  splice: function splice(index, deleteCount) {
    for (var _len = arguments.length, newItems = new Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {
      newItems[_key - 2] = arguments[_key];
    }
    var adm = this[$mobx];
    switch (arguments.length) {
      case 0:
        return [];
      case 1:
        return adm.spliceWithArray_(index);
      case 2:
        return adm.spliceWithArray_(index, deleteCount);
    }
    return adm.spliceWithArray_(index, deleteCount, newItems);
  },
  spliceWithArray: function spliceWithArray(index, deleteCount, newItems) {
    return this[$mobx].spliceWithArray_(index, deleteCount, newItems);
  },
  push: function push() {
    var adm = this[$mobx];
    for (var _len2 = arguments.length, items = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
      items[_key2] = arguments[_key2];
    }
    adm.spliceWithArray_(adm.values_.length, 0, items);
    return adm.values_.length;
  },
  pop: function pop() {
    return this.splice(Math.max(this[$mobx].values_.length - 1, 0), 1)[0];
  },
  shift: function shift() {
    return this.splice(0, 1)[0];
  },
  unshift: function unshift() {
    var adm = this[$mobx];
    for (var _len3 = arguments.length, items = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {
      items[_key3] = arguments[_key3];
    }
    adm.spliceWithArray_(0, 0, items);
    return adm.values_.length;
  },
  reverse: function reverse() {
    // reverse by default mutates in place before returning the result
    // which makes it both a 'derivation' and a 'mutation'.
    if (globalState.trackingDerivation) {
      die(37, "reverse");
    }
    this.replace(this.slice().reverse());
    return this;
  },
  sort: function sort() {
    // sort by default mutates in place before returning the result
    // which goes against all good practices. Let's not change the array in place!
    if (globalState.trackingDerivation) {
      die(37, "sort");
    }
    var copy = this.slice();
    copy.sort.apply(copy, arguments);
    this.replace(copy);
    return this;
  },
  remove: function remove(value) {
    var adm = this[$mobx];
    var idx = adm.dehanceValues_(adm.values_).indexOf(value);
    if (idx > -1) {
      this.splice(idx, 1);
      return true;
    }
    return false;
  }
};
/**
 * Wrap function from prototype
 * Without this, everything works as well, but this works
 * faster as everything works on unproxied values
 */

addArrayExtension("concat", simpleFunc);
addArrayExtension("flat", simpleFunc);
addArrayExtension("includes", simpleFunc);
addArrayExtension("indexOf", simpleFunc);
addArrayExtension("join", simpleFunc);
addArrayExtension("lastIndexOf", simpleFunc);
addArrayExtension("slice", simpleFunc);
addArrayExtension("toString", simpleFunc);
addArrayExtension("toLocaleString", simpleFunc); // map

addArrayExtension("every", mapLikeFunc);
addArrayExtension("filter", mapLikeFunc);
addArrayExtension("find", mapLikeFunc);
addArrayExtension("findIndex", mapLikeFunc);
addArrayExtension("flatMap", mapLikeFunc);
addArrayExtension("forEach", mapLikeFunc);
addArrayExtension("map", mapLikeFunc);
addArrayExtension("some", mapLikeFunc); // reduce

addArrayExtension("reduce", reduceLikeFunc);
addArrayExtension("reduceRight", reduceLikeFunc);
function addArrayExtension(funcName, funcFactory) {
  if (typeof Array.prototype[funcName] === "function") {
    arrayExtensions[funcName] = funcFactory(funcName);
  }
} // Report and delegate to dehanced array

function simpleFunc(funcName) {
  return function () {
    var adm = this[$mobx];
    adm.atom_.reportObserved();
    var dehancedValues = adm.dehanceValues_(adm.values_);
    return dehancedValues[funcName].apply(dehancedValues, arguments);
  };
} // Make sure callbacks recieve correct array arg #2326

function mapLikeFunc(funcName) {
  return function (callback, thisArg) {
    var _this2 = this;
    var adm = this[$mobx];
    adm.atom_.reportObserved();
    var dehancedValues = adm.dehanceValues_(adm.values_);
    return dehancedValues[funcName](function (element, index) {
      return callback.call(thisArg, element, index, _this2);
    });
  };
} // Make sure callbacks recieve correct array arg #2326

function reduceLikeFunc(funcName) {
  return function () {
    var _this3 = this;
    var adm = this[$mobx];
    adm.atom_.reportObserved();
    var dehancedValues = adm.dehanceValues_(adm.values_); // #2432 - reduce behavior depends on arguments.length

    var callback = arguments[0];
    arguments[0] = function (accumulator, currentValue, index) {
      return callback(accumulator, currentValue, index, _this3);
    };
    return dehancedValues[funcName].apply(dehancedValues, arguments);
  };
}
var isObservableArrayAdministration = /*#__PURE__*/createInstanceofPredicate("ObservableArrayAdministration", ObservableArrayAdministration);
function isObservableArray(thing) {
  return isObject(thing) && isObservableArrayAdministration(thing[$mobx]);
}
var _Symbol$iterator, _Symbol$toStringTag;
var ObservableMapMarker = {};
var ADD = "add";
var DELETE = "delete"; // just extend Map? See also https://gist.github.com/nestharus/13b4d74f2ef4a2f4357dbd3fc23c1e54
// But: https://github.com/mobxjs/mobx/issues/1556

_Symbol$iterator = Symbol.iterator;
_Symbol$toStringTag = Symbol.toStringTag;
var ObservableMap = /*#__PURE__*/function () {
  // hasMap, not hashMap >-).
  function ObservableMap(initialData, enhancer_, name_) {
    var _this = this;
    if (enhancer_ === void 0) {
      enhancer_ = deepEnhancer;
    }
    if (name_ === void 0) {
      name_ =  false ? 0 : "ObservableMap";
    }
    this.enhancer_ = void 0;
    this.name_ = void 0;
    this[$mobx] = ObservableMapMarker;
    this.data_ = void 0;
    this.hasMap_ = void 0;
    this.keysAtom_ = void 0;
    this.interceptors_ = void 0;
    this.changeListeners_ = void 0;
    this.dehancer = void 0;
    this.enhancer_ = enhancer_;
    this.name_ = name_;
    if (!isFunction(Map)) {
      die(18);
    }
    this.keysAtom_ = createAtom( false ? 0 : "ObservableMap.keys()");
    this.data_ = new Map();
    this.hasMap_ = new Map();
    allowStateChanges(true, function () {
      _this.merge(initialData);
    });
  }
  var _proto = ObservableMap.prototype;
  _proto.has_ = function has_(key) {
    return this.data_.has(key);
  };
  _proto.has = function has(key) {
    var _this2 = this;
    if (!globalState.trackingDerivation) {
      return this.has_(key);
    }
    var entry = this.hasMap_.get(key);
    if (!entry) {
      var newEntry = entry = new ObservableValue(this.has_(key), referenceEnhancer,  false ? 0 : "ObservableMap.key?", false);
      this.hasMap_.set(key, newEntry);
      onBecomeUnobserved(newEntry, function () {
        return _this2.hasMap_["delete"](key);
      });
    }
    return entry.get();
  };
  _proto.set = function set(key, value) {
    var hasKey = this.has_(key);
    if (hasInterceptors(this)) {
      var change = interceptChange(this, {
        type: hasKey ? UPDATE : ADD,
        object: this,
        newValue: value,
        name: key
      });
      if (!change) {
        return this;
      }
      value = change.newValue;
    }
    if (hasKey) {
      this.updateValue_(key, value);
    } else {
      this.addValue_(key, value);
    }
    return this;
  };
  _proto["delete"] = function _delete(key) {
    var _this3 = this;
    checkIfStateModificationsAreAllowed(this.keysAtom_);
    if (hasInterceptors(this)) {
      var change = interceptChange(this, {
        type: DELETE,
        object: this,
        name: key
      });
      if (!change) {
        return false;
      }
    }
    if (this.has_(key)) {
      var notifySpy = isSpyEnabled();
      var notify = hasListeners(this);
      var _change = notify || notifySpy ? {
        observableKind: "map",
        debugObjectName: this.name_,
        type: DELETE,
        object: this,
        oldValue: this.data_.get(key).value_,
        name: key
      } : null;
      if (false) {} // TODO fix type

      transaction(function () {
        var _this3$hasMap_$get;
        _this3.keysAtom_.reportChanged();
        (_this3$hasMap_$get = _this3.hasMap_.get(key)) == null ? void 0 : _this3$hasMap_$get.setNewValue_(false);
        var observable = _this3.data_.get(key);
        observable.setNewValue_(undefined);
        _this3.data_["delete"](key);
      });
      if (notify) {
        notifyListeners(this, _change);
      }
      if (false) {}
      return true;
    }
    return false;
  };
  _proto.updateValue_ = function updateValue_(key, newValue) {
    var observable = this.data_.get(key);
    newValue = observable.prepareNewValue_(newValue);
    if (newValue !== globalState.UNCHANGED) {
      var notifySpy = isSpyEnabled();
      var notify = hasListeners(this);
      var change = notify || notifySpy ? {
        observableKind: "map",
        debugObjectName: this.name_,
        type: UPDATE,
        object: this,
        oldValue: observable.value_,
        name: key,
        newValue: newValue
      } : null;
      if (false) {} // TODO fix type

      observable.setNewValue_(newValue);
      if (notify) {
        notifyListeners(this, change);
      }
      if (false) {}
    }
  };
  _proto.addValue_ = function addValue_(key, newValue) {
    var _this4 = this;
    checkIfStateModificationsAreAllowed(this.keysAtom_);
    transaction(function () {
      var _this4$hasMap_$get;
      var observable = new ObservableValue(newValue, _this4.enhancer_,  false ? 0 : "ObservableMap.key", false);
      _this4.data_.set(key, observable);
      newValue = observable.value_; // value might have been changed

      (_this4$hasMap_$get = _this4.hasMap_.get(key)) == null ? void 0 : _this4$hasMap_$get.setNewValue_(true);
      _this4.keysAtom_.reportChanged();
    });
    var notifySpy = isSpyEnabled();
    var notify = hasListeners(this);
    var change = notify || notifySpy ? {
      observableKind: "map",
      debugObjectName: this.name_,
      type: ADD,
      object: this,
      name: key,
      newValue: newValue
    } : null;
    if (false) {} // TODO fix type

    if (notify) {
      notifyListeners(this, change);
    }
    if (false) {}
  };
  _proto.get = function get(key) {
    if (this.has(key)) {
      return this.dehanceValue_(this.data_.get(key).get());
    }
    return this.dehanceValue_(undefined);
  };
  _proto.dehanceValue_ = function dehanceValue_(value) {
    if (this.dehancer !== undefined) {
      return this.dehancer(value);
    }
    return value;
  };
  _proto.keys = function keys() {
    this.keysAtom_.reportObserved();
    return this.data_.keys();
  };
  _proto.values = function values() {
    var self = this;
    var keys = this.keys();
    return makeIterable({
      next: function next() {
        var _keys$next = keys.next(),
          done = _keys$next.done,
          value = _keys$next.value;
        return {
          done: done,
          value: done ? undefined : self.get(value)
        };
      }
    });
  };
  _proto.entries = function entries() {
    var self = this;
    var keys = this.keys();
    return makeIterable({
      next: function next() {
        var _keys$next2 = keys.next(),
          done = _keys$next2.done,
          value = _keys$next2.value;
        return {
          done: done,
          value: done ? undefined : [value, self.get(value)]
        };
      }
    });
  };
  _proto[_Symbol$iterator] = function () {
    return this.entries();
  };
  _proto.forEach = function forEach(callback, thisArg) {
    for (var _iterator = _createForOfIteratorHelperLoose(this), _step; !(_step = _iterator()).done;) {
      var _step$value = _step.value,
        key = _step$value[0],
        value = _step$value[1];
      callback.call(thisArg, value, key, this);
    }
  }
  /** Merge another object into this object, returns this. */;

  _proto.merge = function merge(other) {
    var _this5 = this;
    if (isObservableMap(other)) {
      other = new Map(other);
    }
    transaction(function () {
      if (isPlainObject(other)) {
        getPlainObjectKeys(other).forEach(function (key) {
          return _this5.set(key, other[key]);
        });
      } else if (Array.isArray(other)) {
        other.forEach(function (_ref) {
          var key = _ref[0],
            value = _ref[1];
          return _this5.set(key, value);
        });
      } else if (isES6Map(other)) {
        if (other.constructor !== Map) {
          die(19, other);
        }
        other.forEach(function (value, key) {
          return _this5.set(key, value);
        });
      } else if (other !== null && other !== undefined) {
        die(20, other);
      }
    });
    return this;
  };
  _proto.clear = function clear() {
    var _this6 = this;
    transaction(function () {
      untracked(function () {
        for (var _iterator2 = _createForOfIteratorHelperLoose(_this6.keys()), _step2; !(_step2 = _iterator2()).done;) {
          var key = _step2.value;
          _this6["delete"](key);
        }
      });
    });
  };
  _proto.replace = function replace(values) {
    var _this7 = this;

    // Implementation requirements:
    // - respect ordering of replacement map
    // - allow interceptors to run and potentially prevent individual operations
    // - don't recreate observables that already exist in original map (so we don't destroy existing subscriptions)
    // - don't _keysAtom.reportChanged if the keys of resulting map are indentical (order matters!)
    // - note that result map may differ from replacement map due to the interceptors
    transaction(function () {
      // Convert to map so we can do quick key lookups
      var replacementMap = convertToMap(values);
      var orderedData = new Map(); // Used for optimization

      var keysReportChangedCalled = false; // Delete keys that don't exist in replacement map
      // if the key deletion is prevented by interceptor
      // add entry at the beginning of the result map

      for (var _iterator3 = _createForOfIteratorHelperLoose(_this7.data_.keys()), _step3; !(_step3 = _iterator3()).done;) {
        var key = _step3.value;

        // Concurrently iterating/deleting keys
        // iterator should handle this correctly
        if (!replacementMap.has(key)) {
          var deleted = _this7["delete"](key); // Was the key removed?

          if (deleted) {
            // _keysAtom.reportChanged() was already called
            keysReportChangedCalled = true;
          } else {
            // Delete prevented by interceptor
            var value = _this7.data_.get(key);
            orderedData.set(key, value);
          }
        }
      } // Merge entries

      for (var _iterator4 = _createForOfIteratorHelperLoose(replacementMap.entries()), _step4; !(_step4 = _iterator4()).done;) {
        var _step4$value = _step4.value,
          _key = _step4$value[0],
          _value = _step4$value[1];

        // We will want to know whether a new key is added
        var keyExisted = _this7.data_.has(_key); // Add or update value

        _this7.set(_key, _value); // The addition could have been prevent by interceptor

        if (_this7.data_.has(_key)) {
          // The update could have been prevented by interceptor
          // and also we want to preserve existing values
          // so use value from _data map (instead of replacement map)
          var _value2 = _this7.data_.get(_key);
          orderedData.set(_key, _value2); // Was a new key added?

          if (!keyExisted) {
            // _keysAtom.reportChanged() was already called
            keysReportChangedCalled = true;
          }
        }
      } // Check for possible key order change

      if (!keysReportChangedCalled) {
        if (_this7.data_.size !== orderedData.size) {
          // If size differs, keys are definitely modified
          _this7.keysAtom_.reportChanged();
        } else {
          var iter1 = _this7.data_.keys();
          var iter2 = orderedData.keys();
          var next1 = iter1.next();
          var next2 = iter2.next();
          while (!next1.done) {
            if (next1.value !== next2.value) {
              _this7.keysAtom_.reportChanged();
              break;
            }
            next1 = iter1.next();
            next2 = iter2.next();
          }
        }
      } // Use correctly ordered map

      _this7.data_ = orderedData;
    });
    return this;
  };
  _proto.toString = function toString() {
    return "[object ObservableMap]";
  };
  _proto.toJSON = function toJSON() {
    return Array.from(this);
  };

  /**
   * Observes this object. Triggers for the events 'add', 'update' and 'delete'.
   * See: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/observe
   * for callback details
   */
  _proto.observe_ = function observe_(listener, fireImmediately) {
    if (false) {}
    return registerListener(this, listener);
  };
  _proto.intercept_ = function intercept_(handler) {
    return registerInterceptor(this, handler);
  };
  mobx_esm_createClass(ObservableMap, [{
    key: "size",
    get: function get() {
      this.keysAtom_.reportObserved();
      return this.data_.size;
    }
  }, {
    key: _Symbol$toStringTag,
    get: function get() {
      return "Map";
    }
  }]);
  return ObservableMap;
}(); // eslint-disable-next-line

var isObservableMap = /*#__PURE__*/createInstanceofPredicate("ObservableMap", ObservableMap);
function convertToMap(dataStructure) {
  if (isES6Map(dataStructure) || isObservableMap(dataStructure)) {
    return dataStructure;
  } else if (Array.isArray(dataStructure)) {
    return new Map(dataStructure);
  } else if (isPlainObject(dataStructure)) {
    var map = new Map();
    for (var key in dataStructure) {
      map.set(key, dataStructure[key]);
    }
    return map;
  } else {
    return die(21, dataStructure);
  }
}
var _Symbol$iterator$1, _Symbol$toStringTag$1;
var ObservableSetMarker = {};
_Symbol$iterator$1 = Symbol.iterator;
_Symbol$toStringTag$1 = Symbol.toStringTag;
var ObservableSet = /*#__PURE__*/function () {
  function ObservableSet(initialData, enhancer, name_) {
    if (enhancer === void 0) {
      enhancer = deepEnhancer;
    }
    if (name_ === void 0) {
      name_ =  false ? 0 : "ObservableSet";
    }
    this.name_ = void 0;
    this[$mobx] = ObservableSetMarker;
    this.data_ = new Set();
    this.atom_ = void 0;
    this.changeListeners_ = void 0;
    this.interceptors_ = void 0;
    this.dehancer = void 0;
    this.enhancer_ = void 0;
    this.name_ = name_;
    if (!isFunction(Set)) {
      die(22);
    }
    this.atom_ = createAtom(this.name_);
    this.enhancer_ = function (newV, oldV) {
      return enhancer(newV, oldV, name_);
    };
    if (initialData) {
      this.replace(initialData);
    }
  }
  var _proto = ObservableSet.prototype;
  _proto.dehanceValue_ = function dehanceValue_(value) {
    if (this.dehancer !== undefined) {
      return this.dehancer(value);
    }
    return value;
  };
  _proto.clear = function clear() {
    var _this = this;
    transaction(function () {
      untracked(function () {
        for (var _iterator = _createForOfIteratorHelperLoose(_this.data_.values()), _step; !(_step = _iterator()).done;) {
          var value = _step.value;
          _this["delete"](value);
        }
      });
    });
  };
  _proto.forEach = function forEach(callbackFn, thisArg) {
    for (var _iterator2 = _createForOfIteratorHelperLoose(this), _step2; !(_step2 = _iterator2()).done;) {
      var value = _step2.value;
      callbackFn.call(thisArg, value, value, this);
    }
  };
  _proto.add = function add(value) {
    var _this2 = this;
    checkIfStateModificationsAreAllowed(this.atom_);
    if (hasInterceptors(this)) {
      var change = interceptChange(this, {
        type: ADD,
        object: this,
        newValue: value
      });
      if (!change) {
        return this;
      } // ideally, value = change.value would be done here, so that values can be
      // changed by interceptor. Same applies for other Set and Map api's.
    }

    if (!this.has(value)) {
      transaction(function () {
        _this2.data_.add(_this2.enhancer_(value, undefined));
        _this2.atom_.reportChanged();
      });
      var notifySpy =  false && 0;
      var notify = hasListeners(this);
      var _change = notify || notifySpy ? {
        observableKind: "set",
        debugObjectName: this.name_,
        type: ADD,
        object: this,
        newValue: value
      } : null;
      if (notifySpy && "production" !== "production") {}
      if (notify) {
        notifyListeners(this, _change);
      }
      if (notifySpy && "production" !== "production") {}
    }
    return this;
  };
  _proto["delete"] = function _delete(value) {
    var _this3 = this;
    if (hasInterceptors(this)) {
      var change = interceptChange(this, {
        type: DELETE,
        object: this,
        oldValue: value
      });
      if (!change) {
        return false;
      }
    }
    if (this.has(value)) {
      var notifySpy =  false && 0;
      var notify = hasListeners(this);
      var _change2 = notify || notifySpy ? {
        observableKind: "set",
        debugObjectName: this.name_,
        type: DELETE,
        object: this,
        oldValue: value
      } : null;
      if (notifySpy && "production" !== "production") {}
      transaction(function () {
        _this3.atom_.reportChanged();
        _this3.data_["delete"](value);
      });
      if (notify) {
        notifyListeners(this, _change2);
      }
      if (notifySpy && "production" !== "production") {}
      return true;
    }
    return false;
  };
  _proto.has = function has(value) {
    this.atom_.reportObserved();
    return this.data_.has(this.dehanceValue_(value));
  };
  _proto.entries = function entries() {
    var nextIndex = 0;
    var keys = Array.from(this.keys());
    var values = Array.from(this.values());
    return makeIterable({
      next: function next() {
        var index = nextIndex;
        nextIndex += 1;
        return index < values.length ? {
          value: [keys[index], values[index]],
          done: false
        } : {
          done: true
        };
      }
    });
  };
  _proto.keys = function keys() {
    return this.values();
  };
  _proto.values = function values() {
    this.atom_.reportObserved();
    var self = this;
    var nextIndex = 0;
    var observableValues = Array.from(this.data_.values());
    return makeIterable({
      next: function next() {
        return nextIndex < observableValues.length ? {
          value: self.dehanceValue_(observableValues[nextIndex++]),
          done: false
        } : {
          done: true
        };
      }
    });
  };
  _proto.replace = function replace(other) {
    var _this4 = this;
    if (isObservableSet(other)) {
      other = new Set(other);
    }
    transaction(function () {
      if (Array.isArray(other)) {
        _this4.clear();
        other.forEach(function (value) {
          return _this4.add(value);
        });
      } else if (isES6Set(other)) {
        _this4.clear();
        other.forEach(function (value) {
          return _this4.add(value);
        });
      } else if (other !== null && other !== undefined) {
        die("Cannot initialize set from " + other);
      }
    });
    return this;
  };
  _proto.observe_ = function observe_(listener, fireImmediately) {
    // ... 'fireImmediately' could also be true?
    if (false) {}
    return registerListener(this, listener);
  };
  _proto.intercept_ = function intercept_(handler) {
    return registerInterceptor(this, handler);
  };
  _proto.toJSON = function toJSON() {
    return Array.from(this);
  };
  _proto.toString = function toString() {
    return "[object ObservableSet]";
  };
  _proto[_Symbol$iterator$1] = function () {
    return this.values();
  };
  mobx_esm_createClass(ObservableSet, [{
    key: "size",
    get: function get() {
      this.atom_.reportObserved();
      return this.data_.size;
    }
  }, {
    key: _Symbol$toStringTag$1,
    get: function get() {
      return "Set";
    }
  }]);
  return ObservableSet;
}(); // eslint-disable-next-line

var isObservableSet = /*#__PURE__*/createInstanceofPredicate("ObservableSet", ObservableSet);
var descriptorCache = /*#__PURE__*/Object.create(null);
var REMOVE = "remove";
var ObservableObjectAdministration = /*#__PURE__*/function () {
  function ObservableObjectAdministration(target_, values_, name_,
  // Used anytime annotation is not explicitely provided
  defaultAnnotation_) {
    if (values_ === void 0) {
      values_ = new Map();
    }
    if (defaultAnnotation_ === void 0) {
      defaultAnnotation_ = autoAnnotation;
    }
    this.target_ = void 0;
    this.values_ = void 0;
    this.name_ = void 0;
    this.defaultAnnotation_ = void 0;
    this.keysAtom_ = void 0;
    this.changeListeners_ = void 0;
    this.interceptors_ = void 0;
    this.proxy_ = void 0;
    this.isPlainObject_ = void 0;
    this.appliedAnnotations_ = void 0;
    this.pendingKeys_ = void 0;
    this.target_ = target_;
    this.values_ = values_;
    this.name_ = name_;
    this.defaultAnnotation_ = defaultAnnotation_;
    this.keysAtom_ = new Atom( false ? 0 : "ObservableObject.keys"); // Optimization: we use this frequently

    this.isPlainObject_ = isPlainObject(this.target_);
    if (false) {}
    if (false) {}
  }
  var _proto = ObservableObjectAdministration.prototype;
  _proto.getObservablePropValue_ = function getObservablePropValue_(key) {
    return this.values_.get(key).get();
  };
  _proto.setObservablePropValue_ = function setObservablePropValue_(key, newValue) {
    var observable = this.values_.get(key);
    if (observable instanceof ComputedValue) {
      observable.set(newValue);
      return true;
    } // intercept

    if (hasInterceptors(this)) {
      var change = interceptChange(this, {
        type: UPDATE,
        object: this.proxy_ || this.target_,
        name: key,
        newValue: newValue
      });
      if (!change) {
        return null;
      }
      newValue = change.newValue;
    }
    newValue = observable.prepareNewValue_(newValue); // notify spy & observers

    if (newValue !== globalState.UNCHANGED) {
      var notify = hasListeners(this);
      var notifySpy =  false && 0;
      var _change = notify || notifySpy ? {
        type: UPDATE,
        observableKind: "object",
        debugObjectName: this.name_,
        object: this.proxy_ || this.target_,
        oldValue: observable.value_,
        name: key,
        newValue: newValue
      } : null;
      if (false) {}
      observable.setNewValue_(newValue);
      if (notify) {
        notifyListeners(this, _change);
      }
      if (false) {}
    }
    return true;
  };
  _proto.get_ = function get_(key) {
    if (globalState.trackingDerivation && !hasProp(this.target_, key)) {
      // Key doesn't exist yet, subscribe for it in case it's added later
      this.has_(key);
    }
    return this.target_[key];
  }
  /**
   * @param {PropertyKey} key
   * @param {any} value
   * @param {Annotation|boolean} annotation true - use default annotation, false - copy as is
   * @param {boolean} proxyTrap whether it's called from proxy trap
   * @returns {boolean|null} true on success, false on failure (proxyTrap + non-configurable), null when cancelled by interceptor
   */;

  _proto.set_ = function set_(key, value, proxyTrap) {
    if (proxyTrap === void 0) {
      proxyTrap = false;
    }

    // Don't use .has(key) - we care about own
    if (hasProp(this.target_, key)) {
      // Existing prop
      if (this.values_.has(key)) {
        // Observable (can be intercepted)
        return this.setObservablePropValue_(key, value);
      } else if (proxyTrap) {
        // Non-observable - proxy
        return Reflect.set(this.target_, key, value);
      } else {
        // Non-observable
        this.target_[key] = value;
        return true;
      }
    } else {
      // New prop
      return this.extend_(key, {
        value: value,
        enumerable: true,
        writable: true,
        configurable: true
      }, this.defaultAnnotation_, proxyTrap);
    }
  } // Trap for "in"
  ;

  _proto.has_ = function has_(key) {
    if (!globalState.trackingDerivation) {
      // Skip key subscription outside derivation
      return key in this.target_;
    }
    this.pendingKeys_ || (this.pendingKeys_ = new Map());
    var entry = this.pendingKeys_.get(key);
    if (!entry) {
      entry = new ObservableValue(key in this.target_, referenceEnhancer,  false ? 0 : "ObservableObject.key?", false);
      this.pendingKeys_.set(key, entry);
    }
    return entry.get();
  }
  /**
   * @param {PropertyKey} key
   * @param {Annotation|boolean} annotation true - use default annotation, false - ignore prop
   */;

  _proto.make_ = function make_(key, annotation) {
    if (annotation === true) {
      annotation = this.defaultAnnotation_;
    }
    if (annotation === false) {
      return;
    }
    assertAnnotable(this, annotation, key);
    if (!(key in this.target_)) {
      var _this$target_$storedA;

      // Throw on missing key, except for decorators:
      // Decorator annotations are collected from whole prototype chain.
      // When called from super() some props may not exist yet.
      // However we don't have to worry about missing prop,
      // because the decorator must have been applied to something.
      if ((_this$target_$storedA = this.target_[storedAnnotationsSymbol]) != null && _this$target_$storedA[key]) {
        return; // will be annotated by subclass constructor
      } else {
        die(1, annotation.annotationType_, this.name_ + "." + key.toString());
      }
    }
    var source = this.target_;
    while (source && source !== objectPrototype) {
      var descriptor = getDescriptor(source, key);
      if (descriptor) {
        var outcome = annotation.make_(this, key, descriptor, source);
        if (outcome === 0
        /* Cancel */) {
          return;
        }
        if (outcome === 1
        /* Break */) {
          break;
        }
      }
      source = Object.getPrototypeOf(source);
    }
    recordAnnotationApplied(this, annotation, key);
  }
  /**
   * @param {PropertyKey} key
   * @param {PropertyDescriptor} descriptor
   * @param {Annotation|boolean} annotation true - use default annotation, false - copy as is
   * @param {boolean} proxyTrap whether it's called from proxy trap
   * @returns {boolean|null} true on success, false on failure (proxyTrap + non-configurable), null when cancelled by interceptor
   */;

  _proto.extend_ = function extend_(key, descriptor, annotation, proxyTrap) {
    if (proxyTrap === void 0) {
      proxyTrap = false;
    }
    if (annotation === true) {
      annotation = this.defaultAnnotation_;
    }
    if (annotation === false) {
      return this.defineProperty_(key, descriptor, proxyTrap);
    }
    assertAnnotable(this, annotation, key);
    var outcome = annotation.extend_(this, key, descriptor, proxyTrap);
    if (outcome) {
      recordAnnotationApplied(this, annotation, key);
    }
    return outcome;
  }
  /**
   * @param {PropertyKey} key
   * @param {PropertyDescriptor} descriptor
   * @param {boolean} proxyTrap whether it's called from proxy trap
   * @returns {boolean|null} true on success, false on failure (proxyTrap + non-configurable), null when cancelled by interceptor
   */;

  _proto.defineProperty_ = function defineProperty_(key, descriptor, proxyTrap) {
    if (proxyTrap === void 0) {
      proxyTrap = false;
    }
    try {
      startBatch(); // Delete

      var deleteOutcome = this.delete_(key);
      if (!deleteOutcome) {
        // Failure or intercepted
        return deleteOutcome;
      } // ADD interceptor

      if (hasInterceptors(this)) {
        var change = interceptChange(this, {
          object: this.proxy_ || this.target_,
          name: key,
          type: ADD,
          newValue: descriptor.value
        });
        if (!change) {
          return null;
        }
        var newValue = change.newValue;
        if (descriptor.value !== newValue) {
          descriptor = _extends({}, descriptor, {
            value: newValue
          });
        }
      } // Define

      if (proxyTrap) {
        if (!Reflect.defineProperty(this.target_, key, descriptor)) {
          return false;
        }
      } else {
        defineProperty(this.target_, key, descriptor);
      } // Notify

      this.notifyPropertyAddition_(key, descriptor.value);
    } finally {
      endBatch();
    }
    return true;
  } // If original descriptor becomes relevant, move this to annotation directly
  ;

  _proto.defineObservableProperty_ = function defineObservableProperty_(key, value, enhancer, proxyTrap) {
    if (proxyTrap === void 0) {
      proxyTrap = false;
    }
    try {
      startBatch(); // Delete

      var deleteOutcome = this.delete_(key);
      if (!deleteOutcome) {
        // Failure or intercepted
        return deleteOutcome;
      } // ADD interceptor

      if (hasInterceptors(this)) {
        var change = interceptChange(this, {
          object: this.proxy_ || this.target_,
          name: key,
          type: ADD,
          newValue: value
        });
        if (!change) {
          return null;
        }
        value = change.newValue;
      }
      var cachedDescriptor = getCachedObservablePropDescriptor(key);
      var descriptor = {
        configurable: globalState.safeDescriptors ? this.isPlainObject_ : true,
        enumerable: true,
        get: cachedDescriptor.get,
        set: cachedDescriptor.set
      }; // Define

      if (proxyTrap) {
        if (!Reflect.defineProperty(this.target_, key, descriptor)) {
          return false;
        }
      } else {
        defineProperty(this.target_, key, descriptor);
      }
      var observable = new ObservableValue(value, enhancer,  false ? 0 : "ObservableObject.key", false);
      this.values_.set(key, observable); // Notify (value possibly changed by ObservableValue)

      this.notifyPropertyAddition_(key, observable.value_);
    } finally {
      endBatch();
    }
    return true;
  } // If original descriptor becomes relevant, move this to annotation directly
  ;

  _proto.defineComputedProperty_ = function defineComputedProperty_(key, options, proxyTrap) {
    if (proxyTrap === void 0) {
      proxyTrap = false;
    }
    try {
      startBatch(); // Delete

      var deleteOutcome = this.delete_(key);
      if (!deleteOutcome) {
        // Failure or intercepted
        return deleteOutcome;
      } // ADD interceptor

      if (hasInterceptors(this)) {
        var change = interceptChange(this, {
          object: this.proxy_ || this.target_,
          name: key,
          type: ADD,
          newValue: undefined
        });
        if (!change) {
          return null;
        }
      }
      options.name || (options.name =  false ? 0 : "ObservableObject.key");
      options.context = this.proxy_ || this.target_;
      var cachedDescriptor = getCachedObservablePropDescriptor(key);
      var descriptor = {
        configurable: globalState.safeDescriptors ? this.isPlainObject_ : true,
        enumerable: false,
        get: cachedDescriptor.get,
        set: cachedDescriptor.set
      }; // Define

      if (proxyTrap) {
        if (!Reflect.defineProperty(this.target_, key, descriptor)) {
          return false;
        }
      } else {
        defineProperty(this.target_, key, descriptor);
      }
      this.values_.set(key, new ComputedValue(options)); // Notify

      this.notifyPropertyAddition_(key, undefined);
    } finally {
      endBatch();
    }
    return true;
  }
  /**
   * @param {PropertyKey} key
   * @param {PropertyDescriptor} descriptor
   * @param {boolean} proxyTrap whether it's called from proxy trap
   * @returns {boolean|null} true on success, false on failure (proxyTrap + non-configurable), null when cancelled by interceptor
   */;

  _proto.delete_ = function delete_(key, proxyTrap) {
    if (proxyTrap === void 0) {
      proxyTrap = false;
    }

    // No such prop
    if (!hasProp(this.target_, key)) {
      return true;
    } // Intercept

    if (hasInterceptors(this)) {
      var change = interceptChange(this, {
        object: this.proxy_ || this.target_,
        name: key,
        type: REMOVE
      }); // Cancelled

      if (!change) {
        return null;
      }
    } // Delete

    try {
      var _this$pendingKeys_, _this$pendingKeys_$ge;
      startBatch();
      var notify = hasListeners(this);
      var notifySpy =  false && 0;
      var observable = this.values_.get(key); // Value needed for spies/listeners

      var value = undefined; // Optimization: don't pull the value unless we will need it

      if (!observable && (notify || notifySpy)) {
        var _getDescriptor;
        value = (_getDescriptor = getDescriptor(this.target_, key)) == null ? void 0 : _getDescriptor.value;
      } // delete prop (do first, may fail)

      if (proxyTrap) {
        if (!Reflect.deleteProperty(this.target_, key)) {
          return false;
        }
      } else {
        delete this.target_[key];
      } // Allow re-annotating this field

      if (false) {} // Clear observable

      if (observable) {
        this.values_["delete"](key); // for computed, value is undefined

        if (observable instanceof ObservableValue) {
          value = observable.value_;
        } // Notify: autorun(() => obj[key]), see #1796

        propagateChanged(observable);
      } // Notify "keys/entries/values" observers

      this.keysAtom_.reportChanged(); // Notify "has" observers
      // "in" as it may still exist in proto

      (_this$pendingKeys_ = this.pendingKeys_) == null ? void 0 : (_this$pendingKeys_$ge = _this$pendingKeys_.get(key)) == null ? void 0 : _this$pendingKeys_$ge.set(key in this.target_); // Notify spies/listeners

      if (notify || notifySpy) {
        var _change2 = {
          type: REMOVE,
          observableKind: "object",
          object: this.proxy_ || this.target_,
          debugObjectName: this.name_,
          oldValue: value,
          name: key
        };
        if (false) {}
        if (notify) {
          notifyListeners(this, _change2);
        }
        if (false) {}
      }
    } finally {
      endBatch();
    }
    return true;
  }
  /**
   * Observes this object. Triggers for the events 'add', 'update' and 'delete'.
   * See: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/observe
   * for callback details
   */;

  _proto.observe_ = function observe_(callback, fireImmediately) {
    if (false) {}
    return registerListener(this, callback);
  };
  _proto.intercept_ = function intercept_(handler) {
    return registerInterceptor(this, handler);
  };
  _proto.notifyPropertyAddition_ = function notifyPropertyAddition_(key, value) {
    var _this$pendingKeys_2, _this$pendingKeys_2$g;
    var notify = hasListeners(this);
    var notifySpy =  false && 0;
    if (notify || notifySpy) {
      var change = notify || notifySpy ? {
        type: ADD,
        observableKind: "object",
        debugObjectName: this.name_,
        object: this.proxy_ || this.target_,
        name: key,
        newValue: value
      } : null;
      if (false) {}
      if (notify) {
        notifyListeners(this, change);
      }
      if (false) {}
    }
    (_this$pendingKeys_2 = this.pendingKeys_) == null ? void 0 : (_this$pendingKeys_2$g = _this$pendingKeys_2.get(key)) == null ? void 0 : _this$pendingKeys_2$g.set(true); // Notify "keys/entries/values" observers

    this.keysAtom_.reportChanged();
  };
  _proto.ownKeys_ = function ownKeys_() {
    this.keysAtom_.reportObserved();
    return ownKeys(this.target_);
  };
  _proto.keys_ = function keys_() {
    // Returns enumerable && own, but unfortunately keysAtom will report on ANY key change.
    // There is no way to distinguish between Object.keys(object) and Reflect.ownKeys(object) - both are handled by ownKeys trap.
    // We can either over-report in Object.keys(object) or under-report in Reflect.ownKeys(object)
    // We choose to over-report in Object.keys(object), because:
    // - typically it's used with simple data objects
    // - when symbolic/non-enumerable keys are relevant Reflect.ownKeys works as expected
    this.keysAtom_.reportObserved();
    return Object.keys(this.target_);
  };
  return ObservableObjectAdministration;
}();
function asObservableObject(target, options) {
  var _options$name;
  if (false) {}
  if (hasProp(target, $mobx)) {
    if (false) {}
    return target;
  }
  if (false) {}
  var name = (_options$name = options == null ? void 0 : options.name) != null ? _options$name :  false ? 0 : "ObservableObject";
  var adm = new ObservableObjectAdministration(target, new Map(), String(name), getAnnotationFromOptions(options));
  addHiddenProp(target, $mobx, adm);
  return target;
}
var isObservableObjectAdministration = /*#__PURE__*/createInstanceofPredicate("ObservableObjectAdministration", ObservableObjectAdministration);
function getCachedObservablePropDescriptor(key) {
  return descriptorCache[key] || (descriptorCache[key] = {
    get: function get() {
      return this[$mobx].getObservablePropValue_(key);
    },
    set: function set(value) {
      return this[$mobx].setObservablePropValue_(key, value);
    }
  });
}
function isObservableObject(thing) {
  if (isObject(thing)) {
    return isObservableObjectAdministration(thing[$mobx]);
  }
  return false;
}
function recordAnnotationApplied(adm, annotation, key) {
  var _adm$target_$storedAn;
  if (false) {} // Remove applied decorator annotation so we don't try to apply it again in subclass constructor

  (_adm$target_$storedAn = adm.target_[storedAnnotationsSymbol]) == null ? true : delete _adm$target_$storedAn[key];
}
function assertAnnotable(adm, annotation, key) {
  // Valid annotation
  if (false) {}
  /*
  // Configurable, not sealed, not frozen
  // Possibly not needed, just a little better error then the one thrown by engine.
  // Cases where this would be useful the most (subclass field initializer) are not interceptable by this.
  if (__DEV__) {
      const configurable = getDescriptor(adm.target_, key)?.configurable
      const frozen = Object.isFrozen(adm.target_)
      const sealed = Object.isSealed(adm.target_)
      if (!configurable || frozen || sealed) {
          const fieldName = `${adm.name_}.${key.toString()}`
          const requestedAnnotationType = annotation.annotationType_
          let error = `Cannot apply '${requestedAnnotationType}' to '${fieldName}':`
          if (frozen) {
              error += `\nObject is frozen.`
          }
          if (sealed) {
              error += `\nObject is sealed.`
          }
          if (!configurable) {
              error += `\nproperty is not configurable.`
              // Mention only if caused by us to avoid confusion
              if (hasProp(adm.appliedAnnotations!, key)) {
                  error += `\nTo prevent accidental re-definition of a field by a subclass, `
                  error += `all annotated fields of non-plain objects (classes) are not configurable.`
              }
          }
          die(error)
      }
  }
  */
  // Not annotated

  if (false) { var requestedAnnotationType, currentAnnotationType, fieldName; }
}
var ENTRY_0 = /*#__PURE__*/createArrayEntryDescriptor(0);
/**
 * This array buffer contains two lists of properties, so that all arrays
 * can recycle their property definitions, which significantly improves performance of creating
 * properties on the fly.
 */

var OBSERVABLE_ARRAY_BUFFER_SIZE = 0; // Typescript workaround to make sure ObservableArray extends Array

var StubArray = function StubArray() {};
function inherit(ctor, proto) {
  if (Object.setPrototypeOf) {
    Object.setPrototypeOf(ctor.prototype, proto);
  } else if (ctor.prototype.__proto__ !== undefined) {
    ctor.prototype.__proto__ = proto;
  } else {
    ctor.prototype = proto;
  }
}
inherit(StubArray, Array.prototype); // Weex proto freeze protection was here,
// but it is unclear why the hack is need as MobX never changed the prototype
// anyway, so removed it in V6

var LegacyObservableArray = /*#__PURE__*/function (_StubArray, _Symbol$toStringTag, _Symbol$iterator) {
  _inheritsLoose(LegacyObservableArray, _StubArray);
  function LegacyObservableArray(initialValues, enhancer, name, owned) {
    var _this;
    if (name === void 0) {
      name =  false ? 0 : "ObservableArray";
    }
    if (owned === void 0) {
      owned = false;
    }
    _this = _StubArray.call(this) || this;
    var adm = new ObservableArrayAdministration(name, enhancer, owned, true);
    adm.proxy_ = _assertThisInitialized(_this);
    addHiddenFinalProp(_assertThisInitialized(_this), $mobx, adm);
    if (initialValues && initialValues.length) {
      var prev = allowStateChangesStart(true); // @ts-ignore

      _this.spliceWithArray(0, 0, initialValues);
      allowStateChangesEnd(prev);
    }
    {
      // Seems that Safari won't use numeric prototype setter untill any * numeric property is
      // defined on the instance. After that it works fine, even if this property is deleted.
      Object.defineProperty(_assertThisInitialized(_this), "0", ENTRY_0);
    }
    return _this;
  }
  var _proto = LegacyObservableArray.prototype;
  _proto.concat = function concat() {
    this[$mobx].atom_.reportObserved();
    for (var _len = arguments.length, arrays = new Array(_len), _key = 0; _key < _len; _key++) {
      arrays[_key] = arguments[_key];
    }
    return Array.prototype.concat.apply(this.slice(),
    //@ts-ignore
    arrays.map(function (a) {
      return isObservableArray(a) ? a.slice() : a;
    }));
  };
  _proto[_Symbol$iterator] = function () {
    var self = this;
    var nextIndex = 0;
    return makeIterable({
      next: function next() {
        return nextIndex < self.length ? {
          value: self[nextIndex++],
          done: false
        } : {
          done: true,
          value: undefined
        };
      }
    });
  };
  mobx_esm_createClass(LegacyObservableArray, [{
    key: "length",
    get: function get() {
      return this[$mobx].getArrayLength_();
    },
    set: function set(newLength) {
      this[$mobx].setArrayLength_(newLength);
    }
  }, {
    key: _Symbol$toStringTag,
    get: function get() {
      return "Array";
    }
  }]);
  return LegacyObservableArray;
}(StubArray, Symbol.toStringTag, Symbol.iterator);
Object.entries(arrayExtensions).forEach(function (_ref) {
  var prop = _ref[0],
    fn = _ref[1];
  if (prop !== "concat") {
    addHiddenProp(LegacyObservableArray.prototype, prop, fn);
  }
});
function createArrayEntryDescriptor(index) {
  return {
    enumerable: false,
    configurable: true,
    get: function get() {
      return this[$mobx].get_(index);
    },
    set: function set(value) {
      this[$mobx].set_(index, value);
    }
  };
}
function createArrayBufferItem(index) {
  defineProperty(LegacyObservableArray.prototype, "" + index, createArrayEntryDescriptor(index));
}
function reserveArrayBuffer(max) {
  if (max > OBSERVABLE_ARRAY_BUFFER_SIZE) {
    for (var index = OBSERVABLE_ARRAY_BUFFER_SIZE; index < max + 100; index++) {
      createArrayBufferItem(index);
    }
    OBSERVABLE_ARRAY_BUFFER_SIZE = max;
  }
}
reserveArrayBuffer(1000);
function createLegacyArray(initialValues, enhancer, name) {
  return new LegacyObservableArray(initialValues, enhancer, name);
}
function getAtom(thing, property) {
  if (typeof thing === "object" && thing !== null) {
    if (isObservableArray(thing)) {
      if (property !== undefined) {
        die(23);
      }
      return thing[$mobx].atom_;
    }
    if (isObservableSet(thing)) {
      return thing[$mobx];
    }
    if (isObservableMap(thing)) {
      if (property === undefined) {
        return thing.keysAtom_;
      }
      var observable = thing.data_.get(property) || thing.hasMap_.get(property);
      if (!observable) {
        die(25, property, getDebugName(thing));
      }
      return observable;
    }
    if (isObservableObject(thing)) {
      if (!property) {
        return die(26);
      }
      var _observable = thing[$mobx].values_.get(property);
      if (!_observable) {
        die(27, property, getDebugName(thing));
      }
      return _observable;
    }
    if (isAtom(thing) || isComputedValue(thing) || isReaction(thing)) {
      return thing;
    }
  } else if (isFunction(thing)) {
    if (isReaction(thing[$mobx])) {
      // disposer function
      return thing[$mobx];
    }
  }
  die(28);
}
function getAdministration(thing, property) {
  if (!thing) {
    die(29);
  }
  if (property !== undefined) {
    return getAdministration(getAtom(thing, property));
  }
  if (isAtom(thing) || isComputedValue(thing) || isReaction(thing)) {
    return thing;
  }
  if (isObservableMap(thing) || isObservableSet(thing)) {
    return thing;
  }
  if (thing[$mobx]) {
    return thing[$mobx];
  }
  die(24, thing);
}
function getDebugName(thing, property) {
  var named;
  if (property !== undefined) {
    named = getAtom(thing, property);
  } else if (isAction(thing)) {
    return thing.name;
  } else if (isObservableObject(thing) || isObservableMap(thing) || isObservableSet(thing)) {
    named = getAdministration(thing);
  } else {
    // valid for arrays as well
    named = getAtom(thing);
  }
  return named.name_;
}
var mobx_esm_toString = objectPrototype.toString;
function mobx_esm_deepEqual(a, b, depth) {
  if (depth === void 0) {
    depth = -1;
  }
  return eq(a, b, depth);
} // Copied from https://github.com/jashkenas/underscore/blob/5c237a7c682fb68fd5378203f0bf22dce1624854/underscore.js#L1186-L1289
// Internal recursive comparison function for `isEqual`.

function eq(a, b, depth, aStack, bStack) {
  // Identical objects are equal. `0 === -0`, but they aren't identical.
  // See the [Harmony `egal` proposal](http://wiki.ecmascript.org/doku.php?id=harmony:egal).
  if (a === b) {
    return a !== 0 || 1 / a === 1 / b;
  } // `null` or `undefined` only equal to itself (strict comparison).

  if (a == null || b == null) {
    return false;
  } // `NaN`s are equivalent, but non-reflexive.

  if (a !== a) {
    return b !== b;
  } // Exhaust primitive checks

  var type = typeof a;
  if (type !== "function" && type !== "object" && typeof b != "object") {
    return false;
  } // Compare `[[Class]]` names.

  var className = mobx_esm_toString.call(a);
  if (className !== mobx_esm_toString.call(b)) {
    return false;
  }
  switch (className) {
    // Strings, numbers, regular expressions, dates, and booleans are compared by value.
    case "[object RegExp]": // RegExps are coerced to strings for comparison (Note: '' + /a/i === '/a/i')

    case "[object String]":
      // Primitives and their corresponding object wrappers are equivalent; thus, `"5"` is
      // equivalent to `new String("5")`.
      return "" + a === "" + b;
    case "[object Number]":
      // `NaN`s are equivalent, but non-reflexive.
      // Object(NaN) is equivalent to NaN.
      if (+a !== +a) {
        return +b !== +b;
      } // An `egal` comparison is performed for other numeric values.

      return +a === 0 ? 1 / +a === 1 / b : +a === +b;
    case "[object Date]":
    case "[object Boolean]":
      // Coerce dates and booleans to numeric primitive values. Dates are compared by their
      // millisecond representations. Note that invalid dates with millisecond representations
      // of `NaN` are not equivalent.
      return +a === +b;
    case "[object Symbol]":
      return typeof Symbol !== "undefined" && Symbol.valueOf.call(a) === Symbol.valueOf.call(b);
    case "[object Map]":
    case "[object Set]":
      // Maps and Sets are unwrapped to arrays of entry-pairs, adding an incidental level.
      // Hide this extra level by increasing the depth.
      if (depth >= 0) {
        depth++;
      }
      break;
  } // Unwrap any wrapped objects.

  a = unwrap(a);
  b = unwrap(b);
  var areArrays = className === "[object Array]";
  if (!areArrays) {
    if (typeof a != "object" || typeof b != "object") {
      return false;
    } // Objects with different constructors are not equivalent, but `Object`s or `Array`s
    // from different frames are.

    var aCtor = a.constructor,
      bCtor = b.constructor;
    if (aCtor !== bCtor && !(isFunction(aCtor) && aCtor instanceof aCtor && isFunction(bCtor) && bCtor instanceof bCtor) && "constructor" in a && "constructor" in b) {
      return false;
    }
  }
  if (depth === 0) {
    return false;
  } else if (depth < 0) {
    depth = -1;
  } // Assume equality for cyclic structures. The algorithm for detecting cyclic
  // structures is adapted from ES 5.1 section 15.12.3, abstract operation `JO`.
  // Initializing stack of traversed objects.
  // It's done here since we only need them for objects and arrays comparison.

  aStack = aStack || [];
  bStack = bStack || [];
  var length = aStack.length;
  while (length--) {
    // Linear search. Performance is inversely proportional to the number of
    // unique nested structures.
    if (aStack[length] === a) {
      return bStack[length] === b;
    }
  } // Add the first object to the stack of traversed objects.

  aStack.push(a);
  bStack.push(b); // Recursively compare objects and arrays.

  if (areArrays) {
    // Compare array lengths to determine if a deep comparison is necessary.
    length = a.length;
    if (length !== b.length) {
      return false;
    } // Deep compare the contents, ignoring non-numeric properties.

    while (length--) {
      if (!eq(a[length], b[length], depth - 1, aStack, bStack)) {
        return false;
      }
    }
  } else {
    // Deep compare objects.
    var keys = Object.keys(a);
    var key;
    length = keys.length; // Ensure that both objects contain the same number of properties before comparing deep equality.

    if (Object.keys(b).length !== length) {
      return false;
    }
    while (length--) {
      // Deep compare each member
      key = keys[length];
      if (!(hasProp(b, key) && eq(a[key], b[key], depth - 1, aStack, bStack))) {
        return false;
      }
    }
  } // Remove the first object from the stack of traversed objects.

  aStack.pop();
  bStack.pop();
  return true;
}
function unwrap(a) {
  if (isObservableArray(a)) {
    return a.slice();
  }
  if (isES6Map(a) || isObservableMap(a)) {
    return Array.from(a.entries());
  }
  if (isES6Set(a) || isObservableSet(a)) {
    return Array.from(a.entries());
  }
  return a;
}
function makeIterable(iterator) {
  iterator[Symbol.iterator] = getSelf;
  return iterator;
}
function getSelf() {
  return this;
}
function isAnnotation(thing) {
  return (
    // Can be function
    thing instanceof Object && typeof thing.annotationType_ === "string" && isFunction(thing.make_) && isFunction(thing.extend_)
  );
}

/**
 * (c) Michel Weststrate 2015 - 2020
 * MIT Licensed
 *
 * Welcome to the mobx sources! To get a global overview of how MobX internally works,
 * this is a good place to start:
 * https://medium.com/@mweststrate/becoming-fully-reactive-an-in-depth-explanation-of-mobservable-55995262a254#.xvbh6qd74
 *
 * Source folders:
 * ===============
 *
 * - api/     Most of the public static methods exposed by the module can be found here.
 * - core/    Implementation of the MobX algorithm; atoms, derivations, reactions, dependency trees, optimizations. Cool stuff can be found here.
 * - types/   All the magic that is need to have observable objects, arrays and values is in this folder. Including the modifiers like `asFlat`.
 * - utils/   Utility stuff.
 *
 */
["Symbol", "Map", "Set"].forEach(function (m) {
  var g = getGlobal();
  if (typeof g[m] === "undefined") {
    die("MobX requires global '" + m + "' to be available or polyfilled");
  }
});
if (typeof __MOBX_DEVTOOLS_GLOBAL_HOOK__ === "object") {
  // See: https://github.com/andykog/mobx-devtools/
  __MOBX_DEVTOOLS_GLOBAL_HOOK__.injectMobx({
    spy: spy,
    extras: {
      getDebugName: getDebugName
    },
    $mobx: $mobx
  });
}

;// CONCATENATED MODULE: ./node_modules/mobx-react-lite/es/utils/assertEnvironment.js


if (!react.useState) {
  throw new Error("mobx-react-lite requires React with Hooks support");
}
if (!makeObservable) {
  throw new Error("mobx-react-lite@3 requires mobx at least version 6 to be available");
}
// EXTERNAL MODULE: ./node_modules/react-dom/index.js
var react_dom = __webpack_require__(4164);
;// CONCATENATED MODULE: ./node_modules/mobx-react-lite/es/utils/reactBatchedUpdates.js

;// CONCATENATED MODULE: ./node_modules/mobx-react-lite/es/utils/observerBatching.js

function defaultNoopBatch(callback) {
  callback();
}
function observerBatching(reactionScheduler) {
  if (!reactionScheduler) {
    reactionScheduler = defaultNoopBatch;
    if (false) {}
  }
  configure({
    reactionScheduler: reactionScheduler
  });
}
var isObserverBatched = function isObserverBatched() {
  if (false) {}
  return true;
};
;// CONCATENATED MODULE: ./node_modules/mobx-react-lite/es/utils/printDebugValue.js

function printDebugValue(v) {
  return getDependencyTree(v);
}
;// CONCATENATED MODULE: ./node_modules/mobx-react-lite/es/utils/FinalizationRegistryWrapper.js
var FinalizationRegistryLocal = typeof FinalizationRegistry === "undefined" ? undefined : FinalizationRegistry;

;// CONCATENATED MODULE: ./node_modules/mobx-react-lite/es/utils/reactionCleanupTrackingCommon.js
function createTrackingData(reaction) {
  var trackingData = {
    reaction: reaction,
    mounted: false,
    changedBeforeMount: false,
    cleanAt: Date.now() + CLEANUP_LEAKED_REACTIONS_AFTER_MILLIS
  };
  return trackingData;
}
/**
 * The minimum time before we'll clean up a Reaction created in a render
 * for a component that hasn't managed to run its effects. This needs to
 * be big enough to ensure that a component won't turn up and have its
 * effects run without being re-rendered.
 */
var CLEANUP_LEAKED_REACTIONS_AFTER_MILLIS = 10000;
/**
 * The frequency with which we'll check for leaked reactions.
 */
var CLEANUP_TIMER_LOOP_MILLIS = 10000;
;// CONCATENATED MODULE: ./node_modules/mobx-react-lite/es/utils/createReactionCleanupTrackingUsingFinalizationRegister.js

/**
 * FinalizationRegistry-based uncommitted reaction cleanup
 */
function createReactionCleanupTrackingUsingFinalizationRegister(FinalizationRegistry) {
  var cleanupTokenToReactionTrackingMap = new Map();
  var globalCleanupTokensCounter = 1;
  var registry = new FinalizationRegistry(function cleanupFunction(token) {
    var trackedReaction = cleanupTokenToReactionTrackingMap.get(token);
    if (trackedReaction) {
      trackedReaction.reaction.dispose();
      cleanupTokenToReactionTrackingMap.delete(token);
    }
  });
  return {
    addReactionToTrack: function addReactionToTrack(reactionTrackingRef, reaction, objectRetainedByReact) {
      var token = globalCleanupTokensCounter++;
      registry.register(objectRetainedByReact, token, reactionTrackingRef);
      reactionTrackingRef.current = createTrackingData(reaction);
      reactionTrackingRef.current.finalizationRegistryCleanupToken = token;
      cleanupTokenToReactionTrackingMap.set(token, reactionTrackingRef.current);
      return reactionTrackingRef.current;
    },
    recordReactionAsCommitted: function recordReactionAsCommitted(reactionRef) {
      registry.unregister(reactionRef);
      if (reactionRef.current && reactionRef.current.finalizationRegistryCleanupToken) {
        cleanupTokenToReactionTrackingMap.delete(reactionRef.current.finalizationRegistryCleanupToken);
      }
    },
    forceCleanupTimerToRunNowForTests: function forceCleanupTimerToRunNowForTests() {
      // When FinalizationRegistry in use, this this is no-op
    },
    resetCleanupScheduleForTests: function resetCleanupScheduleForTests() {
      // When FinalizationRegistry in use, this this is no-op
    }
  };
}
;// CONCATENATED MODULE: ./node_modules/mobx-react-lite/es/utils/createTimerBasedReactionCleanupTracking.js
var __values = undefined && undefined.__values || function (o) {
  var s = typeof Symbol === "function" && Symbol.iterator,
    m = s && o[s],
    i = 0;
  if (m) return m.call(o);
  if (o && typeof o.length === "number") return {
    next: function next() {
      if (o && i >= o.length) o = void 0;
      return {
        value: o && o[i++],
        done: !o
      };
    }
  };
  throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
};

/**
 * timers, gc-style, uncommitted reaction cleanup
 */
function createTimerBasedReactionCleanupTracking() {
  /**
   * Reactions created by components that have yet to be fully mounted.
   */
  var uncommittedReactionRefs = new Set();
  /**
   * Latest 'uncommitted reactions' cleanup timer handle.
   */
  var reactionCleanupHandle;
  /* istanbul ignore next */
  /**
   * Only to be used by test functions; do not export outside of mobx-react-lite
   */
  function forceCleanupTimerToRunNowForTests() {
    // This allows us to control the execution of the cleanup timer
    // to force it to run at awkward times in unit tests.
    if (reactionCleanupHandle) {
      clearTimeout(reactionCleanupHandle);
      cleanUncommittedReactions();
    }
  }
  /* istanbul ignore next */
  function resetCleanupScheduleForTests() {
    var e_1, _a;
    if (uncommittedReactionRefs.size > 0) {
      try {
        for (var uncommittedReactionRefs_1 = __values(uncommittedReactionRefs), uncommittedReactionRefs_1_1 = uncommittedReactionRefs_1.next(); !uncommittedReactionRefs_1_1.done; uncommittedReactionRefs_1_1 = uncommittedReactionRefs_1.next()) {
          var ref = uncommittedReactionRefs_1_1.value;
          var tracking = ref.current;
          if (tracking) {
            tracking.reaction.dispose();
            ref.current = null;
          }
        }
      } catch (e_1_1) {
        e_1 = {
          error: e_1_1
        };
      } finally {
        try {
          if (uncommittedReactionRefs_1_1 && !uncommittedReactionRefs_1_1.done && (_a = uncommittedReactionRefs_1.return)) _a.call(uncommittedReactionRefs_1);
        } finally {
          if (e_1) throw e_1.error;
        }
      }
      uncommittedReactionRefs.clear();
    }
    if (reactionCleanupHandle) {
      clearTimeout(reactionCleanupHandle);
      reactionCleanupHandle = undefined;
    }
  }
  function ensureCleanupTimerRunning() {
    if (reactionCleanupHandle === undefined) {
      reactionCleanupHandle = setTimeout(cleanUncommittedReactions, CLEANUP_TIMER_LOOP_MILLIS);
    }
  }
  function scheduleCleanupOfReactionIfLeaked(ref) {
    uncommittedReactionRefs.add(ref);
    ensureCleanupTimerRunning();
  }
  function recordReactionAsCommitted(reactionRef) {
    uncommittedReactionRefs.delete(reactionRef);
  }
  /**
   * Run by the cleanup timer to dispose any outstanding reactions
   */
  function cleanUncommittedReactions() {
    reactionCleanupHandle = undefined;
    // Loop through all the candidate leaked reactions; those older
    // than CLEANUP_LEAKED_REACTIONS_AFTER_MILLIS get tidied.
    var now = Date.now();
    uncommittedReactionRefs.forEach(function (ref) {
      var tracking = ref.current;
      if (tracking) {
        if (now >= tracking.cleanAt) {
          // It's time to tidy up this leaked reaction.
          tracking.reaction.dispose();
          ref.current = null;
          uncommittedReactionRefs.delete(ref);
        }
      }
    });
    if (uncommittedReactionRefs.size > 0) {
      // We've just finished a round of cleanups but there are still
      // some leak candidates outstanding.
      ensureCleanupTimerRunning();
    }
  }
  return {
    addReactionToTrack: function addReactionToTrack(reactionTrackingRef, reaction,
    /**
     * On timer based implementation we don't really need this object,
     * but we keep the same api
     */
    objectRetainedByReact) {
      reactionTrackingRef.current = createTrackingData(reaction);
      scheduleCleanupOfReactionIfLeaked(reactionTrackingRef);
      return reactionTrackingRef.current;
    },
    recordReactionAsCommitted: recordReactionAsCommitted,
    forceCleanupTimerToRunNowForTests: forceCleanupTimerToRunNowForTests,
    resetCleanupScheduleForTests: resetCleanupScheduleForTests
  };
}
;// CONCATENATED MODULE: ./node_modules/mobx-react-lite/es/utils/reactionCleanupTracking.js



var _a = FinalizationRegistryLocal ? createReactionCleanupTrackingUsingFinalizationRegister(FinalizationRegistryLocal) : createTimerBasedReactionCleanupTracking(),
  addReactionToTrack = _a.addReactionToTrack,
  recordReactionAsCommitted = _a.recordReactionAsCommitted,
  resetCleanupScheduleForTests = _a.resetCleanupScheduleForTests,
  forceCleanupTimerToRunNowForTests = _a.forceCleanupTimerToRunNowForTests;

;// CONCATENATED MODULE: ./node_modules/mobx-react-lite/es/staticRendering.js
var globalIsUsingStaticRendering = false;
function staticRendering_enableStaticRendering(enable) {
  globalIsUsingStaticRendering = enable;
}
function isUsingStaticRendering() {
  return globalIsUsingStaticRendering;
}
;// CONCATENATED MODULE: ./node_modules/mobx-react-lite/es/useObserver.js
var __read = undefined && undefined.__read || function (o, n) {
  var m = typeof Symbol === "function" && o[Symbol.iterator];
  if (!m) return o;
  var i = m.call(o),
    r,
    ar = [],
    e;
  try {
    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) {
      ar.push(r.value);
    }
  } catch (error) {
    e = {
      error: error
    };
  } finally {
    try {
      if (r && !r.done && (m = i["return"])) m.call(i);
    } finally {
      if (e) throw e.error;
    }
  }
  return ar;
};





function observerComponentNameFor(baseComponentName) {
  return "observer".concat(baseComponentName);
}
/**
 * We use class to make it easier to detect in heap snapshots by name
 */
var ObjectToBeRetainedByReact = /** @class */function () {
  function ObjectToBeRetainedByReact() {}
  return ObjectToBeRetainedByReact;
}();
function objectToBeRetainedByReactFactory() {
  return new ObjectToBeRetainedByReact();
}
function useObserver(fn, baseComponentName) {
  if (baseComponentName === void 0) {
    baseComponentName = "observed";
  }
  if (isUsingStaticRendering()) {
    return fn();
  }
  var _a = __read(react.useState(objectToBeRetainedByReactFactory), 1),
    objectRetainedByReact = _a[0];
  // Force update, see #2982
  var _b = __read(react.useState(), 2),
    setState = _b[1];
  var forceUpdate = function forceUpdate() {
    return setState([]);
  };
  // StrictMode/ConcurrentMode/Suspense may mean that our component is
  // rendered and abandoned multiple times, so we need to track leaked
  // Reactions.
  var reactionTrackingRef = react.useRef(null);
  if (!reactionTrackingRef.current) {
    // First render for this component (or first time since a previous
    // reaction from an abandoned render was disposed).
    var newReaction = new Reaction(observerComponentNameFor(baseComponentName), function () {
      // Observable has changed, meaning we want to re-render
      // BUT if we're a component that hasn't yet got to the useEffect()
      // stage, we might be a component that _started_ to render, but
      // got dropped, and we don't want to make state changes then.
      // (It triggers warnings in StrictMode, for a start.)
      if (trackingData_1.mounted) {
        // We have reached useEffect(), so we're mounted, and can trigger an update
        forceUpdate();
      } else {
        // We haven't yet reached useEffect(), so we'll need to trigger a re-render
        // when (and if) useEffect() arrives.
        trackingData_1.changedBeforeMount = true;
      }
    });
    var trackingData_1 = addReactionToTrack(reactionTrackingRef, newReaction, objectRetainedByReact);
  }
  var reaction = reactionTrackingRef.current.reaction;
  react.useDebugValue(reaction, printDebugValue);
  react.useEffect(function () {
    // Called on first mount only
    recordReactionAsCommitted(reactionTrackingRef);
    if (reactionTrackingRef.current) {
      // Great. We've already got our reaction from our render;
      // all we need to do is to record that it's now mounted,
      // to allow future observable changes to trigger re-renders
      reactionTrackingRef.current.mounted = true;
      // Got a change before first mount, force an update
      if (reactionTrackingRef.current.changedBeforeMount) {
        reactionTrackingRef.current.changedBeforeMount = false;
        forceUpdate();
      }
    } else {
      // The reaction we set up in our render has been disposed.
      // This can be due to bad timings of renderings, e.g. our
      // component was paused for a _very_ long time, and our
      // reaction got cleaned up
      // Re-create the reaction
      reactionTrackingRef.current = {
        reaction: new Reaction(observerComponentNameFor(baseComponentName), function () {
          // We've definitely already been mounted at this point
          forceUpdate();
        }),
        mounted: true,
        changedBeforeMount: false,
        cleanAt: Infinity
      };
      forceUpdate();
    }
    return function () {
      reactionTrackingRef.current.reaction.dispose();
      reactionTrackingRef.current = null;
    };
  }, []);
  // render the original component, but have the
  // reaction track the observables, so that rendering
  // can be invalidated (see above) once a dependency changes
  var rendering;
  var exception;
  reaction.track(function () {
    try {
      rendering = fn();
    } catch (e) {
      exception = e;
    }
  });
  if (exception) {
    throw exception; // re-throw any exceptions caught during rendering
  }

  return rendering;
}
;// CONCATENATED MODULE: ./node_modules/mobx-react-lite/es/observer.js



var warnObserverOptionsDeprecated = true;
var hasSymbol = typeof Symbol === "function" && Symbol.for;
// Using react-is had some issues (and operates on elements, not on types), see #608 / #609
var ReactForwardRefSymbol = hasSymbol ? Symbol.for("react.forward_ref") : typeof react.forwardRef === "function" && (0,react.forwardRef)(function (props) {
  return null;
})["$$typeof"];
var ReactMemoSymbol = hasSymbol ? Symbol.for("react.memo") : typeof react.memo === "function" && (0,react.memo)(function (props) {
  return null;
})["$$typeof"];
// n.b. base case is not used for actual typings or exported in the typing files
function observer(baseComponent,
// TODO remove in next major
options) {
  var _a;
  if (false) {}
  if (ReactMemoSymbol && baseComponent["$$typeof"] === ReactMemoSymbol) {
    throw new Error("[mobx-react-lite] You are trying to use `observer` on a function component wrapped in either another `observer` or `React.memo`. The observer already applies 'React.memo' for you.");
  }
  // The working of observer is explained step by step in this talk: https://www.youtube.com/watch?v=cPF4iBedoF0&feature=youtu.be&t=1307
  if (isUsingStaticRendering()) {
    return baseComponent;
  }
  var useForwardRef = (_a = options === null || options === void 0 ? void 0 : options.forwardRef) !== null && _a !== void 0 ? _a : false;
  var render = baseComponent;
  var baseComponentName = baseComponent.displayName || baseComponent.name;
  // If already wrapped with forwardRef, unwrap,
  // so we can patch render and apply memo
  if (ReactForwardRefSymbol && baseComponent["$$typeof"] === ReactForwardRefSymbol) {
    useForwardRef = true;
    render = baseComponent["render"];
    if (typeof render !== "function") {
      throw new Error("[mobx-react-lite] `render` property of ForwardRef was not a function");
    }
  }
  var observerComponent = function observerComponent(props, ref) {
    return useObserver(function () {
      return render(props, ref);
    }, baseComponentName);
  };
  // Don't set `displayName` for anonymous components,
  // so the `displayName` can be customized by user, see #3192.
  if (baseComponentName !== "") {
    ;
    observerComponent.displayName = baseComponentName;
  }
  // Support legacy context: `contextTypes` must be applied before `memo`
  if (baseComponent.contextTypes) {
    ;
    observerComponent.contextTypes = baseComponent.contextTypes;
  }
  if (useForwardRef) {
    // `forwardRef` must be applied prior `memo`
    // `forwardRef(observer(cmp))` throws:
    // "forwardRef requires a render function but received a `memo` component. Instead of forwardRef(memo(...)), use memo(forwardRef(...))"
    observerComponent = (0,react.forwardRef)(observerComponent);
  }
  // memo; we are not interested in deep updates
  // in props; we assume that if deep objects are changed,
  // this is in observables, which would have been tracked anyway
  observerComponent = (0,react.memo)(observerComponent);
  copyStaticProperties(baseComponent, observerComponent);
  if (false) {}
  return observerComponent;
}
// based on https://github.com/mridgway/hoist-non-react-statics/blob/master/src/index.js
var hoistBlackList = {
  $$typeof: true,
  render: true,
  compare: true,
  type: true,
  // Don't redefine `displayName`,
  // it's defined as getter-setter pair on `memo` (see #3192).
  displayName: true
};
function copyStaticProperties(base, target) {
  Object.keys(base).forEach(function (key) {
    if (!hoistBlackList[key]) {
      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(base, key));
    }
  });
}
;// CONCATENATED MODULE: ./node_modules/mobx-react-lite/es/ObserverComponent.js

function ObserverComponent(_a) {
  var children = _a.children,
    render = _a.render;
  var component = children || render;
  if (typeof component !== "function") {
    return null;
  }
  return useObserver(component);
}
if (false) {}
ObserverComponent.displayName = "Observer";

function ObserverPropsCheck(props, key, componentName, location, propFullName) {
  var extraKey = key === "children" ? "render" : "children";
  var hasProp = typeof props[key] === "function";
  var hasExtraProp = typeof props[extraKey] === "function";
  if (hasProp && hasExtraProp) {
    return new Error("MobX Observer: Do not use children and render in the same time in`" + componentName);
  }
  if (hasProp || hasExtraProp) {
    return null;
  }
  return new Error("Invalid prop `" + propFullName + "` of type `" + typeof props[key] + "` supplied to" + " `" + componentName + "`, expected `function`.");
}
;// CONCATENATED MODULE: ./node_modules/mobx-react-lite/es/useLocalObservable.js


function useLocalObservable(initializer, annotations) {
  return useState(function () {
    return observable(initializer(), annotations, {
      autoBind: true
    });
  })[0];
}
;// CONCATENATED MODULE: ./node_modules/mobx-react-lite/es/useAsObservableSource.js
var useAsObservableSource_read = undefined && undefined.__read || function (o, n) {
  var m = typeof Symbol === "function" && o[Symbol.iterator];
  if (!m) return o;
  var i = m.call(o),
    r,
    ar = [],
    e;
  try {
    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) {
      ar.push(r.value);
    }
  } catch (error) {
    e = {
      error: error
    };
  } finally {
    try {
      if (r && !r.done && (m = i["return"])) m.call(i);
    } finally {
      if (e) throw e.error;
    }
  }
  return ar;
};



function useAsObservableSource_useAsObservableSource(current) {
  if (false) {}
  var _a = useAsObservableSource_read(useState(function () {
      return observable(current, {}, {
        deep: false
      });
    }), 1),
    res = _a[0];
  runInAction(function () {
    Object.assign(res, current);
  });
  return res;
}
;// CONCATENATED MODULE: ./node_modules/mobx-react-lite/es/useLocalStore.js




function useLocalStore(initializer, current) {
  if (false) {}
  var source = current && useAsObservableSource(current);
  return useState(function () {
    return observable(initializer(source), undefined, {
      autoBind: true
    });
  })[0];
}
;// CONCATENATED MODULE: ./node_modules/mobx-react-lite/es/index.js






observerBatching(react_dom.unstable_batchedUpdates);







function es_useObserver(fn, baseComponentName) {
  if (baseComponentName === void 0) {
    baseComponentName = "observed";
  }
  if (false) {}
  return useObserverOriginal(fn, baseComponentName);
}

function useStaticRendering(enable) {
  if (false) {}
  enableStaticRendering(enable);
}
// EXTERNAL MODULE: ./node_modules/@mui/system/esm/useThemeWithoutDefault.js
var useThemeWithoutDefault = __webpack_require__(9120);
// EXTERNAL MODULE: ./node_modules/@mui/system/esm/useThemeProps/getThemeProps.js
var getThemeProps = __webpack_require__(3073);
// EXTERNAL MODULE: ./node_modules/@mui/material/utils/useEnhancedEffect.js
var useEnhancedEffect = __webpack_require__(162);
;// CONCATENATED MODULE: ./node_modules/@mui/material/useMediaQuery/useMediaQuery.js





/**
 * @deprecated Not used internally. Use `MediaQueryListEvent` from lib.dom.d.ts instead.
 */

function useMediaQueryOld(query, defaultMatches, matchMedia, ssrMatchMedia, noSsr) {
  var supportMatchMedia = typeof window !== 'undefined' && typeof window.matchMedia !== 'undefined';
  var _React$useState = react.useState(function () {
      if (noSsr && supportMatchMedia) {
        return matchMedia(query).matches;
      }
      if (ssrMatchMedia) {
        return ssrMatchMedia(query).matches;
      }

      // Once the component is mounted, we rely on the
      // event listeners to return the correct matches value.
      return defaultMatches;
    }),
    _React$useState2 = (0,slicedToArray/* default */.Z)(_React$useState, 2),
    match = _React$useState2[0],
    setMatch = _React$useState2[1];
  (0,useEnhancedEffect/* default */.Z)(function () {
    var active = true;
    if (!supportMatchMedia) {
      return undefined;
    }
    var queryList = matchMedia(query);
    var updateMatch = function updateMatch() {
      // Workaround Safari wrong implementation of matchMedia
      // TODO can we remove it?
      // https://github.com/mui/material-ui/pull/17315#issuecomment-528286677
      if (active) {
        setMatch(queryList.matches);
      }
    };
    updateMatch();
    // TODO: Use `addEventListener` once support for Safari < 14 is dropped
    queryList.addListener(updateMatch);
    return function () {
      active = false;
      queryList.removeListener(updateMatch);
    };
  }, [query, matchMedia, supportMatchMedia]);
  return match;
}

// eslint-disable-next-line no-useless-concat -- Workaround for https://github.com/webpack/webpack/issues/14814
var maybeReactUseSyncExternalStore = react_namespaceObject['useSyncExternalStore' + ''];
function useMediaQueryNew(query, defaultMatches, matchMedia, ssrMatchMedia) {
  var getDefaultSnapshot = react.useCallback(function () {
    return defaultMatches;
  }, [defaultMatches]);
  var getServerSnapshot = react.useMemo(function () {
    if (ssrMatchMedia !== null) {
      var _ssrMatchMedia = ssrMatchMedia(query),
        matches = _ssrMatchMedia.matches;
      return function () {
        return matches;
      };
    }
    return getDefaultSnapshot;
  }, [getDefaultSnapshot, query, ssrMatchMedia]);
  var _React$useMemo = react.useMemo(function () {
      if (matchMedia === null) {
        return [getDefaultSnapshot, function () {
          return function () {};
        }];
      }
      var mediaQueryList = matchMedia(query);
      return [function () {
        return mediaQueryList.matches;
      }, function (notify) {
        // TODO: Use `addEventListener` once support for Safari < 14 is dropped
        mediaQueryList.addListener(notify);
        return function () {
          mediaQueryList.removeListener(notify);
        };
      }];
    }, [getDefaultSnapshot, matchMedia, query]),
    _React$useMemo2 = (0,slicedToArray/* default */.Z)(_React$useMemo, 2),
    getSnapshot = _React$useMemo2[0],
    subscribe = _React$useMemo2[1];
  var match = maybeReactUseSyncExternalStore(subscribe, getSnapshot, getServerSnapshot);
  return match;
}
function useMediaQuery(queryInput) {
  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
  var theme = (0,useThemeWithoutDefault/* default */.Z)();
  // Wait for jsdom to support the match media feature.
  // All the browsers MUI support have this built-in.
  // This defensive check is here for simplicity.
  // Most of the time, the match media logic isn't central to people tests.
  var supportMatchMedia = typeof window !== 'undefined' && typeof window.matchMedia !== 'undefined';
  var _getThemeProps = (0,getThemeProps/* default */.Z)({
      name: 'MuiUseMediaQuery',
      props: options,
      theme: theme
    }),
    _getThemeProps$defaul = _getThemeProps.defaultMatches,
    defaultMatches = _getThemeProps$defaul === void 0 ? false : _getThemeProps$defaul,
    _getThemeProps$matchM = _getThemeProps.matchMedia,
    matchMedia = _getThemeProps$matchM === void 0 ? supportMatchMedia ? window.matchMedia : null : _getThemeProps$matchM,
    _getThemeProps$ssrMat = _getThemeProps.ssrMatchMedia,
    ssrMatchMedia = _getThemeProps$ssrMat === void 0 ? null : _getThemeProps$ssrMat,
    noSsr = _getThemeProps.noSsr;
  if (false) {}
  var query = typeof queryInput === 'function' ? queryInput(theme) : queryInput;
  query = query.replace(/^@media( ?)/m, '');

  // TODO: Drop `useMediaQueryOld` and use  `use-sync-external-store` shim in `useMediaQueryNew` once the package is stable
  var useMediaQueryImplementation = maybeReactUseSyncExternalStore !== undefined ? useMediaQueryNew : useMediaQueryOld;
  var match = useMediaQueryImplementation(query, defaultMatches, matchMedia, ssrMatchMedia, noSsr);
  if (false) {}
  return match;
}
// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/extends.js
var esm_extends = __webpack_require__(7462);
// EXTERNAL MODULE: ./node_modules/@mui/private-theming/useTheme/ThemeContext.js
var useTheme_ThemeContext = __webpack_require__(8023);
// EXTERNAL MODULE: ./node_modules/@mui/private-theming/useTheme/useTheme.js
var useTheme = __webpack_require__(9598);
;// CONCATENATED MODULE: ./node_modules/@mui/private-theming/ThemeProvider/nested.js
var nested_hasSymbol = typeof Symbol === 'function' && Symbol.for;
/* harmony default export */ var nested = (nested_hasSymbol ? Symbol.for('mui.nested') : '__THEME_NESTED__');
// EXTERNAL MODULE: ./node_modules/react/jsx-runtime.js
var jsx_runtime = __webpack_require__(184);
;// CONCATENATED MODULE: ./node_modules/@mui/private-theming/ThemeProvider/ThemeProvider.js








// To support composition of theme.

function mergeOuterLocalTheme(outerTheme, localTheme) {
  if (typeof localTheme === 'function') {
    var mergedTheme = localTheme(outerTheme);
    if (false) {}
    return mergedTheme;
  }
  return (0,esm_extends/* default */.Z)({}, outerTheme, localTheme);
}

/**
 * This component takes a `theme` prop.
 * It makes the `theme` available down the React tree thanks to React context.
 * This component should preferably be used at **the root of your component tree**.
 */
function ThemeProvider(props) {
  var children = props.children,
    localTheme = props.theme;
  var outerTheme = (0,useTheme/* default */.Z)();
  if (false) {}
  var theme = react.useMemo(function () {
    var output = outerTheme === null ? localTheme : mergeOuterLocalTheme(outerTheme, localTheme);
    if (output != null) {
      output[nested] = outerTheme !== null;
    }
    return output;
  }, [localTheme, outerTheme]);
  return /*#__PURE__*/(0,jsx_runtime.jsx)(useTheme_ThemeContext/* default.Provider */.Z.Provider, {
    value: theme,
    children: children
  });
}
 false ? 0 : void 0;
if (false) {}
/* harmony default export */ var ThemeProvider_ThemeProvider = (ThemeProvider);
// EXTERNAL MODULE: ./node_modules/@emotion/react/dist/emotion-element-6a883da9.browser.esm.js
var emotion_element_6a883da9_browser_esm = __webpack_require__(9886);
// EXTERNAL MODULE: ./node_modules/@mui/system/esm/useTheme.js
var esm_useTheme = __webpack_require__(418);
;// CONCATENATED MODULE: ./node_modules/@mui/system/esm/ThemeProvider/ThemeProvider.js







var EMPTY_THEME = {};
function InnerThemeProvider(props) {
  var theme = (0,esm_useTheme/* default */.Z)();
  return /*#__PURE__*/(0,jsx_runtime.jsx)(emotion_element_6a883da9_browser_esm.T.Provider, {
    value: typeof theme === 'object' ? theme : EMPTY_THEME,
    children: props.children
  });
}
 false ? 0 : void 0;

/**
 * This component makes the `theme` available down the React tree.
 * It should preferably be used at **the root of your component tree**.
 */
function ThemeProvider_ThemeProvider_ThemeProvider(props) {
  var children = props.children,
    localTheme = props.theme;
  return /*#__PURE__*/(0,jsx_runtime.jsx)(ThemeProvider_ThemeProvider, {
    theme: localTheme,
    children: /*#__PURE__*/(0,jsx_runtime.jsx)(InnerThemeProvider, {
      children: children
    })
  });
}
 false ? 0 : void 0;
if (false) {}
/* harmony default export */ var esm_ThemeProvider_ThemeProvider = (ThemeProvider_ThemeProvider_ThemeProvider);
// EXTERNAL MODULE: ./node_modules/@mui/material/styles/useThemeProps.js
var styles_useThemeProps = __webpack_require__(1402);
// EXTERNAL MODULE: ./node_modules/@emotion/cache/dist/emotion-cache.browser.esm.js + 7 modules
var emotion_cache_browser_esm = __webpack_require__(3361);
// EXTERNAL MODULE: ./node_modules/hoist-non-react-statics/dist/hoist-non-react-statics.cjs.js
var hoist_non_react_statics_cjs = __webpack_require__(2110);
// EXTERNAL MODULE: ./node_modules/@emotion/utils/dist/emotion-utils.browser.esm.js
var emotion_utils_browser_esm = __webpack_require__(5438);
// EXTERNAL MODULE: ./node_modules/@emotion/serialize/dist/emotion-serialize.browser.esm.js + 2 modules
var emotion_serialize_browser_esm = __webpack_require__(9140);
// EXTERNAL MODULE: ./node_modules/@emotion/use-insertion-effect-with-fallbacks/dist/emotion-use-insertion-effect-with-fallbacks.browser.esm.js
var emotion_use_insertion_effect_with_fallbacks_browser_esm = __webpack_require__(2561);
;// CONCATENATED MODULE: ./node_modules/@emotion/react/dist/emotion-react.browser.esm.js











var pkg = {
  name: "@emotion/react",
  version: "11.10.5",
  main: "dist/emotion-react.cjs.js",
  module: "dist/emotion-react.esm.js",
  browser: {
    "./dist/emotion-react.esm.js": "./dist/emotion-react.browser.esm.js"
  },
  exports: {
    ".": {
      module: {
        worker: "./dist/emotion-react.worker.esm.js",
        browser: "./dist/emotion-react.browser.esm.js",
        "default": "./dist/emotion-react.esm.js"
      },
      "default": "./dist/emotion-react.cjs.js"
    },
    "./jsx-runtime": {
      module: {
        worker: "./jsx-runtime/dist/emotion-react-jsx-runtime.worker.esm.js",
        browser: "./jsx-runtime/dist/emotion-react-jsx-runtime.browser.esm.js",
        "default": "./jsx-runtime/dist/emotion-react-jsx-runtime.esm.js"
      },
      "default": "./jsx-runtime/dist/emotion-react-jsx-runtime.cjs.js"
    },
    "./_isolated-hnrs": {
      module: {
        worker: "./_isolated-hnrs/dist/emotion-react-_isolated-hnrs.worker.esm.js",
        browser: "./_isolated-hnrs/dist/emotion-react-_isolated-hnrs.browser.esm.js",
        "default": "./_isolated-hnrs/dist/emotion-react-_isolated-hnrs.esm.js"
      },
      "default": "./_isolated-hnrs/dist/emotion-react-_isolated-hnrs.cjs.js"
    },
    "./jsx-dev-runtime": {
      module: {
        worker: "./jsx-dev-runtime/dist/emotion-react-jsx-dev-runtime.worker.esm.js",
        browser: "./jsx-dev-runtime/dist/emotion-react-jsx-dev-runtime.browser.esm.js",
        "default": "./jsx-dev-runtime/dist/emotion-react-jsx-dev-runtime.esm.js"
      },
      "default": "./jsx-dev-runtime/dist/emotion-react-jsx-dev-runtime.cjs.js"
    },
    "./package.json": "./package.json",
    "./types/css-prop": "./types/css-prop.d.ts",
    "./macro": "./macro.js"
  },
  types: "types/index.d.ts",
  files: ["src", "dist", "jsx-runtime", "jsx-dev-runtime", "_isolated-hnrs", "types/*.d.ts", "macro.js", "macro.d.ts", "macro.js.flow"],
  sideEffects: false,
  author: "Emotion Contributors",
  license: "MIT",
  scripts: {
    "test:typescript": "dtslint types"
  },
  dependencies: {
    "@babel/runtime": "^7.18.3",
    "@emotion/babel-plugin": "^11.10.5",
    "@emotion/cache": "^11.10.5",
    "@emotion/serialize": "^1.1.1",
    "@emotion/use-insertion-effect-with-fallbacks": "^1.0.0",
    "@emotion/utils": "^1.2.0",
    "@emotion/weak-memoize": "^0.3.0",
    "hoist-non-react-statics": "^3.3.1"
  },
  peerDependencies: {
    "@babel/core": "^7.0.0",
    react: ">=16.8.0"
  },
  peerDependenciesMeta: {
    "@babel/core": {
      optional: true
    },
    "@types/react": {
      optional: true
    }
  },
  devDependencies: {
    "@babel/core": "^7.18.5",
    "@definitelytyped/dtslint": "0.0.112",
    "@emotion/css": "11.10.5",
    "@emotion/css-prettifier": "1.1.1",
    "@emotion/server": "11.10.0",
    "@emotion/styled": "11.10.5",
    "html-tag-names": "^1.1.2",
    react: "16.14.0",
    "svg-tag-names": "^1.1.1",
    typescript: "^4.5.5"
  },
  repository: "https://github.com/emotion-js/emotion/tree/main/packages/react",
  publishConfig: {
    access: "public"
  },
  "umd:main": "dist/emotion-react.umd.min.js",
  preconstruct: {
    entrypoints: ["./index.js", "./jsx-runtime.js", "./jsx-dev-runtime.js", "./_isolated-hnrs.js"],
    umdName: "emotionReact",
    exports: {
      envConditions: ["browser", "worker"],
      extra: {
        "./types/css-prop": "./types/css-prop.d.ts",
        "./macro": "./macro.js"
      }
    }
  }
};
var jsx = function jsx(type, props) {
  var args = arguments;
  if (props == null || !hasOwnProperty.call(props, 'css')) {
    // $FlowFixMe
    return createElement.apply(undefined, args);
  }
  var argsLength = args.length;
  var createElementArgArray = new Array(argsLength);
  createElementArgArray[0] = Emotion;
  createElementArgArray[1] = createEmotionProps(type, props);
  for (var i = 2; i < argsLength; i++) {
    createElementArgArray[i] = args[i];
  } // $FlowFixMe

  return createElement.apply(null, createElementArgArray);
};
var warnedAboutCssPropForGlobal = false; // maintain place over rerenders.
// initial render from browser, insertBefore context.sheet.tags[0] or if a style hasn't been inserted there yet, appendChild
// initial client-side render from SSR, use place of hydrating tag

var Global = /* #__PURE__ */(0,emotion_element_6a883da9_browser_esm.w)(function (props, cache) {
  if (false) {}
  var styles = props.styles;
  var serialized = (0,emotion_serialize_browser_esm/* serializeStyles */.O)([styles], undefined, (0,react.useContext)(emotion_element_6a883da9_browser_esm.T));
  // but it is based on a constant that will never change at runtime
  // it's effectively like having two implementations and switching them out
  // so it's not actually breaking anything

  var sheetRef = (0,react.useRef)();
  (0,emotion_use_insertion_effect_with_fallbacks_browser_esm/* useInsertionEffectWithLayoutFallback */.j)(function () {
    var key = cache.key + "-global"; // use case of https://github.com/emotion-js/emotion/issues/2675

    var sheet = new cache.sheet.constructor({
      key: key,
      nonce: cache.sheet.nonce,
      container: cache.sheet.container,
      speedy: cache.sheet.isSpeedy
    });
    var rehydrating = false; // $FlowFixMe

    var node = document.querySelector("style[data-emotion=\"" + key + " " + serialized.name + "\"]");
    if (cache.sheet.tags.length) {
      sheet.before = cache.sheet.tags[0];
    }
    if (node !== null) {
      rehydrating = true; // clear the hash so this node won't be recognizable as rehydratable by other <Global/>s

      node.setAttribute('data-emotion', key);
      sheet.hydrate([node]);
    }
    sheetRef.current = [sheet, rehydrating];
    return function () {
      sheet.flush();
    };
  }, [cache]);
  (0,emotion_use_insertion_effect_with_fallbacks_browser_esm/* useInsertionEffectWithLayoutFallback */.j)(function () {
    var sheetRefCurrent = sheetRef.current;
    var sheet = sheetRefCurrent[0],
      rehydrating = sheetRefCurrent[1];
    if (rehydrating) {
      sheetRefCurrent[1] = false;
      return;
    }
    if (serialized.next !== undefined) {
      // insert keyframes
      (0,emotion_utils_browser_esm/* insertStyles */.My)(cache, serialized.next, true);
    }
    if (sheet.tags.length) {
      // if this doesn't exist then it will be null so the style element will be appended
      var element = sheet.tags[sheet.tags.length - 1].nextElementSibling;
      sheet.before = element;
      sheet.flush();
    }
    cache.insert("", serialized, sheet, false);
  }, [cache, serialized.name]);
  return null;
});
if (false) {}
function css() {
  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
    args[_key] = arguments[_key];
  }
  return (0,emotion_serialize_browser_esm/* serializeStyles */.O)(args);
}
var keyframes = function keyframes() {
  var insertable = css.apply(void 0, arguments);
  var name = "animation-" + insertable.name; // $FlowFixMe

  return {
    name: name,
    styles: "@keyframes " + name + "{" + insertable.styles + "}",
    anim: 1,
    toString: function toString() {
      return "_EMO_" + this.name + "_" + this.styles + "_EMO_";
    }
  };
};
var classnames = function classnames(args) {
  var len = args.length;
  var i = 0;
  var cls = '';
  for (; i < len; i++) {
    var arg = args[i];
    if (arg == null) continue;
    var toAdd = void 0;
    switch (typeof arg) {
      case 'boolean':
        break;
      case 'object':
        {
          if (Array.isArray(arg)) {
            toAdd = classnames(arg);
          } else {
            if (false) {}
            toAdd = '';
            for (var k in arg) {
              if (arg[k] && k) {
                toAdd && (toAdd += ' ');
                toAdd += k;
              }
            }
          }
          break;
        }
      default:
        {
          toAdd = arg;
        }
    }
    if (toAdd) {
      cls && (cls += ' ');
      cls += toAdd;
    }
  }
  return cls;
};
function merge(registered, css, className) {
  var registeredStyles = [];
  var rawClassName = getRegisteredStyles(registered, registeredStyles, className);
  if (registeredStyles.length < 2) {
    return className;
  }
  return rawClassName + css(registeredStyles);
}
var Insertion = function Insertion(_ref) {
  var cache = _ref.cache,
    serializedArr = _ref.serializedArr;
  var rules = useInsertionEffectAlwaysWithSyncFallback(function () {
    for (var i = 0; i < serializedArr.length; i++) {
      var res = insertStyles(cache, serializedArr[i], false);
    }
  });
  return null;
};
var ClassNames = /* #__PURE__ */(/* unused pure expression or super */ null && (withEmotionCache(function (props, cache) {
  var hasRendered = false;
  var serializedArr = [];
  var css = function css() {
    if (hasRendered && "production" !== 'production') {}
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    var serialized = serializeStyles(args, cache.registered);
    serializedArr.push(serialized); // registration has to happen here as the result of this might get consumed by `cx`

    registerStyles(cache, serialized, false);
    return cache.key + "-" + serialized.name;
  };
  var cx = function cx() {
    if (hasRendered && "production" !== 'production') {}
    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
      args[_key2] = arguments[_key2];
    }
    return merge(cache.registered, css, classnames(args));
  };
  var content = {
    css: css,
    cx: cx,
    theme: useContext(ThemeContext)
  };
  var ele = props.children(content);
  hasRendered = true;
  return /*#__PURE__*/createElement(Fragment, null, /*#__PURE__*/createElement(Insertion, {
    cache: cache,
    serializedArr: serializedArr
  }), ele);
})));
if (false) {}
if (false) { var globalKey, globalContext, isTestEnv, isBrowser; }

;// CONCATENATED MODULE: ./node_modules/@mui/styled-engine/GlobalStyles/GlobalStyles.js




function isEmpty(obj) {
  return obj === undefined || obj === null || Object.keys(obj).length === 0;
}
function GlobalStyles(props) {
  var styles = props.styles,
    _props$defaultTheme = props.defaultTheme,
    defaultTheme = _props$defaultTheme === void 0 ? {} : _props$defaultTheme;
  var globalStyles = typeof styles === 'function' ? function (themeInput) {
    return styles(isEmpty(themeInput) ? defaultTheme : themeInput);
  } : styles;
  return /*#__PURE__*/(0,jsx_runtime.jsx)(Global, {
    styles: globalStyles
  });
}
 false ? 0 : void 0;
// EXTERNAL MODULE: ./node_modules/@mui/material/styles/defaultTheme.js
var defaultTheme = __webpack_require__(6482);
;// CONCATENATED MODULE: ./node_modules/@mui/material/GlobalStyles/GlobalStyles.js






function GlobalStyles_GlobalStyles(props) {
  return /*#__PURE__*/(0,jsx_runtime.jsx)(GlobalStyles, (0,esm_extends/* default */.Z)({}, props, {
    defaultTheme: defaultTheme/* default */.Z
  }));
}
 false ? 0 : void 0;
/* harmony default export */ var material_GlobalStyles_GlobalStyles = (GlobalStyles_GlobalStyles);
;// CONCATENATED MODULE: ./node_modules/@mui/material/CssBaseline/CssBaseline.js








var html = function html(theme, enableColorScheme) {
  return (0,esm_extends/* default */.Z)({
    WebkitFontSmoothing: 'antialiased',
    // Antialiasing.
    MozOsxFontSmoothing: 'grayscale',
    // Antialiasing.
    // Change from `box-sizing: content-box` so that `width`
    // is not affected by `padding` or `border`.
    boxSizing: 'border-box',
    // Fix font resize problem in iOS
    WebkitTextSizeAdjust: '100%'
  }, enableColorScheme && !theme.vars && {
    colorScheme: theme.palette.mode
  });
};
var body = function body(theme) {
  return (0,esm_extends/* default */.Z)({
    color: (theme.vars || theme).palette.text.primary
  }, theme.typography.body1, {
    backgroundColor: (theme.vars || theme).palette.background.default,
    '@media print': {
      // Save printer ink.
      backgroundColor: (theme.vars || theme).palette.common.white
    }
  });
};
var _styles = function styles(theme) {
  var enableColorScheme = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
  var _theme$components, _theme$components$Mui;
  var colorSchemeStyles = {};
  if (enableColorScheme && theme.colorSchemes) {
    Object.entries(theme.colorSchemes).forEach(function (_ref) {
      var _ref2 = (0,slicedToArray/* default */.Z)(_ref, 2),
        key = _ref2[0],
        scheme = _ref2[1];
      var _scheme$palette;
      colorSchemeStyles[theme.getColorSchemeSelector(key).replace(/\s*&/, '')] = {
        colorScheme: (_scheme$palette = scheme.palette) == null ? void 0 : _scheme$palette.mode
      };
    });
  }
  var defaultStyles = (0,esm_extends/* default */.Z)({
    html: html(theme, enableColorScheme),
    '*, *::before, *::after': {
      boxSizing: 'inherit'
    },
    'strong, b': {
      fontWeight: theme.typography.fontWeightBold
    },
    body: (0,esm_extends/* default */.Z)({
      margin: 0
    }, body(theme), {
      // Add support for document.body.requestFullScreen().
      // Other elements, if background transparent, are not supported.
      '&::backdrop': {
        backgroundColor: (theme.vars || theme).palette.background.default
      }
    })
  }, colorSchemeStyles);
  var themeOverrides = (_theme$components = theme.components) == null ? void 0 : (_theme$components$Mui = _theme$components.MuiCssBaseline) == null ? void 0 : _theme$components$Mui.styleOverrides;
  if (themeOverrides) {
    defaultStyles = [defaultStyles, themeOverrides];
  }
  return defaultStyles;
};

/**
 * Kickstart an elegant, consistent, and simple baseline to build upon.
 */

function CssBaseline(inProps) {
  var props = (0,styles_useThemeProps/* default */.Z)({
    props: inProps,
    name: 'MuiCssBaseline'
  });
  var children = props.children,
    _props$enableColorSch = props.enableColorScheme,
    enableColorScheme = _props$enableColorSch === void 0 ? false : _props$enableColorSch;
  return /*#__PURE__*/(0,jsx_runtime.jsxs)(react.Fragment, {
    children: [/*#__PURE__*/(0,jsx_runtime.jsx)(material_GlobalStyles_GlobalStyles, {
      styles: function styles(theme) {
        return _styles(theme, enableColorScheme);
      }
    }), children]
  });
}
 false ? 0 : void 0;
/* harmony default export */ var CssBaseline_CssBaseline = (CssBaseline);
// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/defineProperty.js
var esm_defineProperty = __webpack_require__(4942);
;// CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/esm/objectSpread2.js

function objectSpread2_ownKeys(object, enumerableOnly) {
  var keys = Object.keys(object);
  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    enumerableOnly && (symbols = symbols.filter(function (sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    })), keys.push.apply(keys, symbols);
  }
  return keys;
}
function _objectSpread2(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = null != arguments[i] ? arguments[i] : {};
    i % 2 ? objectSpread2_ownKeys(Object(source), !0).forEach(function (key) {
      (0,esm_defineProperty/* default */.Z)(target, key, source[key]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : objectSpread2_ownKeys(Object(source)).forEach(function (key) {
      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
    });
  }
  return target;
}
// EXTERNAL MODULE: ./node_modules/@mui/material/styles/createTheme.js + 14 modules
var createTheme = __webpack_require__(7107);
;// CONCATENATED MODULE: ./src/theme.js
var getTheme=function getTheme(uiTheme){var neutralPalette={};var darkPalette={primary:{main:'#dac8c0'},nearlyInvisible:{main:'#444'},secondary:{main:'#ac9f9b'},error:{main:'#FFA8A9'},link:{main:'#92b4f4'},success:{main:'#6aa84f'},wordCorrect:{main:'#6aa84f'},wordIncorrect:{main:'#ffa8a9'},incorrectWordColorName:'pink',correctWordColorName:'green',blankTarget:'#ffa8a9c0',wordSelected:{main:'#d66161'},// #ff7374
transparentBackground:'#eeeeee11',mode:'dark'};var lightPalette={primary:{main:'#645d5a'},nearlyInvisible:{main:'#ccc'},secondary:{main:'#a29b99'},error:{main:'#FFA8A9'},link:{main:'#92b4f4'},success:{main:'#6aa84f'},wordCorrect:{main:'#6aa84f'},wordIncorrect:{main:'#d71a20'},incorrectWordColorName:'orange',correctWordColorName:'green',blankTarget:'#d71a20aa',wordSelected:{main:'#65090c'},transparentBackground:'#eeeeee99',mode:'light'};var selectedPalette=uiTheme==='dark'?darkPalette:lightPalette;return (0,createTheme/* default */.Z)({palette:_objectSpread2(_objectSpread2({},neutralPalette),selectedPalette),typography:{fontFamily:'Nunito'},components:{MuiTypography:{styleOverrides:{root:{color:selectedPalette.primary.main}}},MuiCssBaseline:{styleOverrides:{html:{margin:0,height:'100%'},body:{height:'100%',overflow:'hidden',userSelect:'none'},'#root':{height:'100%'},'*':{//outline: '1px solid blue', // for debugging
},a:{color:'#92b4f4'//todo - how can i refer to palette here?
},'a, a:link, a:visited, a:hover, a:active':{textDecoration:'none'}}}}});};
// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/typeof.js
var esm_typeof = __webpack_require__(1002);
;// CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js

function regeneratorRuntime_regeneratorRuntime() {
  "use strict"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */
  regeneratorRuntime_regeneratorRuntime = function _regeneratorRuntime() {
    return exports;
  };
  var exports = {},
    Op = Object.prototype,
    hasOwn = Op.hasOwnProperty,
    defineProperty = Object.defineProperty || function (obj, key, desc) {
      obj[key] = desc.value;
    },
    $Symbol = "function" == typeof Symbol ? Symbol : {},
    iteratorSymbol = $Symbol.iterator || "@@iterator",
    asyncIteratorSymbol = $Symbol.asyncIterator || "@@asyncIterator",
    toStringTagSymbol = $Symbol.toStringTag || "@@toStringTag";
  function define(obj, key, value) {
    return Object.defineProperty(obj, key, {
      value: value,
      enumerable: !0,
      configurable: !0,
      writable: !0
    }), obj[key];
  }
  try {
    define({}, "");
  } catch (err) {
    define = function define(obj, key, value) {
      return obj[key] = value;
    };
  }
  function wrap(innerFn, outerFn, self, tryLocsList) {
    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator,
      generator = Object.create(protoGenerator.prototype),
      context = new Context(tryLocsList || []);
    return defineProperty(generator, "_invoke", {
      value: makeInvokeMethod(innerFn, self, context)
    }), generator;
  }
  function tryCatch(fn, obj, arg) {
    try {
      return {
        type: "normal",
        arg: fn.call(obj, arg)
      };
    } catch (err) {
      return {
        type: "throw",
        arg: err
      };
    }
  }
  exports.wrap = wrap;
  var ContinueSentinel = {};
  function Generator() {}
  function GeneratorFunction() {}
  function GeneratorFunctionPrototype() {}
  var IteratorPrototype = {};
  define(IteratorPrototype, iteratorSymbol, function () {
    return this;
  });
  var getProto = Object.getPrototypeOf,
    NativeIteratorPrototype = getProto && getProto(getProto(values([])));
  NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype);
  var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype);
  function defineIteratorMethods(prototype) {
    ["next", "throw", "return"].forEach(function (method) {
      define(prototype, method, function (arg) {
        return this._invoke(method, arg);
      });
    });
  }
  function AsyncIterator(generator, PromiseImpl) {
    function invoke(method, arg, resolve, reject) {
      var record = tryCatch(generator[method], generator, arg);
      if ("throw" !== record.type) {
        var result = record.arg,
          value = result.value;
        return value && "object" == (0,esm_typeof/* default */.Z)(value) && hasOwn.call(value, "__await") ? PromiseImpl.resolve(value.__await).then(function (value) {
          invoke("next", value, resolve, reject);
        }, function (err) {
          invoke("throw", err, resolve, reject);
        }) : PromiseImpl.resolve(value).then(function (unwrapped) {
          result.value = unwrapped, resolve(result);
        }, function (error) {
          return invoke("throw", error, resolve, reject);
        });
      }
      reject(record.arg);
    }
    var previousPromise;
    defineProperty(this, "_invoke", {
      value: function value(method, arg) {
        function callInvokeWithMethodAndArg() {
          return new PromiseImpl(function (resolve, reject) {
            invoke(method, arg, resolve, reject);
          });
        }
        return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg();
      }
    });
  }
  function makeInvokeMethod(innerFn, self, context) {
    var state = "suspendedStart";
    return function (method, arg) {
      if ("executing" === state) throw new Error("Generator is already running");
      if ("completed" === state) {
        if ("throw" === method) throw arg;
        return doneResult();
      }
      for (context.method = method, context.arg = arg;;) {
        var delegate = context.delegate;
        if (delegate) {
          var delegateResult = maybeInvokeDelegate(delegate, context);
          if (delegateResult) {
            if (delegateResult === ContinueSentinel) continue;
            return delegateResult;
          }
        }
        if ("next" === context.method) context.sent = context._sent = context.arg;else if ("throw" === context.method) {
          if ("suspendedStart" === state) throw state = "completed", context.arg;
          context.dispatchException(context.arg);
        } else "return" === context.method && context.abrupt("return", context.arg);
        state = "executing";
        var record = tryCatch(innerFn, self, context);
        if ("normal" === record.type) {
          if (state = context.done ? "completed" : "suspendedYield", record.arg === ContinueSentinel) continue;
          return {
            value: record.arg,
            done: context.done
          };
        }
        "throw" === record.type && (state = "completed", context.method = "throw", context.arg = record.arg);
      }
    };
  }
  function maybeInvokeDelegate(delegate, context) {
    var methodName = context.method,
      method = delegate.iterator[methodName];
    if (undefined === method) return context.delegate = null, "throw" === methodName && delegate.iterator["return"] && (context.method = "return", context.arg = undefined, maybeInvokeDelegate(delegate, context), "throw" === context.method) || "return" !== methodName && (context.method = "throw", context.arg = new TypeError("The iterator does not provide a '" + methodName + "' method")), ContinueSentinel;
    var record = tryCatch(method, delegate.iterator, context.arg);
    if ("throw" === record.type) return context.method = "throw", context.arg = record.arg, context.delegate = null, ContinueSentinel;
    var info = record.arg;
    return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, "return" !== context.method && (context.method = "next", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = "throw", context.arg = new TypeError("iterator result is not an object"), context.delegate = null, ContinueSentinel);
  }
  function pushTryEntry(locs) {
    var entry = {
      tryLoc: locs[0]
    };
    1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry);
  }
  function resetTryEntry(entry) {
    var record = entry.completion || {};
    record.type = "normal", delete record.arg, entry.completion = record;
  }
  function Context(tryLocsList) {
    this.tryEntries = [{
      tryLoc: "root"
    }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0);
  }
  function values(iterable) {
    if (iterable) {
      var iteratorMethod = iterable[iteratorSymbol];
      if (iteratorMethod) return iteratorMethod.call(iterable);
      if ("function" == typeof iterable.next) return iterable;
      if (!isNaN(iterable.length)) {
        var i = -1,
          next = function next() {
            for (; ++i < iterable.length;) {
              if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next;
            }
            return next.value = undefined, next.done = !0, next;
          };
        return next.next = next;
      }
    }
    return {
      next: doneResult
    };
  }
  function doneResult() {
    return {
      value: undefined,
      done: !0
    };
  }
  return GeneratorFunction.prototype = GeneratorFunctionPrototype, defineProperty(Gp, "constructor", {
    value: GeneratorFunctionPrototype,
    configurable: !0
  }), defineProperty(GeneratorFunctionPrototype, "constructor", {
    value: GeneratorFunction,
    configurable: !0
  }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, "GeneratorFunction"), exports.isGeneratorFunction = function (genFun) {
    var ctor = "function" == typeof genFun && genFun.constructor;
    return !!ctor && (ctor === GeneratorFunction || "GeneratorFunction" === (ctor.displayName || ctor.name));
  }, exports.mark = function (genFun) {
    return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, "GeneratorFunction")), genFun.prototype = Object.create(Gp), genFun;
  }, exports.awrap = function (arg) {
    return {
      __await: arg
    };
  }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () {
    return this;
  }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) {
    void 0 === PromiseImpl && (PromiseImpl = Promise);
    var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl);
    return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) {
      return result.done ? result.value : iter.next();
    });
  }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, "Generator"), define(Gp, iteratorSymbol, function () {
    return this;
  }), define(Gp, "toString", function () {
    return "[object Generator]";
  }), exports.keys = function (val) {
    var object = Object(val),
      keys = [];
    for (var key in object) {
      keys.push(key);
    }
    return keys.reverse(), function next() {
      for (; keys.length;) {
        var key = keys.pop();
        if (key in object) return next.value = key, next.done = !1, next;
      }
      return next.done = !0, next;
    };
  }, exports.values = values, Context.prototype = {
    constructor: Context,
    reset: function reset(skipTempReset) {
      if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = "next", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) {
        "t" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined);
      }
    },
    stop: function stop() {
      this.done = !0;
      var rootRecord = this.tryEntries[0].completion;
      if ("throw" === rootRecord.type) throw rootRecord.arg;
      return this.rval;
    },
    dispatchException: function dispatchException(exception) {
      if (this.done) throw exception;
      var context = this;
      function handle(loc, caught) {
        return record.type = "throw", record.arg = exception, context.next = loc, caught && (context.method = "next", context.arg = undefined), !!caught;
      }
      for (var i = this.tryEntries.length - 1; i >= 0; --i) {
        var entry = this.tryEntries[i],
          record = entry.completion;
        if ("root" === entry.tryLoc) return handle("end");
        if (entry.tryLoc <= this.prev) {
          var hasCatch = hasOwn.call(entry, "catchLoc"),
            hasFinally = hasOwn.call(entry, "finallyLoc");
          if (hasCatch && hasFinally) {
            if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0);
            if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc);
          } else if (hasCatch) {
            if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0);
          } else {
            if (!hasFinally) throw new Error("try statement without catch or finally");
            if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc);
          }
        }
      }
    },
    abrupt: function abrupt(type, arg) {
      for (var i = this.tryEntries.length - 1; i >= 0; --i) {
        var entry = this.tryEntries[i];
        if (entry.tryLoc <= this.prev && hasOwn.call(entry, "finallyLoc") && this.prev < entry.finallyLoc) {
          var finallyEntry = entry;
          break;
        }
      }
      finallyEntry && ("break" === type || "continue" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null);
      var record = finallyEntry ? finallyEntry.completion : {};
      return record.type = type, record.arg = arg, finallyEntry ? (this.method = "next", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record);
    },
    complete: function complete(record, afterLoc) {
      if ("throw" === record.type) throw record.arg;
      return "break" === record.type || "continue" === record.type ? this.next = record.arg : "return" === record.type ? (this.rval = this.arg = record.arg, this.method = "return", this.next = "end") : "normal" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel;
    },
    finish: function finish(finallyLoc) {
      for (var i = this.tryEntries.length - 1; i >= 0; --i) {
        var entry = this.tryEntries[i];
        if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel;
      }
    },
    "catch": function _catch(tryLoc) {
      for (var i = this.tryEntries.length - 1; i >= 0; --i) {
        var entry = this.tryEntries[i];
        if (entry.tryLoc === tryLoc) {
          var record = entry.completion;
          if ("throw" === record.type) {
            var thrown = record.arg;
            resetTryEntry(entry);
          }
          return thrown;
        }
      }
      throw new Error("illegal catch attempt");
    },
    delegateYield: function delegateYield(iterable, resultName, nextLoc) {
      return this.delegate = {
        iterator: values(iterable),
        resultName: resultName,
        nextLoc: nextLoc
      }, "next" === this.method && (this.arg = undefined), ContinueSentinel;
    }
  }, exports;
}
;// CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js
function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {
  try {
    var info = gen[key](arg);
    var value = info.value;
  } catch (error) {
    reject(error);
    return;
  }
  if (info.done) {
    resolve(value);
  } else {
    Promise.resolve(value).then(_next, _throw);
  }
}
function asyncToGenerator_asyncToGenerator(fn) {
  return function () {
    var self = this,
      args = arguments;
    return new Promise(function (resolve, reject) {
      var gen = fn.apply(self, args);
      function _next(value) {
        asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value);
      }
      function _throw(err) {
        asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err);
      }
      _next(undefined);
    });
  };
}
;// CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/esm/classCallCheck.js
function classCallCheck_classCallCheck(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}
// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/toPropertyKey.js + 1 modules
var toPropertyKey = __webpack_require__(9142);
;// CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/esm/createClass.js

function createClass_defineProperties(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor) descriptor.writable = true;
    Object.defineProperty(target, (0,toPropertyKey/* default */.Z)(descriptor.key), descriptor);
  }
}
function createClass_createClass(Constructor, protoProps, staticProps) {
  if (protoProps) createClass_defineProperties(Constructor.prototype, protoProps);
  if (staticProps) createClass_defineProperties(Constructor, staticProps);
  Object.defineProperty(Constructor, "prototype", {
    writable: false
  });
  return Constructor;
}
;// CONCATENATED MODULE: ./node_modules/mobx-persist-store/lib/esm5/PersistStoreMap.js
/* eslint-disable-next-line @typescript-eslint/no-explicit-any */
var PersistStoreMap_PersistStoreMap = new Map();
;// CONCATENATED MODULE: ./node_modules/mobx-persist-store/lib/esm5/clearPersistedStore.js
var __awaiter = undefined && undefined.__awaiter || function (thisArg, _arguments, P, generator) {
  function adopt(value) {
    return value instanceof P ? value : new P(function (resolve) {
      resolve(value);
    });
  }
  return new (P || (P = Promise))(function (resolve, reject) {
    function fulfilled(value) {
      try {
        step(generator.next(value));
      } catch (e) {
        reject(e);
      }
    }
    function rejected(value) {
      try {
        step(generator["throw"](value));
      } catch (e) {
        reject(e);
      }
    }
    function step(result) {
      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
    }
    step((generator = generator.apply(thisArg, _arguments || [])).next());
  });
};
var __generator = undefined && undefined.__generator || function (thisArg, body) {
  var _ = {
      label: 0,
      sent: function sent() {
        if (t[0] & 1) throw t[1];
        return t[1];
      },
      trys: [],
      ops: []
    },
    f,
    y,
    t,
    g;
  return g = {
    next: verb(0),
    "throw": verb(1),
    "return": verb(2)
  }, typeof Symbol === "function" && (g[Symbol.iterator] = function () {
    return this;
  }), g;
  function verb(n) {
    return function (v) {
      return step([n, v]);
    };
  }
  function step(op) {
    if (f) throw new TypeError("Generator is already executing.");
    while (_) {
      try {
        if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
        if (y = 0, t) op = [op[0] & 2, t.value];
        switch (op[0]) {
          case 0:
          case 1:
            t = op;
            break;
          case 4:
            _.label++;
            return {
              value: op[1],
              done: false
            };
          case 5:
            _.label++;
            y = op[1];
            op = [0];
            continue;
          case 7:
            op = _.ops.pop();
            _.trys.pop();
            continue;
          default:
            if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {
              _ = 0;
              continue;
            }
            if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {
              _.label = op[1];
              break;
            }
            if (op[0] === 6 && _.label < t[1]) {
              _.label = t[1];
              t = op;
              break;
            }
            if (t && _.label < t[2]) {
              _.label = t[2];
              _.ops.push(op);
              break;
            }
            if (t[2]) _.ops.pop();
            _.trys.pop();
            continue;
        }
        op = body.call(thisArg, _);
      } catch (e) {
        op = [6, e];
        y = 0;
      } finally {
        f = t = 0;
      }
    }
    if (op[0] & 5) throw op[1];
    return {
      value: op[0] ? op[1] : void 0,
      done: true
    };
  }
};

var clearPersistedStore = function clearPersistedStore(target) {
  return __awaiter(void 0, void 0, void 0, function () {
    var _a;
    return __generator(this, function (_b) {
      switch (_b.label) {
        case 0:
          return [4 /*yield*/, (_a = PersistStoreMap_PersistStoreMap.get(target)) === null || _a === void 0 ? void 0 : _a.clearPersistedStore()];
        case 1:
          _b.sent();
          return [2 /*return*/];
      }
    });
  });
};
;// CONCATENATED MODULE: ./node_modules/mobx-persist-store/lib/esm5/configurePersistable.js
var mpsConfig = {};
var mpsReactionOptions = {};
var configurePersistable = function configurePersistable(config, reactionOptions) {
  if (reactionOptions === void 0) {
    reactionOptions = {};
  }
  mpsConfig = config;
  mpsReactionOptions = reactionOptions;
};
;// CONCATENATED MODULE: ./node_modules/mobx-persist-store/lib/esm5/getPersistedStore.js
var getPersistedStore_awaiter = undefined && undefined.__awaiter || function (thisArg, _arguments, P, generator) {
  function adopt(value) {
    return value instanceof P ? value : new P(function (resolve) {
      resolve(value);
    });
  }
  return new (P || (P = Promise))(function (resolve, reject) {
    function fulfilled(value) {
      try {
        step(generator.next(value));
      } catch (e) {
        reject(e);
      }
    }
    function rejected(value) {
      try {
        step(generator["throw"](value));
      } catch (e) {
        reject(e);
      }
    }
    function step(result) {
      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
    }
    step((generator = generator.apply(thisArg, _arguments || [])).next());
  });
};
var getPersistedStore_generator = undefined && undefined.__generator || function (thisArg, body) {
  var _ = {
      label: 0,
      sent: function sent() {
        if (t[0] & 1) throw t[1];
        return t[1];
      },
      trys: [],
      ops: []
    },
    f,
    y,
    t,
    g;
  return g = {
    next: verb(0),
    "throw": verb(1),
    "return": verb(2)
  }, typeof Symbol === "function" && (g[Symbol.iterator] = function () {
    return this;
  }), g;
  function verb(n) {
    return function (v) {
      return step([n, v]);
    };
  }
  function step(op) {
    if (f) throw new TypeError("Generator is already executing.");
    while (_) {
      try {
        if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
        if (y = 0, t) op = [op[0] & 2, t.value];
        switch (op[0]) {
          case 0:
          case 1:
            t = op;
            break;
          case 4:
            _.label++;
            return {
              value: op[1],
              done: false
            };
          case 5:
            _.label++;
            y = op[1];
            op = [0];
            continue;
          case 7:
            op = _.ops.pop();
            _.trys.pop();
            continue;
          default:
            if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {
              _ = 0;
              continue;
            }
            if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {
              _.label = op[1];
              break;
            }
            if (op[0] === 6 && _.label < t[1]) {
              _.label = t[1];
              t = op;
              break;
            }
            if (t && _.label < t[2]) {
              _.label = t[2];
              _.ops.push(op);
              break;
            }
            if (t[2]) _.ops.pop();
            _.trys.pop();
            continue;
        }
        op = body.call(thisArg, _);
      } catch (e) {
        op = [6, e];
        y = 0;
      } finally {
        f = t = 0;
      }
    }
    if (op[0] & 5) throw op[1];
    return {
      value: op[0] ? op[1] : void 0,
      done: true
    };
  }
};

var getPersistedStore = function getPersistedStore(target) {
  return getPersistedStore_awaiter(void 0, void 0, void 0, function () {
    var _a, _b;
    return getPersistedStore_generator(this, function (_c) {
      return [2 /*return*/, (_b = (_a = PersistStoreMap.get(target)) === null || _a === void 0 ? void 0 : _a.getPersistedStore()) !== null && _b !== void 0 ? _b : null];
    });
  });
};
;// CONCATENATED MODULE: ./node_modules/mobx-persist-store/lib/esm5/hydrateStore.js
var hydrateStore_awaiter = undefined && undefined.__awaiter || function (thisArg, _arguments, P, generator) {
  function adopt(value) {
    return value instanceof P ? value : new P(function (resolve) {
      resolve(value);
    });
  }
  return new (P || (P = Promise))(function (resolve, reject) {
    function fulfilled(value) {
      try {
        step(generator.next(value));
      } catch (e) {
        reject(e);
      }
    }
    function rejected(value) {
      try {
        step(generator["throw"](value));
      } catch (e) {
        reject(e);
      }
    }
    function step(result) {
      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
    }
    step((generator = generator.apply(thisArg, _arguments || [])).next());
  });
};
var hydrateStore_generator = undefined && undefined.__generator || function (thisArg, body) {
  var _ = {
      label: 0,
      sent: function sent() {
        if (t[0] & 1) throw t[1];
        return t[1];
      },
      trys: [],
      ops: []
    },
    f,
    y,
    t,
    g;
  return g = {
    next: verb(0),
    "throw": verb(1),
    "return": verb(2)
  }, typeof Symbol === "function" && (g[Symbol.iterator] = function () {
    return this;
  }), g;
  function verb(n) {
    return function (v) {
      return step([n, v]);
    };
  }
  function step(op) {
    if (f) throw new TypeError("Generator is already executing.");
    while (_) {
      try {
        if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
        if (y = 0, t) op = [op[0] & 2, t.value];
        switch (op[0]) {
          case 0:
          case 1:
            t = op;
            break;
          case 4:
            _.label++;
            return {
              value: op[1],
              done: false
            };
          case 5:
            _.label++;
            y = op[1];
            op = [0];
            continue;
          case 7:
            op = _.ops.pop();
            _.trys.pop();
            continue;
          default:
            if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {
              _ = 0;
              continue;
            }
            if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {
              _.label = op[1];
              break;
            }
            if (op[0] === 6 && _.label < t[1]) {
              _.label = t[1];
              t = op;
              break;
            }
            if (t && _.label < t[2]) {
              _.label = t[2];
              _.ops.push(op);
              break;
            }
            if (t[2]) _.ops.pop();
            _.trys.pop();
            continue;
        }
        op = body.call(thisArg, _);
      } catch (e) {
        op = [6, e];
        y = 0;
      } finally {
        f = t = 0;
      }
    }
    if (op[0] & 5) throw op[1];
    return {
      value: op[0] ? op[1] : void 0,
      done: true
    };
  }
};

var hydrateStore = function hydrateStore(target) {
  return hydrateStore_awaiter(void 0, void 0, void 0, function () {
    var _a;
    return hydrateStore_generator(this, function (_b) {
      switch (_b.label) {
        case 0:
          return [4 /*yield*/, (_a = PersistStoreMap.get(target)) === null || _a === void 0 ? void 0 : _a.hydrateStore()];
        case 1:
          _b.sent();
          return [2 /*return*/];
      }
    });
  });
};
;// CONCATENATED MODULE: ./node_modules/mobx-persist-store/lib/esm5/isHydrated.js

var isHydrated = function isHydrated(target) {
  var _a, _b;
  return (_b = (_a = PersistStoreMap.get(target)) === null || _a === void 0 ? void 0 : _a.isHydrated) !== null && _b !== void 0 ? _b : false;
};
;// CONCATENATED MODULE: ./node_modules/mobx-persist-store/lib/esm5/isPersisting.js

var isPersisting = function isPersisting(target) {
  var _a, _b;
  return (_b = (_a = PersistStoreMap.get(target)) === null || _a === void 0 ? void 0 : _a.isPersisting) !== null && _b !== void 0 ? _b : false;
};
;// CONCATENATED MODULE: ./node_modules/mobx-persist-store/lib/esm5/utils.js
var buildExpireTimestamp = function buildExpireTimestamp(milliseconds) {
  return new Date().getTime() + milliseconds;
};
var hasTimestampExpired = function hasTimestampExpired(milliseconds) {
  var dateTimeNow = new Date().getTime();
  var dateTimeExpiration = new Date(milliseconds).getTime();
  return dateTimeExpiration <= dateTimeNow;
};
var isDefined = function isDefined(t) {
  return t != null;
};
/**
 * Check if the data is an object.
 */
var utils_isObject = function isObject(data) {
  return Boolean(data) && Array.isArray(data) === false && typeof data === 'object';
};
/**
 * Check the data is an object with properties.
 */
var isObjectWithProperties = function isObjectWithProperties(data) {
  return utils_isObject(data) && Object.keys(data).length > 0;
};
// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types
var utils_isFunction = function isFunction(functionToCheck) {
  return functionToCheck && functionToCheck instanceof Function;
};
var isStorageControllerLike = function isStorageControllerLike(value) {
  // "typeof Storage" fixes issue with React Native
  if (typeof Storage !== 'undefined' && value instanceof Storage) {
    return true;
  }
  return [value === null || value === void 0 ? void 0 : value.hasOwnProperty('getItem'), value === null || value === void 0 ? void 0 : value.hasOwnProperty('removeItem'), value === null || value === void 0 ? void 0 : value.hasOwnProperty('setItem'), utils_isFunction(value === null || value === void 0 ? void 0 : value.getItem), utils_isFunction(value === null || value === void 0 ? void 0 : value.removeItem), utils_isFunction(value === null || value === void 0 ? void 0 : value.setItem)].every(Boolean);
};
var utils_isBrowser = typeof window !== 'undefined';
var isNotProductionBuild = "production" !== 'production';
var invalidStorageAdaptorWarningIf = function invalidStorageAdaptorWarningIf(storageAdaptor, storageName) {
  if (utils_isBrowser && isNotProductionBuild && !isStorageControllerLike(storageAdaptor)) {
    console.warn("mobx-persist-store: ".concat(storageName, " does not have a valid storage adaptor.\n\n* Make sure the storage controller has 'getItem', 'setItem' and 'removeItem' methods.\""));
  }
};
var duplicatedStoreWarningIf = function duplicatedStoreWarningIf(hasPersistedStoreAlready, storageName) {
  if (utils_isBrowser && isNotProductionBuild && hasPersistedStoreAlready) {
    console.warn("mobx-persist-store: 'makePersistable' was called was called with the same storage name \"".concat(storageName, "\".\n\n * Make sure you call \"stopPersisting\" before recreating \"").concat(storageName, "\" to avoid memory leaks. \n * Or double check you did not have two stores with the same name."));
  }
};
var computedPersistWarningIf = function computedPersistWarningIf(isComputedProperty, propertyName) {
  if (utils_isBrowser && isNotProductionBuild && isComputedProperty) {
    console.warn("mobx-persist-store: The property '".concat(propertyName, "' is computed and will not persist."));
  }
};
var actionPersistWarningIf = function actionPersistWarningIf(isComputedProperty, propertyName) {
  if (utils_isBrowser && isNotProductionBuild && isComputedProperty) {
    console.warn("mobx-persist-store: The property '".concat(propertyName, "' is an action and will not persist."));
  }
};
var consoleDebug = function consoleDebug(isDebugMode, message, content) {
  if (content === void 0) {
    content = '';
  }
  if (isDebugMode && utils_isBrowser && isNotProductionBuild) {
    console.info("%c mobx-persist-store: (Debug Mode) ".concat(message, " "), 'background: #4B8CC5; color: black; display: block;', content);
  }
};
var isArrayForMap = function isArrayForMap(value) {
  if (Array.isArray(value)) {
    return value.every(function (v) {
      return Array.isArray(v);
    });
  }
  return false;
};
;// CONCATENATED MODULE: ./node_modules/mobx-persist-store/lib/esm5/StorageAdapter.js
var StorageAdapter_awaiter = undefined && undefined.__awaiter || function (thisArg, _arguments, P, generator) {
  function adopt(value) {
    return value instanceof P ? value : new P(function (resolve) {
      resolve(value);
    });
  }
  return new (P || (P = Promise))(function (resolve, reject) {
    function fulfilled(value) {
      try {
        step(generator.next(value));
      } catch (e) {
        reject(e);
      }
    }
    function rejected(value) {
      try {
        step(generator["throw"](value));
      } catch (e) {
        reject(e);
      }
    }
    function step(result) {
      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
    }
    step((generator = generator.apply(thisArg, _arguments || [])).next());
  });
};
var StorageAdapter_generator = undefined && undefined.__generator || function (thisArg, body) {
  var _ = {
      label: 0,
      sent: function sent() {
        if (t[0] & 1) throw t[1];
        return t[1];
      },
      trys: [],
      ops: []
    },
    f,
    y,
    t,
    g;
  return g = {
    next: verb(0),
    "throw": verb(1),
    "return": verb(2)
  }, typeof Symbol === "function" && (g[Symbol.iterator] = function () {
    return this;
  }), g;
  function verb(n) {
    return function (v) {
      return step([n, v]);
    };
  }
  function step(op) {
    if (f) throw new TypeError("Generator is already executing.");
    while (_) {
      try {
        if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
        if (y = 0, t) op = [op[0] & 2, t.value];
        switch (op[0]) {
          case 0:
          case 1:
            t = op;
            break;
          case 4:
            _.label++;
            return {
              value: op[1],
              done: false
            };
          case 5:
            _.label++;
            y = op[1];
            op = [0];
            continue;
          case 7:
            op = _.ops.pop();
            _.trys.pop();
            continue;
          default:
            if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {
              _ = 0;
              continue;
            }
            if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {
              _.label = op[1];
              break;
            }
            if (op[0] === 6 && _.label < t[1]) {
              _.label = t[1];
              t = op;
              break;
            }
            if (t && _.label < t[2]) {
              _.label = t[2];
              _.ops.push(op);
              break;
            }
            if (t[2]) _.ops.pop();
            _.trys.pop();
            continue;
        }
        op = body.call(thisArg, _);
      } catch (e) {
        op = [6, e];
        y = 0;
      } finally {
        f = t = 0;
      }
    }
    if (op[0] & 5) throw op[1];
    return {
      value: op[0] ? op[1] : void 0,
      done: true
    };
  }
};

var StorageAdapter = /** @class */function () {
  function StorageAdapter(options) {
    this.options = options;
  }
  StorageAdapter.prototype.setItem = function (key, item) {
    var _a;
    return StorageAdapter_awaiter(this, void 0, void 0, function () {
      var _b, _c, stringify, _d, debugMode, data, content;
      return StorageAdapter_generator(this, function (_e) {
        switch (_e.label) {
          case 0:
            _b = this.options, _c = _b.stringify, stringify = _c === void 0 ? true : _c, _d = _b.debugMode, debugMode = _d === void 0 ? false : _d;
            data = this.options.expireIn ? Object.assign({}, item, {
              __mps__: {
                expireInTimestamp: buildExpireTimestamp(this.options.expireIn)
              }
            }) : item;
            content = stringify ? JSON.stringify(data) : data;
            consoleDebug(debugMode, "".concat(key, " - setItem:"), content);
            return [4 /*yield*/, (_a = this.options.storage) === null || _a === void 0 ? void 0 : _a.setItem(key, content)];
          case 1:
            _e.sent();
            return [2 /*return*/];
        }
      });
    });
  };

  StorageAdapter.prototype.getItem = function (key) {
    var _a, _b;
    return StorageAdapter_awaiter(this, void 0, void 0, function () {
      var _c, _d, removeOnExpiration, _e, debugMode, storageData, parsedData, hasExpired;
      return StorageAdapter_generator(this, function (_f) {
        switch (_f.label) {
          case 0:
            _c = this.options, _d = _c.removeOnExpiration, removeOnExpiration = _d === void 0 ? true : _d, _e = _c.debugMode, debugMode = _e === void 0 ? false : _e;
            return [4 /*yield*/, (_a = this.options.storage) === null || _a === void 0 ? void 0 : _a.getItem(key)];
          case 1:
            storageData = _f.sent();
            try {
              parsedData = JSON.parse(storageData) || {};
            } catch (error) {
              parsedData = storageData || {};
            }
            hasExpired = hasTimestampExpired((_b = parsedData.__mps__) === null || _b === void 0 ? void 0 : _b.expireInTimestamp);
            consoleDebug(debugMode, "".concat(key, " - hasExpired"), hasExpired);
            if (!(hasExpired && removeOnExpiration)) return [3 /*break*/, 3];
            return [4 /*yield*/, this.removeItem(key)];
          case 2:
            _f.sent();
            _f.label = 3;
          case 3:
            parsedData = hasExpired ? {} : parsedData;
            consoleDebug(debugMode, "".concat(key, " - (getItem):"), parsedData);
            return [2 /*return*/, parsedData];
        }
      });
    });
  };
  StorageAdapter.prototype.removeItem = function (key) {
    var _a;
    return StorageAdapter_awaiter(this, void 0, void 0, function () {
      var _b, debugMode;
      return StorageAdapter_generator(this, function (_c) {
        switch (_c.label) {
          case 0:
            _b = this.options.debugMode, debugMode = _b === void 0 ? false : _b;
            consoleDebug(debugMode, "".concat(key, " - (removeItem): storage was removed"));
            return [4 /*yield*/, (_a = this.options.storage) === null || _a === void 0 ? void 0 : _a.removeItem(key)];
          case 1:
            _c.sent();
            return [2 /*return*/];
        }
      });
    });
  };

  return StorageAdapter;
}();

;// CONCATENATED MODULE: ./node_modules/mobx-persist-store/lib/esm5/serializableProperty.js


var isSerializableProperty = function isSerializableProperty(obj) {
  var keys = ['key', 'serialize', 'deserialize'];
  if (!utils_isObject(obj)) {
    consoleDebug(!!mpsConfig.debugMode, 'passed value is not an object', {
      obj: obj
    });
    return false;
  }
  return keys.every(function (key) {
    if (obj.hasOwnProperty(key) && typeof key !== 'undefined') {
      return true;
    }
    consoleDebug(!!mpsConfig.debugMode, "".concat(String(key), " not found in SerializableProperty"), {
      key: key,
      obj: obj
    });
    return false;
  });
};
var makeSerializableProperties = function makeSerializableProperties(properties) {
  return properties.reduce(function (acc, curr) {
    if (typeof curr === 'string') {
      acc.push({
        key: curr,
        serialize: function serialize(value) {
          return value;
        },
        deserialize: function deserialize(value) {
          return value;
        }
      });
      return acc;
    }
    if (isSerializableProperty(curr)) {
      acc.push(curr);
      return acc;
    }
    return acc;
  }, []);
};
;// CONCATENATED MODULE: ./node_modules/mobx-persist-store/lib/esm5/PersistStore.js
var PersistStore_awaiter = undefined && undefined.__awaiter || function (thisArg, _arguments, P, generator) {
  function adopt(value) {
    return value instanceof P ? value : new P(function (resolve) {
      resolve(value);
    });
  }
  return new (P || (P = Promise))(function (resolve, reject) {
    function fulfilled(value) {
      try {
        step(generator.next(value));
      } catch (e) {
        reject(e);
      }
    }
    function rejected(value) {
      try {
        step(generator["throw"](value));
      } catch (e) {
        reject(e);
      }
    }
    function step(result) {
      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
    }
    step((generator = generator.apply(thisArg, _arguments || [])).next());
  });
};
var PersistStore_generator = undefined && undefined.__generator || function (thisArg, body) {
  var _ = {
      label: 0,
      sent: function sent() {
        if (t[0] & 1) throw t[1];
        return t[1];
      },
      trys: [],
      ops: []
    },
    f,
    y,
    t,
    g;
  return g = {
    next: verb(0),
    "throw": verb(1),
    "return": verb(2)
  }, typeof Symbol === "function" && (g[Symbol.iterator] = function () {
    return this;
  }), g;
  function verb(n) {
    return function (v) {
      return step([n, v]);
    };
  }
  function step(op) {
    if (f) throw new TypeError("Generator is already executing.");
    while (_) {
      try {
        if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
        if (y = 0, t) op = [op[0] & 2, t.value];
        switch (op[0]) {
          case 0:
          case 1:
            t = op;
            break;
          case 4:
            _.label++;
            return {
              value: op[1],
              done: false
            };
          case 5:
            _.label++;
            y = op[1];
            op = [0];
            continue;
          case 7:
            op = _.ops.pop();
            _.trys.pop();
            continue;
          default:
            if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {
              _ = 0;
              continue;
            }
            if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {
              _.label = op[1];
              break;
            }
            if (op[0] === 6 && _.label < t[1]) {
              _.label = t[1];
              t = op;
              break;
            }
            if (t && _.label < t[2]) {
              _.label = t[2];
              _.ops.push(op);
              break;
            }
            if (t[2]) _.ops.pop();
            _.trys.pop();
            continue;
        }
        op = body.call(thisArg, _);
      } catch (e) {
        op = [6, e];
        y = 0;
      } finally {
        f = t = 0;
      }
    }
    if (op[0] & 5) throw op[1];
    return {
      value: op[0] ? op[1] : void 0,
      done: true
    };
  }
};






var PersistStore = /** @class */function () {
  function PersistStore(target, options, reactionOptions) {
    if (reactionOptions === void 0) {
      reactionOptions = {};
    }
    var _a, _b, _c, _d, _e, _f, _g;
    this.cancelWatch = null;
    this.properties = [];
    this.reactionOptions = {};
    this.storageAdapter = null;
    this.target = null;
    this.debugMode = false;
    this.isHydrated = false;
    this.isPersisting = false;
    this.storageName = '';
    this.target = target;
    this.storageName = options.name;
    this.properties = makeSerializableProperties(options.properties);
    this.reactionOptions = Object.assign({
      fireImmediately: true
    }, mpsReactionOptions, reactionOptions);
    this.debugMode = (_b = (_a = options.debugMode) !== null && _a !== void 0 ? _a : mpsConfig.debugMode) !== null && _b !== void 0 ? _b : false;
    this.storageAdapter = new StorageAdapter({
      expireIn: (_c = options.expireIn) !== null && _c !== void 0 ? _c : mpsConfig.expireIn,
      removeOnExpiration: (_e = (_d = options.removeOnExpiration) !== null && _d !== void 0 ? _d : mpsConfig.removeOnExpiration) !== null && _e !== void 0 ? _e : true,
      stringify: (_g = (_f = options.stringify) !== null && _f !== void 0 ? _f : mpsConfig.stringify) !== null && _g !== void 0 ? _g : true,
      storage: options.storage ? options.storage : mpsConfig.storage,
      debugMode: this.debugMode
    });
    makeObservable(this, {
      clearPersistedStore: action,
      hydrateStore: action,
      isHydrated: mobx_esm_observable,
      isPersisting: mobx_esm_observable,
      pausePersisting: action,
      startPersisting: action,
      stopPersisting: action
    }, {
      autoBind: true,
      deep: false
    });
    invalidStorageAdaptorWarningIf(this.storageAdapter.options.storage, this.storageName);
    consoleDebug(this.debugMode, "".concat(this.storageName, " - (makePersistable)"), {
      properties: this.properties,
      storageAdapter: this.storageAdapter,
      reactionOptions: this.reactionOptions
    });
  }
  PersistStore.prototype.init = function () {
    return PersistStore_awaiter(this, void 0, void 0, function () {
      return PersistStore_generator(this, function (_a) {
        switch (_a.label) {
          case 0:
            return [4 /*yield*/, this.hydrateStore()];
          case 1:
            _a.sent();
            this.startPersisting();
            return [2 /*return*/, this];
        }
      });
    });
  };
  PersistStore.prototype.hydrateStore = function () {
    return PersistStore_awaiter(this, void 0, void 0, function () {
      var isBeingWatched, data_1, target_1;
      var _this = this;
      return PersistStore_generator(this, function (_a) {
        switch (_a.label) {
          case 0:
            isBeingWatched = Boolean(this.cancelWatch);
            if (this.isPersisting) {
              this.pausePersisting();
            }
            mobx_esm_runInAction(function () {
              _this.isHydrated = false;
              consoleDebug(_this.debugMode, "".concat(_this.storageName, " - (hydrateStore) isHydrated:"), _this.isHydrated);
            });
            if (!(this.storageAdapter && this.target)) return [3 /*break*/, 2];
            return [4 /*yield*/, this.storageAdapter.getItem(this.storageName)];
          case 1:
            data_1 = _a.sent();
            target_1 = this.target;
            if (data_1) {
              mobx_esm_runInAction(function () {
                _this.properties.forEach(function (property) {
                  var allowPropertyHydration = [target_1.hasOwnProperty(property.key), typeof data_1[property.key] !== 'undefined'].every(Boolean);
                  if (allowPropertyHydration) {
                    var propertyData = data_1[property.key];
                    if (target_1[property.key] instanceof ObservableMap && isArrayForMap(propertyData)) {
                      target_1[property.key] = property.deserialize(new Map(propertyData));
                    } else {
                      target_1[property.key] = property.deserialize(propertyData);
                    }
                  }
                });
              });
            }
            _a.label = 2;
          case 2:
            mobx_esm_runInAction(function () {
              _this.isHydrated = true;
              consoleDebug(_this.debugMode, "".concat(_this.storageName, " - isHydrated:"), _this.isHydrated);
            });
            if (isBeingWatched) {
              this.startPersisting();
            }
            return [2 /*return*/];
        }
      });
    });
  };

  PersistStore.prototype.startPersisting = function () {
    var _this = this;
    if (!this.storageAdapter || !this.target || this.cancelWatch) {
      return;
    }
    // Reassigning so TypeScript doesn't complain (Object is possibly 'null') about and this.target within reaction
    var target = this.target;
    this.cancelWatch = reaction(function () {
      var propertiesToWatch = {};
      _this.properties.forEach(function (property) {
        var isComputedProperty = isComputedProp(target, property.key);
        var isActionProperty = isAction(target[property.key]);
        computedPersistWarningIf(isComputedProperty, String(property.key));
        actionPersistWarningIf(isActionProperty, String(property.key));
        if (!isComputedProperty && !isActionProperty) {
          var propertyData = property.serialize(target[property.key]);
          if (propertyData instanceof ObservableMap) {
            var mapArray_1 = [];
            propertyData.forEach(function (v, k) {
              mapArray_1.push([k, toJS(v)]);
            });
            propertyData = mapArray_1;
          }
          propertiesToWatch[property.key] = toJS(propertyData);
        }
      });
      return propertiesToWatch;
    }, function (dataToSave) {
      return PersistStore_awaiter(_this, void 0, void 0, function () {
        return PersistStore_generator(this, function (_a) {
          switch (_a.label) {
            case 0:
              if (!this.storageAdapter) return [3 /*break*/, 2];
              return [4 /*yield*/, this.storageAdapter.setItem(this.storageName, dataToSave)];
            case 1:
              _a.sent();
              _a.label = 2;
            case 2:
              return [2 /*return*/];
          }
        });
      });
    }, this.reactionOptions);
    this.isPersisting = true;
    consoleDebug(this.debugMode, "".concat(this.storageName, " - (startPersisting) isPersisting:"), this.isPersisting);
  };
  PersistStore.prototype.pausePersisting = function () {
    this.isPersisting = false;
    consoleDebug(this.debugMode, "".concat(this.storageName, " - pausePersisting (isPersisting):"), this.isPersisting);
    if (this.cancelWatch) {
      this.cancelWatch();
      this.cancelWatch = null;
    }
  };
  PersistStore.prototype.stopPersisting = function () {
    this.pausePersisting();
    consoleDebug(this.debugMode, "".concat(this.storageName, " - (stopPersisting)"));
    PersistStoreMap_PersistStoreMap["delete"](this.target);
    this.cancelWatch = null;
    this.properties = [];
    this.reactionOptions = {};
    this.storageAdapter = null;
    this.target = null;
  };
  PersistStore.prototype.clearPersistedStore = function () {
    return PersistStore_awaiter(this, void 0, void 0, function () {
      return PersistStore_generator(this, function (_a) {
        switch (_a.label) {
          case 0:
            if (!this.storageAdapter) return [3 /*break*/, 2];
            consoleDebug(this.debugMode, "".concat(this.storageName, " - (clearPersistedStore)"));
            return [4 /*yield*/, this.storageAdapter.removeItem(this.storageName)];
          case 1:
            _a.sent();
            _a.label = 2;
          case 2:
            return [2 /*return*/];
        }
      });
    });
  };

  PersistStore.prototype.getPersistedStore = function () {
    return PersistStore_awaiter(this, void 0, void 0, function () {
      return PersistStore_generator(this, function (_a) {
        if (this.storageAdapter) {
          consoleDebug(this.debugMode, "".concat(this.storageName, " - (getPersistedStore)"));
          // @ts-ignore
          return [2 /*return*/, this.storageAdapter.getItem(this.storageName)];
        }
        return [2 /*return*/, null];
      });
    });
  };
  return PersistStore;
}();

;// CONCATENATED MODULE: ./node_modules/mobx-persist-store/lib/esm5/makePersistable.js
var makePersistable_awaiter = undefined && undefined.__awaiter || function (thisArg, _arguments, P, generator) {
  function adopt(value) {
    return value instanceof P ? value : new P(function (resolve) {
      resolve(value);
    });
  }
  return new (P || (P = Promise))(function (resolve, reject) {
    function fulfilled(value) {
      try {
        step(generator.next(value));
      } catch (e) {
        reject(e);
      }
    }
    function rejected(value) {
      try {
        step(generator["throw"](value));
      } catch (e) {
        reject(e);
      }
    }
    function step(result) {
      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
    }
    step((generator = generator.apply(thisArg, _arguments || [])).next());
  });
};
var makePersistable_generator = undefined && undefined.__generator || function (thisArg, body) {
  var _ = {
      label: 0,
      sent: function sent() {
        if (t[0] & 1) throw t[1];
        return t[1];
      },
      trys: [],
      ops: []
    },
    f,
    y,
    t,
    g;
  return g = {
    next: verb(0),
    "throw": verb(1),
    "return": verb(2)
  }, typeof Symbol === "function" && (g[Symbol.iterator] = function () {
    return this;
  }), g;
  function verb(n) {
    return function (v) {
      return step([n, v]);
    };
  }
  function step(op) {
    if (f) throw new TypeError("Generator is already executing.");
    while (_) {
      try {
        if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
        if (y = 0, t) op = [op[0] & 2, t.value];
        switch (op[0]) {
          case 0:
          case 1:
            t = op;
            break;
          case 4:
            _.label++;
            return {
              value: op[1],
              done: false
            };
          case 5:
            _.label++;
            y = op[1];
            op = [0];
            continue;
          case 7:
            op = _.ops.pop();
            _.trys.pop();
            continue;
          default:
            if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {
              _ = 0;
              continue;
            }
            if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {
              _.label = op[1];
              break;
            }
            if (op[0] === 6 && _.label < t[1]) {
              _.label = t[1];
              t = op;
              break;
            }
            if (t && _.label < t[2]) {
              _.label = t[2];
              _.ops.push(op);
              break;
            }
            if (t[2]) _.ops.pop();
            _.trys.pop();
            continue;
        }
        op = body.call(thisArg, _);
      } catch (e) {
        op = [6, e];
        y = 0;
      } finally {
        f = t = 0;
      }
    }
    if (op[0] & 5) throw op[1];
    return {
      value: op[0] ? op[1] : void 0,
      done: true
    };
  }
};



var makePersistable = function makePersistable(target, storageOptions, reactionOptions) {
  return makePersistable_awaiter(void 0, void 0, void 0, function () {
    var mobxPersistStore, hasPersistedStoreAlready;
    return makePersistable_generator(this, function (_a) {
      mobxPersistStore = new PersistStore(target, storageOptions, reactionOptions);
      hasPersistedStoreAlready = Array.from(PersistStoreMap_PersistStoreMap.values()).map(function (item) {
        return item.storageName;
      }).includes(mobxPersistStore.storageName);
      duplicatedStoreWarningIf(hasPersistedStoreAlready, mobxPersistStore.storageName);
      PersistStoreMap_PersistStoreMap.set(target, mobxPersistStore);
      return [2 /*return*/, mobxPersistStore.init()];
    });
  });
};
;// CONCATENATED MODULE: ./node_modules/mobx-persist-store/lib/esm5/pausePersisting.js

var pausePersisting = function pausePersisting(target) {
  var _a;
  (_a = PersistStoreMap.get(target)) === null || _a === void 0 ? void 0 : _a.pausePersisting();
};
;// CONCATENATED MODULE: ./node_modules/mobx-persist-store/lib/esm5/startPersisting.js

var startPersisting = function startPersisting(target) {
  var _a;
  (_a = PersistStoreMap.get(target)) === null || _a === void 0 ? void 0 : _a.startPersisting();
};
;// CONCATENATED MODULE: ./node_modules/mobx-persist-store/lib/esm5/stopPersisting.js

var stopPersisting = function stopPersisting(target) {
  var _a;
  (_a = PersistStoreMap.get(target)) === null || _a === void 0 ? void 0 : _a.stopPersisting();
};
;// CONCATENATED MODULE: ./node_modules/mobx-persist-store/lib/esm5/index.js














// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js
var unsupportedIterableToArray = __webpack_require__(181);
;// CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js

function createForOfIteratorHelper_createForOfIteratorHelper(o, allowArrayLike) {
  var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"];
  if (!it) {
    if (Array.isArray(o) || (it = (0,unsupportedIterableToArray/* default */.Z)(o)) || allowArrayLike && o && typeof o.length === "number") {
      if (it) o = it;
      var i = 0;
      var F = function F() {};
      return {
        s: F,
        n: function n() {
          if (i >= o.length) return {
            done: true
          };
          return {
            done: false,
            value: o[i++]
          };
        },
        e: function e(_e) {
          throw _e;
        },
        f: F
      };
    }
    throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
  }
  var normalCompletion = true,
    didErr = false,
    err;
  return {
    s: function s() {
      it = it.call(o);
    },
    n: function n() {
      var step = it.next();
      normalCompletion = step.done;
      return step;
    },
    e: function e(_e2) {
      didErr = true;
      err = _e2;
    },
    f: function f() {
      try {
        if (!normalCompletion && it["return"] != null) it["return"]();
      } finally {
        if (didErr) throw err;
      }
    }
  };
}
// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/toConsumableArray.js + 2 modules
var toConsumableArray = __webpack_require__(3433);
;// CONCATENATED MODULE: ./src/lib/utils.js
var puncRegex=/[.;!:?,\u2013]+/;function isPunctuation(str){return puncRegex.test(str);}function getRandomInt(min,max){// todo: use today's date as the seed (y+m+d)
min=Math.ceil(min);max=Math.floor(max);return Math.floor(Math.random()*(max-min)+min);// The maximum is exclusive and the minimum is inclusive
}function timeDisplayFromSeconds(sec){var secString=String(Math.floor(sec%60)).padStart(2,'0');var minString=String(Math.floor(sec/60)).padStart(1,'0');return"".concat(minString,":").concat(secString);}function getPercentile(v,list){// if (v < list[0]) return 0
// if (v > list[list.length - 1]) return 100
return 0;// return (v * 100) / list.length
}function getBrowser(){var userAgentString=navigator.userAgent;function has(name){return userAgentString.indexOf(name)>-1;}return{chrome:has('Chrome'),safari:has('Safari')&&!has('Chrome'),safariMac:has('Safari')&&has('Macintosh'),firefox:has('Firefox'),iphone:has('iPhone'),name:userAgentString};}function isDevEnv(){return "production"==='development';}var lib_utils_isObject=function isObject(value){return(value===null||value===void 0?void 0:value.constructor)===Object;};function oneTimeListener(node,type,callback){node.addEventListener(type,function listener(e){e.target.removeEventListener(e.type,listener);return callback.call(this,e);},{once:true});}var removeAndAddListener=function removeAndAddListener(el,name,fn){if(typeof el==='string'){el=document.getElementById(el);}el.removeEventListener(name,fn);el.addEventListener(name,fn);};var removeListener=function removeListener(el,name,fn){if(typeof el==='string'){el=document.getElementById(el);}el.removeEventListener(name,fn);};function addAndRemoveClassWithEndCallback(el,className,eventName){var endedCallback=arguments.length>3&&arguments[3]!==undefined?arguments[3]:function(){};el.classList.add(className);oneTimeListener(el,eventName,function(ev){ev.target.classList.remove(className);endedCallback();});}var getRect=function getRect(el){var rect=el.getBoundingClientRect();var top=rect.top,right=rect.right,bottom=rect.bottom,left=rect.left,width=rect.width,height=rect.height,x=rect.x,y=rect.y;var centerX=rect.x+rect.width/2;var centerY=rect.y+rect.height/2;return{top:top,right:right,bottom:bottom,left:left,width:width,height:height,x:x,y:y,centerX:centerX,centerY:centerY};};
;// CONCATENATED MODULE: ./src/store/tweaks.js
var tweaks={perWordBonus:5,noMissesBonus:10,fastFingersBonus:10,perDoubleGreensBonus:5};
;// CONCATENATED MODULE: ./src/store/Puzzle.js
var Puzzle=/*#__PURE__*/function(){//volitile after puzzle is loaded
function Puzzle(obj,rootStore){classCallCheck_classCallCheck(this,Puzzle);this.root=null;this.category='';this.hints=[];this.origList=[];this.currListIndexes=[];this.state='';this.secondsTaken=0;this.hintsUsed=0;this.misses=0;this.lives=3;this.greenMoves=0;this.doubleGreenMoves=0;this.rewards=[];this.timerIterationId=[];this.startTime=null;this.wordBank=[];this.root=rootStore;this.setPuzzleData(obj);this.updateHyperlinks();this.generateWordList();this.saveMoveCounts();this.setupWordBank();makeAutoObservable(this,{timerIterationId:false,startTime:false,updateVolitileFields:false,getCorrectlyCapitalized:false,getCurrItemByElem:false,origList:mobx_esm_observable.shallow,rewards:mobx_esm_observable.shallow,wordBank:mobx_esm_observable.shallow});this.startStopwatch();}createClass_createClass(Puzzle,[{key:"setPuzzleData",value:function setPuzzleData(obj){this.attribution=obj.attribution;this.id=obj.id;this.lang=obj.lang;this.shuffledPositions=obj.positions;this.positions=(0,toConsumableArray/* default */.Z)(obj.positions).sort(function(a,b){return a-b;});this.propnouns=obj.propnouns;this.tags=obj.tags;this.text=obj.text;this.ver=obj.ver;this.hints=obj.hints||[];this.difficulty=obj.difficulty||-1;}},{key:"updateHyperlinks",value:function updateHyperlinks(){this.attribution=this.attribution.replace('<a href=',"<a target='_blank' href=");}},{key:"generateWordList",value:function generateWordList(){var _this=this;var globalPuncRegex=new RegExp(puncRegex,'g');var txtWithSpaces=this.text.replace(globalPuncRegex,' $&');var wordList=txtWithSpaces.split(' ').filter(function(i){return i;});this.origList=wordList.map(function(w,i){return{origIndex:i,origText:w,lowerText:w.toLowerCase(),isPunc:isPunctuation(w),elemPtr:null,isPropNoun:_this.propnouns.includes(i),// these volatile get updated when words swap
isRevealed:i===_this.shuffledPositions[i],index:null,isValid:null,isPreviousItemValid:null,isPreviousWordPunc:null,correctlyCapitalized:null};});this.currListIndexes=this.positions.slice();this.updateVolatileFields();}},{key:"setState",value:function setState(state){if(!['puzzleLoaded','playing','succeeded'].includes(state)){throw new Error("invalid state: ".concat(state));}if(state==='succeeded'){this.updateRewards();var elapsedSeconds=(Date.now()-this.startTime)/1000;this.setSecondsTaken(elapsedSeconds);this.clearStopwatch();}this.state=state;}},{key:"saveMoveCounts",value:function saveMoveCounts(){this.totalPossibleGreenMoves=this.currList.filter(function(item){return!item.isPunc;}).length;this.greenMoves=this.currList.filter(function(item){return item.isValid&&!item.isPunc;}).length;}},{key:"score",get:function get(){return this.misses+this.hintsUsed;}},{key:"setSecondsTaken",value:function setSecondsTaken(v){this.secondsTaken=v;}},{key:"formattedTimeTaken",get:function get(){var taken=this.secondsTaken;return"".concat(Math.floor(taken/60),"m").concat(Math.round(taken%60),"s");}},{key:"currList",get:function get(){var _this2=this;return this.currListIndexes.map(function(i){return _this2.origList[i];});}},{key:"isItemValidAtIndex",value:function isItemValidAtIndex(item,index){return item.lowerText===this.origList[index].lowerText;}},{key:"flatElementList",get:function get(){return this.currList.map(function(item){return item.elemPtr;});}},{key:"setupWordBank",value:function setupWordBank(){var _this3=this;this.wordBank=this.currList.filter(function(item){return!item.isPunc&&!item.isRevealed;}).sort(function(a,b){return _this3.shuffledPositions.indexOf(a.index)-_this3.shuffledPositions.indexOf(b.index);}).map(function(item){var text=item.isPropNoun?item.origText:item.lowerText;return{text:text,lowerText:text.toLowerCase(),elemPtr:null};});}},{key:"placeWord",value:function placeWord(wordBankEl,puzzleEl){var bankItem=this.getWordBankItemByElem(wordBankEl);// get bankItem
var puzzItem=this.getCurrItemByElem(puzzleEl);if(bankItem.lowerText===puzzItem.lowerText){puzzItem.isRevealed=true;this.wordBank=this.wordBank.filter(function(i){return i!==bankItem;});this.updateVolatileFields();return true;}else{this.misses+=1;return false;}}},{key:"swapElements",value:function swapElements(a,b){var itemA=this.getCurrItemByElem(a);var itemB=this.getCurrItemByElem(b);var indexA=itemA.index;var indexB=itemB.index;var tmp=this.currListIndexes[indexA];this.currListIndexes[indexA]=this.currListIndexes[indexB];this.currListIndexes[indexB]=tmp;this.updateVolatileFields();var green=[itemA,itemB].filter(function(i){return i.isValid;}).length;this.greenMoves+=green;if(green===2)this.doubleGreenMoves+=1;this.misses+=green?0:1;}},{key:"updateVolatileFields",value:function updateVolatileFields(){var _this4=this;this.currListIndexes.forEach(function(value,iter){var item=_this4.origList[value];item.index=iter;item.isValid=_this4.isItemValidAtIndex(item,item.index);var prevItem=item.index>0?_this4.currList[iter-1]:null;item.isPreviousItemValid=prevItem===null||prevItem===void 0?void 0:prevItem.isValid;item.correctlyCapitalized=item.isRevealed?_this4.getCorrectlyCapitalized(item,prevItem):"\xA0".repeat(6);// &nbsp;
});}},{key:"getCorrectlyCapitalized",value:function getCorrectlyCapitalized(item,prevItem){var capitalizeIt=item.index===0||item.isPropNoun||prevItem.lowerText.match(/[!?.]$/);var firstLetter=item.origText[0];firstLetter=capitalizeIt?firstLetter.toUpperCase():firstLetter.toLowerCase();return firstLetter+item.origText.slice(1);}},{key:"getWordBankItemByElem",value:function getWordBankItemByElem(elem){return this.wordBank.find(function(item){return elem===item.elemPtr;});}},{key:"getNextIncorrectItem",value:function getNextIncorrectItem(currItem){return this.currList.find(function(item,i){return i>currItem.index&&!item.isRevealed;});}},{key:"getCurrItemByElem",value:function getCurrItemByElem(elem){return this.currList.find(function(item){return elem===item.elemPtr;});}},{key:"willSwappingItemsBeSuccessful",value:function willSwappingItemsBeSuccessful(elemA,elemB){var itemA=this.getCurrItemByElem(elemA);var itemB=this.getCurrItemByElem(elemB);return this.isItemValidAtIndex(itemA,itemB.index)||this.isItemValidAtIndex(itemB,itemA.index);}},{key:"giveHint",value:function giveHint(){// give next hint in the hint list that is !isRevealed
// if that yields nothing, pick the next longest unrevealed word
var item=null;while(this.hints.length>0){var h=this.hints.shift();if(!this.currList[h].isRevealed){item=this.currList[h];break;}}if(!item){var itemsTemp=this.currList.filter(function(i){return!i.isRevealed;});itemsTemp.sort(function(a,b){return a.origText.length>b.origText.length;});item=itemsTemp[0];}item.isRevealed=true;var bankItemToRemove=this.wordBank.find(function(bankItem){return bankItem.lowerText===item.lowerText;});this.wordBank=this.wordBank.filter(function(bankItem){return bankItem!==bankItemToRemove;});this.updateVolatileFields();}},{key:"isPuzzleSolved",get:function get(){var _iterator=createForOfIteratorHelper_createForOfIteratorHelper(this.currList),_step;try{for(_iterator.s();!(_step=_iterator.n()).done;){var i=_step.value;if(!i.isRevealed){return false;}}}catch(err){_iterator.e(err);}finally{_iterator.f();}return true;}},{key:"updateRewards",value:function updateRewards(){var rewards=[];rewards.push({text:'words bonus',amount:this.positions.length*tweaks.perWordBonus});if(this.misses===0){rewards.push({text:'no misses',amount:tweaks.noMissesBonus});}if(this.secondsTaken<15){rewards.push({text:'fast fingers',amount:tweaks.fastFingersBonus});}this.rewards=rewards;var total=rewards.reduce(function(prev,curr){return prev+curr.amount;},0);this.root.gameStore.updatePurseBalance(total);}},{key:"startStopwatch",value:function startStopwatch(){var _this5=this;this.clearStopwatch();this.startTime=Date.now();this.root.helpTips.startTracking();setTimeout(function(){_this5.timerIterationId.push(setInterval(function(){_this5.setSecondsTaken((Date.now()-_this5.startTime)/1000);},1000));},250);// why?
}},{key:"clearStopwatch",value:function clearStopwatch(){this.timerIterationId.forEach(function(n){return clearInterval(n);});this.timerIterationId=[];this.root.helpTips.stopTracking();}},{key:"setIsWordSelected",value:function setIsWordSelected(v){this.isWordSelected=v;if(v){this.root.helpTips.registerSelection();}}}]);return Puzzle;}();// end of class
;// CONCATENATED MODULE: ./src/assets/puzzles/puzzleData.json
var puzzleData_namespaceObject = JSON.parse('[{"attribution":"<a href=\'https://www.songfacts.com/facts/bobby-mcferrin/dont-worry-be-happy\'>Bobby McFerrin\'s</a> 1989 Grammy winning hit","givens":[],"hints":[4],"difficulty":0,"id":"tut1","lang":"en","positions":[0,1,2,4,3,5],"propnouns":[],"tags":[],"text":"Don\'t worry, be happy.","ver":1},{"attribution":"<a href=\'https://www.smithsonianmag.com/arts-culture/for-those-ruby-red-slippers-theres-no-place-like-home-130170740/?no-ist\'>Dorothy</a>, The Wizard of Oz","givens":[],"hints":[0],"difficulty":0,"id":"tut2","lang":"en","positions":[3,2,1,0,4,5],"propnouns":[],"tags":[],"text":"There\'s no place like home.","ver":1},{"attribution":"<a href=\'https://en.wikipedia.org/wiki/Cheshire_Cat#Source_of_imagery\'>The Chesire Cat</a>, Alice\'s Adventures in Wonderland by Lewis Carroll","givens":[0,9,10],"hints":[4,6,8,7],"id":"tut3","lang":"en","positions":[0,6,2,4,3,8,7,5,1,9,10,11],"propnouns":[],"tags":[],"text":"The proper order of things is often a mystery to me.","ver":1},{"attribution":"<a href=\'https://www.whitehouse.gov/about-the-white-house/first-families/anna-eleanor-roosevelt/\'>Eleanor Roosevelt</a>, 1884-1962","givens":[],"hints":[7,6],"id":"119","lang":"en","positions":[7,1,0,3,6,5,2,4,8,9,10],"propnouns":[],"tags":[],"text":"No one can make you feel inferior without your consent.","ver":1},{"attribution":"Lemony Snicket, A Series of Unfortunate events #13: The End","givens":[3,4,7,8,12],"hints":[0,9],"id":"daily-20230105","lang":"en","positions":[1,2,11,3,8,9,6,7,4,10,5,0,12,13],"propnouns":[],"tags":[],"text":"Reading is one form of escape. Running for your life is another.","ver":1},{"attribution":"Hellen Keller, <a href=\'https://www.afb.org/HelenKellerArchive?a=d&d=A-HK02-B228-F05-002\'>The Open Door</a>, 1957","givens":[2,3,13],"hints":[8,0],"id":"daily-20230104","lang":"en","positions":[6,10,2,3,1,5,11,9,7,14,4,0,12,13,8,15],"propnouns":[],"tags":[],"text":"Security is mostly a superstition... Life is either a daring adventure, or nothing.","ver":1},{"attribution":"Albert Einstein, Letter to his son <a href=\'https://allthatsinteresting.com/eduard-einstein\'>Eduard</a>, 1930","givens":[1,2,5,7,8,14,15,4,9],"hints":[10,13,3],"difficulty":0,"id":"19","lang":"en","positions":[13,1,2,12,4,5,6,7,8,9,3,11,0,10,14,15,16],"propnouns":[],"tags":[],"text":"Life is like riding a bicycle. To keep your balance, you must keep moving.","ver":1},{"attribution":"Anonymous","givens":[2],"hints":[7,5],"difficulty":1,"id":"0","lang":"en","positions":[8,9,2,6,7,0,5,1,3,4,10],"propnouns":[],"tags":[],"text":"If you want to achieve greatness stop asking for permission.","ver":1},{"attribution":"John Wooden","givens":[],"hints":[0,7,12],"id":"1","lang":"en","positions":[9,0,5,12,8,1,7,13,6,14,3,4,11,2,10,15],"propnouns":[],"tags":[],"text":"Things work out best for those who make the best of how things work out.","ver":1},{"attribution":"Anonymous","givens":[],"hints":[7,3],"id":"2","lang":"en","positions":[11,3,13,10,0,5,9,6,7,2,8,12,4,1,14],"propnouns":[],"tags":[],"text":"To live a creative life, we must lose our fear of being wrong.","ver":1},{"attribution":"Jim Rohn","givens":[],"hints":[11,6,10],"id":"3","lang":"en","positions":[11,15,8,13,2,9,4,5,3,10,7,14,0,16,6,1,12,17],"propnouns":[],"tags":[],"text":"If you are not willing to risk the usual you will have to settle for the ordinary.","ver":1},{"attribution":"Anonymous","givens":[],"hints":[11,4,13],"id":"4","lang":"en","positions":[11,6,5,7,10,1,12,3,14,9,13,15,2,8,0,4,16],"propnouns":[],"tags":[],"text":"Trust because you are willing to accept the risk, not because it\'s safe or certain.","ver":1},{"attribution":"Walt Disney","givens":[],"hints":[12,2,13],"id":"6","lang":"en","positions":[7,10,11,13,9,6,5,4,3,8,1,2,0,12,14],"propnouns":[],"tags":[],"text":"All our dreams can come true if we have the courage to pursue them.","ver":1},{"attribution":"Anonymous","givens":[],"hints":[2,13,10],"id":"7","lang":"en","positions":[12,8,14,1,19,13,6,7,5,9,16,0,4,18,2,17,15,10,3,11,20],"propnouns":[],"tags":[],"text":"Good things come to people who wait, but better things come to those who go out and get them.","ver":1},{"attribution":"Anonymous","givens":[],"hints":[5,11,3],"id":"8","lang":"en","positions":[1,14,12,6,0,2,5,7,9,8,4,10,13,3,11,15],"propnouns":[],"tags":[],"text":"If you do what you always did, you will get what you always got.","ver":1},{"attribution":"Winston Churchill","givens":[],"hints":[2,6],"id":"9","lang":"en","positions":[4,7,6,10,11,2,3,9,5,1,8,0,12],"propnouns":[],"tags":[],"text":"Success is walking from failure to failure with no loss of enthusiasm.","ver":1},{"attribution":"Proverb","givens":[],"hints":[4,12,8],"id":"10","lang":"en","positions":[11,3,4,0,1,12,5,13,14,9,8,7,6,2,10,15],"propnouns":[],"tags":[],"text":"Just when the caterpillar thought the world was ending, he turned into a butterfly.","ver":1},{"attribution":"Anonymous","givens":[],"hints":[8,3],"id":"11","lang":"en","positions":[2,3,5,1,0,7,8,9,4,6,10],"propnouns":[],"tags":[],"text":"Successful entrepreneurs are givers and not takers of positive energy.","ver":1},{"attribution":"Vaibhav Shah","givens":[],"hints":[7,11,0],"id":"12","lang":"en","positions":[15,9,3,5,6,11,8,14,4,1,0,19,12,7,18,10,17,13,2,16,20],"propnouns":[],"tags":[],"text":"Whenever you see a successful person you only see the public glories, never the private sacrifices to reach them.","ver":1},{"attribution":"Chris Grosser","givens":[],"hints":[2],"id":"13","lang":"en","positions":[6,0,1,3,5,2,4,7],"propnouns":[],"tags":[],"text":"Opportunities don\'t happen, you create them.","ver":1},{"attribution":"Albert Einstein","givens":[],"hints":[7,3,10],"id":"14","lang":"en","positions":[1,16,17,4,12,2,13,6,8,5,15,7,3,10,11,0,9,14,18],"propnouns":[],"tags":[],"text":"Try not to become a person of success, but rather try to become a person of value.","ver":1},{"attribution":"Eleanor Roosevelt","givens":[],"hints":[3,0],"id":"15","lang":"en","positions":[2,8,3,11,4,13,7,1,10,9,12,0,6,5,14],"propnouns":[],"tags":[],"text":"Great minds discuss ideas; average minds discuss events; small minds discuss people.","ver":1},{"attribution":"Thomas A. Edison","givens":[],"hints":[3,6],"id":"16","lang":"en","positions":[13,12,1,10,4,6,11,5,3,9,2,7,0,8,14],"propnouns":[0,5],"tags":[],"text":"I have not failed. I\'ve just found 10,000 ways that won\'t work.","ver":1},{"attribution":"Kim Garst","givens":[],"hints":[8,2,17,5],"id":"17","lang":"en","positions":[17,21,14,15,11,20,6,12,1,5,10,13,9,0,19,3,7,16,18,2,4,8,22,23],"propnouns":[],"tags":[],"text":"If you don\'t value your time, neither will others. Stop giving away your time and talents – start charging for it.","ver":1},{"attribution":"David Brinkley","givens":[],"hints":[10,16,1],"id":"18","lang":"en","positions":[11,12,5,16,2,8,18,10,15,17,6,0,1,14,7,4,9,3,13,19],"propnouns":[],"tags":[],"text":"A successful man is one who can lay a firm foundation with the bricks others have thrown at him.","ver":1},{"attribution":"Henry Ford","givens":[],"hints":[2,11,5,1],"id":"20","lang":"en","positions":[20,0,14,15,16,6,3,5,12,19,1,9,13,4,11,2,18,17,7,8,21,10,22],"propnouns":[],"tags":[],"text":"The whole secret of a successful life is to find out what is one\'s destiny to do, and then do it.","ver":1},{"attribution":"Winston Churchill","givens":[],"hints":[1,5],"id":"21","lang":"en","positions":[4,2,1,5,0,6,3,7],"propnouns":[],"tags":[],"text":"If you\'re going through hell keep going.","ver":1},{"attribution":"Anonymous","givens":[],"hints":[12,8,17],"id":"22","lang":"en","positions":[1,4,3,12,18,14,0,15,5,2,6,8,7,13,17,16,10,9,11,19],"propnouns":[],"tags":[],"text":"The ones who are crazy enough to think they can change the world, are the ones that do.","ver":1},{"attribution":"Anonymous","givens":[],"hints":[2,5],"id":"23","lang":"en","positions":[6,0,5,1,4,2,3,7,8],"propnouns":[],"tags":[],"text":"Don\'t raise your voice, improve your argument.","ver":1},{"attribution":"Oscar Wilde","givens":[],"hints":[11,5],"id":"24","lang":"en","positions":[10,4,5,1,7,2,11,9,0,8,3,6,12],"propnouns":[],"tags":[],"text":"What seems to us as bitter trials are often blessings in disguise.","ver":1},{"attribution":"Anonymous","givens":[],"hints":[18,8,6],"id":"25","lang":"en","positions":[2,6,5,15,8,4,1,17,7,9,11,3,14,10,18,12,0,13,16,19],"propnouns":[],"tags":[],"text":"The meaning of life is to find your gift. The purpose of life is to give it away.","ver":1},{"attribution":"Bruce Feirstein","givens":[],"hints":[8,2],"id":"26","lang":"en","positions":[10,7,6,4,8,5,9,1,0,2,3,11],"propnouns":[],"tags":[],"text":"The distance between insanity and genius is measured only by success.","ver":1},{"attribution":"Lolly Daskal","givens":[],"hints":[11,2,15],"id":"27","lang":"en","positions":[4,14,1,13,7,3,12,8,2,0,15,9,6,11,5,10,16,17],"propnouns":[],"tags":[],"text":"When you stop chasing the wrong things you give the right things a chance to catch you.","ver":1},{"attribution":"John D. Rockefeller","givens":[],"hints":[2,12],"id":"28","lang":"en","positions":[6,12,11,2,3,0,1,10,5,7,9,8,4,13],"propnouns":[],"tags":[],"text":"Don\'t be afraid to give up the good to go for the great.","ver":1},{"attribution":"Anonymous","givens":[],"hints":[1,4],"id":"29","lang":"en","positions":[7,4,0,5,1,2,3,8,6,9],"propnouns":[],"tags":[],"text":"No masterpiece was ever created by a lazy artist.","ver":1},{"attribution":"Nathaniel Hawthorne","givens":[],"hints":[6,0,12,22],"id":"30","lang":"en","positions":[15,22,6,10,4,20,19,26,8,25,18,0,28,2,14,13,7,17,1,27,21,23,11,16,24,3,5,12,9,29],"propnouns":[],"tags":[],"text":"Happiness is a butterfly, which when pursued, is always beyond your grasp, but which, if you will sit down quietly, may alight upon you.","ver":1},{"attribution":"Albert Einstein","givens":[],"hints":[8,3],"id":"31","lang":"en","positions":[0,9,10,3,7,11,6,4,12,8,5,2,1,13],"propnouns":[],"tags":[],"text":"If you can\'t explain it simply, you don\'t understand it well enough.","ver":1},{"attribution":"Anonymous","givens":[],"hints":[7,10],"id":"32","lang":"en","positions":[11,7,10,0,1,2,3,4,5,8,9,6,12],"propnouns":[],"tags":[],"text":"Blessed are those who can give without remembering and take without forgetting.","ver":1},{"attribution":"Anonymous","givens":[],"hints":[5,3],"id":"33","lang":"en","positions":[2,5,4,7,3,1,0,6,8],"propnouns":[],"tags":[],"text":"Do one thing every day that scares you.","ver":1},{"attribution":"Anonymous","givens":[],"hints":[0,5,2],"id":"34","lang":"en","positions":[6,14,4,15,9,3,13,11,12,2,5,1,7,10,8,0,16],"propnouns":[],"tags":[],"text":"What\'s the point of being alive if you don\'t at least try to do something remarkable.","ver":1},{"attribution":"Lolly Daskal","givens":[],"hints":[7,11],"id":"35","lang":"en","positions":[3,10,7,1,0,2,6,5,11,8,9,4,12],"propnouns":[],"tags":[],"text":"Life is not about finding yourself. Life is about creating yourself.","ver":1},{"attribution":"Anonymous","givens":[],"hints":[10,7],"id":"36","lang":"en","positions":[2,5,11,4,6,3,7,1,9,0,8,10,12],"propnouns":[],"tags":[],"text":"Nothing in the world is more common than unsuccessful people with talent.","ver":1},{"attribution":"Anonymous","givens":[],"hints":[3,12,0],"id":"37","lang":"en","positions":[6,12,17,15,11,2,14,10,0,9,13,3,7,4,8,16,5,1,18],"propnouns":[],"tags":[],"text":"Knowledge is being aware of what you can do. Wisdom is knowing when not to do it.","ver":1},{"attribution":"Anonymous","givens":[],"hints":[7,0],"id":"38","lang":"en","positions":[3,8,10,1,7,5,2,4,6,0,9,11],"propnouns":[],"tags":[],"text":"Your problem isn\'t the problem. Your reaction is the problem.","ver":1},{"attribution":"Anonymous","givens":[],"hints":[7,3],"id":"39","lang":"en","positions":[3,1,7,0,4,2,6,5,8],"propnouns":[],"tags":[],"text":"You can do anything, but not everything.","ver":1},{"attribution":"Steve Jobs","givens":[],"hints":[0,4],"id":"40","lang":"en","positions":[3,2,6,4,7,1,0,5,8],"propnouns":[],"tags":[],"text":"Innovation distinguishes between a leader and a follower.","ver":1},{"attribution":"Ray Goforth","givens":[],"hints":[17,12,27,8,3],"id":"41","lang":"en","positions":[1,9,2,18,12,27,20,26,23,24,22,32,17,25,0,14,31,29,4,19,21,16,15,11,28,6,7,3,5,13,33,8,10,30,34],"propnouns":[],"tags":[],"text":"There are two types of people who will tell you that you cannot make a difference in this world: those who are afraid to try and those who are afraid you will succeed.","ver":1},{"attribution":"Dr. APJ Kalam","givens":[],"hints":[2,12,5],"id":"42","lang":"en","positions":[13,3,9,2,18,8,6,4,1,7,16,5,10,12,17,11,14,15,0,19],"propnouns":[],"tags":[],"text":"Thinking should become your capital asset, no matter whatever ups and downs you come across in your life.","ver":1},{"attribution":"Thomas Jefferson","givens":[],"hints":[6,1,12],"id":"43","lang":"en","positions":[1,12,11,4,10,3,5,7,6,13,2,8,9,14,0,15],"propnouns":[0,5,11],"tags":[],"text":"I find that the harder I work, the more luck I seem to have.","ver":1},{"attribution":"Napolean <a href=\'https://en.wikipedia.org/wiki/Napoleon_Hill\'>Hill</a>, <u>Think and Grow Rich</u>, March 1937.","givens":[],"hints":[5,1],"id":"44","lang":"en","positions":[3,7,4,0,1,2,6,5,8],"propnouns":[],"tags":[],"text":"The starting point of all achievement is desire.","ver":1},{"attribution":"Robert Collier","givens":[],"hints":[5,8],"id":"45","lang":"en","positions":[2,9,0,10,1,11,3,7,6,4,8,5,12],"propnouns":[],"tags":[],"text":"Success is the sum of small efforts, repeated day-in and day-out.","ver":1},{"attribution":"Thomas J. Watson","givens":[],"hints":[5,11,20],"id":"46","lang":"en","positions":[18,8,4,15,5,20,6,13,11,0,19,2,12,16,1,21,7,17,14,9,10,3,22],"propnouns":[],"tags":[],"text":"If you want to achieve excellence, you can get there today. As of this second, quit doing less-than-excellent work.","ver":1},{"attribution":"Michael John Bobak","givens":[],"hints":[4,1],"id":"47","lang":"en","positions":[3,7,5,4,2,6,0,1,8],"propnouns":[],"tags":[],"text":"All progress takes place outside the comfort zone.","ver":1},{"attribution":"Philippos","givens":[],"hints":[6,12,18],"id":"48","lang":"en","positions":[2,5,14,13,11,12,6,3,8,1,4,18,16,9,10,0,7,17,15,19],"propnouns":[],"tags":[],"text":"You may only succeed if you desire succeeding; you may only fail if you do not mind failing.","ver":1},{"attribution":"Mark Twain","givens":[],"hints":[6,13],"id":"49","lang":"en","positions":[6,4,10,2,0,5,1,11,12,9,3,8,13,7,14],"propnouns":[],"tags":[],"text":"Courage is resistance to fear, mastery of fear – not absense of fear.","ver":1},{"attribution":"Pablo Picasso","givens":[],"hints":[5,12,8],"id":"50","lang":"en","positions":[9,7,5,11,8,1,10,3,12,13,2,6,0,4,14],"propnouns":[],"tags":[],"text":"Only put off until tomorrow what you are willing to die having left undone.","ver":1},{"attribution":"Zig Ziglar","givens":[],"hints":[11,4,17],"id":"51","lang":"en","positions":[15,17,8,2,18,14,10,7,3,9,19,4,16,13,1,6,11,12,5,0,20],"propnouns":[],"tags":[],"text":"People often say that motivation doesn\'t last. Well, neither does bathing – that\'s why we recommend it daily.","ver":1},{"attribution":"Earl Nightingale","givens":[],"hints":[4,1,5],"id":"52","lang":"en","positions":[11,1,9,15,12,2,5,14,7,6,10,13,4,3,0,8,16],"propnouns":[],"tags":[],"text":"We become what we think about most of the time, and that\'s the strangest secret.","ver":1},{"attribution":"Vidal Sassoon","givens":[],"hints":[5,7],"id":"53","lang":"en","positions":[11,10,5,4,6,9,2,1,7,0,3,8,12],"propnouns":[],"tags":[],"text":"The only place where success comes before work is in the dictionary.","ver":1},{"attribution":"Guy Kawasaki","givens":[],"hints":[15,9,23,4],"id":"54","lang":"en","positions":[7,9,3,13,16,18,8,12,21,5,15,11,0,22,20,17,19,24,10,6,14,23,2,1,4,25],"propnouns":[],"tags":[],"text":"The best reason to start an organization is to make meaning; to create a product or service to make the world a better place.","ver":1},{"attribution":"Martha Stewart","givens":[],"hints":[8,14,22,17],"id":"55","lang":"en","positions":[5,16,0,8,22,4,11,12,9,7,13,21,17,3,19,15,10,20,23,18,1,2,14,6,24],"propnouns":[0],"tags":[],"text":"I find that when you have a real interest in life and a curious life, that sleep is not the most important thing.","ver":1},{"attribution":"Anonymous","givens":[],"hints":[9,4],"id":"56","lang":"en","positions":[1,3,5,7,2,12,10,0,8,6,4,9,11,13],"propnouns":[],"tags":[],"text":"It\'s not what you look at that matters, it\'s what you see.","ver":1},{"attribution":"Colin R. Davis","givens":[],"hints":[3,10,13],"id":"57","lang":"en","positions":[9,5,11,7,13,1,2,0,8,4,6,12,10,3,14],"propnouns":[],"tags":[],"text":"The road to success and the road to failure are almost exactly the same.","ver":1},{"attribution":"Ralph Nader","givens":[],"hints":[8,6],"id":"58","lang":"en","positions":[4,6,3,10,5,12,11,8,2,9,1,0,7,13],"propnouns":[],"tags":[],"text":"The function of leadership is to produce more leaders, not more followers.","ver":1},{"attribution":"Maya Angelou","givens":[],"hints":[5,0,3],"id":"59","lang":"en","positions":[6,10,1,3,4,7,15,5,12,9,14,0,8,11,13,2,16],"propnouns":[],"tags":[],"text":"Success is liking yourself, liking what you do, and liking how you do it.","ver":1},{"attribution":"Bill Gates","givens":[],"hints":[3,10,6],"id":"60","lang":"en","positions":[4,6,9,1,11,13,3,15,8,7,14,12,0,2,10,5,16],"propnouns":[],"tags":[],"text":"As we look ahead into the next century, leaders will be those who empower others.","ver":1},{"attribution":"Henry Kravis","givens":[],"hints":[8,11],"id":"61","lang":"en","positions":[10,9,8,2,5,7,3,1,4,0,11,6,12],"propnouns":[],"tags":[],"text":"A real entrepreneur is somebody who has no safety net underneath them.","ver":1},{"attribution":"Mark Caine","givens":[],"hints":[7,21,9,3],"id":"62","lang":"en","positions":[3,0,12,22,10,21,4,16,6,18,15,5,13,9,8,11,1,14,7,17,19,2,20,23],"propnouns":[],"tags":[],"text":"The first step toward success is taken when you refuse to be a captive of the environment in which you first find yourself.","ver":1},{"attribution":"Audre Lorde","givens":[],"hints":[5,21,10,18,0],"id":"64","lang":"en","positions":[24,0,20,8,21,25,12,26,6,3,2,28,16,23,22,5,14,17,19,11,27,10,13,9,1,4,15,18,7,29],"propnouns":[1,26],"tags":[],"text":"When I dare to be powerful – to use my strength in the service of my vision, then it becomes less and less important whether I am afraid.","ver":1},{"attribution":"Mark Twain","givens":[],"hints":[0,13,3],"id":"65","lang":"en","positions":[12,4,5,0,14,9,13,3,11,8,10,17,15,2,1,6,16,7,18],"propnouns":[],"tags":[],"text":"Whenever you find yourself on the side of the majority, it is time to pause and reflect.","ver":1},{"attribution":"Bruce Lee","givens":[],"hints":[5,9],"id":"66","lang":"en","positions":[8,9,10,5,2,4,3,7,6,0,1,11],"propnouns":[],"tags":[],"text":"The successful warrior is the average man, with laser-like focus.","ver":1},{"attribution":"Dale Carnegie","givens":[],"hints":[12,16,13],"id":"68","lang":"en","positions":[3,6,14,10,4,15,0,5,11,12,7,13,1,9,8,16,2,17],"propnouns":[],"tags":[],"text":"Develop success from failures. Discouragement and failure are two of the surest stepping stones to success.","ver":1},{"attribution":"Jim Rohn","givens":[],"hints":[7,28,4,14],"id":"69","lang":"en","positions":[28,16,10,23,25,12,9,18,8,4,19,20,0,24,5,3,22,17,1,11,2,13,27,15,21,7,26,14,6,29],"propnouns":[],"tags":[],"text":"If you don\'t design your own life plan, chances are you\'ll fall into someone else\'s plan. And guess what they have planned for you? Not much.","ver":1},{"attribution":"Gurbaksh Chahal","givens":[],"hints":[6,15,11],"id":"70","lang":"en","positions":[15,14,12,13,2,5,4,1,6,0,10,9,11,7,3,8,16],"propnouns":[],"tags":[],"text":"If you genuinely want something, don\'t wait for it – teach yourself to be impatient.","ver":1},{"attribution":"Robert Kiyosaki","givens":[],"hints":[10,5],"id":"71","lang":"en","positions":[2,8,12,7,9,6,10,1,0,5,4,3,11,13],"propnouns":[],"tags":[],"text":"Don\'t let the fear of losing be greater than the excitement of winning.","ver":1},{"attribution":"T. Harv Eker","givens":[],"hints":[15,4,18,9],"id":"72","lang":"en","positions":[5,17,20,13,7,2,24,6,8,14,21,3,10,9,11,1,18,16,4,12,22,0,23,19,15,25],"propnouns":[],"tags":[],"text":"If you want to make a permanent change, stop focusing on the size of your problems and start focusing on the size of you!","ver":1},{"attribution":"Jim Rohn","givens":[],"id":"74","hints":[3,20,1],"lang":"en","positions":[5,20,7,12,3,0,15,8,18,21,6,11,14,4,16,10,2,17,9,1,19,13,22],"propnouns":[],"tags":[],"text":"Successful people do what unsuccessful people are not willing to do. Don\'t wish it were easier, wish you were better.","ver":1},{"attribution":"Napoleon Hill","givens":[],"hints":[10,13,5],"id":"75","lang":"en","positions":[9,13,11,2,6,18,12,4,0,7,14,1,10,3,5,15,16,17,19,8,20],"propnouns":[],"tags":[],"text":"The number one reason people fail in life is because they listen to their friends, family, and neighbors.","ver":1},{"attribution":"Jane Smiley","givens":[],"hints":[16,19,11,18],"id":"77","lang":"en","positions":[17,13,23,3,24,4,8,20,18,9,12,15,22,2,14,16,19,7,21,11,5,0,6,1,10,25],"propnouns":[],"tags":[],"text":"In my experience, there is only one motivation, and that is desire. No reasons or principle contain it or stand against it.","ver":1},{"attribution":"George Bernard Shaw","givens":[],"hints":[6,3,0],"id":"78","lang":"en","positions":[3,17,7,0,5,1,15,16,13,8,11,12,14,9,10,2,6,4,18],"propnouns":[],"tags":[],"text":"Success does not consist in never making mistakes but in never making the same one a second time.","ver":1},{"attribution":"Michael Jordan","givens":[],"hints":[11,3],"id":"80","lang":"en","positions":[4,11,9,0,6,2,7,1,5,10,3,8,12],"propnouns":[],"tags":[],"text":"You must expect great things of yourself before you can do them.","ver":1},{"attribution":"Jim Ryun","givens":[],"hints":[5,12],"id":"81","lang":"en","positions":[3,5,4,0,2,11,6,8,10,12,9,1,7,13],"propnouns":[],"tags":[],"text":"Motivation is what gets you started. Habit is what keeps you going.","ver":1},{"attribution":"Dale Carnegie","givens":[],"hints":[0,9],"id":"82","lang":"en","positions":[4,11,7,10,3,2,0,1,5,8,9,6,12],"propnouns":[],"tags":[],"text":"People rarely succeed unless they have fun in what they are doing.","ver":1},{"attribution":"Ella Wheeler Wilcox","givens":[],"hints":[13,3,9],"id":"83","lang":"en","positions":[14,12,0,11,4,20,22,7,21,19,10,13,8,1,9,18,15,6,17,16,5,3,2,23],"propnouns":[],"tags":[],"text":"There is no chance, no destiny, no fate, that can hinder or control the firm resolve of a determined soul.","ver":1},{"attribution":"Francis Chan","givens":[],"hints":[7,17,14],"id":"84","lang":"en","positions":[3,14,13,5,8,15,0,9,11,16,1,2,17,6,10,4,12,18,7,19],"propnouns":[],"tags":[],"text":"Our greatest fear should not be of failure but of succeeding at things in life that don\'t really matter.","ver":1},{"attribution":"George Lorimer","givens":[],"hints":[0,11,8],"id":"85","lang":"en","positions":[11,12,1,8,15,6,4,14,9,7,0,3,10,2,13,17,5,16,18],"propnouns":[],"tags":[],"text":"You\'ve got to get up every morning with determination if you\'re going to go to bed with satisfaction.","ver":1},{"attribution":"Mike Gafka","givens":[],"hints":[9,7,14],"id":"86","lang":"en","positions":[17,18,0,16,1,9,13,3,15,4,5,10,12,6,20,7,2,11,8,14,19,21],"propnouns":[],"tags":[],"text":"To be successful you must accept all challenges that come your way. You can\'t just accept the ones you like.","ver":1},{"attribution":"John C. Maxwell","givens":[0,14,16,17],"hints":[11,18,4],"id":"87","lang":"en","positions":[0,18,2,12,21,7,1,13,8,11,20,10,3,6,14,15,16,17,4,9,5,19,22],"propnouns":[],"tags":[],"text":"Success is... knowing your purpose in life, growing to reach your maximum potential, and sowing seeds that benefit others.","ver":1},{"attribution":"Wayne Dyer","givens":[],"hints":[16,13,15],"id":"88","lang":"en","positions":[16,7,2,5,3,15,6,11,10,4,13,1,12,0,9,14,8,17],"propnouns":[],"tags":[],"text":"Be miserable. Or motivate yourself. Whatever has to be done, it\'s always your choice.","ver":1},{"attribution":"Anatole France","givens":[],"hints":[2,13,20],"id":"89","lang":"en","positions":[2,20,21,19,4,11,0,17,5,12,10,8,13,7,14,9,1,15,18,6,16,3,22],"propnouns":[],"tags":[],"text":"To accomplish great things, we must not only act, but also dream, not only plan, but also believe.","ver":1},{"attribution":"Dale Carnegie","givens":[],"hints":[9,15,0,7],"id":"90","lang":"en","positions":[2,13,16,25,9,18,0,3,7,23,15,24,14,19,5,12,10,4,22,6,11,1,8,20,26,21,17,27],"propnouns":[],"tags":[],"text":"Most of the important things in the world have been accomplished by people who have kept on trying when there seemed to be no help at all.","ver":1},{"attribution":"Booker T. Washington","givens":[],"hints":[6,16,1],"id":"91","lang":"en","positions":[5,4,1,12,8,0,17,9,11,6,15,16,13,7,2,3,10,14,18],"propnouns":[],"tags":[],"text":"You measure the size of the accomplishment by the obstacles you had to overcome to reach your goals.","ver":1},{"attribution":"Theodore N. Vail","givens":[],"hints":[14,10,4],"id":"92","lang":"en","positions":[6,9,4,14,0,5,12,13,2,1,11,3,7,8,10,15],"propnouns":[],"tags":[],"text":"Real difficulties can be overcome; it is only the imaginary ones that are unconquerable.","ver":1},{"attribution":"Herman Melville","givens":[],"hints":[6,9],"id":"93","lang":"en","positions":[3,5,11,4,10,8,2,9,6,0,1,7,12],"propnouns":[],"tags":[],"text":"It is better to fail in originality than to succeed in imitation.","ver":1},{"attribution":"Washington Irving","givens":[],"hints":[0,5,1],"id":"95","lang":"en","positions":[3,6,9,10,13,7,4,11,8,5,1,14,0,2,12,15],"propnouns":[],"tags":[],"text":"Little minds are tamed and subdued by misfortune; but great minds rise above it.","ver":1},{"attribution":"Truman Capote","givens":[],"hints":[6,0],"id":"96","lang":"en","positions":[7,6,4,8,0,2,5,1,3,9],"propnouns":[],"tags":[],"text":"Failure is the condiment that gives success its flavor.","ver":1},{"attribution":"John R. Wooden","givens":[],"hints":[4,8],"id":"97","lang":"en","positions":[11,8,9,0,1,2,5,10,6,7,4,3,12],"propnouns":[],"tags":[],"text":"Don\'t let what you cannot do interfere with what you can do.","ver":1},{"attribution":"Margaret Thatcher","givens":[],"hints":[7,2],"id":"98","lang":"en","positions":[11,8,10,9,5,1,0,12,7,3,4,6,2,13],"propnouns":[],"tags":[],"text":"You may have to fight a battle more than once to win it.","ver":1},{"attribution":"Hans Christian Andersen, born in <a href=\'https://en.wikipedia.org/wiki/Odense\'>Odsen, Denmark</a>, 1805.","givens":[],"id":"99","lang":"en","positions":[1,0,2,3,5,4,6],"propnouns":[],"tags":[],"text":"Where words fail, music speaks.","ver":1,"hints":[5]},{"attribution":"Miranda Priestly, <a href=\'https://www.youtube.com/watch?v=GMTU-LUESgA\'>The Devil Wears Prada</a> (2006). Played by <a href=\'https://en.wikipedia.org/wiki/Meryl_Streep_on_screen_and_stage\'>Meryl Streep</a>","givens":[1,10,15],"hints":[7,13,2],"id":"101","lang":"en","positions":[0,8,4,3,5,14,12,2,7,9,10,13,11,6,1,15,16],"propnouns":[],"tags":[],"text":"By all means, move at a glacial pace. You know how that thrills me.","ver":1},{"text":"Don\'t judge each day by the harvest you reap, but by the seeds that you plant.","attribution":"Robert Louis Stevenson (attrib), Admiral Guinea (1884)","tags":[],"id":"102","ver":1,"lang":"en","propnouns":[],"givens":[1,10,15],"positions":[7,1,0,12,2,11,3,6,16,9,10,5,8,14,13,15,4,17],"hints":[8,16,2]},{"attribution":"Unattributed folk wisdom, <a href=\'https://babel.hathitrust.org/cgi/pt?id=wu.89063018576&view=1up&seq=65\'>Life Magazine, 1919</a>","id":"103","lang":"en","positions":[0,6,12,3,4,13,14,9,8,7,11,10,2,1,5,15,16,17],"propnouns":[],"tags":[],"text":"When you reach the end of your rope, tie a knot in it and hang on.","ver":1,"hints":[11,2,7]},{"attribution":"Rupi Kaur, <a href=\'https://rupikaur.com/pages/milk-and-honey\'>Milk and Honey</a>, 2014","givens":[0],"id":"104","lang":"en","positions":[4,1,7,6,8,3,0,2,5,9],"propnouns":[6],"tags":[],"text":"My mother sacrificed her dreams so I could dream.","ver":1,"hints":[4,7]},{"attribution":"Yrsa Daley-Ward, <a href=\'https://www.yrsadaleyward.com/\'>Bone</a> 2017","givens":[0],"id":"105","lang":"en","positions":[0,9,4,1,3,6,7,8,5,2,10],"propnouns":[2,4],"tags":[],"text":"Every time I travel I meet myself a little more.","ver":1,"hints":[1,6]},{"attribution":"<a href=\'https://www.nelsonmandela.org/content/page/biography\'>Nelson Mandela</a>, Long Walk to Freedom, 1995","givens":[0,8,11,12,14],"hints":[15,2,17],"id":"107","lang":"en","positions":[0,7,13,16,9,15,3,17,8,4,10,11,12,1,14,2,5,6,18],"propnouns":[],"tags":[],"text":"The greatest glory in living lies not in never falling, but in rising every time we fall.","ver":1},{"attribution":"<a href=\'https://www.nobelprize.org/prizes/physics/1903/marie-curie/biographical/\'>Marie Curie</a>, Letter to her brother, 1894","id":"108","lang":"en","positions":[0,9,4,3,11,2,6,7,8,13,10,15,14,1,12,5,16,17],"propnouns":[],"tags":[],"text":"One never notices what has been done; one can only see what remains to be done.","ver":1,"hints":[5,1,13]},{"attribution":"Woody Allen, <a href=\'https://en.wikipedia.org/wiki/Death_(play)\'>Death (A Play)</a>, 1975","givens":[6,8,10],"id":"109","lang":"en","positions":[12,14,16,4,17,3,6,7,8,13,10,5,0,15,2,1,11,9,18],"propnouns":[8],"tags":[],"text":"It\'s not that I\'m afraid to die. I just don\'t want to be there when it happens.","ver":1,"hints":[4,14,17]},{"attribution":"jean-Luc Picard, Star Trek TNG, <a href=\'https://www.youtube.com/watch?v=t4A-Ml8YHyM\'>Season 2 episode 21</a>","givens":[8,11,12,17,18],"hints":[19,4,15],"id":"110","lang":"en","positions":[0,19,6,7,2,14,5,4,8,9,10,11,12,1,15,13,16,17,18,3,20],"propnouns":[],"tags":[],"text":"It is possible to commit no mistakes and still lose. That is not a weakness. That is life.","ver":1},{"attribution":"Surak, Star Trek (original series), <a href=\'https://www.youtube.com/watch?v=QMa_VPGJxZ4\'>The Savage Curtain</a>","id":"111","lang":"en","positions":[0,7,17,3,4,5,14,18,12,9,10,16,1,15,6,8,2,13,11,19,20,21,22],"propnouns":[0],"tags":[],"text":"I am pleased to see that we have differences. May we together become greater than the sum of both of us.","ver":1,"hints":[8,13,7,12]},{"attribution":"<a href=\'https://snrk.de/douglas-adams-and-lewis-carroll/\'>Douglas Adams</a>, from the Hitchhiker\'s Guide to the Galaxy, 1979.","id":"112","lang":"en","positions":[0,16,17,13,4,12,3,7,1,14,10,11,23,19,9,5,6,15,22,8,20,18,21,2,24],"propnouns":[],"tags":[],"text":"Isn\'t it enough to see that a garden is beautiful without having to believe that there are fairies at the bottom of it too?","ver":1,"hints":[9,14,2,13]},{"id":"113","ver":1,"lang":"en","text":"The way to get started is quit talking and begin doing.","tags":[],"givens":[0,1,10],"propnouns":[],"positions":[0,1,7,8,5,9,2,3,6,4,10,11],"attribution":"Walt Disney, 1957 interview with <a href=\'https://www.snopes.com/fact-check/walt-disney-way-to-get-started/\'>Hedda Hopper</a>","hints":[9,7]},{"id":"114","ver":1,"lang":"en","text":"We few, we happy few, we band of brothers.","tags":[],"givens":[1,5],"propnouns":[],"positions":[10,1,2,9,8,5,6,4,3,7,0,11],"attribution":"William Shakespeare, <a href=\'https://en.wikipedia.org/wiki/Henry_V_(play)#/media/File:Henry_V_1600_Q_titlepage.JPG\'>Henry V</a>, 1599. Check <a href=\'https://www.youtube.com/watch?v=Mf6Y4c6yylA\'>this</a> if you\'re thinking HBO.","hints":[10,8]},{"attribution":"Homer Simpson, I don\'t know, <a href=\'https://www.youtube.com/watch?v=CNOutomr5XI\'>Marge...</a>","givens":[5,1],"hints":[6,4],"id":"116","lang":"en","positions":[4,1,6,2,0,5,3,7],"propnouns":[],"tags":[],"text":"Trying is the first step toward failure.","ver":1},{"attribution":"Dorothy, Wizard of Oz","id":"117","lang":"en","positions":[7,1,2,0,9,3,8,5,4,6,10,11],"propnouns":[0,2,9],"tags":[],"text":"Toto, I have a feeling we\'re not in Kansas anymore.","ver":1,"hints":[9,5]},{"attribution":"Roger \'Verbal\' Kint, The Usual Suspects","id":"118","lang":"en","positions":[12,1,5,8,13,4,0,7,6,9,10,3,2,11,14],"propnouns":[],"tags":[],"text":"The greatest trick the devil ever pulled was convincing the world he didn\'t exist.","ver":1,"hints":[4,8,5]},{"attribution":"<a href=\'https://www.youtube.com/watch?v=Mme2Aya_6Bc\'>Hal</a>, 2001: A Space Odyssey","givens":[1],"hints":[8,3],"difficulty":0,"id":"120","lang":"en","positions":[0,3,2,9,4,5,8,6,10,7,1,11],"propnouns":[3,5,7],"tags":[],"text":"I\'m sorry, Dave. I\'m afraid I can\'t do that.","ver":1},{"attribution":"Wizard of Oz, <a href=\'https://www.youtube.com/watch?v=RQWSh7Db-_E\'>The Wizard of Oz</a>","givens":[0],"hints":[8,2],"difficulty":0,"id":"121","lang":"en","positions":[0,8,4,6,3,1,7,2,5,9],"propnouns":[],"tags":[],"text":"Pay no attention to that man behind the curtain!","ver":1},{"attribution":"<a href=\'https://mobile.twitter.com/dremmettbrown1\'>Dr. Emmett Brown</a>, Back to the Future","givens":[2],"hints":[0,7],"difficulty":0,"id":"122","lang":"en","positions":[5,1,2,7,6,0,8,3,4,9],"propnouns":[],"tags":[],"text":"Roads? Where we\'re going we don\'t need roads.","ver":1},{"attribution":"Rick Blaine, <a href=\'https://blog.ha.com/original-casablanca-movie-poster-value-guide/\'>Casablanca</a>","givens":[2,9,10],"hints":[11,3],"difficulty":0,"id":"123","lang":"en","positions":[7,1,2,6,0,11,3,4,5,9,10,8,12],"propnouns":[0,2],"tags":[],"text":"Louis, I think this is the beginning of a beautiful friendship.","ver":1},{"attribution":"The <a href=\'https://youtu.be/4i4TLmF73dk?t=177\'>Emperor</a>, Mulan, 1998.","givens":[2,3,12,13],"hints":[5,9,1],"difficulty":1,"id":"124","lang":"en","positions":[8,4,2,3,7,0,11,9,1,10,6,5,12,13,14],"propnouns":[],"tags":[],"text":"The flower that blooms in adversity is the most rare and beautiful of all.","ver":1},{"attribution":"The <a href=\'https://www.alice-in-wonderland.net/resources/pictures/alices-adventures-in-wonderland/\'>Cheshire Cat</a>, Alice in Wonderland, Lewis Carroll, 1865","givens":[0,10,8,17],"hints":[3,12,14],"id":"125","lang":"en","positions":[0,2,4,7,12,15,14,13,8,9,10,5,3,11,1,16,6,17,18],"propnouns":[],"tags":[],"text":"If you don\'t know where you want to go, then it doesn\'t matter which path you take.","ver":1},{"attribution":"Beret Girl, Goofy","givens":[0,1,10,11],"hints":[5,7],"id":"126","lang":"en","positions":[0,1,2,8,3,4,9,5,6,7,10,11,12],"propnouns":[],"tags":[],"text":"Admit defeat, and defeat will surely admit you into permanent custody.","ver":1},{"attribution":"<a href=\'https://www.rollingstone.com/tv-movies/tv-movie-lists/best-pixar-movies-characters-164982/helen-parr-elastigirl-the-incredibles-2004-150661/\'>Elastigirl</a>, The Incredibles, 2004.","givens":[9],"hints":[6,4],"difficulty":0,"id":"127","lang":"en","positions":[2,8,6,4,5,3,1,7,0,9,10],"propnouns":[],"tags":[],"text":"Your identity is your most valuable possession. Protect it.","ver":1},{"attribution":"Forrest Gump, Forrest Gump, <a href=\'https://www.youtube.com/watch?v=gNysdb7D-lQ\'>Forrest Gump</a>?","givens":[2,3],"hints":[4,6],"difficulty":0,"id":"128","lang":"en","positions":[7,5,2,3,9,6,1,0,10,8,4,11],"propnouns":[],"tags":[],"text":"My mama always said life was like a box of chocolates.","ver":1},{"attribution":"Alex “Hitch” Hitchens, Hitch","givens":[7,8,2,17],"hints":[4,12,15],"id":"129","lang":"en","positions":[13,6,2,12,0,4,5,7,8,9,15,16,14,3,11,10,1,17,18],"propnouns":[],"tags":[],"text":"Life is not the amount of breaths you take, it\'s the moments that take your breath away.","ver":1},{"attribution":"Ferris Bueller, Ferris Bueller’s Day Off","givens":[0,1,18,19],"hints":[3,11,7],"id":"130","lang":"en","positions":[0,1,10,13,4,14,8,9,3,17,20,12,2,6,11,7,16,15,18,19,5,21],"propnouns":[],"tags":[],"text":"Life moves pretty fast. If you don’t stop and look around once in a while, you could miss it.","ver":1},{"attribution":"Robert Frost, letter to Louis <a href=\'https://archive.dartmouthalumnimagazine.com/article/1964/1/1/the-letters-of-robert-frost-to-louis-untermeyer\'>Untermeyer</a>, 1916","givens":[15,16,0,1,17],"hints":[11,5,13],"id":"131","lang":"en","positions":[0,1,11,6,7,10,4,12,19,9,2,18,3,5,14,15,16,17,8,13,20],"propnouns":[],"tags":[],"text":"A poem begins as a lump in the throat, a sense of wrong, a homesickness, a lovesickness.","ver":1},{"attribution":"Ernest Hemingway","givens":[8],"hints":[0,2,6],"id":"132","lang":"en","positions":[6,7,3,4,2,1,5,0,8,9],"propnouns":[],"tags":[],"text":"There is no friend as loyal as a book.","ver":1},{"attribution":"Tyrion Lannister, Game of Thrones, Season 1 episode 4","givens":[0,14,19,21],"hints":[2,5,15,12],"id":"133","lang":"en","positions":[0,1,9,6,4,2,11,16,15,17,20,8,7,13,14,18,10,3,5,19,12,21,22],"propnouns":[5,15],"tags":[],"text":"Anyway, don\'t despair. I\'m a constant disappointment to my own father, and I have learned to live with it.","ver":1},{"attribution":"Tyrion Lannister, Game of Thrones, season ? episode ?","givens":[3,4,6,7,13,14],"hints":[22,0,15,16],"id":"134","lang":"en","positions":[16,8,22,3,4,5,6,7,9,1,17,11,18,13,14,2,20,19,10,12,0,15,21,23],"propnouns":[7],"tags":[],"text":"My brother has a sword, and I have my mind, and a mind needs books like a sword needs a whetstone.","ver":1},{"attribution":"Carl Sagan","hints":[0,7,21,10,16],"id":"135","lang":"en","positions":[26,1,2,3,4,0,6,22,8,10,7,13,23,28,9,12,14,17,18,19,20,27,15,11,24,25,21,16,5,29],"propnouns":[],"tags":[],"text":"Spaceflight, therefore, is subversive. If they are fortunate enough to find themselves in orbit, most people, after a little meditation, have similar thoughts.","ver":1},{"attribution":"William F. Buckley, Jr.","hints":[0,4,14],"id":"136","lang":"en","positions":[4,11,10,6,2,13,1,7,8,9,5,12,0,14,3,15],"propnouns":[0],"tags":[],"text":"I won\'t insult your intelligence by suggesting that you really believe what you just said.","ver":1},{"attribution":"A. A. Milne","hints":[14,0],"id":"137","lang":"en","positions":[13,6,0,5,7,4,14,1,12,9,10,11,8,3,2,15],"propnouns":[],"tags":[],"text":"One of the advantages of being disorganized is that one is always having surprising discoveries.","ver":1}]');
;// CONCATENATED MODULE: ./src/assets/puzzles/chapterData.json
var chapterData_namespaceObject = JSON.parse('[{"id":"intro","name":"Intro pack","sequence":["tut1","tut2","tut3"],"category":"variety","difficulty":0},{"id":"r","name":"random pack","sequence":["r","r","r","r","r","r","r","r","r","r"],"category":"variety","difficulty":0},{"id":"1","name":"Easy","sequence":[123,127,122,132,119],"category":"variety","difficulty":1},{"id":"2","name":"More Easy","sequence":[116,23,124,44,105],"category":"variety","difficulty":1},{"id":"3","name":"Some Medium","sequence":[101,102,108,109,114],"category":"variety","difficulty":2},{"id":"4","name":"Some Hard","sequence":[131,107,110,112,125],"category":"variety","difficulty":3},{"id":"temp","name":"temp","sequence":[68,85,27],"category":"variety","difficulty":3}]');
;// CONCATENATED MODULE: ./src/store/chapter.js
var Chapter=/*#__PURE__*/function(){function Chapter(data){classCallCheck_classCallCheck(this,Chapter);this.id=data.id;this.name=data.name;this.difficulty=data.difficulty;this.category=data.category;this.sequence=data.sequence;makeAutoObservable(this,{});}createClass_createClass(Chapter,[{key:"difficultyLabel",get:function get(){var labels=['v. easy','easy','medium','hard'];return labels[this.difficulty];}}]);return Chapter;}();
;// CONCATENATED MODULE: ./src/store/puzzleStore.js
var PuzzleStore=/*#__PURE__*/function(){// all of these MUST be initialized, either here or in ctor
//todo: rename chapter/s to pack/s
// move to chapter.js?
function PuzzleStore(rootStore){classCallCheck_classCallCheck(this,PuzzleStore);this.root=null;this.puzzles=[];this.usedIds=[];this.chapter=null;this.chapters=[];this.cursorInChapter=0;this.completedChapters=[];this.root=rootStore;makeAutoObservable(this,{usedIds:false});var _iterator=createForOfIteratorHelper_createForOfIteratorHelper(chapterData_namespaceObject),_step;try{for(_iterator.s();!(_step=_iterator.n()).done;){var chapData=_step.value;this.addChapter(new Chapter(chapData));}}catch(err){_iterator.e(err);}finally{_iterator.f();}makePersistable(this,{name:'puzzleStore',properties:['completedChapters'],storage:window.localStorage});}createClass_createClass(PuzzleStore,[{key:"addChapter",value:function addChapter(c){this.chapters.push(c);}},{key:"loadChapterById",value:function loadChapterById(id){this.chapter=this.chapters.find(function(c){return c.id===id;});this.cursorInChapter=0;}},{key:"clearChapterInfo",value:function clearChapterInfo(){this.chapter=null;}},{key:"puzzleSource",get:function get(){if(this.chapter){return"".concat(this.chapter.name," ").concat(this.cursorInChapter);}else{return"daily puzzle for....";}}},{key:"loadPuzzleById",value:function loadPuzzleById(id){var puzzles=puzzleData_namespaceObject;if(puzzles.find(function(p){return p.id==='override';})){id='override';}var data=puzzles.find(function(p){return p.id===String(id);});this.root.setPuzzle(new Puzzle(data,this.root));this.root.puzzle.setState('puzzleLoaded');}},{key:"loadNextPuzzle",value:function loadNextPuzzle(){if(this.chapter){if(this.cursorInChapter<this.chapter.sequence.length){var puzzId=this.chapter.sequence[this.cursorInChapter];if(puzzId==='r'){this.loadRandomPuzzle();}else{this.loadPuzzleById(puzzId);}this.cursorInChapter+=1;}else{this.chapter=null;}}else{this.loadRandomPuzzle();}}},{key:"loadRandomPuzzle",value:function loadRandomPuzzle(){var puzzles=puzzleData_namespaceObject.filter(function(p){return!p['id'].includes('tut');});var id=0;do{id=puzzles[Math.floor(Math.random()*puzzles.length)]['id'];}while(this.usedIds.includes(id));this.usedIds.push(id);this.loadPuzzleById(id);}},{key:"addCompletedChapter",value:function addCompletedChapter(id){this.completedChapters.push(id);}},{key:"clearCompletedChapters",value:function clearCompletedChapters(){this.completedChapters=[];}}]);return PuzzleStore;}();
// EXTERNAL MODULE: ./node_modules/short-unique-id/dist/short-unique-id.js
var short_unique_id = __webpack_require__(4404);
var short_unique_id_default = /*#__PURE__*/__webpack_require__.n(short_unique_id);
;// CONCATENATED MODULE: ./src/assets/sounds/fail_double_click.mp3
var fail_double_click_namespaceObject = __webpack_require__.p + "static/media/fail_double_click.67d2ca4e330890ec88f0.mp3";
;// CONCATENATED MODULE: ./src/assets/sounds/success_ding.mp3
var success_ding_namespaceObject = __webpack_require__.p + "static/media/success_ding.42120d98e2590563e7d2.mp3";
;// CONCATENATED MODULE: ./src/assets/sounds/coins_selling_sound.mp3
var coins_selling_sound_namespaceObject = __webpack_require__.p + "static/media/coins_selling_sound.a096ad138ede97088be2.mp3";
;// CONCATENATED MODULE: ./src/assets/sounds/click.mp3
var click_namespaceObject = __webpack_require__.p + "static/media/click.803576620b1fd460f8e3.mp3";
;// CONCATENATED MODULE: ./src/lib/sound.js
var soundClips={};var root;var isInitialized=false;function init(storeRoot){if(!isInitialized){root=storeRoot;loadAudio();isInitialized=true;}}function play(clipName){var browser=root.gameStore.browser;if(browser.safari&&!isDevEnv()||browser.safariMac){// need this on safari but not in chrome devtools
soundClips[clipName].load();}soundClips[clipName].play();}function loadAudio(){function loadAudioFor(media){var volume=arguments.length>1&&arguments[1]!==undefined?arguments[1]:0.3;var audioElem=new Audio(media);audioElem.load();audioElem.volume=0.3;return audioElem;}soundClips.successDing=loadAudioFor(success_ding_namespaceObject);soundClips.failClick=loadAudioFor(fail_double_click_namespaceObject);soundClips.coins=loadAudioFor(coins_selling_sound_namespaceObject);soundClips.dragClick=loadAudioFor(click_namespaceObject);}
;// CONCATENATED MODULE: ./src/store/gameStore.js
var uid=new (short_unique_id_default())({length:10});var GameStore=/*#__PURE__*/function(){// todo: move below here to uiStore
// dark light system
function GameStore(rootStore){classCallCheck_classCallCheck(this,GameStore);this.instaSolve=false;this.attributionHtml='';this.showHintNow=false;this.versionInfo='';this.gameVersion='0';this.versionLocation='';this.uuid=uid();this.browser=getBrowser();this.purseBalance=100;this.bottomBarMode='';this.topBarHeight=50;this.uiTheme='system';this.windowSize=[0,0];this.showTutorial=true;this.showFeedbackQuestions=true;this.muiBreakpoint=0;this.isSwapping=false;this.rootStore=rootStore;init(rootStore);makeAutoObservable(this,{});makePersistable(this,{name:'gameStore',properties:['showTutorial','uuid'],storage:window.localStorage});}createClass_createClass(GameStore,[{key:"setUiTheme",value:function setUiTheme(theme){if(!['system','dark','light'].includes(theme)){throw new Error("invalid state: ".concat(theme));}}},{key:"setVersionInfo",value:function setVersionInfo(t){this.versionInfo=t;this.gameVersion=t.split(' ')[0];}},{key:"setVersionLocation",value:function setVersionLocation(loc){this.versionLocation=loc;}},{key:"toggleInstaSolve",value:function toggleInstaSolve(v){this.instaSolve=!this.instaSolve;}},{key:"setAttributionHtml",value:function setAttributionHtml(v){this.attributionHtml=v;}},{key:"setShowHintNow",value:function setShowHintNow(val){this.showHintNow=val;}// setHelpOpen(v) {
//   this.helpOpen = v
// }
},{key:"setBottomBarMode",value:function setBottomBarMode(v){this.bottomBarMode=v;}},{key:"setShowTutorial",value:function setShowTutorial(v){this.showTutorial=v;}},{key:"setWindowSize",value:function setWindowSize(size){this.windowSize=size;}},{key:"setMuiBreakpoint",value:function setMuiBreakpoint(v){this.muiBreakpoint=v;}},{key:"setIsSwapping",value:function setIsSwapping(v){this.isSwapping=v;}},{key:"setPurseBalance",value:function setPurseBalance(v){this.purseBalance=v;}},{key:"updatePurseBalance",value:function updatePurseBalance(v){var _this=this;if(v>0){play('coins');}// want at least 5 but no more than 30 iterations
var iterations=Math.min(30,Math.max(5,v/5));var start=this.purseBalance;var end=this.purseBalance+v;var increment=Math.floor(v/iterations);var currVal=start;var counter=0;var intervalId=setInterval(function(){currVal+=increment;mobx_esm_runInAction(function(){_this.setPurseBalance(currVal);});counter+=1;if(counter>=iterations){clearInterval(intervalId);_this.setPurseBalance(end);}},50);}}]);return GameStore;}();
;// CONCATENATED MODULE: ./src/store/HelpTips.js
var HelpTips=/*#__PURE__*/function(){function HelpTips(rootStore){classCallCheck_classCallCheck(this,HelpTips);this.root=null;this.timeOfLastSelect=0;this.showTooltip1=false;this.shownTips=[];this.tipToShow=null;this.intervalId=0;this.rules=null;this.root=rootStore;makeAutoObservable(this,{rules:false,intervalId:false});makePersistable(this,{name:'HelpTips',properties:['shownTips'],storage:window.localStorage});this.setRules();}createClass_createClass(HelpTips,[{key:"startTracking",value:function startTracking(){var _this=this;this.timeOfLastSelect=Date.now();this.intervalId=setInterval(function(){mobx_esm_runInAction(function(){_this.evaluateRules();});},500);if(window.location.hostname==='localhost'){this.clearData();}}},{key:"stopTracking",value:function stopTracking(){clearInterval(this.intervalId);this.tipToShow=null;}},{key:"registerSelection",value:function registerSelection(){this.timeOfLastSelect=Date.now();}},{key:"clearData",value:function clearData(){// call from settings eventually
this.shownTips=[];}},{key:"setRules",value:function setRules(){this.rules=[{id:'swap',text:'drag the words to where they belong',puzzle:'tut1',triggerTime:1000},{id:'swapuntil',text:'keep on filling the blanks until the puzzle is solved',puzzle:'tut2',triggerTime:1000},{id:'stuck',text:'if you get stuck, you can use a hint',puzzle:'tut3',triggerTime:5000},{id:'recognize',text:"you don't need to recognize the quote to solve the puzzle",puzzle:'tut3',triggerTime:1000}// {
//   id: 'misses',
//   text: "Careful! 3 strikes and you're out",
// },
];}},{key:"evaluateRules",value:function evaluateRules(){var _iterator=createForOfIteratorHelper_createForOfIteratorHelper(this.rules),_step;try{for(_iterator.s();!(_step=_iterator.n()).done;){var r=_step.value;if(this.shownTips.includes(r.id)){continue;}if(r.puzzle&&r.puzzle!==this.root.puzzle.id){continue;}if(r.triggerTime&&r.triggerTime>Date.now()-this.timeOfLastSelect){continue;}if(r.id==='misses'&&this.root.puzzle.misses!==1){continue;}this.tipToShow=r;this.shownTips.push(r.id);return;}}catch(err){_iterator.e(err);}finally{_iterator.f();}}}]);return HelpTips;}();
;// CONCATENATED MODULE: ./src/store/rootStore.js
var RootStore=/*#__PURE__*/function(){function RootStore(){classCallCheck_classCallCheck(this,RootStore);this.puzzle=null;this.puzzleStore=new PuzzleStore(this);this.gameStore=new GameStore(this);this.helpTips=new HelpTips(this);makeAutoObservable(this,{});}createClass_createClass(RootStore,[{key:"clearStoredData",value:function(){var _clearStoredData=asyncToGenerator_asyncToGenerator(/*#__PURE__*/regeneratorRuntime_regeneratorRuntime().mark(function _callee(){return regeneratorRuntime_regeneratorRuntime().wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return clearPersistedStore(this.helpTips);case 2:_context.next=4;return clearPersistedStore(this.puzzleStore);case 4:_context.next=6;return clearPersistedStore(this.gameStore);case 6:case"end":return _context.stop();}}},_callee,this);}));function clearStoredData(){return _clearStoredData.apply(this,arguments);}return clearStoredData;}()},{key:"setPuzzle",value:function setPuzzle(obj){this.puzzle=obj;if(!obj){this.helpTips.stopTracking();}}}]);return RootStore;}();
;// CONCATENATED MODULE: ./src/store/rootStoreContext.js
configure({enforceActions:'always',reactionRequiresObservable:true,// observableRequiresReaction: true,
// computedRequiresReaction: true,
disableErrorBoundaries:false});var store=new RootStore();var RootStoreContext=/*#__PURE__*/(0,react.createContext)();var RootStoreContextProvider=function RootStoreContextProvider(_ref){var children=_ref.children;var _useState=(0,react.useState)(store),_useState2=(0,slicedToArray/* default */.Z)(_useState,2),contextValue=_useState2[0],setContextValue=_useState2[1];return/*#__PURE__*/(0,jsx_runtime.jsx)(RootStoreContext.Provider,{value:[contextValue,setContextValue],children:children});};
;// CONCATENATED MODULE: ./src/components/helper/useResize.js
//https://stackoverflow.com/questions/19014250/rerender-view-on-browser-resize-with-react
function useResize(){var getSize=function getSize(){return{width:window.innerWidth,height:window.innerHeight};};var _useState=(0,react.useState)(getSize),_useState2=(0,slicedToArray/* default */.Z)(_useState,2),size=_useState2[0],setSize=_useState2[1];var handleResize=(0,react.useCallback)(function(){var ticking=false;if(!ticking){window.requestAnimationFrame(function(){setSize(getSize());ticking=false;});ticking=true;}},[]);(0,react.useEffect)(function(){window.addEventListener('resize',handleResize);return function(){return window.removeEventListener('resize',handleResize);};},[handleResize]);return size;}
// EXTERNAL MODULE: ./node_modules/react-error-boundary/dist/react-error-boundary.umd.js
var react_error_boundary_umd = __webpack_require__(7470);
// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js
var objectWithoutPropertiesLoose = __webpack_require__(3366);
// EXTERNAL MODULE: ./node_modules/clsx/dist/clsx.m.js
var clsx_m = __webpack_require__(8182);
// EXTERNAL MODULE: ./node_modules/@mui/styled-engine/index.js + 3 modules
var styled_engine = __webpack_require__(2421);
// EXTERNAL MODULE: ./node_modules/@mui/system/esm/styleFunctionSx/styleFunctionSx.js
var styleFunctionSx = __webpack_require__(104);
// EXTERNAL MODULE: ./node_modules/@mui/utils/esm/deepmerge.js
var deepmerge = __webpack_require__(2466);
// EXTERNAL MODULE: ./node_modules/@mui/system/esm/styleFunctionSx/defaultSxConfig.js + 5 modules
var defaultSxConfig = __webpack_require__(7416);
;// CONCATENATED MODULE: ./node_modules/@mui/system/esm/styleFunctionSx/extendSxProp.js



var _excluded = ["sx"];


var splitProps = function splitProps(props) {
  var _props$theme$unstable, _props$theme;
  var result = {
    systemProps: {},
    otherProps: {}
  };
  var config = (_props$theme$unstable = props == null ? void 0 : (_props$theme = props.theme) == null ? void 0 : _props$theme.unstable_sxConfig) != null ? _props$theme$unstable : defaultSxConfig/* default */.Z;
  Object.keys(props).forEach(function (prop) {
    if (config[prop]) {
      result.systemProps[prop] = props[prop];
    } else {
      result.otherProps[prop] = props[prop];
    }
  });
  return result;
};
function extendSxProp(props) {
  var inSx = props.sx,
    other = (0,objectWithoutPropertiesLoose/* default */.Z)(props, _excluded);
  var _splitProps = splitProps(other),
    systemProps = _splitProps.systemProps,
    otherProps = _splitProps.otherProps;
  var finalSx;
  if (Array.isArray(inSx)) {
    finalSx = [systemProps].concat((0,toConsumableArray/* default */.Z)(inSx));
  } else if (typeof inSx === 'function') {
    finalSx = function finalSx() {
      var result = inSx.apply(void 0, arguments);
      if (!(0,deepmerge/* isPlainObject */.P)(result)) {
        return systemProps;
      }
      return (0,esm_extends/* default */.Z)({}, systemProps, result);
    };
  } else {
    finalSx = (0,esm_extends/* default */.Z)({}, systemProps, inSx);
  }
  return (0,esm_extends/* default */.Z)({}, otherProps, {
    sx: finalSx
  });
}
;// CONCATENATED MODULE: ./node_modules/@mui/system/esm/createBox.js


var createBox_excluded = ["className", "component"];






function createBox() {
  var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
  var defaultTheme = options.defaultTheme,
    _options$defaultClass = options.defaultClassName,
    defaultClassName = _options$defaultClass === void 0 ? 'MuiBox-root' : _options$defaultClass,
    generateClassName = options.generateClassName;
  var BoxRoot = (0,styled_engine/* default */.ZP)('div', {
    shouldForwardProp: function shouldForwardProp(prop) {
      return prop !== 'theme' && prop !== 'sx' && prop !== 'as';
    }
  })(styleFunctionSx/* default */.Z);
  var Box = /*#__PURE__*/react.forwardRef(function Box(inProps, ref) {
    var theme = (0,esm_useTheme/* default */.Z)(defaultTheme);
    var _extendSxProp = extendSxProp(inProps),
      className = _extendSxProp.className,
      _extendSxProp$compone = _extendSxProp.component,
      component = _extendSxProp$compone === void 0 ? 'div' : _extendSxProp$compone,
      other = (0,objectWithoutPropertiesLoose/* default */.Z)(_extendSxProp, createBox_excluded);
    return /*#__PURE__*/(0,jsx_runtime.jsx)(BoxRoot, (0,esm_extends/* default */.Z)({
      as: component,
      ref: ref,
      className: (0,clsx_m/* default */.Z)(className, generateClassName ? generateClassName(defaultClassName) : defaultClassName),
      theme: theme
    }, other));
  });
  return Box;
}
// EXTERNAL MODULE: ./node_modules/@mui/utils/esm/ClassNameGenerator/ClassNameGenerator.js
var ClassNameGenerator = __webpack_require__(5902);
;// CONCATENATED MODULE: ./node_modules/@mui/material/Box/Box.js




var Box_defaultTheme = (0,createTheme/* default */.Z)();
var Box = createBox({
  defaultTheme: Box_defaultTheme,
  defaultClassName: 'MuiBox-root',
  generateClassName: ClassNameGenerator/* default.generate */.Z.generate
});
 false ? 0 : void 0;
/* harmony default export */ var Box_Box = (Box);
;// CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js
function assertThisInitialized_assertThisInitialized(self) {
  if (self === void 0) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }
  return self;
}
;// CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js
function setPrototypeOf_setPrototypeOf(o, p) {
  setPrototypeOf_setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) {
    o.__proto__ = p;
    return o;
  };
  return setPrototypeOf_setPrototypeOf(o, p);
}
;// CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/esm/inherits.js

function inherits_inherits(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function");
  }
  subClass.prototype = Object.create(superClass && superClass.prototype, {
    constructor: {
      value: subClass,
      writable: true,
      configurable: true
    }
  });
  Object.defineProperty(subClass, "prototype", {
    writable: false
  });
  if (superClass) setPrototypeOf_setPrototypeOf(subClass, superClass);
}
;// CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js
function getPrototypeOf_getPrototypeOf(o) {
  getPrototypeOf_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) {
    return o.__proto__ || Object.getPrototypeOf(o);
  };
  return getPrototypeOf_getPrototypeOf(o);
}
;// CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/esm/isNativeReflectConstruct.js
function _isNativeReflectConstruct() {
  if (typeof Reflect === "undefined" || !Reflect.construct) return false;
  if (Reflect.construct.sham) return false;
  if (typeof Proxy === "function") return true;
  try {
    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));
    return true;
  } catch (e) {
    return false;
  }
}
;// CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js


function _possibleConstructorReturn(self, call) {
  if (call && ((0,esm_typeof/* default */.Z)(call) === "object" || typeof call === "function")) {
    return call;
  } else if (call !== void 0) {
    throw new TypeError("Derived constructors may only return object or undefined");
  }
  return assertThisInitialized_assertThisInitialized(self);
}
;// CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/esm/createSuper.js



function createSuper_createSuper(Derived) {
  var hasNativeReflectConstruct = _isNativeReflectConstruct();
  return function _createSuperInternal() {
    var Super = getPrototypeOf_getPrototypeOf(Derived),
      result;
    if (hasNativeReflectConstruct) {
      var NewTarget = getPrototypeOf_getPrototypeOf(this).constructor;
      result = Reflect.construct(Super, arguments, NewTarget);
    } else {
      result = Super.apply(this, arguments);
    }
    return _possibleConstructorReturn(this, result);
  };
}
;// CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/esm/isNativeFunction.js
function _isNativeFunction(fn) {
  return Function.toString.call(fn).indexOf("[native code]") !== -1;
}
;// CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/esm/construct.js


function construct_construct(Parent, args, Class) {
  if (_isNativeReflectConstruct()) {
    construct_construct = Reflect.construct.bind();
  } else {
    construct_construct = function _construct(Parent, args, Class) {
      var a = [null];
      a.push.apply(a, args);
      var Constructor = Function.bind.apply(Parent, a);
      var instance = new Constructor();
      if (Class) setPrototypeOf_setPrototypeOf(instance, Class.prototype);
      return instance;
    };
  }
  return construct_construct.apply(null, arguments);
}
;// CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/esm/wrapNativeSuper.js




function _wrapNativeSuper(Class) {
  var _cache = typeof Map === "function" ? new Map() : undefined;
  _wrapNativeSuper = function _wrapNativeSuper(Class) {
    if (Class === null || !_isNativeFunction(Class)) return Class;
    if (typeof Class !== "function") {
      throw new TypeError("Super expression must either be null or a function");
    }
    if (typeof _cache !== "undefined") {
      if (_cache.has(Class)) return _cache.get(Class);
      _cache.set(Class, Wrapper);
    }
    function Wrapper() {
      return construct_construct(Class, arguments, getPrototypeOf_getPrototypeOf(this).constructor);
    }
    Wrapper.prototype = Object.create(Class.prototype, {
      constructor: {
        value: Wrapper,
        enumerable: false,
        writable: true,
        configurable: true
      }
    });
    return setPrototypeOf_setPrototypeOf(Wrapper, Class);
  };
  return _wrapNativeSuper(Class);
}
;// CONCATENATED MODULE: ./node_modules/@firebase/util/dist/index.esm2017.js








/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * @fileoverview Firebase constants.  Some of these (@defines) can be overridden at compile-time.
 */
var CONSTANTS = {
  /**
   * @define {boolean} Whether this is the client Node.js SDK.
   */
  NODE_CLIENT: false,
  /**
   * @define {boolean} Whether this is the Admin Node.js SDK.
   */
  NODE_ADMIN: false,
  /**
   * Firebase SDK Version
   */
  SDK_VERSION: '${JSCORE_VERSION}'
};

/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * Throws an error if the provided assertion is falsy
 */
var assert = function assert(assertion, message) {
  if (!assertion) {
    throw assertionError(message);
  }
};
/**
 * Returns an Error object suitable for throwing.
 */
var assertionError = function assertionError(message) {
  return new Error('Firebase Database (' + CONSTANTS.SDK_VERSION + ') INTERNAL ASSERT FAILED: ' + message);
};

/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
var stringToByteArray$1 = function stringToByteArray$1(str) {
  // TODO(user): Use native implementations if/when available
  var out = [];
  var p = 0;
  for (var i = 0; i < str.length; i++) {
    var c = str.charCodeAt(i);
    if (c < 128) {
      out[p++] = c;
    } else if (c < 2048) {
      out[p++] = c >> 6 | 192;
      out[p++] = c & 63 | 128;
    } else if ((c & 0xfc00) === 0xd800 && i + 1 < str.length && (str.charCodeAt(i + 1) & 0xfc00) === 0xdc00) {
      // Surrogate Pair
      c = 0x10000 + ((c & 0x03ff) << 10) + (str.charCodeAt(++i) & 0x03ff);
      out[p++] = c >> 18 | 240;
      out[p++] = c >> 12 & 63 | 128;
      out[p++] = c >> 6 & 63 | 128;
      out[p++] = c & 63 | 128;
    } else {
      out[p++] = c >> 12 | 224;
      out[p++] = c >> 6 & 63 | 128;
      out[p++] = c & 63 | 128;
    }
  }
  return out;
};
/**
 * Turns an array of numbers into the string given by the concatenation of the
 * characters to which the numbers correspond.
 * @param bytes Array of numbers representing characters.
 * @return Stringification of the array.
 */
var byteArrayToString = function byteArrayToString(bytes) {
  // TODO(user): Use native implementations if/when available
  var out = [];
  var pos = 0,
    c = 0;
  while (pos < bytes.length) {
    var c1 = bytes[pos++];
    if (c1 < 128) {
      out[c++] = String.fromCharCode(c1);
    } else if (c1 > 191 && c1 < 224) {
      var c2 = bytes[pos++];
      out[c++] = String.fromCharCode((c1 & 31) << 6 | c2 & 63);
    } else if (c1 > 239 && c1 < 365) {
      // Surrogate Pair
      var _c = bytes[pos++];
      var c3 = bytes[pos++];
      var c4 = bytes[pos++];
      var u = ((c1 & 7) << 18 | (_c & 63) << 12 | (c3 & 63) << 6 | c4 & 63) - 0x10000;
      out[c++] = String.fromCharCode(0xd800 + (u >> 10));
      out[c++] = String.fromCharCode(0xdc00 + (u & 1023));
    } else {
      var _c2 = bytes[pos++];
      var _c3 = bytes[pos++];
      out[c++] = String.fromCharCode((c1 & 15) << 12 | (_c2 & 63) << 6 | _c3 & 63);
    }
  }
  return out.join('');
};
// We define it as an object literal instead of a class because a class compiled down to es5 can't
// be treeshaked. https://github.com/rollup/rollup/issues/1691
// Static lookup maps, lazily populated by init_()
var base64 = {
  /**
   * Maps bytes to characters.
   */
  byteToCharMap_: null,
  /**
   * Maps characters to bytes.
   */
  charToByteMap_: null,
  /**
   * Maps bytes to websafe characters.
   * @private
   */
  byteToCharMapWebSafe_: null,
  /**
   * Maps websafe characters to bytes.
   * @private
   */
  charToByteMapWebSafe_: null,
  /**
   * Our default alphabet, shared between
   * ENCODED_VALS and ENCODED_VALS_WEBSAFE
   */
  ENCODED_VALS_BASE: 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' + 'abcdefghijklmnopqrstuvwxyz' + '0123456789',
  /**
   * Our default alphabet. Value 64 (=) is special; it means "nothing."
   */
  get ENCODED_VALS() {
    return this.ENCODED_VALS_BASE + '+/=';
  },
  /**
   * Our websafe alphabet.
   */
  get ENCODED_VALS_WEBSAFE() {
    return this.ENCODED_VALS_BASE + '-_.';
  },
  /**
   * Whether this browser supports the atob and btoa functions. This extension
   * started at Mozilla but is now implemented by many browsers. We use the
   * ASSUME_* variables to avoid pulling in the full useragent detection library
   * but still allowing the standard per-browser compilations.
   *
   */
  HAS_NATIVE_SUPPORT: typeof atob === 'function',
  /**
   * Base64-encode an array of bytes.
   *
   * @param input An array of bytes (numbers with
   *     value in [0, 255]) to encode.
   * @param webSafe Boolean indicating we should use the
   *     alternative alphabet.
   * @return The base64 encoded string.
   */
  encodeByteArray: function encodeByteArray(input, webSafe) {
    if (!Array.isArray(input)) {
      throw Error('encodeByteArray takes an array as a parameter');
    }
    this.init_();
    var byteToCharMap = webSafe ? this.byteToCharMapWebSafe_ : this.byteToCharMap_;
    var output = [];
    for (var i = 0; i < input.length; i += 3) {
      var byte1 = input[i];
      var haveByte2 = i + 1 < input.length;
      var byte2 = haveByte2 ? input[i + 1] : 0;
      var haveByte3 = i + 2 < input.length;
      var byte3 = haveByte3 ? input[i + 2] : 0;
      var outByte1 = byte1 >> 2;
      var outByte2 = (byte1 & 0x03) << 4 | byte2 >> 4;
      var outByte3 = (byte2 & 0x0f) << 2 | byte3 >> 6;
      var outByte4 = byte3 & 0x3f;
      if (!haveByte3) {
        outByte4 = 64;
        if (!haveByte2) {
          outByte3 = 64;
        }
      }
      output.push(byteToCharMap[outByte1], byteToCharMap[outByte2], byteToCharMap[outByte3], byteToCharMap[outByte4]);
    }
    return output.join('');
  },
  /**
   * Base64-encode a string.
   *
   * @param input A string to encode.
   * @param webSafe If true, we should use the
   *     alternative alphabet.
   * @return The base64 encoded string.
   */
  encodeString: function encodeString(input, webSafe) {
    // Shortcut for Mozilla browsers that implement
    // a native base64 encoder in the form of "btoa/atob"
    if (this.HAS_NATIVE_SUPPORT && !webSafe) {
      return btoa(input);
    }
    return this.encodeByteArray(stringToByteArray$1(input), webSafe);
  },
  /**
   * Base64-decode a string.
   *
   * @param input to decode.
   * @param webSafe True if we should use the
   *     alternative alphabet.
   * @return string representing the decoded value.
   */
  decodeString: function decodeString(input, webSafe) {
    // Shortcut for Mozilla browsers that implement
    // a native base64 encoder in the form of "btoa/atob"
    if (this.HAS_NATIVE_SUPPORT && !webSafe) {
      return atob(input);
    }
    return byteArrayToString(this.decodeStringToByteArray(input, webSafe));
  },
  /**
   * Base64-decode a string.
   *
   * In base-64 decoding, groups of four characters are converted into three
   * bytes.  If the encoder did not apply padding, the input length may not
   * be a multiple of 4.
   *
   * In this case, the last group will have fewer than 4 characters, and
   * padding will be inferred.  If the group has one or two characters, it decodes
   * to one byte.  If the group has three characters, it decodes to two bytes.
   *
   * @param input Input to decode.
   * @param webSafe True if we should use the web-safe alphabet.
   * @return bytes representing the decoded value.
   */
  decodeStringToByteArray: function decodeStringToByteArray(input, webSafe) {
    this.init_();
    var charToByteMap = webSafe ? this.charToByteMapWebSafe_ : this.charToByteMap_;
    var output = [];
    for (var i = 0; i < input.length;) {
      var byte1 = charToByteMap[input.charAt(i++)];
      var haveByte2 = i < input.length;
      var byte2 = haveByte2 ? charToByteMap[input.charAt(i)] : 0;
      ++i;
      var haveByte3 = i < input.length;
      var byte3 = haveByte3 ? charToByteMap[input.charAt(i)] : 64;
      ++i;
      var haveByte4 = i < input.length;
      var byte4 = haveByte4 ? charToByteMap[input.charAt(i)] : 64;
      ++i;
      if (byte1 == null || byte2 == null || byte3 == null || byte4 == null) {
        throw Error();
      }
      var outByte1 = byte1 << 2 | byte2 >> 4;
      output.push(outByte1);
      if (byte3 !== 64) {
        var outByte2 = byte2 << 4 & 0xf0 | byte3 >> 2;
        output.push(outByte2);
        if (byte4 !== 64) {
          var outByte3 = byte3 << 6 & 0xc0 | byte4;
          output.push(outByte3);
        }
      }
    }
    return output;
  },
  /**
   * Lazy static initialization function. Called before
   * accessing any of the static map variables.
   * @private
   */
  init_: function init_() {
    if (!this.byteToCharMap_) {
      this.byteToCharMap_ = {};
      this.charToByteMap_ = {};
      this.byteToCharMapWebSafe_ = {};
      this.charToByteMapWebSafe_ = {};
      // We want quick mappings back and forth, so we precompute two maps.
      for (var i = 0; i < this.ENCODED_VALS.length; i++) {
        this.byteToCharMap_[i] = this.ENCODED_VALS.charAt(i);
        this.charToByteMap_[this.byteToCharMap_[i]] = i;
        this.byteToCharMapWebSafe_[i] = this.ENCODED_VALS_WEBSAFE.charAt(i);
        this.charToByteMapWebSafe_[this.byteToCharMapWebSafe_[i]] = i;
        // Be forgiving when decoding and correctly decode both encodings.
        if (i >= this.ENCODED_VALS_BASE.length) {
          this.charToByteMap_[this.ENCODED_VALS_WEBSAFE.charAt(i)] = i;
          this.charToByteMapWebSafe_[this.ENCODED_VALS.charAt(i)] = i;
        }
      }
    }
  }
};
/**
 * URL-safe base64 encoding
 */
var base64Encode = function base64Encode(str) {
  var utf8Bytes = stringToByteArray$1(str);
  return base64.encodeByteArray(utf8Bytes, true);
};
/**
 * URL-safe base64 encoding (without "." padding in the end).
 * e.g. Used in JSON Web Token (JWT) parts.
 */
var base64urlEncodeWithoutPadding = function base64urlEncodeWithoutPadding(str) {
  // Use base64url encoding and remove padding in the end (dot characters).
  return base64Encode(str).replace(/\./g, '');
};
/**
 * URL-safe base64 decoding
 *
 * NOTE: DO NOT use the global atob() function - it does NOT support the
 * base64Url variant encoding.
 *
 * @param str To be decoded
 * @return Decoded result, if possible
 */
var base64Decode = function base64Decode(str) {
  try {
    return base64.decodeString(str, true);
  } catch (e) {
    console.error('base64Decode failed: ', e);
  }
  return null;
};

/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * Do a deep-copy of basic JavaScript Objects or Arrays.
 */
function deepCopy(value) {
  return deepExtend(undefined, value);
}
/**
 * Copy properties from source to target (recursively allows extension
 * of Objects and Arrays).  Scalar values in the target are over-written.
 * If target is undefined, an object of the appropriate type will be created
 * (and returned).
 *
 * We recursively copy all child properties of plain Objects in the source- so
 * that namespace- like dictionaries are merged.
 *
 * Note that the target can be a function, in which case the properties in
 * the source Object are copied onto it as static properties of the Function.
 *
 * Note: we don't merge __proto__ to prevent prototype pollution
 */
function deepExtend(target, source) {
  if (!(source instanceof Object)) {
    return source;
  }
  switch (source.constructor) {
    case Date:
      // Treat Dates like scalars; if the target date object had any child
      // properties - they will be lost!
      var dateValue = source;
      return new Date(dateValue.getTime());
    case Object:
      if (target === undefined) {
        target = {};
      }
      break;
    case Array:
      // Always copy the array source and overwrite the target.
      target = [];
      break;
    default:
      // Not a plain Object - treat it as a scalar.
      return source;
  }
  for (var prop in source) {
    // use isValidKey to guard against prototype pollution. See https://snyk.io/vuln/SNYK-JS-LODASH-450202
    if (!source.hasOwnProperty(prop) || !isValidKey(prop)) {
      continue;
    }
    target[prop] = deepExtend(target[prop], source[prop]);
  }
  return target;
}
function isValidKey(key) {
  return key !== '__proto__';
}

/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * Returns navigator.userAgent string or '' if it's not defined.
 * @return user agent string
 */
function index_esm2017_getUA() {
  if (typeof navigator !== 'undefined' && typeof navigator['userAgent'] === 'string') {
    return navigator['userAgent'];
  } else {
    return '';
  }
}
/**
 * Detect Cordova / PhoneGap / Ionic frameworks on a mobile device.
 *
 * Deliberately does not rely on checking `file://` URLs (as this fails PhoneGap
 * in the Ripple emulator) nor Cordova `onDeviceReady`, which would normally
 * wait for a callback.
 */
function isMobileCordova() {
  return typeof window !== 'undefined' &&
  // @ts-ignore Setting up an broadly applicable index signature for Window
  // just to deal with this case would probably be a bad idea.
  !!(window['cordova'] || window['phonegap'] || window['PhoneGap']) && /ios|iphone|ipod|ipad|android|blackberry|iemobile/i.test(index_esm2017_getUA());
}
/**
 * Detect Node.js.
 *
 * @return true if Node.js environment is detected.
 */
// Node detection logic from: https://github.com/iliakan/detect-node/
function isNode() {
  try {
    return Object.prototype.toString.call(__webpack_require__.g.process) === '[object process]';
  } catch (e) {
    return false;
  }
}
/**
 * Detect Browser Environment
 */
function index_esm2017_isBrowser() {
  return typeof self === 'object' && self.self === self;
}
function index_esm2017_isBrowserExtension() {
  var runtime = typeof chrome === 'object' ? chrome.runtime : typeof browser === 'object' ? browser.runtime : undefined;
  return typeof runtime === 'object' && runtime.id !== undefined;
}
/**
 * Detect React Native.
 *
 * @return true if ReactNative environment is detected.
 */
function isReactNative() {
  return typeof navigator === 'object' && navigator['product'] === 'ReactNative';
}
/** Detects Electron apps. */
function isElectron() {
  return index_esm2017_getUA().indexOf('Electron/') >= 0;
}
/** Detects Internet Explorer. */
function isIE() {
  var ua = index_esm2017_getUA();
  return ua.indexOf('MSIE ') >= 0 || ua.indexOf('Trident/') >= 0;
}
/** Detects Universal Windows Platform apps. */
function isUWP() {
  return index_esm2017_getUA().indexOf('MSAppHost/') >= 0;
}
/**
 * Detect whether the current SDK build is the Node version.
 *
 * @return true if it's the Node SDK build.
 */
function isNodeSdk() {
  return CONSTANTS.NODE_CLIENT === true || CONSTANTS.NODE_ADMIN === true;
}
/** Returns true if we are running in Safari. */
function index_esm2017_isSafari() {
  return !isNode() && navigator.userAgent.includes('Safari') && !navigator.userAgent.includes('Chrome');
}
/**
 * This method checks if indexedDB is supported by current browser/service worker context
 * @return true if indexedDB is supported by current browser/service worker context
 */
function index_esm2017_isIndexedDBAvailable() {
  try {
    return typeof indexedDB === 'object';
  } catch (e) {
    return false;
  }
}
/**
 * This method validates browser/sw context for indexedDB by opening a dummy indexedDB database and reject
 * if errors occur during the database open operation.
 *
 * @throws exception if current browser/sw context can't run idb.open (ex: Safari iframe, Firefox
 * private browsing)
 */
function index_esm2017_validateIndexedDBOpenable() {
  return new Promise(function (resolve, reject) {
    try {
      var preExist = true;
      var DB_CHECK_NAME = 'validate-browser-context-for-indexeddb-analytics-module';
      var request = self.indexedDB.open(DB_CHECK_NAME);
      request.onsuccess = function () {
        request.result.close();
        // delete database only when it doesn't pre-exist
        if (!preExist) {
          self.indexedDB.deleteDatabase(DB_CHECK_NAME);
        }
        resolve(true);
      };
      request.onupgradeneeded = function () {
        preExist = false;
      };
      request.onerror = function () {
        var _a;
        reject(((_a = request.error) === null || _a === void 0 ? void 0 : _a.message) || '');
      };
    } catch (error) {
      reject(error);
    }
  });
}
/**
 *
 * This method checks whether cookie is enabled within current browser
 * @return true if cookie is enabled within current browser
 */
function index_esm2017_areCookiesEnabled() {
  if (typeof navigator === 'undefined' || !navigator.cookieEnabled) {
    return false;
  }
  return true;
}
/**
 * Polyfill for `globalThis` object.
 * @returns the `globalThis` object for the given environment.
 */
function index_esm2017_getGlobal() {
  if (typeof self !== 'undefined') {
    return self;
  }
  if (typeof window !== 'undefined') {
    return window;
  }
  if (typeof __webpack_require__.g !== 'undefined') {
    return __webpack_require__.g;
  }
  throw new Error('Unable to locate global object.');
}

/**
 * @license
 * Copyright 2022 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
var getDefaultsFromGlobal = function getDefaultsFromGlobal() {
  return index_esm2017_getGlobal().__FIREBASE_DEFAULTS__;
};
/**
 * Attempt to read defaults from a JSON string provided to
 * process.env.__FIREBASE_DEFAULTS__ or a JSON file whose path is in
 * process.env.__FIREBASE_DEFAULTS_PATH__
 */
var getDefaultsFromEnvVariable = function getDefaultsFromEnvVariable() {
  if (typeof process === 'undefined' || "object" === 'undefined') {
    return;
  }
  var defaultsJsonString = ({"NODE_ENV":"production","PUBLIC_URL":"","WDS_SOCKET_HOST":undefined,"WDS_SOCKET_PATH":undefined,"WDS_SOCKET_PORT":undefined,"FAST_REFRESH":true}).__FIREBASE_DEFAULTS__;
  if (defaultsJsonString) {
    return JSON.parse(defaultsJsonString);
  }
};
var getDefaultsFromCookie = function getDefaultsFromCookie() {
  if (typeof document === 'undefined') {
    return;
  }
  var match;
  try {
    match = document.cookie.match(/__FIREBASE_DEFAULTS__=([^;]+)/);
  } catch (e) {
    // Some environments such as Angular Universal SSR have a
    // `document` object but error on accessing `document.cookie`.
    return;
  }
  var decoded = match && base64Decode(match[1]);
  return decoded && JSON.parse(decoded);
};
/**
 * Get the __FIREBASE_DEFAULTS__ object. It checks in order:
 * (1) if such an object exists as a property of `globalThis`
 * (2) if such an object was provided on a shell environment variable
 * (3) if such an object exists in a cookie
 */
var getDefaults = function getDefaults() {
  try {
    return getDefaultsFromGlobal() || getDefaultsFromEnvVariable() || getDefaultsFromCookie();
  } catch (e) {
    /**
     * Catch-all for being unable to get __FIREBASE_DEFAULTS__ due
     * to any environment case we have not accounted for. Log to
     * info instead of swallowing so we can find these unknown cases
     * and add paths for them if needed.
     */
    console.info("Unable to get __FIREBASE_DEFAULTS__ due to: ".concat(e));
    return;
  }
};
/**
 * Returns emulator host stored in the __FIREBASE_DEFAULTS__ object
 * for the given product.
 * @returns a URL host formatted like `127.0.0.1:9999` or `[::1]:4000` if available
 * @public
 */
var getDefaultEmulatorHost = function getDefaultEmulatorHost(productName) {
  var _a, _b;
  return (_b = (_a = getDefaults()) === null || _a === void 0 ? void 0 : _a.emulatorHosts) === null || _b === void 0 ? void 0 : _b[productName];
};
/**
 * Returns emulator hostname and port stored in the __FIREBASE_DEFAULTS__ object
 * for the given product.
 * @returns a pair of hostname and port like `["::1", 4000]` if available
 * @public
 */
var getDefaultEmulatorHostnameAndPort = function getDefaultEmulatorHostnameAndPort(productName) {
  var host = getDefaultEmulatorHost(productName);
  if (!host) {
    return undefined;
  }
  var separatorIndex = host.lastIndexOf(':'); // Finding the last since IPv6 addr also has colons.
  if (separatorIndex <= 0 || separatorIndex + 1 === host.length) {
    throw new Error("Invalid host ".concat(host, " with no separate hostname and port!"));
  }
  // eslint-disable-next-line no-restricted-globals
  var port = parseInt(host.substring(separatorIndex + 1), 10);
  if (host[0] === '[') {
    // Bracket-quoted `[ipv6addr]:port` => return "ipv6addr" (without brackets).
    return [host.substring(1, separatorIndex - 1), port];
  } else {
    return [host.substring(0, separatorIndex), port];
  }
};
/**
 * Returns Firebase app config stored in the __FIREBASE_DEFAULTS__ object.
 * @public
 */
var getDefaultAppConfig = function getDefaultAppConfig() {
  var _a;
  return (_a = getDefaults()) === null || _a === void 0 ? void 0 : _a.config;
};
/**
 * Returns an experimental setting on the __FIREBASE_DEFAULTS__ object (properties
 * prefixed by "_")
 * @public
 */
var getExperimentalSetting = function getExperimentalSetting(name) {
  var _a;
  return (_a = getDefaults()) === null || _a === void 0 ? void 0 : _a["_".concat(name)];
};

/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
var Deferred = /*#__PURE__*/function () {
  function Deferred() {
    var _this = this;
    classCallCheck_classCallCheck(this, Deferred);
    this.reject = function () {};
    this.resolve = function () {};
    this.promise = new Promise(function (resolve, reject) {
      _this.resolve = resolve;
      _this.reject = reject;
    });
  }
  /**
   * Our API internals are not promiseified and cannot because our callback APIs have subtle expectations around
   * invoking promises inline, which Promises are forbidden to do. This method accepts an optional node-style callback
   * and returns a node-style callback which will resolve or reject the Deferred's promise.
   */
  createClass_createClass(Deferred, [{
    key: "wrapCallback",
    value: function wrapCallback(callback) {
      var _this2 = this;
      return function (error, value) {
        if (error) {
          _this2.reject(error);
        } else {
          _this2.resolve(value);
        }
        if (typeof callback === 'function') {
          // Attaching noop handler just in case developer wasn't expecting
          // promises
          _this2.promise.catch(function () {});
          // Some of our callbacks don't expect a value and our own tests
          // assert that the parameter length is 1
          if (callback.length === 1) {
            callback(error);
          } else {
            callback(error, value);
          }
        }
      };
    }
  }]);
  return Deferred;
}();
/**
 * @license
 * Copyright 2021 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
function createMockUserToken(token, projectId) {
  if (token.uid) {
    throw new Error('The "uid" field is no longer supported by mockUserToken. Please use "sub" instead for Firebase Auth User ID.');
  }
  // Unsecured JWTs use "none" as the algorithm.
  var header = {
    alg: 'none',
    type: 'JWT'
  };
  var project = projectId || 'demo-project';
  var iat = token.iat || 0;
  var sub = token.sub || token.user_id;
  if (!sub) {
    throw new Error("mockUserToken must contain 'sub' or 'user_id' field!");
  }
  var payload = Object.assign({
    // Set all required fields to decent defaults
    iss: "https://securetoken.google.com/".concat(project),
    aud: project,
    iat: iat,
    exp: iat + 3600,
    auth_time: iat,
    sub: sub,
    user_id: sub,
    firebase: {
      sign_in_provider: 'custom',
      identities: {}
    }
  }, token);
  // Unsecured JWTs use the empty string as a signature.
  var signature = '';
  return [base64urlEncodeWithoutPadding(JSON.stringify(header)), base64urlEncodeWithoutPadding(JSON.stringify(payload)), signature].join('.');
}

/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * @fileoverview Standardized Firebase Error.
 *
 * Usage:
 *
 *   // Typescript string literals for type-safe codes
 *   type Err =
 *     'unknown' |
 *     'object-not-found'
 *     ;
 *
 *   // Closure enum for type-safe error codes
 *   // at-enum {string}
 *   var Err = {
 *     UNKNOWN: 'unknown',
 *     OBJECT_NOT_FOUND: 'object-not-found',
 *   }
 *
 *   let errors: Map<Err, string> = {
 *     'generic-error': "Unknown error",
 *     'file-not-found': "Could not find file: {$file}",
 *   };
 *
 *   // Type-safe function - must pass a valid error code as param.
 *   let error = new ErrorFactory<Err>('service', 'Service', errors);
 *
 *   ...
 *   throw error.create(Err.GENERIC);
 *   ...
 *   throw error.create(Err.FILE_NOT_FOUND, {'file': fileName});
 *   ...
 *   // Service: Could not file file: foo.txt (service/file-not-found).
 *
 *   catch (e) {
 *     assert(e.message === "Could not find file: foo.txt.");
 *     if ((e as FirebaseError)?.code === 'service/file-not-found') {
 *       console.log("Could not read file: " + e['file']);
 *     }
 *   }
 */
var ERROR_NAME = 'FirebaseError';
// Based on code from:
// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error#Custom_Error_Types
var FirebaseError = /*#__PURE__*/function (_Error) {
  inherits_inherits(FirebaseError, _Error);
  var _super = createSuper_createSuper(FirebaseError);
  function FirebaseError( /** The error code for this error. */
  code, message, /** Custom data for this error. */
  customData) {
    var _this3;
    classCallCheck_classCallCheck(this, FirebaseError);
    _this3 = _super.call(this, message);
    _this3.code = code;
    _this3.customData = customData;
    /** The custom name for all FirebaseErrors. */
    _this3.name = ERROR_NAME;
    // Fix For ES5
    // https://github.com/Microsoft/TypeScript-wiki/blob/master/Breaking-Changes.md#extending-built-ins-like-error-array-and-map-may-no-longer-work
    Object.setPrototypeOf(assertThisInitialized_assertThisInitialized(_this3), FirebaseError.prototype);
    // Maintains proper stack trace for where our error was thrown.
    // Only available on V8.
    if (Error.captureStackTrace) {
      Error.captureStackTrace(assertThisInitialized_assertThisInitialized(_this3), ErrorFactory.prototype.create);
    }
    return _this3;
  }
  return createClass_createClass(FirebaseError);
}( /*#__PURE__*/_wrapNativeSuper(Error));
var ErrorFactory = /*#__PURE__*/function () {
  function ErrorFactory(service, serviceName, errors) {
    classCallCheck_classCallCheck(this, ErrorFactory);
    this.service = service;
    this.serviceName = serviceName;
    this.errors = errors;
  }
  createClass_createClass(ErrorFactory, [{
    key: "create",
    value: function create(code) {
      var customData = (arguments.length <= 1 ? undefined : arguments[1]) || {};
      var fullCode = "".concat(this.service, "/").concat(code);
      var template = this.errors[code];
      var message = template ? replaceTemplate(template, customData) : 'Error';
      // Service Name: Error message (service/code).
      var fullMessage = "".concat(this.serviceName, ": ").concat(message, " (").concat(fullCode, ").");
      var error = new FirebaseError(fullCode, fullMessage, customData);
      return error;
    }
  }]);
  return ErrorFactory;
}();
function replaceTemplate(template, data) {
  return template.replace(PATTERN, function (_, key) {
    var value = data[key];
    return value != null ? String(value) : "<".concat(key, "?>");
  });
}
var PATTERN = /\{\$([^}]+)}/g;

/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * Evaluates a JSON string into a javascript object.
 *
 * @param {string} str A string containing JSON.
 * @return {*} The javascript object representing the specified JSON.
 */
function jsonEval(str) {
  return JSON.parse(str);
}
/**
 * Returns JSON representing a javascript object.
 * @param {*} data Javascript object to be stringified.
 * @return {string} The JSON contents of the object.
 */
function stringify(data) {
  return JSON.stringify(data);
}

/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * Decodes a Firebase auth. token into constituent parts.
 *
 * Notes:
 * - May return with invalid / incomplete claims if there's no native base64 decoding support.
 * - Doesn't check if the token is actually valid.
 */
var decode = function decode(token) {
  var header = {},
    claims = {},
    data = {},
    signature = '';
  try {
    var parts = token.split('.');
    header = jsonEval(base64Decode(parts[0]) || '');
    claims = jsonEval(base64Decode(parts[1]) || '');
    signature = parts[2];
    data = claims['d'] || {};
    delete claims['d'];
  } catch (e) {}
  return {
    header: header,
    claims: claims,
    data: data,
    signature: signature
  };
};
/**
 * Decodes a Firebase auth. token and checks the validity of its time-based claims. Will return true if the
 * token is within the time window authorized by the 'nbf' (not-before) and 'iat' (issued-at) claims.
 *
 * Notes:
 * - May return a false negative if there's no native base64 decoding support.
 * - Doesn't check if the token is actually valid.
 */
var isValidTimestamp = function isValidTimestamp(token) {
  var claims = decode(token).claims;
  var now = Math.floor(new Date().getTime() / 1000);
  var validSince = 0,
    validUntil = 0;
  if (typeof claims === 'object') {
    if (claims.hasOwnProperty('nbf')) {
      validSince = claims['nbf'];
    } else if (claims.hasOwnProperty('iat')) {
      validSince = claims['iat'];
    }
    if (claims.hasOwnProperty('exp')) {
      validUntil = claims['exp'];
    } else {
      // token will expire after 24h by default
      validUntil = validSince + 86400;
    }
  }
  return !!now && !!validSince && !!validUntil && now >= validSince && now <= validUntil;
};
/**
 * Decodes a Firebase auth. token and returns its issued at time if valid, null otherwise.
 *
 * Notes:
 * - May return null if there's no native base64 decoding support.
 * - Doesn't check if the token is actually valid.
 */
var issuedAtTime = function issuedAtTime(token) {
  var claims = decode(token).claims;
  if (typeof claims === 'object' && claims.hasOwnProperty('iat')) {
    return claims['iat'];
  }
  return null;
};
/**
 * Decodes a Firebase auth. token and checks the validity of its format. Expects a valid issued-at time.
 *
 * Notes:
 * - May return a false negative if there's no native base64 decoding support.
 * - Doesn't check if the token is actually valid.
 */
var isValidFormat = function isValidFormat(token) {
  var decoded = decode(token),
    claims = decoded.claims;
  return !!claims && typeof claims === 'object' && claims.hasOwnProperty('iat');
};
/**
 * Attempts to peer into an auth token and determine if it's an admin auth token by looking at the claims portion.
 *
 * Notes:
 * - May return a false negative if there's no native base64 decoding support.
 * - Doesn't check if the token is actually valid.
 */
var isAdmin = function isAdmin(token) {
  var claims = decode(token).claims;
  return typeof claims === 'object' && claims['admin'] === true;
};

/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
function contains(obj, key) {
  return Object.prototype.hasOwnProperty.call(obj, key);
}
function safeGet(obj, key) {
  if (Object.prototype.hasOwnProperty.call(obj, key)) {
    return obj[key];
  } else {
    return undefined;
  }
}
function index_esm2017_isEmpty(obj) {
  for (var key in obj) {
    if (Object.prototype.hasOwnProperty.call(obj, key)) {
      return false;
    }
  }
  return true;
}
function map(obj, fn, contextObj) {
  var res = {};
  for (var key in obj) {
    if (Object.prototype.hasOwnProperty.call(obj, key)) {
      res[key] = fn.call(contextObj, obj[key], key, obj);
    }
  }
  return res;
}
/**
 * Deep equal two objects. Support Arrays and Objects.
 */
function index_esm2017_deepEqual(a, b) {
  if (a === b) {
    return true;
  }
  var aKeys = Object.keys(a);
  var bKeys = Object.keys(b);
  for (var _i = 0, _aKeys = aKeys; _i < _aKeys.length; _i++) {
    var k = _aKeys[_i];
    if (!bKeys.includes(k)) {
      return false;
    }
    var aProp = a[k];
    var bProp = b[k];
    if (index_esm2017_isObject(aProp) && index_esm2017_isObject(bProp)) {
      if (!index_esm2017_deepEqual(aProp, bProp)) {
        return false;
      }
    } else if (aProp !== bProp) {
      return false;
    }
  }
  for (var _i2 = 0, _bKeys = bKeys; _i2 < _bKeys.length; _i2++) {
    var _k = _bKeys[_i2];
    if (!aKeys.includes(_k)) {
      return false;
    }
  }
  return true;
}
function index_esm2017_isObject(thing) {
  return thing !== null && typeof thing === 'object';
}

/**
 * @license
 * Copyright 2022 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * Rejects if the given promise doesn't resolve in timeInMS milliseconds.
 * @internal
 */
function promiseWithTimeout(promise) {
  var timeInMS = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 2000;
  var deferredPromise = new Deferred();
  setTimeout(function () {
    return deferredPromise.reject('timeout!');
  }, timeInMS);
  promise.then(deferredPromise.resolve, deferredPromise.reject);
  return deferredPromise.promise;
}

/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * Returns a querystring-formatted string (e.g. &arg=val&arg2=val2) from a
 * params object (e.g. {arg: 'val', arg2: 'val2'})
 * Note: You must prepend it with ? when adding it to a URL.
 */
function querystring(querystringParams) {
  var params = [];
  var _loop = function _loop() {
    var _Object$entries$_i = _slicedToArray(_Object$entries[_i3], 2),
      key = _Object$entries$_i[0],
      value = _Object$entries$_i[1];
    if (Array.isArray(value)) {
      value.forEach(function (arrayVal) {
        params.push(encodeURIComponent(key) + '=' + encodeURIComponent(arrayVal));
      });
    } else {
      params.push(encodeURIComponent(key) + '=' + encodeURIComponent(value));
    }
  };
  for (var _i3 = 0, _Object$entries = Object.entries(querystringParams); _i3 < _Object$entries.length; _i3++) {
    _loop();
  }
  return params.length ? '&' + params.join('&') : '';
}
/**
 * Decodes a querystring (e.g. ?arg=val&arg2=val2) into a params object
 * (e.g. {arg: 'val', arg2: 'val2'})
 */
function querystringDecode(querystring) {
  var obj = {};
  var tokens = querystring.replace(/^\?/, '').split('&');
  tokens.forEach(function (token) {
    if (token) {
      var _token$split = token.split('='),
        _token$split2 = _slicedToArray(_token$split, 2),
        key = _token$split2[0],
        value = _token$split2[1];
      obj[decodeURIComponent(key)] = decodeURIComponent(value);
    }
  });
  return obj;
}
/**
 * Extract the query string part of a URL, including the leading question mark (if present).
 */
function extractQuerystring(url) {
  var queryStart = url.indexOf('?');
  if (!queryStart) {
    return '';
  }
  var fragmentStart = url.indexOf('#', queryStart);
  return url.substring(queryStart, fragmentStart > 0 ? fragmentStart : undefined);
}

/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * @fileoverview SHA-1 cryptographic hash.
 * Variable names follow the notation in FIPS PUB 180-3:
 * http://csrc.nist.gov/publications/fips/fips180-3/fips180-3_final.pdf.
 *
 * Usage:
 *   var sha1 = new sha1();
 *   sha1.update(bytes);
 *   var hash = sha1.digest();
 *
 * Performance:
 *   Chrome 23:   ~400 Mbit/s
 *   Firefox 16:  ~250 Mbit/s
 *
 */
/**
 * SHA-1 cryptographic hash constructor.
 *
 * The properties declared here are discussed in the above algorithm document.
 * @constructor
 * @final
 * @struct
 */
var Sha1 = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  function Sha1() {
    _classCallCheck(this, Sha1);
    /**
     * Holds the previous values of accumulated variables a-e in the compress_
     * function.
     * @private
     */
    this.chain_ = [];
    /**
     * A buffer holding the partially computed hash result.
     * @private
     */
    this.buf_ = [];
    /**
     * An array of 80 bytes, each a part of the message to be hashed.  Referred to
     * as the message schedule in the docs.
     * @private
     */
    this.W_ = [];
    /**
     * Contains data needed to pad messages less than 64 bytes.
     * @private
     */
    this.pad_ = [];
    /**
     * @private {number}
     */
    this.inbuf_ = 0;
    /**
     * @private {number}
     */
    this.total_ = 0;
    this.blockSize = 512 / 8;
    this.pad_[0] = 128;
    for (var i = 1; i < this.blockSize; ++i) {
      this.pad_[i] = 0;
    }
    this.reset();
  }
  _createClass(Sha1, [{
    key: "reset",
    value: function reset() {
      this.chain_[0] = 0x67452301;
      this.chain_[1] = 0xefcdab89;
      this.chain_[2] = 0x98badcfe;
      this.chain_[3] = 0x10325476;
      this.chain_[4] = 0xc3d2e1f0;
      this.inbuf_ = 0;
      this.total_ = 0;
    }
    /**
     * Internal compress helper function.
     * @param buf Block to compress.
     * @param offset Offset of the block in the buffer.
     * @private
     */
  }, {
    key: "compress_",
    value: function compress_(buf, offset) {
      if (!offset) {
        offset = 0;
      }
      var W = this.W_;
      // get 16 big endian words
      if (typeof buf === 'string') {
        for (var i = 0; i < 16; i++) {
          // TODO(user): [bug 8140122] Recent versions of Safari for Mac OS and iOS
          // have a bug that turns the post-increment ++ operator into pre-increment
          // during JIT compilation.  We have code that depends heavily on SHA-1 for
          // correctness and which is affected by this bug, so I've removed all uses
          // of post-increment ++ in which the result value is used.  We can revert
          // this change once the Safari bug
          // (https://bugs.webkit.org/show_bug.cgi?id=109036) has been fixed and
          // most clients have been updated.
          W[i] = buf.charCodeAt(offset) << 24 | buf.charCodeAt(offset + 1) << 16 | buf.charCodeAt(offset + 2) << 8 | buf.charCodeAt(offset + 3);
          offset += 4;
        }
      } else {
        for (var _i4 = 0; _i4 < 16; _i4++) {
          W[_i4] = buf[offset] << 24 | buf[offset + 1] << 16 | buf[offset + 2] << 8 | buf[offset + 3];
          offset += 4;
        }
      }
      // expand to 80 words
      for (var _i5 = 16; _i5 < 80; _i5++) {
        var t = W[_i5 - 3] ^ W[_i5 - 8] ^ W[_i5 - 14] ^ W[_i5 - 16];
        W[_i5] = (t << 1 | t >>> 31) & 0xffffffff;
      }
      var a = this.chain_[0];
      var b = this.chain_[1];
      var c = this.chain_[2];
      var d = this.chain_[3];
      var e = this.chain_[4];
      var f, k;
      // TODO(user): Try to unroll this loop to speed up the computation.
      for (var _i6 = 0; _i6 < 80; _i6++) {
        if (_i6 < 40) {
          if (_i6 < 20) {
            f = d ^ b & (c ^ d);
            k = 0x5a827999;
          } else {
            f = b ^ c ^ d;
            k = 0x6ed9eba1;
          }
        } else {
          if (_i6 < 60) {
            f = b & c | d & (b | c);
            k = 0x8f1bbcdc;
          } else {
            f = b ^ c ^ d;
            k = 0xca62c1d6;
          }
        }
        var _t = (a << 5 | a >>> 27) + f + e + k + W[_i6] & 0xffffffff;
        e = d;
        d = c;
        c = (b << 30 | b >>> 2) & 0xffffffff;
        b = a;
        a = _t;
      }
      this.chain_[0] = this.chain_[0] + a & 0xffffffff;
      this.chain_[1] = this.chain_[1] + b & 0xffffffff;
      this.chain_[2] = this.chain_[2] + c & 0xffffffff;
      this.chain_[3] = this.chain_[3] + d & 0xffffffff;
      this.chain_[4] = this.chain_[4] + e & 0xffffffff;
    }
  }, {
    key: "update",
    value: function update(bytes, length) {
      // TODO(johnlenz): tighten the function signature and remove this check
      if (bytes == null) {
        return;
      }
      if (length === undefined) {
        length = bytes.length;
      }
      var lengthMinusBlock = length - this.blockSize;
      var n = 0;
      // Using local instead of member variables gives ~5% speedup on Firefox 16.
      var buf = this.buf_;
      var inbuf = this.inbuf_;
      // The outer while loop should execute at most twice.
      while (n < length) {
        // When we have no data in the block to top up, we can directly process the
        // input buffer (assuming it contains sufficient data). This gives ~25%
        // speedup on Chrome 23 and ~15% speedup on Firefox 16, but requires that
        // the data is provided in large chunks (or in multiples of 64 bytes).
        if (inbuf === 0) {
          while (n <= lengthMinusBlock) {
            this.compress_(bytes, n);
            n += this.blockSize;
          }
        }
        if (typeof bytes === 'string') {
          while (n < length) {
            buf[inbuf] = bytes.charCodeAt(n);
            ++inbuf;
            ++n;
            if (inbuf === this.blockSize) {
              this.compress_(buf);
              inbuf = 0;
              // Jump to the outer loop so we use the full-block optimization.
              break;
            }
          }
        } else {
          while (n < length) {
            buf[inbuf] = bytes[n];
            ++inbuf;
            ++n;
            if (inbuf === this.blockSize) {
              this.compress_(buf);
              inbuf = 0;
              // Jump to the outer loop so we use the full-block optimization.
              break;
            }
          }
        }
      }
      this.inbuf_ = inbuf;
      this.total_ += length;
    }
    /** @override */
  }, {
    key: "digest",
    value: function digest() {
      var digest = [];
      var totalBits = this.total_ * 8;
      // Add pad 0x80 0x00*.
      if (this.inbuf_ < 56) {
        this.update(this.pad_, 56 - this.inbuf_);
      } else {
        this.update(this.pad_, this.blockSize - (this.inbuf_ - 56));
      }
      // Add # bits.
      for (var i = this.blockSize - 1; i >= 56; i--) {
        this.buf_[i] = totalBits & 255;
        totalBits /= 256; // Don't use bit-shifting here!
      }

      this.compress_(this.buf_);
      var n = 0;
      for (var _i7 = 0; _i7 < 5; _i7++) {
        for (var j = 24; j >= 0; j -= 8) {
          digest[n] = this.chain_[_i7] >> j & 255;
          ++n;
        }
      }
      return digest;
    }
  }]);
  return Sha1;
}()));
/**
 * Helper to make a Subscribe function (just like Promise helps make a
 * Thenable).
 *
 * @param executor Function which can make calls to a single Observer
 *     as a proxy.
 * @param onNoObservers Callback when count of Observers goes to zero.
 */
function createSubscribe(executor, onNoObservers) {
  var proxy = new ObserverProxy(executor, onNoObservers);
  return proxy.subscribe.bind(proxy);
}
/**
 * Implement fan-out for any number of Observers attached via a subscribe
 * function.
 */
var ObserverProxy = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  /**
   * @param executor Function which can make calls to a single Observer
   *     as a proxy.
   * @param onNoObservers Callback when count of Observers goes to zero.
   */
  function ObserverProxy(executor, onNoObservers) {
    var _this4 = this;
    _classCallCheck(this, ObserverProxy);
    this.observers = [];
    this.unsubscribes = [];
    this.observerCount = 0;
    // Micro-task scheduling by calling task.then().
    this.task = Promise.resolve();
    this.finalized = false;
    this.onNoObservers = onNoObservers;
    // Call the executor asynchronously so subscribers that are called
    // synchronously after the creation of the subscribe function
    // can still receive the very first value generated in the executor.
    this.task.then(function () {
      executor(_this4);
    }).catch(function (e) {
      _this4.error(e);
    });
  }
  _createClass(ObserverProxy, [{
    key: "next",
    value: function next(value) {
      this.forEachObserver(function (observer) {
        observer.next(value);
      });
    }
  }, {
    key: "error",
    value: function error(_error) {
      this.forEachObserver(function (observer) {
        observer.error(_error);
      });
      this.close(_error);
    }
  }, {
    key: "complete",
    value: function complete() {
      this.forEachObserver(function (observer) {
        observer.complete();
      });
      this.close();
    }
    /**
     * Subscribe function that can be used to add an Observer to the fan-out list.
     *
     * - We require that no event is sent to a subscriber sychronously to their
     *   call to subscribe().
     */
  }, {
    key: "subscribe",
    value: function subscribe(nextOrObserver, error, complete) {
      var _this5 = this;
      var observer;
      if (nextOrObserver === undefined && error === undefined && complete === undefined) {
        throw new Error('Missing Observer.');
      }
      // Assemble an Observer object when passed as callback functions.
      if (implementsAnyMethods(nextOrObserver, ['next', 'error', 'complete'])) {
        observer = nextOrObserver;
      } else {
        observer = {
          next: nextOrObserver,
          error: error,
          complete: complete
        };
      }
      if (observer.next === undefined) {
        observer.next = index_esm2017_noop;
      }
      if (observer.error === undefined) {
        observer.error = index_esm2017_noop;
      }
      if (observer.complete === undefined) {
        observer.complete = index_esm2017_noop;
      }
      var unsub = this.unsubscribeOne.bind(this, this.observers.length);
      // Attempt to subscribe to a terminated Observable - we
      // just respond to the Observer with the final error or complete
      // event.
      if (this.finalized) {
        // eslint-disable-next-line @typescript-eslint/no-floating-promises
        this.task.then(function () {
          try {
            if (_this5.finalError) {
              observer.error(_this5.finalError);
            } else {
              observer.complete();
            }
          } catch (e) {
            // nothing
          }
          return;
        });
      }
      this.observers.push(observer);
      return unsub;
    }
    // Unsubscribe is synchronous - we guarantee that no events are sent to
    // any unsubscribed Observer.
  }, {
    key: "unsubscribeOne",
    value: function unsubscribeOne(i) {
      if (this.observers === undefined || this.observers[i] === undefined) {
        return;
      }
      delete this.observers[i];
      this.observerCount -= 1;
      if (this.observerCount === 0 && this.onNoObservers !== undefined) {
        this.onNoObservers(this);
      }
    }
  }, {
    key: "forEachObserver",
    value: function forEachObserver(fn) {
      if (this.finalized) {
        // Already closed by previous event....just eat the additional values.
        return;
      }
      // Since sendOne calls asynchronously - there is no chance that
      // this.observers will become undefined.
      for (var i = 0; i < this.observers.length; i++) {
        this.sendOne(i, fn);
      }
    }
    // Call the Observer via one of it's callback function. We are careful to
    // confirm that the observe has not been unsubscribed since this asynchronous
    // function had been queued.
  }, {
    key: "sendOne",
    value: function sendOne(i, fn) {
      var _this6 = this;
      // Execute the callback asynchronously
      // eslint-disable-next-line @typescript-eslint/no-floating-promises
      this.task.then(function () {
        if (_this6.observers !== undefined && _this6.observers[i] !== undefined) {
          try {
            fn(_this6.observers[i]);
          } catch (e) {
            // Ignore exceptions raised in Observers or missing methods of an
            // Observer.
            // Log error to console. b/31404806
            if (typeof console !== 'undefined' && console.error) {
              console.error(e);
            }
          }
        }
      });
    }
  }, {
    key: "close",
    value: function close(err) {
      var _this7 = this;
      if (this.finalized) {
        return;
      }
      this.finalized = true;
      if (err !== undefined) {
        this.finalError = err;
      }
      // Proxy is no longer needed - garbage collect references
      // eslint-disable-next-line @typescript-eslint/no-floating-promises
      this.task.then(function () {
        _this7.observers = undefined;
        _this7.onNoObservers = undefined;
      });
    }
  }]);
  return ObserverProxy;
}()));
/** Turn synchronous function into one called asynchronously. */
// eslint-disable-next-line @typescript-eslint/ban-types
function index_esm2017_async(fn, onError) {
  return function () {
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    Promise.resolve(true).then(function () {
      fn.apply(void 0, args);
    }).catch(function (error) {
      if (onError) {
        onError(error);
      }
    });
  };
}
/**
 * Return true if the object passed in implements any of the named methods.
 */
function implementsAnyMethods(obj, methods) {
  if (typeof obj !== 'object' || obj === null) {
    return false;
  }
  var _iterator = _createForOfIteratorHelper(methods),
    _step;
  try {
    for (_iterator.s(); !(_step = _iterator.n()).done;) {
      var method = _step.value;
      if (method in obj && typeof obj[method] === 'function') {
        return true;
      }
    }
  } catch (err) {
    _iterator.e(err);
  } finally {
    _iterator.f();
  }
  return false;
}
function index_esm2017_noop() {
  // do nothing
}

/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * Check to make sure the appropriate number of arguments are provided for a public function.
 * Throws an error if it fails.
 *
 * @param fnName The function name
 * @param minCount The minimum number of arguments to allow for the function call
 * @param maxCount The maximum number of argument to allow for the function call
 * @param argCount The actual number of arguments provided.
 */
var validateArgCount = function validateArgCount(fnName, minCount, maxCount, argCount) {
  var argError;
  if (argCount < minCount) {
    argError = 'at least ' + minCount;
  } else if (argCount > maxCount) {
    argError = maxCount === 0 ? 'none' : 'no more than ' + maxCount;
  }
  if (argError) {
    var error = fnName + ' failed: Was called with ' + argCount + (argCount === 1 ? ' argument.' : ' arguments.') + ' Expects ' + argError + '.';
    throw new Error(error);
  }
};
/**
 * Generates a string to prefix an error message about failed argument validation
 *
 * @param fnName The function name
 * @param argName The name of the argument
 * @return The prefix to add to the error thrown for validation.
 */
function errorPrefix(fnName, argName) {
  return "".concat(fnName, " failed: ").concat(argName, " argument ");
}
/**
 * @param fnName
 * @param argumentNumber
 * @param namespace
 * @param optional
 */
function validateNamespace(fnName, namespace, optional) {
  if (optional && !namespace) {
    return;
  }
  if (typeof namespace !== 'string') {
    //TODO: I should do more validation here. We only allow certain chars in namespaces.
    throw new Error(errorPrefix(fnName, 'namespace') + 'must be a valid firebase namespace.');
  }
}
function validateCallback(fnName, argumentName,
// eslint-disable-next-line @typescript-eslint/ban-types
callback, optional) {
  if (optional && !callback) {
    return;
  }
  if (typeof callback !== 'function') {
    throw new Error(errorPrefix(fnName, argumentName) + 'must be a valid function.');
  }
}
function validateContextObject(fnName, argumentName, context, optional) {
  if (optional && !context) {
    return;
  }
  if (typeof context !== 'object' || context === null) {
    throw new Error(errorPrefix(fnName, argumentName) + 'must be a valid context object.');
  }
}

/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
// Code originally came from goog.crypt.stringToUtf8ByteArray, but for some reason they
// automatically replaced '\r\n' with '\n', and they didn't handle surrogate pairs,
// so it's been modified.
// Note that not all Unicode characters appear as single characters in JavaScript strings.
// fromCharCode returns the UTF-16 encoding of a character - so some Unicode characters
// use 2 characters in Javascript.  All 4-byte UTF-8 characters begin with a first
// character in the range 0xD800 - 0xDBFF (the first character of a so-called surrogate
// pair).
// See http://www.ecma-international.org/ecma-262/5.1/#sec-15.1.3
/**
 * @param {string} str
 * @return {Array}
 */
var stringToByteArray = function stringToByteArray(str) {
  var out = [];
  var p = 0;
  for (var i = 0; i < str.length; i++) {
    var c = str.charCodeAt(i);
    // Is this the lead surrogate in a surrogate pair?
    if (c >= 0xd800 && c <= 0xdbff) {
      var high = c - 0xd800; // the high 10 bits.
      i++;
      assert(i < str.length, 'Surrogate pair missing trail surrogate.');
      var low = str.charCodeAt(i) - 0xdc00; // the low 10 bits.
      c = 0x10000 + (high << 10) + low;
    }
    if (c < 128) {
      out[p++] = c;
    } else if (c < 2048) {
      out[p++] = c >> 6 | 192;
      out[p++] = c & 63 | 128;
    } else if (c < 65536) {
      out[p++] = c >> 12 | 224;
      out[p++] = c >> 6 & 63 | 128;
      out[p++] = c & 63 | 128;
    } else {
      out[p++] = c >> 18 | 240;
      out[p++] = c >> 12 & 63 | 128;
      out[p++] = c >> 6 & 63 | 128;
      out[p++] = c & 63 | 128;
    }
  }
  return out;
};
/**
 * Calculate length without actually converting; useful for doing cheaper validation.
 * @param {string} str
 * @return {number}
 */
var stringLength = function stringLength(str) {
  var p = 0;
  for (var i = 0; i < str.length; i++) {
    var c = str.charCodeAt(i);
    if (c < 128) {
      p++;
    } else if (c < 2048) {
      p += 2;
    } else if (c >= 0xd800 && c <= 0xdbff) {
      // Lead surrogate of a surrogate pair.  The pair together will take 4 bytes to represent.
      p += 4;
      i++; // skip trail surrogate.
    } else {
      p += 3;
    }
  }
  return p;
};

/**
 * @license
 * Copyright 2022 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * Copied from https://stackoverflow.com/a/2117523
 * Generates a new uuid.
 * @public
 */
var uuidv4 = function uuidv4() {
  return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {
    var r = Math.random() * 16 | 0,
      v = c === 'x' ? r : r & 0x3 | 0x8;
    return v.toString(16);
  });
};

/**
 * @license
 * Copyright 2019 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * The amount of milliseconds to exponentially increase.
 */
var DEFAULT_INTERVAL_MILLIS = 1000;
/**
 * The factor to backoff by.
 * Should be a number greater than 1.
 */
var DEFAULT_BACKOFF_FACTOR = 2;
/**
 * The maximum milliseconds to increase to.
 *
 * <p>Visible for testing
 */
var MAX_VALUE_MILLIS = 4 * 60 * 60 * 1000; // Four hours, like iOS and Android.
/**
 * The percentage of backoff time to randomize by.
 * See
 * http://go/safe-client-behavior#step-1-determine-the-appropriate-retry-interval-to-handle-spike-traffic
 * for context.
 *
 * <p>Visible for testing
 */
var RANDOM_FACTOR = 0.5;
/**
 * Based on the backoff method from
 * https://github.com/google/closure-library/blob/master/closure/goog/math/exponentialbackoff.js.
 * Extracted here so we don't need to pass metadata and a stateful ExponentialBackoff object around.
 */
function calculateBackoffMillis(backoffCount) {
  var intervalMillis = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : DEFAULT_INTERVAL_MILLIS;
  var backoffFactor = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : DEFAULT_BACKOFF_FACTOR;
  // Calculates an exponentially increasing value.
  // Deviation: calculates value from count and a constant interval, so we only need to save value
  // and count to restore state.
  var currBaseValue = intervalMillis * Math.pow(backoffFactor, backoffCount);
  // A random "fuzz" to avoid waves of retries.
  // Deviation: randomFactor is required.
  var randomWait = Math.round(
  // A fraction of the backoff value to add/subtract.
  // Deviation: changes multiplication order to improve readability.
  RANDOM_FACTOR * currBaseValue * (
  // A random float (rounded to int by Math.round above) in the range [-1, 1]. Determines
  // if we add or subtract.
  Math.random() - 0.5) * 2);
  // Limits backoff to max to avoid effectively permanent backoff.
  return Math.min(MAX_VALUE_MILLIS, currBaseValue + randomWait);
}

/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * Provide English ordinal letters after a number
 */
function ordinal(i) {
  if (!Number.isFinite(i)) {
    return "".concat(i);
  }
  return i + indicator(i);
}
function indicator(i) {
  i = Math.abs(i);
  var cent = i % 100;
  if (cent >= 10 && cent <= 20) {
    return 'th';
  }
  var dec = i % 10;
  if (dec === 1) {
    return 'st';
  }
  if (dec === 2) {
    return 'nd';
  }
  if (dec === 3) {
    return 'rd';
  }
  return 'th';
}

/**
 * @license
 * Copyright 2021 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
function index_esm2017_getModularInstance(service) {
  if (service && service._delegate) {
    return service._delegate;
  } else {
    return service;
  }
}

;// CONCATENATED MODULE: ./node_modules/@firebase/component/dist/esm/index.esm2017.js









/**
 * Component for service name T, e.g. `auth`, `auth-internal`
 */
var Component = /*#__PURE__*/function () {
  /**
   *
   * @param name The public service name, e.g. app, auth, firestore, database
   * @param instanceFactory Service factory responsible for creating the public interface
   * @param type whether the service provided by the component is public or private
   */
  function Component(name, instanceFactory, type) {
    classCallCheck_classCallCheck(this, Component);
    this.name = name;
    this.instanceFactory = instanceFactory;
    this.type = type;
    this.multipleInstances = false;
    /**
     * Properties to be added to the service namespace
     */
    this.serviceProps = {};
    this.instantiationMode = "LAZY" /* InstantiationMode.LAZY */;
    this.onInstanceCreated = null;
  }
  createClass_createClass(Component, [{
    key: "setInstantiationMode",
    value: function setInstantiationMode(mode) {
      this.instantiationMode = mode;
      return this;
    }
  }, {
    key: "setMultipleInstances",
    value: function setMultipleInstances(multipleInstances) {
      this.multipleInstances = multipleInstances;
      return this;
    }
  }, {
    key: "setServiceProps",
    value: function setServiceProps(props) {
      this.serviceProps = props;
      return this;
    }
  }, {
    key: "setInstanceCreatedCallback",
    value: function setInstanceCreatedCallback(callback) {
      this.onInstanceCreated = callback;
      return this;
    }
  }]);
  return Component;
}();
/**
 * @license
 * Copyright 2019 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
var DEFAULT_ENTRY_NAME = '[DEFAULT]';

/**
 * @license
 * Copyright 2019 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * Provider for instance for service name T, e.g. 'auth', 'auth-internal'
 * NameServiceMapping[T] is an alias for the type of the instance
 */
var Provider = /*#__PURE__*/function () {
  function Provider(name, container) {
    classCallCheck_classCallCheck(this, Provider);
    this.name = name;
    this.container = container;
    this.component = null;
    this.instances = new Map();
    this.instancesDeferred = new Map();
    this.instancesOptions = new Map();
    this.onInitCallbacks = new Map();
  }
  /**
   * @param identifier A provider can provide mulitple instances of a service
   * if this.component.multipleInstances is true.
   */
  createClass_createClass(Provider, [{
    key: "get",
    value: function get(identifier) {
      // if multipleInstances is not supported, use the default name
      var normalizedIdentifier = this.normalizeInstanceIdentifier(identifier);
      if (!this.instancesDeferred.has(normalizedIdentifier)) {
        var deferred = new Deferred();
        this.instancesDeferred.set(normalizedIdentifier, deferred);
        if (this.isInitialized(normalizedIdentifier) || this.shouldAutoInitialize()) {
          // initialize the service if it can be auto-initialized
          try {
            var instance = this.getOrInitializeService({
              instanceIdentifier: normalizedIdentifier
            });
            if (instance) {
              deferred.resolve(instance);
            }
          } catch (e) {
            // when the instance factory throws an exception during get(), it should not cause
            // a fatal error. We just return the unresolved promise in this case.
          }
        }
      }
      return this.instancesDeferred.get(normalizedIdentifier).promise;
    }
  }, {
    key: "getImmediate",
    value: function getImmediate(options) {
      var _a;
      // if multipleInstances is not supported, use the default name
      var normalizedIdentifier = this.normalizeInstanceIdentifier(options === null || options === void 0 ? void 0 : options.identifier);
      var optional = (_a = options === null || options === void 0 ? void 0 : options.optional) !== null && _a !== void 0 ? _a : false;
      if (this.isInitialized(normalizedIdentifier) || this.shouldAutoInitialize()) {
        try {
          return this.getOrInitializeService({
            instanceIdentifier: normalizedIdentifier
          });
        } catch (e) {
          if (optional) {
            return null;
          } else {
            throw e;
          }
        }
      } else {
        // In case a component is not initialized and should/can not be auto-initialized at the moment, return null if the optional flag is set, or throw
        if (optional) {
          return null;
        } else {
          throw Error("Service ".concat(this.name, " is not available"));
        }
      }
    }
  }, {
    key: "getComponent",
    value: function getComponent() {
      return this.component;
    }
  }, {
    key: "setComponent",
    value: function setComponent(component) {
      if (component.name !== this.name) {
        throw Error("Mismatching Component ".concat(component.name, " for Provider ").concat(this.name, "."));
      }
      if (this.component) {
        throw Error("Component for ".concat(this.name, " has already been provided"));
      }
      this.component = component;
      // return early without attempting to initialize the component if the component requires explicit initialization (calling `Provider.initialize()`)
      if (!this.shouldAutoInitialize()) {
        return;
      }
      // if the service is eager, initialize the default instance
      if (isComponentEager(component)) {
        try {
          this.getOrInitializeService({
            instanceIdentifier: DEFAULT_ENTRY_NAME
          });
        } catch (e) {
          // when the instance factory for an eager Component throws an exception during the eager
          // initialization, it should not cause a fatal error.
          // TODO: Investigate if we need to make it configurable, because some component may want to cause
          // a fatal error in this case?
        }
      }
      // Create service instances for the pending promises and resolve them
      // NOTE: if this.multipleInstances is false, only the default instance will be created
      // and all promises with resolve with it regardless of the identifier.
      var _iterator = createForOfIteratorHelper_createForOfIteratorHelper(this.instancesDeferred.entries()),
        _step;
      try {
        for (_iterator.s(); !(_step = _iterator.n()).done;) {
          var _step$value = (0,slicedToArray/* default */.Z)(_step.value, 2),
            instanceIdentifier = _step$value[0],
            instanceDeferred = _step$value[1];
          var normalizedIdentifier = this.normalizeInstanceIdentifier(instanceIdentifier);
          try {
            // `getOrInitializeService()` should always return a valid instance since a component is guaranteed. use ! to make typescript happy.
            var instance = this.getOrInitializeService({
              instanceIdentifier: normalizedIdentifier
            });
            instanceDeferred.resolve(instance);
          } catch (e) {
            // when the instance factory throws an exception, it should not cause
            // a fatal error. We just leave the promise unresolved.
          }
        }
      } catch (err) {
        _iterator.e(err);
      } finally {
        _iterator.f();
      }
    }
  }, {
    key: "clearInstance",
    value: function clearInstance() {
      var identifier = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : DEFAULT_ENTRY_NAME;
      this.instancesDeferred.delete(identifier);
      this.instancesOptions.delete(identifier);
      this.instances.delete(identifier);
    }
    // app.delete() will call this method on every provider to delete the services
    // TODO: should we mark the provider as deleted?
  }, {
    key: "delete",
    value: function () {
      var _delete2 = asyncToGenerator_asyncToGenerator( /*#__PURE__*/regeneratorRuntime_regeneratorRuntime().mark(function _callee() {
        var services;
        return regeneratorRuntime_regeneratorRuntime().wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                services = Array.from(this.instances.values());
                _context.next = 3;
                return Promise.all([].concat((0,toConsumableArray/* default */.Z)(services.filter(function (service) {
                  return 'INTERNAL' in service;
                }) // legacy services
                // eslint-disable-next-line @typescript-eslint/no-explicit-any
                .map(function (service) {
                  return service.INTERNAL.delete();
                })), (0,toConsumableArray/* default */.Z)(services.filter(function (service) {
                  return '_delete' in service;
                }) // modularized services
                // eslint-disable-next-line @typescript-eslint/no-explicit-any
                .map(function (service) {
                  return service._delete();
                }))));
              case 3:
              case "end":
                return _context.stop();
            }
          }
        }, _callee, this);
      }));
      function _delete() {
        return _delete2.apply(this, arguments);
      }
      return _delete;
    }()
  }, {
    key: "isComponentSet",
    value: function isComponentSet() {
      return this.component != null;
    }
  }, {
    key: "isInitialized",
    value: function isInitialized() {
      var identifier = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : DEFAULT_ENTRY_NAME;
      return this.instances.has(identifier);
    }
  }, {
    key: "getOptions",
    value: function getOptions() {
      var identifier = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : DEFAULT_ENTRY_NAME;
      return this.instancesOptions.get(identifier) || {};
    }
  }, {
    key: "initialize",
    value: function initialize() {
      var opts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
      var _opts$options = opts.options,
        options = _opts$options === void 0 ? {} : _opts$options;
      var normalizedIdentifier = this.normalizeInstanceIdentifier(opts.instanceIdentifier);
      if (this.isInitialized(normalizedIdentifier)) {
        throw Error("".concat(this.name, "(").concat(normalizedIdentifier, ") has already been initialized"));
      }
      if (!this.isComponentSet()) {
        throw Error("Component ".concat(this.name, " has not been registered yet"));
      }
      var instance = this.getOrInitializeService({
        instanceIdentifier: normalizedIdentifier,
        options: options
      });
      // resolve any pending promise waiting for the service instance
      var _iterator2 = createForOfIteratorHelper_createForOfIteratorHelper(this.instancesDeferred.entries()),
        _step2;
      try {
        for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {
          var _step2$value = (0,slicedToArray/* default */.Z)(_step2.value, 2),
            instanceIdentifier = _step2$value[0],
            instanceDeferred = _step2$value[1];
          var normalizedDeferredIdentifier = this.normalizeInstanceIdentifier(instanceIdentifier);
          if (normalizedIdentifier === normalizedDeferredIdentifier) {
            instanceDeferred.resolve(instance);
          }
        }
      } catch (err) {
        _iterator2.e(err);
      } finally {
        _iterator2.f();
      }
      return instance;
    }
    /**
     *
     * @param callback - a function that will be invoked  after the provider has been initialized by calling provider.initialize().
     * The function is invoked SYNCHRONOUSLY, so it should not execute any longrunning tasks in order to not block the program.
     *
     * @param identifier An optional instance identifier
     * @returns a function to unregister the callback
     */
  }, {
    key: "onInit",
    value: function onInit(callback, identifier) {
      var _a;
      var normalizedIdentifier = this.normalizeInstanceIdentifier(identifier);
      var existingCallbacks = (_a = this.onInitCallbacks.get(normalizedIdentifier)) !== null && _a !== void 0 ? _a : new Set();
      existingCallbacks.add(callback);
      this.onInitCallbacks.set(normalizedIdentifier, existingCallbacks);
      var existingInstance = this.instances.get(normalizedIdentifier);
      if (existingInstance) {
        callback(existingInstance, normalizedIdentifier);
      }
      return function () {
        existingCallbacks.delete(callback);
      };
    }
    /**
     * Invoke onInit callbacks synchronously
     * @param instance the service instance`
     */
  }, {
    key: "invokeOnInitCallbacks",
    value: function invokeOnInitCallbacks(instance, identifier) {
      var callbacks = this.onInitCallbacks.get(identifier);
      if (!callbacks) {
        return;
      }
      var _iterator3 = createForOfIteratorHelper_createForOfIteratorHelper(callbacks),
        _step3;
      try {
        for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {
          var callback = _step3.value;
          try {
            callback(instance, identifier);
          } catch (_a) {
            // ignore errors in the onInit callback
          }
        }
      } catch (err) {
        _iterator3.e(err);
      } finally {
        _iterator3.f();
      }
    }
  }, {
    key: "getOrInitializeService",
    value: function getOrInitializeService(_ref) {
      var instanceIdentifier = _ref.instanceIdentifier,
        _ref$options = _ref.options,
        options = _ref$options === void 0 ? {} : _ref$options;
      var instance = this.instances.get(instanceIdentifier);
      if (!instance && this.component) {
        instance = this.component.instanceFactory(this.container, {
          instanceIdentifier: normalizeIdentifierForFactory(instanceIdentifier),
          options: options
        });
        this.instances.set(instanceIdentifier, instance);
        this.instancesOptions.set(instanceIdentifier, options);
        /**
         * Invoke onInit listeners.
         * Note this.component.onInstanceCreated is different, which is used by the component creator,
         * while onInit listeners are registered by consumers of the provider.
         */
        this.invokeOnInitCallbacks(instance, instanceIdentifier);
        /**
         * Order is important
         * onInstanceCreated() should be called after this.instances.set(instanceIdentifier, instance); which
         * makes `isInitialized()` return true.
         */
        if (this.component.onInstanceCreated) {
          try {
            this.component.onInstanceCreated(this.container, instanceIdentifier, instance);
          } catch (_a) {
            // ignore errors in the onInstanceCreatedCallback
          }
        }
      }
      return instance || null;
    }
  }, {
    key: "normalizeInstanceIdentifier",
    value: function normalizeInstanceIdentifier() {
      var identifier = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : DEFAULT_ENTRY_NAME;
      if (this.component) {
        return this.component.multipleInstances ? identifier : DEFAULT_ENTRY_NAME;
      } else {
        return identifier; // assume multiple instances are supported before the component is provided.
      }
    }
  }, {
    key: "shouldAutoInitialize",
    value: function shouldAutoInitialize() {
      return !!this.component && this.component.instantiationMode !== "EXPLICIT" /* InstantiationMode.EXPLICIT */;
    }
  }]);
  return Provider;
}(); // undefined should be passed to the service factory for the default instance
function normalizeIdentifierForFactory(identifier) {
  return identifier === DEFAULT_ENTRY_NAME ? undefined : identifier;
}
function isComponentEager(component) {
  return component.instantiationMode === "EAGER" /* InstantiationMode.EAGER */;
}

/**
 * @license
 * Copyright 2019 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * ComponentContainer that provides Providers for service name T, e.g. `auth`, `auth-internal`
 */
var ComponentContainer = /*#__PURE__*/function () {
  function ComponentContainer(name) {
    classCallCheck_classCallCheck(this, ComponentContainer);
    this.name = name;
    this.providers = new Map();
  }
  /**
   *
   * @param component Component being added
   * @param overwrite When a component with the same name has already been registered,
   * if overwrite is true: overwrite the existing component with the new component and create a new
   * provider with the new component. It can be useful in tests where you want to use different mocks
   * for different tests.
   * if overwrite is false: throw an exception
   */
  createClass_createClass(ComponentContainer, [{
    key: "addComponent",
    value: function addComponent(component) {
      var provider = this.getProvider(component.name);
      if (provider.isComponentSet()) {
        throw new Error("Component ".concat(component.name, " has already been registered with ").concat(this.name));
      }
      provider.setComponent(component);
    }
  }, {
    key: "addOrOverwriteComponent",
    value: function addOrOverwriteComponent(component) {
      var provider = this.getProvider(component.name);
      if (provider.isComponentSet()) {
        // delete the existing provider from the container, so we can register the new component
        this.providers.delete(component.name);
      }
      this.addComponent(component);
    }
    /**
     * getProvider provides a type safe interface where it can only be called with a field name
     * present in NameServiceMapping interface.
     *
     * Firebase SDKs providing services should extend NameServiceMapping interface to register
     * themselves.
     */
  }, {
    key: "getProvider",
    value: function getProvider(name) {
      if (this.providers.has(name)) {
        return this.providers.get(name);
      }
      // create a Provider for a service that hasn't registered with Firebase
      var provider = new Provider(name, this);
      this.providers.set(name, provider);
      return provider;
    }
  }, {
    key: "getProviders",
    value: function getProviders() {
      return Array.from(this.providers.values());
    }
  }]);
  return ComponentContainer;
}();

;// CONCATENATED MODULE: ./node_modules/@firebase/logger/dist/esm/index.esm2017.js




var _ConsoleMethod;
/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * A container for all of the Logger instances
 */
var instances = [];
/**
 * The JS SDK supports 5 log levels and also allows a user the ability to
 * silence the logs altogether.
 *
 * The order is a follows:
 * DEBUG < VERBOSE < INFO < WARN < ERROR
 *
 * All of the log types above the current log level will be captured (i.e. if
 * you set the log level to `INFO`, errors will still be logged, but `DEBUG` and
 * `VERBOSE` logs will not)
 */
var index_esm2017_LogLevel;
(function (LogLevel) {
  LogLevel[LogLevel["DEBUG"] = 0] = "DEBUG";
  LogLevel[LogLevel["VERBOSE"] = 1] = "VERBOSE";
  LogLevel[LogLevel["INFO"] = 2] = "INFO";
  LogLevel[LogLevel["WARN"] = 3] = "WARN";
  LogLevel[LogLevel["ERROR"] = 4] = "ERROR";
  LogLevel[LogLevel["SILENT"] = 5] = "SILENT";
})(index_esm2017_LogLevel || (index_esm2017_LogLevel = {}));
var levelStringToEnum = {
  'debug': index_esm2017_LogLevel.DEBUG,
  'verbose': index_esm2017_LogLevel.VERBOSE,
  'info': index_esm2017_LogLevel.INFO,
  'warn': index_esm2017_LogLevel.WARN,
  'error': index_esm2017_LogLevel.ERROR,
  'silent': index_esm2017_LogLevel.SILENT
};
/**
 * The default log level
 */
var defaultLogLevel = index_esm2017_LogLevel.INFO;
/**
 * By default, `console.debug` is not displayed in the developer console (in
 * chrome). To avoid forcing users to have to opt-in to these logs twice
 * (i.e. once for firebase, and once in the console), we are sending `DEBUG`
 * logs to the `console.log` function.
 */
var ConsoleMethod = (_ConsoleMethod = {}, (0,esm_defineProperty/* default */.Z)(_ConsoleMethod, index_esm2017_LogLevel.DEBUG, 'log'), (0,esm_defineProperty/* default */.Z)(_ConsoleMethod, index_esm2017_LogLevel.VERBOSE, 'log'), (0,esm_defineProperty/* default */.Z)(_ConsoleMethod, index_esm2017_LogLevel.INFO, 'info'), (0,esm_defineProperty/* default */.Z)(_ConsoleMethod, index_esm2017_LogLevel.WARN, 'warn'), (0,esm_defineProperty/* default */.Z)(_ConsoleMethod, index_esm2017_LogLevel.ERROR, 'error'), _ConsoleMethod);
/**
 * The default log handler will forward DEBUG, VERBOSE, INFO, WARN, and ERROR
 * messages on to their corresponding console counterparts (if the log method
 * is supported by the current log level)
 */
var defaultLogHandler = function defaultLogHandler(instance, logType) {
  if (logType < instance.logLevel) {
    return;
  }
  var now = new Date().toISOString();
  var method = ConsoleMethod[logType];
  if (method) {
    var _console;
    for (var _len = arguments.length, args = new Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {
      args[_key - 2] = arguments[_key];
    }
    (_console = console)[method].apply(_console, ["[".concat(now, "]  ").concat(instance.name, ":")].concat(args));
  } else {
    throw new Error("Attempted to log a message with an invalid logType (value: ".concat(logType, ")"));
  }
};
var Logger = /*#__PURE__*/function () {
  /**
   * Gives you an instance of a Logger to capture messages according to
   * Firebase's logging scheme.
   *
   * @param name The name that the logs will be associated with
   */
  function Logger(name) {
    classCallCheck_classCallCheck(this, Logger);
    this.name = name;
    /**
     * The log level of the given Logger instance.
     */
    this._logLevel = defaultLogLevel;
    /**
     * The main (internal) log handler for the Logger instance.
     * Can be set to a new function in internal package code but not by user.
     */
    this._logHandler = defaultLogHandler;
    /**
     * The optional, additional, user-defined log handler for the Logger instance.
     */
    this._userLogHandler = null;
    /**
     * Capture the current instance for later use
     */
    instances.push(this);
  }
  createClass_createClass(Logger, [{
    key: "logLevel",
    get: function get() {
      return this._logLevel;
    },
    set: function set(val) {
      if (!(val in index_esm2017_LogLevel)) {
        throw new TypeError("Invalid value \"".concat(val, "\" assigned to `logLevel`"));
      }
      this._logLevel = val;
    }
    // Workaround for setter/getter having to be the same type.
  }, {
    key: "setLogLevel",
    value: function setLogLevel(val) {
      this._logLevel = typeof val === 'string' ? levelStringToEnum[val] : val;
    }
  }, {
    key: "logHandler",
    get: function get() {
      return this._logHandler;
    },
    set: function set(val) {
      if (typeof val !== 'function') {
        throw new TypeError('Value assigned to `logHandler` must be a function');
      }
      this._logHandler = val;
    }
  }, {
    key: "userLogHandler",
    get: function get() {
      return this._userLogHandler;
    },
    set: function set(val) {
      this._userLogHandler = val;
    }
    /**
     * The functions below are all based on the `console` interface
     */
  }, {
    key: "debug",
    value: function debug() {
      for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
        args[_key2] = arguments[_key2];
      }
      this._userLogHandler && this._userLogHandler.apply(this, [this, index_esm2017_LogLevel.DEBUG].concat(args));
      this._logHandler.apply(this, [this, index_esm2017_LogLevel.DEBUG].concat(args));
    }
  }, {
    key: "log",
    value: function log() {
      for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {
        args[_key3] = arguments[_key3];
      }
      this._userLogHandler && this._userLogHandler.apply(this, [this, index_esm2017_LogLevel.VERBOSE].concat(args));
      this._logHandler.apply(this, [this, index_esm2017_LogLevel.VERBOSE].concat(args));
    }
  }, {
    key: "info",
    value: function info() {
      for (var _len4 = arguments.length, args = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {
        args[_key4] = arguments[_key4];
      }
      this._userLogHandler && this._userLogHandler.apply(this, [this, index_esm2017_LogLevel.INFO].concat(args));
      this._logHandler.apply(this, [this, index_esm2017_LogLevel.INFO].concat(args));
    }
  }, {
    key: "warn",
    value: function warn() {
      for (var _len5 = arguments.length, args = new Array(_len5), _key5 = 0; _key5 < _len5; _key5++) {
        args[_key5] = arguments[_key5];
      }
      this._userLogHandler && this._userLogHandler.apply(this, [this, index_esm2017_LogLevel.WARN].concat(args));
      this._logHandler.apply(this, [this, index_esm2017_LogLevel.WARN].concat(args));
    }
  }, {
    key: "error",
    value: function error() {
      for (var _len6 = arguments.length, args = new Array(_len6), _key6 = 0; _key6 < _len6; _key6++) {
        args[_key6] = arguments[_key6];
      }
      this._userLogHandler && this._userLogHandler.apply(this, [this, index_esm2017_LogLevel.ERROR].concat(args));
      this._logHandler.apply(this, [this, index_esm2017_LogLevel.ERROR].concat(args));
    }
  }]);
  return Logger;
}();
function setLogLevel(level) {
  instances.forEach(function (inst) {
    inst.setLogLevel(level);
  });
}
function index_esm2017_setUserLogHandler(logCallback, options) {
  var _iterator = _createForOfIteratorHelper(instances),
    _step;
  try {
    var _loop = function _loop() {
      var instance = _step.value;
      var customLogLevel = null;
      if (options && options.level) {
        customLogLevel = levelStringToEnum[options.level];
      }
      if (logCallback === null) {
        instance.userLogHandler = null;
      } else {
        instance.userLogHandler = function (instance, level) {
          for (var _len7 = arguments.length, args = new Array(_len7 > 2 ? _len7 - 2 : 0), _key7 = 2; _key7 < _len7; _key7++) {
            args[_key7 - 2] = arguments[_key7];
          }
          var message = args.map(function (arg) {
            if (arg == null) {
              return null;
            } else if (typeof arg === 'string') {
              return arg;
            } else if (typeof arg === 'number' || typeof arg === 'boolean') {
              return arg.toString();
            } else if (arg instanceof Error) {
              return arg.message;
            } else {
              try {
                return JSON.stringify(arg);
              } catch (ignored) {
                return null;
              }
            }
          }).filter(function (arg) {
            return arg;
          }).join(' ');
          if (level >= (customLogLevel !== null && customLogLevel !== void 0 ? customLogLevel : instance.logLevel)) {
            logCallback({
              level: index_esm2017_LogLevel[level].toLowerCase(),
              message: message,
              args: args,
              type: instance.name
            });
          }
        };
      }
    };
    for (_iterator.s(); !(_step = _iterator.n()).done;) {
      _loop();
    }
  } catch (err) {
    _iterator.e(err);
  } finally {
    _iterator.f();
  }
}

;// CONCATENATED MODULE: ./node_modules/@firebase/app/node_modules/idb/build/wrap-idb-value.js
var instanceOfAny = function instanceOfAny(object, constructors) {
  return constructors.some(function (c) {
    return object instanceof c;
  });
};
var idbProxyableTypes;
var cursorAdvanceMethods;
// This is a function to prevent it throwing up in node environments.
function getIdbProxyableTypes() {
  return idbProxyableTypes || (idbProxyableTypes = [IDBDatabase, IDBObjectStore, IDBIndex, IDBCursor, IDBTransaction]);
}
// This is a function to prevent it throwing up in node environments.
function getCursorAdvanceMethods() {
  return cursorAdvanceMethods || (cursorAdvanceMethods = [IDBCursor.prototype.advance, IDBCursor.prototype.continue, IDBCursor.prototype.continuePrimaryKey]);
}
var cursorRequestMap = new WeakMap();
var transactionDoneMap = new WeakMap();
var transactionStoreNamesMap = new WeakMap();
var transformCache = new WeakMap();
var reverseTransformCache = new WeakMap();
function promisifyRequest(request) {
  var promise = new Promise(function (resolve, reject) {
    var unlisten = function unlisten() {
      request.removeEventListener('success', success);
      request.removeEventListener('error', error);
    };
    var success = function success() {
      resolve(wrap_idb_value_wrap(request.result));
      unlisten();
    };
    var error = function error() {
      reject(request.error);
      unlisten();
    };
    request.addEventListener('success', success);
    request.addEventListener('error', error);
  });
  promise.then(function (value) {
    // Since cursoring reuses the IDBRequest (*sigh*), we cache it for later retrieval
    // (see wrapFunction).
    if (value instanceof IDBCursor) {
      cursorRequestMap.set(value, request);
    }
    // Catching to avoid "Uncaught Promise exceptions"
  }).catch(function () {});
  // This mapping exists in reverseTransformCache but doesn't doesn't exist in transformCache. This
  // is because we create many promises from a single IDBRequest.
  reverseTransformCache.set(promise, request);
  return promise;
}
function cacheDonePromiseForTransaction(tx) {
  // Early bail if we've already created a done promise for this transaction.
  if (transactionDoneMap.has(tx)) return;
  var done = new Promise(function (resolve, reject) {
    var unlisten = function unlisten() {
      tx.removeEventListener('complete', complete);
      tx.removeEventListener('error', error);
      tx.removeEventListener('abort', error);
    };
    var complete = function complete() {
      resolve();
      unlisten();
    };
    var error = function error() {
      reject(tx.error || new DOMException('AbortError', 'AbortError'));
      unlisten();
    };
    tx.addEventListener('complete', complete);
    tx.addEventListener('error', error);
    tx.addEventListener('abort', error);
  });
  // Cache it for later retrieval.
  transactionDoneMap.set(tx, done);
}
var idbProxyTraps = {
  get: function get(target, prop, receiver) {
    if (target instanceof IDBTransaction) {
      // Special handling for transaction.done.
      if (prop === 'done') return transactionDoneMap.get(target);
      // Polyfill for objectStoreNames because of Edge.
      if (prop === 'objectStoreNames') {
        return target.objectStoreNames || transactionStoreNamesMap.get(target);
      }
      // Make tx.store return the only store in the transaction, or undefined if there are many.
      if (prop === 'store') {
        return receiver.objectStoreNames[1] ? undefined : receiver.objectStore(receiver.objectStoreNames[0]);
      }
    }
    // Else transform whatever we get back.
    return wrap_idb_value_wrap(target[prop]);
  },
  set: function set(target, prop, value) {
    target[prop] = value;
    return true;
  },
  has: function has(target, prop) {
    if (target instanceof IDBTransaction && (prop === 'done' || prop === 'store')) {
      return true;
    }
    return prop in target;
  }
};
function replaceTraps(callback) {
  idbProxyTraps = callback(idbProxyTraps);
}
function wrapFunction(func) {
  // Due to expected object equality (which is enforced by the caching in `wrap`), we
  // only create one new func per func.
  // Edge doesn't support objectStoreNames (booo), so we polyfill it here.
  if (func === IDBDatabase.prototype.transaction && !('objectStoreNames' in IDBTransaction.prototype)) {
    return function (storeNames) {
      for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
        args[_key - 1] = arguments[_key];
      }
      var tx = func.call.apply(func, [wrap_idb_value_unwrap(this), storeNames].concat(args));
      transactionStoreNamesMap.set(tx, storeNames.sort ? storeNames.sort() : [storeNames]);
      return wrap_idb_value_wrap(tx);
    };
  }
  // Cursor methods are special, as the behaviour is a little more different to standard IDB. In
  // IDB, you advance the cursor and wait for a new 'success' on the IDBRequest that gave you the
  // cursor. It's kinda like a promise that can resolve with many values. That doesn't make sense
  // with real promises, so each advance methods returns a new promise for the cursor object, or
  // undefined if the end of the cursor has been reached.
  if (getCursorAdvanceMethods().includes(func)) {
    return function () {
      for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
        args[_key2] = arguments[_key2];
      }
      // Calling the original function with the proxy as 'this' causes ILLEGAL INVOCATION, so we use
      // the original object.
      func.apply(wrap_idb_value_unwrap(this), args);
      return wrap_idb_value_wrap(cursorRequestMap.get(this));
    };
  }
  return function () {
    for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {
      args[_key3] = arguments[_key3];
    }
    // Calling the original function with the proxy as 'this' causes ILLEGAL INVOCATION, so we use
    // the original object.
    return wrap_idb_value_wrap(func.apply(wrap_idb_value_unwrap(this), args));
  };
}
function transformCachableValue(value) {
  if (typeof value === 'function') return wrapFunction(value);
  // This doesn't return, it just creates a 'done' promise for the transaction,
  // which is later returned for transaction.done (see idbObjectHandler).
  if (value instanceof IDBTransaction) cacheDonePromiseForTransaction(value);
  if (instanceOfAny(value, getIdbProxyableTypes())) return new Proxy(value, idbProxyTraps);
  // Return the same value back if we're not going to transform it.
  return value;
}
function wrap_idb_value_wrap(value) {
  // We sometimes generate multiple promises from a single IDBRequest (eg when cursoring), because
  // IDB is weird and a single IDBRequest can yield many responses, so these can't be cached.
  if (value instanceof IDBRequest) return promisifyRequest(value);
  // If we've already transformed this value before, reuse the transformed value.
  // This is faster, but it also provides object equality.
  if (transformCache.has(value)) return transformCache.get(value);
  var newValue = transformCachableValue(value);
  // Not all types are transformed.
  // These may be primitive types, so they can't be WeakMap keys.
  if (newValue !== value) {
    transformCache.set(value, newValue);
    reverseTransformCache.set(newValue, value);
  }
  return newValue;
}
var wrap_idb_value_unwrap = function unwrap(value) {
  return reverseTransformCache.get(value);
};

;// CONCATENATED MODULE: ./node_modules/@firebase/app/node_modules/idb/build/index.js






/**
 * Open a database.
 *
 * @param name Name of the database.
 * @param version Schema version.
 * @param callbacks Additional callbacks.
 */
function openDB(name, version) {
  var _ref = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {},
    blocked = _ref.blocked,
    upgrade = _ref.upgrade,
    blocking = _ref.blocking,
    terminated = _ref.terminated;
  var request = indexedDB.open(name, version);
  var openPromise = wrap_idb_value_wrap(request);
  if (upgrade) {
    request.addEventListener('upgradeneeded', function (event) {
      upgrade(wrap_idb_value_wrap(request.result), event.oldVersion, event.newVersion, wrap_idb_value_wrap(request.transaction));
    });
  }
  if (blocked) request.addEventListener('blocked', function () {
    return blocked();
  });
  openPromise.then(function (db) {
    if (terminated) db.addEventListener('close', function () {
      return terminated();
    });
    if (blocking) db.addEventListener('versionchange', function () {
      return blocking();
    });
  }).catch(function () {});
  return openPromise;
}
/**
 * Delete a database.
 *
 * @param name Name of the database.
 */
function deleteDB(name) {
  var _ref2 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},
    blocked = _ref2.blocked;
  var request = indexedDB.deleteDatabase(name);
  if (blocked) request.addEventListener('blocked', function () {
    return blocked();
  });
  return wrap(request).then(function () {
    return undefined;
  });
}
var readMethods = ['get', 'getKey', 'getAll', 'getAllKeys', 'count'];
var writeMethods = ['put', 'add', 'delete', 'clear'];
var cachedMethods = new Map();
function getMethod(target, prop) {
  if (!(target instanceof IDBDatabase && !(prop in target) && typeof prop === 'string')) {
    return;
  }
  if (cachedMethods.get(prop)) return cachedMethods.get(prop);
  var targetFuncName = prop.replace(/FromIndex$/, '');
  var useIndex = prop !== targetFuncName;
  var isWrite = writeMethods.includes(targetFuncName);
  if (
  // Bail if the target doesn't exist on the target. Eg, getAll isn't in Edge.
  !(targetFuncName in (useIndex ? IDBIndex : IDBObjectStore).prototype) || !(isWrite || readMethods.includes(targetFuncName))) {
    return;
  }
  var method = /*#__PURE__*/function () {
    var _ref3 = asyncToGenerator_asyncToGenerator( /*#__PURE__*/regeneratorRuntime_regeneratorRuntime().mark(function _callee(storeName) {
      var _target;
      var tx,
        target,
        _len,
        args,
        _key,
        _args = arguments;
      return regeneratorRuntime_regeneratorRuntime().wrap(function _callee$(_context) {
        while (1) {
          switch (_context.prev = _context.next) {
            case 0:
              // isWrite ? 'readwrite' : undefined gzipps better, but fails in Edge :(
              tx = this.transaction(storeName, isWrite ? 'readwrite' : 'readonly');
              target = tx.store;
              for (_len = _args.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
                args[_key - 1] = _args[_key];
              }
              if (useIndex) target = target.index(args.shift());
              // Must reject if op rejects.
              // If it's a write operation, must reject if tx.done rejects.
              // Must reject with op rejection first.
              // Must resolve with op value.
              // Must handle both promises (no unhandled rejections)
              _context.next = 6;
              return Promise.all([(_target = target)[targetFuncName].apply(_target, args), isWrite && tx.done]);
            case 6:
              return _context.abrupt("return", _context.sent[0]);
            case 7:
            case "end":
              return _context.stop();
          }
        }
      }, _callee, this);
    }));
    return function method(_x) {
      return _ref3.apply(this, arguments);
    };
  }();
  cachedMethods.set(prop, method);
  return method;
}
replaceTraps(function (oldTraps) {
  return _objectSpread2(_objectSpread2({}, oldTraps), {}, {
    get: function get(target, prop, receiver) {
      return getMethod(target, prop) || oldTraps.get(target, prop, receiver);
    },
    has: function has(target, prop) {
      return !!getMethod(target, prop) || oldTraps.has(target, prop);
    }
  });
});

;// CONCATENATED MODULE: ./node_modules/@firebase/app/dist/esm/index.esm2017.js







var _PLATFORM_LOG_STRING, _ERRORS;






/**
 * @license
 * Copyright 2019 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
var PlatformLoggerServiceImpl = /*#__PURE__*/function () {
  function PlatformLoggerServiceImpl(container) {
    classCallCheck_classCallCheck(this, PlatformLoggerServiceImpl);
    this.container = container;
  }
  // In initial implementation, this will be called by installations on
  // auth token refresh, and installations will send this string.
  createClass_createClass(PlatformLoggerServiceImpl, [{
    key: "getPlatformInfoString",
    value: function getPlatformInfoString() {
      var providers = this.container.getProviders();
      // Loop through providers and get library/version pairs from any that are
      // version components.
      return providers.map(function (provider) {
        if (isVersionServiceProvider(provider)) {
          var service = provider.getImmediate();
          return "".concat(service.library, "/").concat(service.version);
        } else {
          return null;
        }
      }).filter(function (logString) {
        return logString;
      }).join(' ');
    }
  }]);
  return PlatformLoggerServiceImpl;
}();
/**
 *
 * @param provider check if this provider provides a VersionService
 *
 * NOTE: Using Provider<'app-version'> is a hack to indicate that the provider
 * provides VersionService. The provider is not necessarily a 'app-version'
 * provider.
 */
function isVersionServiceProvider(provider) {
  var component = provider.getComponent();
  return (component === null || component === void 0 ? void 0 : component.type) === "VERSION" /* ComponentType.VERSION */;
}

var name$o = "@firebase/app";
var version$1 = "0.9.0";

/**
 * @license
 * Copyright 2019 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
var logger = new Logger('@firebase/app');
var name$n = "@firebase/app-compat";
var name$m = "@firebase/analytics-compat";
var name$l = "@firebase/analytics";
var name$k = "@firebase/app-check-compat";
var name$j = "@firebase/app-check";
var name$i = "@firebase/auth";
var name$h = "@firebase/auth-compat";
var name$g = "@firebase/database";
var name$f = "@firebase/database-compat";
var name$e = "@firebase/functions";
var name$d = "@firebase/functions-compat";
var name$c = "@firebase/installations";
var name$b = "@firebase/installations-compat";
var name$a = "@firebase/messaging";
var name$9 = "@firebase/messaging-compat";
var name$8 = "@firebase/performance";
var name$7 = "@firebase/performance-compat";
var name$6 = "@firebase/remote-config";
var name$5 = "@firebase/remote-config-compat";
var name$4 = "@firebase/storage";
var name$3 = "@firebase/storage-compat";
var name$2 = "@firebase/firestore";
var name$1 = "@firebase/firestore-compat";
var index_esm2017_name = "firebase";
var version = "9.15.0";

/**
 * @license
 * Copyright 2019 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * The default app name
 *
 * @internal
 */
var index_esm2017_DEFAULT_ENTRY_NAME = '[DEFAULT]';
var PLATFORM_LOG_STRING = (_PLATFORM_LOG_STRING = {}, (0,esm_defineProperty/* default */.Z)(_PLATFORM_LOG_STRING, name$o, 'fire-core'), (0,esm_defineProperty/* default */.Z)(_PLATFORM_LOG_STRING, name$n, 'fire-core-compat'), (0,esm_defineProperty/* default */.Z)(_PLATFORM_LOG_STRING, name$l, 'fire-analytics'), (0,esm_defineProperty/* default */.Z)(_PLATFORM_LOG_STRING, name$m, 'fire-analytics-compat'), (0,esm_defineProperty/* default */.Z)(_PLATFORM_LOG_STRING, name$j, 'fire-app-check'), (0,esm_defineProperty/* default */.Z)(_PLATFORM_LOG_STRING, name$k, 'fire-app-check-compat'), (0,esm_defineProperty/* default */.Z)(_PLATFORM_LOG_STRING, name$i, 'fire-auth'), (0,esm_defineProperty/* default */.Z)(_PLATFORM_LOG_STRING, name$h, 'fire-auth-compat'), (0,esm_defineProperty/* default */.Z)(_PLATFORM_LOG_STRING, name$g, 'fire-rtdb'), (0,esm_defineProperty/* default */.Z)(_PLATFORM_LOG_STRING, name$f, 'fire-rtdb-compat'), (0,esm_defineProperty/* default */.Z)(_PLATFORM_LOG_STRING, name$e, 'fire-fn'), (0,esm_defineProperty/* default */.Z)(_PLATFORM_LOG_STRING, name$d, 'fire-fn-compat'), (0,esm_defineProperty/* default */.Z)(_PLATFORM_LOG_STRING, name$c, 'fire-iid'), (0,esm_defineProperty/* default */.Z)(_PLATFORM_LOG_STRING, name$b, 'fire-iid-compat'), (0,esm_defineProperty/* default */.Z)(_PLATFORM_LOG_STRING, name$a, 'fire-fcm'), (0,esm_defineProperty/* default */.Z)(_PLATFORM_LOG_STRING, name$9, 'fire-fcm-compat'), (0,esm_defineProperty/* default */.Z)(_PLATFORM_LOG_STRING, name$8, 'fire-perf'), (0,esm_defineProperty/* default */.Z)(_PLATFORM_LOG_STRING, name$7, 'fire-perf-compat'), (0,esm_defineProperty/* default */.Z)(_PLATFORM_LOG_STRING, name$6, 'fire-rc'), (0,esm_defineProperty/* default */.Z)(_PLATFORM_LOG_STRING, name$5, 'fire-rc-compat'), (0,esm_defineProperty/* default */.Z)(_PLATFORM_LOG_STRING, name$4, 'fire-gcs'), (0,esm_defineProperty/* default */.Z)(_PLATFORM_LOG_STRING, name$3, 'fire-gcs-compat'), (0,esm_defineProperty/* default */.Z)(_PLATFORM_LOG_STRING, name$2, 'fire-fst'), (0,esm_defineProperty/* default */.Z)(_PLATFORM_LOG_STRING, name$1, 'fire-fst-compat'), (0,esm_defineProperty/* default */.Z)(_PLATFORM_LOG_STRING, 'fire-js', 'fire-js'), (0,esm_defineProperty/* default */.Z)(_PLATFORM_LOG_STRING, index_esm2017_name, 'fire-js-all'), _PLATFORM_LOG_STRING);

/**
 * @license
 * Copyright 2019 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * @internal
 */
var _apps = new Map();
/**
 * Registered components.
 *
 * @internal
 */
// eslint-disable-next-line @typescript-eslint/no-explicit-any
var _components = new Map();
/**
 * @param component - the component being added to this app's container
 *
 * @internal
 */
function _addComponent(app, component) {
  try {
    app.container.addComponent(component);
  } catch (e) {
    logger.debug("Component ".concat(component.name, " failed to register with FirebaseApp ").concat(app.name), e);
  }
}
/**
 *
 * @internal
 */
function _addOrOverwriteComponent(app, component) {
  app.container.addOrOverwriteComponent(component);
}
/**
 *
 * @param component - the component to register
 * @returns whether or not the component is registered successfully
 *
 * @internal
 */
function _registerComponent(component) {
  var componentName = component.name;
  if (_components.has(componentName)) {
    logger.debug("There were multiple attempts to register component ".concat(componentName, "."));
    return false;
  }
  _components.set(componentName, component);
  // add the component to existing app instances
  var _iterator = createForOfIteratorHelper_createForOfIteratorHelper(_apps.values()),
    _step;
  try {
    for (_iterator.s(); !(_step = _iterator.n()).done;) {
      var app = _step.value;
      _addComponent(app, component);
    }
  } catch (err) {
    _iterator.e(err);
  } finally {
    _iterator.f();
  }
  return true;
}
/**
 *
 * @param app - FirebaseApp instance
 * @param name - service name
 *
 * @returns the provider for the service with the matching name
 *
 * @internal
 */
function index_esm2017_getProvider(app, name) {
  var heartbeatController = app.container.getProvider('heartbeat').getImmediate({
    optional: true
  });
  if (heartbeatController) {
    void heartbeatController.triggerHeartbeat();
  }
  return app.container.getProvider(name);
}
/**
 *
 * @param app - FirebaseApp instance
 * @param name - service name
 * @param instanceIdentifier - service instance identifier in case the service supports multiple instances
 *
 * @internal
 */
function index_esm2017_removeServiceInstance(app, name) {
  var instanceIdentifier = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : index_esm2017_DEFAULT_ENTRY_NAME;
  index_esm2017_getProvider(app, name).clearInstance(instanceIdentifier);
}
/**
 * Test only
 *
 * @internal
 */
function _clearComponents() {
  _components.clear();
}

/**
 * @license
 * Copyright 2019 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
var ERRORS = (_ERRORS = {}, (0,esm_defineProperty/* default */.Z)(_ERRORS, "no-app" /* AppError.NO_APP */, "No Firebase App '{$appName}' has been created - " + 'call Firebase App.initializeApp()'), (0,esm_defineProperty/* default */.Z)(_ERRORS, "bad-app-name" /* AppError.BAD_APP_NAME */, "Illegal App name: '{$appName}"), (0,esm_defineProperty/* default */.Z)(_ERRORS, "duplicate-app" /* AppError.DUPLICATE_APP */, "Firebase App named '{$appName}' already exists with different options or config"), (0,esm_defineProperty/* default */.Z)(_ERRORS, "app-deleted" /* AppError.APP_DELETED */, "Firebase App named '{$appName}' already deleted"), (0,esm_defineProperty/* default */.Z)(_ERRORS, "no-options" /* AppError.NO_OPTIONS */, 'Need to provide options, when not being deployed to hosting via source.'), (0,esm_defineProperty/* default */.Z)(_ERRORS, "invalid-app-argument" /* AppError.INVALID_APP_ARGUMENT */, 'firebase.{$appName}() takes either no argument or a ' + 'Firebase App instance.'), (0,esm_defineProperty/* default */.Z)(_ERRORS, "invalid-log-argument" /* AppError.INVALID_LOG_ARGUMENT */, 'First argument to `onLog` must be null or a function.'), (0,esm_defineProperty/* default */.Z)(_ERRORS, "idb-open" /* AppError.IDB_OPEN */, 'Error thrown when opening IndexedDB. Original error: {$originalErrorMessage}.'), (0,esm_defineProperty/* default */.Z)(_ERRORS, "idb-get" /* AppError.IDB_GET */, 'Error thrown when reading from IndexedDB. Original error: {$originalErrorMessage}.'), (0,esm_defineProperty/* default */.Z)(_ERRORS, "idb-set" /* AppError.IDB_WRITE */, 'Error thrown when writing to IndexedDB. Original error: {$originalErrorMessage}.'), (0,esm_defineProperty/* default */.Z)(_ERRORS, "idb-delete" /* AppError.IDB_DELETE */, 'Error thrown when deleting from IndexedDB. Original error: {$originalErrorMessage}.'), _ERRORS);
var ERROR_FACTORY = new ErrorFactory('app', 'Firebase', ERRORS);

/**
 * @license
 * Copyright 2019 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
var FirebaseAppImpl = /*#__PURE__*/function () {
  function FirebaseAppImpl(options, config, container) {
    var _this = this;
    classCallCheck_classCallCheck(this, FirebaseAppImpl);
    this._isDeleted = false;
    this._options = Object.assign({}, options);
    this._config = Object.assign({}, config);
    this._name = config.name;
    this._automaticDataCollectionEnabled = config.automaticDataCollectionEnabled;
    this._container = container;
    this.container.addComponent(new Component('app', function () {
      return _this;
    }, "PUBLIC" /* ComponentType.PUBLIC */));
  }
  createClass_createClass(FirebaseAppImpl, [{
    key: "automaticDataCollectionEnabled",
    get: function get() {
      this.checkDestroyed();
      return this._automaticDataCollectionEnabled;
    },
    set: function set(val) {
      this.checkDestroyed();
      this._automaticDataCollectionEnabled = val;
    }
  }, {
    key: "name",
    get: function get() {
      this.checkDestroyed();
      return this._name;
    }
  }, {
    key: "options",
    get: function get() {
      this.checkDestroyed();
      return this._options;
    }
  }, {
    key: "config",
    get: function get() {
      this.checkDestroyed();
      return this._config;
    }
  }, {
    key: "container",
    get: function get() {
      return this._container;
    }
  }, {
    key: "isDeleted",
    get: function get() {
      return this._isDeleted;
    },
    set: function set(val) {
      this._isDeleted = val;
    }
    /**
     * This function will throw an Error if the App has already been deleted -
     * use before performing API actions on the App.
     */
  }, {
    key: "checkDestroyed",
    value: function checkDestroyed() {
      if (this.isDeleted) {
        throw ERROR_FACTORY.create("app-deleted" /* AppError.APP_DELETED */, {
          appName: this._name
        });
      }
    }
  }]);
  return FirebaseAppImpl;
}();
/**
 * @license
 * Copyright 2019 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * The current SDK version.
 *
 * @public
 */
var SDK_VERSION = version;
function initializeApp(_options) {
  var rawConfig = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
  var options = _options;
  if (typeof rawConfig !== 'object') {
    var _name = rawConfig;
    rawConfig = {
      name: _name
    };
  }
  var config = Object.assign({
    name: index_esm2017_DEFAULT_ENTRY_NAME,
    automaticDataCollectionEnabled: false
  }, rawConfig);
  var name = config.name;
  if (typeof name !== 'string' || !name) {
    throw ERROR_FACTORY.create("bad-app-name" /* AppError.BAD_APP_NAME */, {
      appName: String(name)
    });
  }
  options || (options = getDefaultAppConfig());
  if (!options) {
    throw ERROR_FACTORY.create("no-options" /* AppError.NO_OPTIONS */);
  }

  var existingApp = _apps.get(name);
  if (existingApp) {
    // return the existing app if options and config deep equal the ones in the existing app.
    if (index_esm2017_deepEqual(options, existingApp.options) && index_esm2017_deepEqual(config, existingApp.config)) {
      return existingApp;
    } else {
      throw ERROR_FACTORY.create("duplicate-app" /* AppError.DUPLICATE_APP */, {
        appName: name
      });
    }
  }
  var container = new ComponentContainer(name);
  var _iterator2 = createForOfIteratorHelper_createForOfIteratorHelper(_components.values()),
    _step2;
  try {
    for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {
      var component = _step2.value;
      container.addComponent(component);
    }
  } catch (err) {
    _iterator2.e(err);
  } finally {
    _iterator2.f();
  }
  var newApp = new FirebaseAppImpl(options, config, container);
  _apps.set(name, newApp);
  return newApp;
}
/**
 * Retrieves a {@link @firebase/app#FirebaseApp} instance.
 *
 * When called with no arguments, the default app is returned. When an app name
 * is provided, the app corresponding to that name is returned.
 *
 * An exception is thrown if the app being retrieved has not yet been
 * initialized.
 *
 * @example
 * ```javascript
 * // Return the default app
 * const app = getApp();
 * ```
 *
 * @example
 * ```javascript
 * // Return a named app
 * const otherApp = getApp("otherApp");
 * ```
 *
 * @param name - Optional name of the app to return. If no name is
 *   provided, the default is `"[DEFAULT]"`.
 *
 * @returns The app corresponding to the provided app name.
 *   If no app name is provided, the default app is returned.
 *
 * @public
 */
function index_esm2017_getApp() {
  var name = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : index_esm2017_DEFAULT_ENTRY_NAME;
  var app = _apps.get(name);
  if (!app && name === index_esm2017_DEFAULT_ENTRY_NAME) {
    return initializeApp();
  }
  if (!app) {
    throw ERROR_FACTORY.create("no-app" /* AppError.NO_APP */, {
      appName: name
    });
  }
  return app;
}
/**
 * A (read-only) array of all initialized apps.
 * @public
 */
function getApps() {
  return Array.from(_apps.values());
}
/**
 * Renders this app unusable and frees the resources of all associated
 * services.
 *
 * @example
 * ```javascript
 * deleteApp(app)
 *   .then(function() {
 *     console.log("App deleted successfully");
 *   })
 *   .catch(function(error) {
 *     console.log("Error deleting app:", error);
 *   });
 * ```
 *
 * @public
 */
function deleteApp(_x) {
  return _deleteApp.apply(this, arguments);
}
/**
 * Registers a library's name and version for platform logging purposes.
 * @param library - Name of 1p or 3p library (e.g. firestore, angularfire)
 * @param version - Current version of that library.
 * @param variant - Bundle variant, e.g., node, rn, etc.
 *
 * @public
 */
function _deleteApp() {
  _deleteApp = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee7(app) {
    var name;
    return _regeneratorRuntime().wrap(function _callee7$(_context7) {
      while (1) {
        switch (_context7.prev = _context7.next) {
          case 0:
            name = app.name;
            if (!_apps.has(name)) {
              _context7.next = 6;
              break;
            }
            _apps.delete(name);
            _context7.next = 5;
            return Promise.all(app.container.getProviders().map(function (provider) {
              return provider.delete();
            }));
          case 5:
            app.isDeleted = true;
          case 6:
          case "end":
            return _context7.stop();
        }
      }
    }, _callee7);
  }));
  return _deleteApp.apply(this, arguments);
}
function registerVersion(libraryKeyOrName, version, variant) {
  var _a;
  // TODO: We can use this check to whitelist strings when/if we set up
  // a good whitelist system.
  var library = (_a = PLATFORM_LOG_STRING[libraryKeyOrName]) !== null && _a !== void 0 ? _a : libraryKeyOrName;
  if (variant) {
    library += "-".concat(variant);
  }
  var libraryMismatch = library.match(/\s|\//);
  var versionMismatch = version.match(/\s|\//);
  if (libraryMismatch || versionMismatch) {
    var warning = ["Unable to register library \"".concat(library, "\" with version \"").concat(version, "\":")];
    if (libraryMismatch) {
      warning.push("library name \"".concat(library, "\" contains illegal characters (whitespace or \"/\")"));
    }
    if (libraryMismatch && versionMismatch) {
      warning.push('and');
    }
    if (versionMismatch) {
      warning.push("version name \"".concat(version, "\" contains illegal characters (whitespace or \"/\")"));
    }
    logger.warn(warning.join(' '));
    return;
  }
  _registerComponent(new Component("".concat(library, "-version"), function () {
    return {
      library: library,
      version: version
    };
  }, "VERSION" /* ComponentType.VERSION */));
}
/**
 * Sets log handler for all Firebase SDKs.
 * @param logCallback - An optional custom log handler that executes user code whenever
 * the Firebase SDK makes a logging call.
 *
 * @public
 */
function onLog(logCallback, options) {
  if (logCallback !== null && typeof logCallback !== 'function') {
    throw ERROR_FACTORY.create("invalid-log-argument" /* AppError.INVALID_LOG_ARGUMENT */);
  }

  setUserLogHandler(logCallback, options);
}
/**
 * Sets log level for all Firebase SDKs.
 *
 * All of the log types above the current log level are captured (i.e. if
 * you set the log level to `info`, errors are logged, but `debug` and
 * `verbose` logs are not).
 *
 * @public
 */
function index_esm2017_setLogLevel(logLevel) {
  setLogLevel$1(logLevel);
}

/**
 * @license
 * Copyright 2021 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
var DB_NAME = 'firebase-heartbeat-database';
var DB_VERSION = 1;
var STORE_NAME = 'firebase-heartbeat-store';
var dbPromise = null;
function getDbPromise() {
  if (!dbPromise) {
    dbPromise = openDB(DB_NAME, DB_VERSION, {
      upgrade: function upgrade(db, oldVersion) {
        // We don't use 'break' in this switch statement, the fall-through
        // behavior is what we want, because if there are multiple versions between
        // the old version and the current version, we want ALL the migrations
        // that correspond to those versions to run, not only the last one.
        // eslint-disable-next-line default-case
        switch (oldVersion) {
          case 0:
            db.createObjectStore(STORE_NAME);
        }
      }
    }).catch(function (e) {
      throw ERROR_FACTORY.create("idb-open" /* AppError.IDB_OPEN */, {
        originalErrorMessage: e.message
      });
    });
  }
  return dbPromise;
}
function readHeartbeatsFromIndexedDB(_x2) {
  return _readHeartbeatsFromIndexedDB.apply(this, arguments);
}
function _readHeartbeatsFromIndexedDB() {
  _readHeartbeatsFromIndexedDB = asyncToGenerator_asyncToGenerator( /*#__PURE__*/regeneratorRuntime_regeneratorRuntime().mark(function _callee8(app) {
    var db, idbGetError;
    return regeneratorRuntime_regeneratorRuntime().wrap(function _callee8$(_context8) {
      while (1) {
        switch (_context8.prev = _context8.next) {
          case 0:
            _context8.prev = 0;
            _context8.next = 3;
            return getDbPromise();
          case 3:
            db = _context8.sent;
            return _context8.abrupt("return", db.transaction(STORE_NAME).objectStore(STORE_NAME).get(computeKey(app)));
          case 7:
            _context8.prev = 7;
            _context8.t0 = _context8["catch"](0);
            if (_context8.t0 instanceof FirebaseError) {
              logger.warn(_context8.t0.message);
            } else {
              idbGetError = ERROR_FACTORY.create("idb-get" /* AppError.IDB_GET */, {
                originalErrorMessage: _context8.t0 === null || _context8.t0 === void 0 ? void 0 : _context8.t0.message
              });
              logger.warn(idbGetError.message);
            }
          case 10:
          case "end":
            return _context8.stop();
        }
      }
    }, _callee8, null, [[0, 7]]);
  }));
  return _readHeartbeatsFromIndexedDB.apply(this, arguments);
}
function writeHeartbeatsToIndexedDB(_x3, _x4) {
  return _writeHeartbeatsToIndexedDB.apply(this, arguments);
}
function _writeHeartbeatsToIndexedDB() {
  _writeHeartbeatsToIndexedDB = asyncToGenerator_asyncToGenerator( /*#__PURE__*/regeneratorRuntime_regeneratorRuntime().mark(function _callee9(app, heartbeatObject) {
    var db, tx, objectStore, idbGetError;
    return regeneratorRuntime_regeneratorRuntime().wrap(function _callee9$(_context9) {
      while (1) {
        switch (_context9.prev = _context9.next) {
          case 0:
            _context9.prev = 0;
            _context9.next = 3;
            return getDbPromise();
          case 3:
            db = _context9.sent;
            tx = db.transaction(STORE_NAME, 'readwrite');
            objectStore = tx.objectStore(STORE_NAME);
            _context9.next = 8;
            return objectStore.put(heartbeatObject, computeKey(app));
          case 8:
            return _context9.abrupt("return", tx.done);
          case 11:
            _context9.prev = 11;
            _context9.t0 = _context9["catch"](0);
            if (_context9.t0 instanceof FirebaseError) {
              logger.warn(_context9.t0.message);
            } else {
              idbGetError = ERROR_FACTORY.create("idb-set" /* AppError.IDB_WRITE */, {
                originalErrorMessage: _context9.t0 === null || _context9.t0 === void 0 ? void 0 : _context9.t0.message
              });
              logger.warn(idbGetError.message);
            }
          case 14:
          case "end":
            return _context9.stop();
        }
      }
    }, _callee9, null, [[0, 11]]);
  }));
  return _writeHeartbeatsToIndexedDB.apply(this, arguments);
}
function computeKey(app) {
  return "".concat(app.name, "!").concat(app.options.appId);
}

/**
 * @license
 * Copyright 2021 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
var MAX_HEADER_BYTES = 1024;
// 30 days
var STORED_HEARTBEAT_RETENTION_MAX_MILLIS = 30 * 24 * 60 * 60 * 1000;
var HeartbeatServiceImpl = /*#__PURE__*/function () {
  function HeartbeatServiceImpl(container) {
    var _this2 = this;
    classCallCheck_classCallCheck(this, HeartbeatServiceImpl);
    this.container = container;
    /**
     * In-memory cache for heartbeats, used by getHeartbeatsHeader() to generate
     * the header string.
     * Stores one record per date. This will be consolidated into the standard
     * format of one record per user agent string before being sent as a header.
     * Populated from indexedDB when the controller is instantiated and should
     * be kept in sync with indexedDB.
     * Leave public for easier testing.
     */
    this._heartbeatsCache = null;
    var app = this.container.getProvider('app').getImmediate();
    this._storage = new HeartbeatStorageImpl(app);
    this._heartbeatsCachePromise = this._storage.read().then(function (result) {
      _this2._heartbeatsCache = result;
      return result;
    });
  }
  /**
   * Called to report a heartbeat. The function will generate
   * a HeartbeatsByUserAgent object, update heartbeatsCache, and persist it
   * to IndexedDB.
   * Note that we only store one heartbeat per day. So if a heartbeat for today is
   * already logged, subsequent calls to this function in the same day will be ignored.
   */
  createClass_createClass(HeartbeatServiceImpl, [{
    key: "triggerHeartbeat",
    value: function () {
      var _triggerHeartbeat = asyncToGenerator_asyncToGenerator( /*#__PURE__*/regeneratorRuntime_regeneratorRuntime().mark(function _callee() {
        var platformLogger, agent, date;
        return regeneratorRuntime_regeneratorRuntime().wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                platformLogger = this.container.getProvider('platform-logger').getImmediate(); // This is the "Firebase user agent" string from the platform logger
                // service, not the browser user agent.
                agent = platformLogger.getPlatformInfoString();
                date = getUTCDateString();
                if (!(this._heartbeatsCache === null)) {
                  _context.next = 7;
                  break;
                }
                _context.next = 6;
                return this._heartbeatsCachePromise;
              case 6:
                this._heartbeatsCache = _context.sent;
              case 7:
                if (!(this._heartbeatsCache.lastSentHeartbeatDate === date || this._heartbeatsCache.heartbeats.some(function (singleDateHeartbeat) {
                  return singleDateHeartbeat.date === date;
                }))) {
                  _context.next = 11;
                  break;
                }
                return _context.abrupt("return");
              case 11:
                // There is no entry for this date. Create one.
                this._heartbeatsCache.heartbeats.push({
                  date: date,
                  agent: agent
                });
              case 12:
                // Remove entries older than 30 days.
                this._heartbeatsCache.heartbeats = this._heartbeatsCache.heartbeats.filter(function (singleDateHeartbeat) {
                  var hbTimestamp = new Date(singleDateHeartbeat.date).valueOf();
                  var now = Date.now();
                  return now - hbTimestamp <= STORED_HEARTBEAT_RETENTION_MAX_MILLIS;
                });
                return _context.abrupt("return", this._storage.overwrite(this._heartbeatsCache));
              case 14:
              case "end":
                return _context.stop();
            }
          }
        }, _callee, this);
      }));
      function triggerHeartbeat() {
        return _triggerHeartbeat.apply(this, arguments);
      }
      return triggerHeartbeat;
    }()
    /**
     * Returns a base64 encoded string which can be attached to the heartbeat-specific header directly.
     * It also clears all heartbeats from memory as well as in IndexedDB.
     *
     * NOTE: Consuming product SDKs should not send the header if this method
     * returns an empty string.
     */
  }, {
    key: "getHeartbeatsHeader",
    value: function () {
      var _getHeartbeatsHeader = asyncToGenerator_asyncToGenerator( /*#__PURE__*/regeneratorRuntime_regeneratorRuntime().mark(function _callee2() {
        var date, _extractHeartbeatsFor, heartbeatsToSend, unsentEntries, headerString;
        return regeneratorRuntime_regeneratorRuntime().wrap(function _callee2$(_context2) {
          while (1) {
            switch (_context2.prev = _context2.next) {
              case 0:
                if (!(this._heartbeatsCache === null)) {
                  _context2.next = 3;
                  break;
                }
                _context2.next = 3;
                return this._heartbeatsCachePromise;
              case 3:
                if (!(this._heartbeatsCache === null || this._heartbeatsCache.heartbeats.length === 0)) {
                  _context2.next = 5;
                  break;
                }
                return _context2.abrupt("return", '');
              case 5:
                date = getUTCDateString(); // Extract as many heartbeats from the cache as will fit under the size limit.
                _extractHeartbeatsFor = extractHeartbeatsForHeader(this._heartbeatsCache.heartbeats), heartbeatsToSend = _extractHeartbeatsFor.heartbeatsToSend, unsentEntries = _extractHeartbeatsFor.unsentEntries;
                headerString = base64urlEncodeWithoutPadding(JSON.stringify({
                  version: 2,
                  heartbeats: heartbeatsToSend
                })); // Store last sent date to prevent another being logged/sent for the same day.
                this._heartbeatsCache.lastSentHeartbeatDate = date;
                if (!(unsentEntries.length > 0)) {
                  _context2.next = 15;
                  break;
                }
                // Store any unsent entries if they exist.
                this._heartbeatsCache.heartbeats = unsentEntries;
                // This seems more likely than emptying the array (below) to lead to some odd state
                // since the cache isn't empty and this will be called again on the next request,
                // and is probably safest if we await it.
                _context2.next = 13;
                return this._storage.overwrite(this._heartbeatsCache);
              case 13:
                _context2.next = 17;
                break;
              case 15:
                this._heartbeatsCache.heartbeats = [];
                // Do not wait for this, to reduce latency.
                void this._storage.overwrite(this._heartbeatsCache);
              case 17:
                return _context2.abrupt("return", headerString);
              case 18:
              case "end":
                return _context2.stop();
            }
          }
        }, _callee2, this);
      }));
      function getHeartbeatsHeader() {
        return _getHeartbeatsHeader.apply(this, arguments);
      }
      return getHeartbeatsHeader;
    }()
  }]);
  return HeartbeatServiceImpl;
}();
function getUTCDateString() {
  var today = new Date();
  // Returns date format 'YYYY-MM-DD'
  return today.toISOString().substring(0, 10);
}
function extractHeartbeatsForHeader(heartbeatsCache) {
  var maxSize = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : MAX_HEADER_BYTES;
  // Heartbeats grouped by user agent in the standard format to be sent in
  // the header.
  var heartbeatsToSend = [];
  // Single date format heartbeats that are not sent.
  var unsentEntries = heartbeatsCache.slice();
  var _iterator3 = createForOfIteratorHelper_createForOfIteratorHelper(heartbeatsCache),
    _step3;
  try {
    var _loop = function _loop() {
      var singleDateHeartbeat = _step3.value;
      // Look for an existing entry with the same user agent.
      var heartbeatEntry = heartbeatsToSend.find(function (hb) {
        return hb.agent === singleDateHeartbeat.agent;
      });
      if (!heartbeatEntry) {
        // If no entry for this user agent exists, create one.
        heartbeatsToSend.push({
          agent: singleDateHeartbeat.agent,
          dates: [singleDateHeartbeat.date]
        });
        if (countBytes(heartbeatsToSend) > maxSize) {
          // If the header would exceed max size, remove the added heartbeat
          // entry and stop adding to the header.
          heartbeatsToSend.pop();
          return "break";
        }
      } else {
        heartbeatEntry.dates.push(singleDateHeartbeat.date);
        // If the header would exceed max size, remove the added date
        // and stop adding to the header.
        if (countBytes(heartbeatsToSend) > maxSize) {
          heartbeatEntry.dates.pop();
          return "break";
        }
      }
      // Pop unsent entry from queue. (Skipped if adding the entry exceeded
      // quota and the loop breaks early.)
      unsentEntries = unsentEntries.slice(1);
    };
    for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {
      var _ret = _loop();
      if (_ret === "break") break;
    }
  } catch (err) {
    _iterator3.e(err);
  } finally {
    _iterator3.f();
  }
  return {
    heartbeatsToSend: heartbeatsToSend,
    unsentEntries: unsentEntries
  };
}
var HeartbeatStorageImpl = /*#__PURE__*/function () {
  function HeartbeatStorageImpl(app) {
    classCallCheck_classCallCheck(this, HeartbeatStorageImpl);
    this.app = app;
    this._canUseIndexedDBPromise = this.runIndexedDBEnvironmentCheck();
  }
  createClass_createClass(HeartbeatStorageImpl, [{
    key: "runIndexedDBEnvironmentCheck",
    value: function () {
      var _runIndexedDBEnvironmentCheck = asyncToGenerator_asyncToGenerator( /*#__PURE__*/regeneratorRuntime_regeneratorRuntime().mark(function _callee3() {
        return regeneratorRuntime_regeneratorRuntime().wrap(function _callee3$(_context3) {
          while (1) {
            switch (_context3.prev = _context3.next) {
              case 0:
                if (index_esm2017_isIndexedDBAvailable()) {
                  _context3.next = 4;
                  break;
                }
                return _context3.abrupt("return", false);
              case 4:
                return _context3.abrupt("return", index_esm2017_validateIndexedDBOpenable().then(function () {
                  return true;
                }).catch(function () {
                  return false;
                }));
              case 5:
              case "end":
                return _context3.stop();
            }
          }
        }, _callee3);
      }));
      function runIndexedDBEnvironmentCheck() {
        return _runIndexedDBEnvironmentCheck.apply(this, arguments);
      }
      return runIndexedDBEnvironmentCheck;
    }()
    /**
     * Read all heartbeats.
     */
  }, {
    key: "read",
    value: function () {
      var _read = asyncToGenerator_asyncToGenerator( /*#__PURE__*/regeneratorRuntime_regeneratorRuntime().mark(function _callee4() {
        var canUseIndexedDB, idbHeartbeatObject;
        return regeneratorRuntime_regeneratorRuntime().wrap(function _callee4$(_context4) {
          while (1) {
            switch (_context4.prev = _context4.next) {
              case 0:
                _context4.next = 2;
                return this._canUseIndexedDBPromise;
              case 2:
                canUseIndexedDB = _context4.sent;
                if (canUseIndexedDB) {
                  _context4.next = 7;
                  break;
                }
                return _context4.abrupt("return", {
                  heartbeats: []
                });
              case 7:
                _context4.next = 9;
                return readHeartbeatsFromIndexedDB(this.app);
              case 9:
                idbHeartbeatObject = _context4.sent;
                return _context4.abrupt("return", idbHeartbeatObject || {
                  heartbeats: []
                });
              case 11:
              case "end":
                return _context4.stop();
            }
          }
        }, _callee4, this);
      }));
      function read() {
        return _read.apply(this, arguments);
      }
      return read;
    }() // overwrite the storage with the provided heartbeats
  }, {
    key: "overwrite",
    value: function () {
      var _overwrite = asyncToGenerator_asyncToGenerator( /*#__PURE__*/regeneratorRuntime_regeneratorRuntime().mark(function _callee5(heartbeatsObject) {
        var _a, canUseIndexedDB, existingHeartbeatsObject;
        return regeneratorRuntime_regeneratorRuntime().wrap(function _callee5$(_context5) {
          while (1) {
            switch (_context5.prev = _context5.next) {
              case 0:
                _context5.next = 2;
                return this._canUseIndexedDBPromise;
              case 2:
                canUseIndexedDB = _context5.sent;
                if (canUseIndexedDB) {
                  _context5.next = 7;
                  break;
                }
                return _context5.abrupt("return");
              case 7:
                _context5.next = 9;
                return this.read();
              case 9:
                existingHeartbeatsObject = _context5.sent;
                return _context5.abrupt("return", writeHeartbeatsToIndexedDB(this.app, {
                  lastSentHeartbeatDate: (_a = heartbeatsObject.lastSentHeartbeatDate) !== null && _a !== void 0 ? _a : existingHeartbeatsObject.lastSentHeartbeatDate,
                  heartbeats: heartbeatsObject.heartbeats
                }));
              case 11:
              case "end":
                return _context5.stop();
            }
          }
        }, _callee5, this);
      }));
      function overwrite(_x5) {
        return _overwrite.apply(this, arguments);
      }
      return overwrite;
    }() // add heartbeats
  }, {
    key: "add",
    value: function () {
      var _add = asyncToGenerator_asyncToGenerator( /*#__PURE__*/regeneratorRuntime_regeneratorRuntime().mark(function _callee6(heartbeatsObject) {
        var _a, canUseIndexedDB, existingHeartbeatsObject;
        return regeneratorRuntime_regeneratorRuntime().wrap(function _callee6$(_context6) {
          while (1) {
            switch (_context6.prev = _context6.next) {
              case 0:
                _context6.next = 2;
                return this._canUseIndexedDBPromise;
              case 2:
                canUseIndexedDB = _context6.sent;
                if (canUseIndexedDB) {
                  _context6.next = 7;
                  break;
                }
                return _context6.abrupt("return");
              case 7:
                _context6.next = 9;
                return this.read();
              case 9:
                existingHeartbeatsObject = _context6.sent;
                return _context6.abrupt("return", writeHeartbeatsToIndexedDB(this.app, {
                  lastSentHeartbeatDate: (_a = heartbeatsObject.lastSentHeartbeatDate) !== null && _a !== void 0 ? _a : existingHeartbeatsObject.lastSentHeartbeatDate,
                  heartbeats: [].concat((0,toConsumableArray/* default */.Z)(existingHeartbeatsObject.heartbeats), (0,toConsumableArray/* default */.Z)(heartbeatsObject.heartbeats))
                }));
              case 11:
              case "end":
                return _context6.stop();
            }
          }
        }, _callee6, this);
      }));
      function add(_x6) {
        return _add.apply(this, arguments);
      }
      return add;
    }()
  }]);
  return HeartbeatStorageImpl;
}();
/**
 * Calculate bytes of a HeartbeatsByUserAgent array after being wrapped
 * in a platform logging header JSON object, stringified, and converted
 * to base 64.
 */
function countBytes(heartbeatsCache) {
  // base64 has a restricted set of characters, all of which should be 1 byte.
  return base64urlEncodeWithoutPadding(
  // heartbeatsCache wrapper properties
  JSON.stringify({
    version: 2,
    heartbeats: heartbeatsCache
  })).length;
}

/**
 * @license
 * Copyright 2019 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
function registerCoreComponents(variant) {
  _registerComponent(new Component('platform-logger', function (container) {
    return new PlatformLoggerServiceImpl(container);
  }, "PRIVATE" /* ComponentType.PRIVATE */));
  _registerComponent(new Component('heartbeat', function (container) {
    return new HeartbeatServiceImpl(container);
  }, "PRIVATE" /* ComponentType.PRIVATE */));
  // Register `app` package.
  registerVersion(name$o, version$1, variant);
  // BUILD_TARGET will be replaced by values like esm5, esm2017, cjs5, etc during the compilation
  registerVersion(name$o, version$1, 'esm2017');
  // Register platform SDK identifier (no version).
  registerVersion('fire-js', '');
}

/**
 * Firebase App
 *
 * @remarks This package coordinates the communication between the different Firebase components
 * @packageDocumentation
 */
registerCoreComponents('');

;// CONCATENATED MODULE: ./node_modules/firebase/app/dist/esm/index.esm.js


var index_esm_name = "firebase";
var index_esm_version = "9.15.0";

/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
registerVersion(index_esm_name, index_esm_version, 'app');
;// CONCATENATED MODULE: ./node_modules/@firebase/installations/node_modules/idb/build/wrap-idb-value.js
var wrap_idb_value_instanceOfAny = function instanceOfAny(object, constructors) {
  return constructors.some(function (c) {
    return object instanceof c;
  });
};
var wrap_idb_value_idbProxyableTypes;
var wrap_idb_value_cursorAdvanceMethods;
// This is a function to prevent it throwing up in node environments.
function wrap_idb_value_getIdbProxyableTypes() {
  return wrap_idb_value_idbProxyableTypes || (wrap_idb_value_idbProxyableTypes = [IDBDatabase, IDBObjectStore, IDBIndex, IDBCursor, IDBTransaction]);
}
// This is a function to prevent it throwing up in node environments.
function wrap_idb_value_getCursorAdvanceMethods() {
  return wrap_idb_value_cursorAdvanceMethods || (wrap_idb_value_cursorAdvanceMethods = [IDBCursor.prototype.advance, IDBCursor.prototype.continue, IDBCursor.prototype.continuePrimaryKey]);
}
var wrap_idb_value_cursorRequestMap = new WeakMap();
var wrap_idb_value_transactionDoneMap = new WeakMap();
var wrap_idb_value_transactionStoreNamesMap = new WeakMap();
var wrap_idb_value_transformCache = new WeakMap();
var wrap_idb_value_reverseTransformCache = new WeakMap();
function wrap_idb_value_promisifyRequest(request) {
  var promise = new Promise(function (resolve, reject) {
    var unlisten = function unlisten() {
      request.removeEventListener('success', success);
      request.removeEventListener('error', error);
    };
    var success = function success() {
      resolve(build_wrap_idb_value_wrap(request.result));
      unlisten();
    };
    var error = function error() {
      reject(request.error);
      unlisten();
    };
    request.addEventListener('success', success);
    request.addEventListener('error', error);
  });
  promise.then(function (value) {
    // Since cursoring reuses the IDBRequest (*sigh*), we cache it for later retrieval
    // (see wrapFunction).
    if (value instanceof IDBCursor) {
      wrap_idb_value_cursorRequestMap.set(value, request);
    }
    // Catching to avoid "Uncaught Promise exceptions"
  }).catch(function () {});
  // This mapping exists in reverseTransformCache but doesn't doesn't exist in transformCache. This
  // is because we create many promises from a single IDBRequest.
  wrap_idb_value_reverseTransformCache.set(promise, request);
  return promise;
}
function wrap_idb_value_cacheDonePromiseForTransaction(tx) {
  // Early bail if we've already created a done promise for this transaction.
  if (wrap_idb_value_transactionDoneMap.has(tx)) return;
  var done = new Promise(function (resolve, reject) {
    var unlisten = function unlisten() {
      tx.removeEventListener('complete', complete);
      tx.removeEventListener('error', error);
      tx.removeEventListener('abort', error);
    };
    var complete = function complete() {
      resolve();
      unlisten();
    };
    var error = function error() {
      reject(tx.error || new DOMException('AbortError', 'AbortError'));
      unlisten();
    };
    tx.addEventListener('complete', complete);
    tx.addEventListener('error', error);
    tx.addEventListener('abort', error);
  });
  // Cache it for later retrieval.
  wrap_idb_value_transactionDoneMap.set(tx, done);
}
var wrap_idb_value_idbProxyTraps = {
  get: function get(target, prop, receiver) {
    if (target instanceof IDBTransaction) {
      // Special handling for transaction.done.
      if (prop === 'done') return wrap_idb_value_transactionDoneMap.get(target);
      // Polyfill for objectStoreNames because of Edge.
      if (prop === 'objectStoreNames') {
        return target.objectStoreNames || wrap_idb_value_transactionStoreNamesMap.get(target);
      }
      // Make tx.store return the only store in the transaction, or undefined if there are many.
      if (prop === 'store') {
        return receiver.objectStoreNames[1] ? undefined : receiver.objectStore(receiver.objectStoreNames[0]);
      }
    }
    // Else transform whatever we get back.
    return build_wrap_idb_value_wrap(target[prop]);
  },
  set: function set(target, prop, value) {
    target[prop] = value;
    return true;
  },
  has: function has(target, prop) {
    if (target instanceof IDBTransaction && (prop === 'done' || prop === 'store')) {
      return true;
    }
    return prop in target;
  }
};
function wrap_idb_value_replaceTraps(callback) {
  wrap_idb_value_idbProxyTraps = callback(wrap_idb_value_idbProxyTraps);
}
function wrap_idb_value_wrapFunction(func) {
  // Due to expected object equality (which is enforced by the caching in `wrap`), we
  // only create one new func per func.
  // Edge doesn't support objectStoreNames (booo), so we polyfill it here.
  if (func === IDBDatabase.prototype.transaction && !('objectStoreNames' in IDBTransaction.prototype)) {
    return function (storeNames) {
      for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
        args[_key - 1] = arguments[_key];
      }
      var tx = func.call.apply(func, [build_wrap_idb_value_unwrap(this), storeNames].concat(args));
      wrap_idb_value_transactionStoreNamesMap.set(tx, storeNames.sort ? storeNames.sort() : [storeNames]);
      return build_wrap_idb_value_wrap(tx);
    };
  }
  // Cursor methods are special, as the behaviour is a little more different to standard IDB. In
  // IDB, you advance the cursor and wait for a new 'success' on the IDBRequest that gave you the
  // cursor. It's kinda like a promise that can resolve with many values. That doesn't make sense
  // with real promises, so each advance methods returns a new promise for the cursor object, or
  // undefined if the end of the cursor has been reached.
  if (wrap_idb_value_getCursorAdvanceMethods().includes(func)) {
    return function () {
      for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
        args[_key2] = arguments[_key2];
      }
      // Calling the original function with the proxy as 'this' causes ILLEGAL INVOCATION, so we use
      // the original object.
      func.apply(build_wrap_idb_value_unwrap(this), args);
      return build_wrap_idb_value_wrap(wrap_idb_value_cursorRequestMap.get(this));
    };
  }
  return function () {
    for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {
      args[_key3] = arguments[_key3];
    }
    // Calling the original function with the proxy as 'this' causes ILLEGAL INVOCATION, so we use
    // the original object.
    return build_wrap_idb_value_wrap(func.apply(build_wrap_idb_value_unwrap(this), args));
  };
}
function wrap_idb_value_transformCachableValue(value) {
  if (typeof value === 'function') return wrap_idb_value_wrapFunction(value);
  // This doesn't return, it just creates a 'done' promise for the transaction,
  // which is later returned for transaction.done (see idbObjectHandler).
  if (value instanceof IDBTransaction) wrap_idb_value_cacheDonePromiseForTransaction(value);
  if (wrap_idb_value_instanceOfAny(value, wrap_idb_value_getIdbProxyableTypes())) return new Proxy(value, wrap_idb_value_idbProxyTraps);
  // Return the same value back if we're not going to transform it.
  return value;
}
function build_wrap_idb_value_wrap(value) {
  // We sometimes generate multiple promises from a single IDBRequest (eg when cursoring), because
  // IDB is weird and a single IDBRequest can yield many responses, so these can't be cached.
  if (value instanceof IDBRequest) return wrap_idb_value_promisifyRequest(value);
  // If we've already transformed this value before, reuse the transformed value.
  // This is faster, but it also provides object equality.
  if (wrap_idb_value_transformCache.has(value)) return wrap_idb_value_transformCache.get(value);
  var newValue = wrap_idb_value_transformCachableValue(value);
  // Not all types are transformed.
  // These may be primitive types, so they can't be WeakMap keys.
  if (newValue !== value) {
    wrap_idb_value_transformCache.set(value, newValue);
    wrap_idb_value_reverseTransformCache.set(newValue, value);
  }
  return newValue;
}
var build_wrap_idb_value_unwrap = function unwrap(value) {
  return wrap_idb_value_reverseTransformCache.get(value);
};

;// CONCATENATED MODULE: ./node_modules/@firebase/installations/node_modules/idb/build/index.js






/**
 * Open a database.
 *
 * @param name Name of the database.
 * @param version Schema version.
 * @param callbacks Additional callbacks.
 */
function build_openDB(name, version) {
  var _ref = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {},
    blocked = _ref.blocked,
    upgrade = _ref.upgrade,
    blocking = _ref.blocking,
    terminated = _ref.terminated;
  var request = indexedDB.open(name, version);
  var openPromise = build_wrap_idb_value_wrap(request);
  if (upgrade) {
    request.addEventListener('upgradeneeded', function (event) {
      upgrade(build_wrap_idb_value_wrap(request.result), event.oldVersion, event.newVersion, build_wrap_idb_value_wrap(request.transaction));
    });
  }
  if (blocked) request.addEventListener('blocked', function () {
    return blocked();
  });
  openPromise.then(function (db) {
    if (terminated) db.addEventListener('close', function () {
      return terminated();
    });
    if (blocking) db.addEventListener('versionchange', function () {
      return blocking();
    });
  }).catch(function () {});
  return openPromise;
}
/**
 * Delete a database.
 *
 * @param name Name of the database.
 */
function build_deleteDB(name) {
  var _ref2 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},
    blocked = _ref2.blocked;
  var request = indexedDB.deleteDatabase(name);
  if (blocked) request.addEventListener('blocked', function () {
    return blocked();
  });
  return wrap(request).then(function () {
    return undefined;
  });
}
var build_readMethods = ['get', 'getKey', 'getAll', 'getAllKeys', 'count'];
var build_writeMethods = ['put', 'add', 'delete', 'clear'];
var build_cachedMethods = new Map();
function build_getMethod(target, prop) {
  if (!(target instanceof IDBDatabase && !(prop in target) && typeof prop === 'string')) {
    return;
  }
  if (build_cachedMethods.get(prop)) return build_cachedMethods.get(prop);
  var targetFuncName = prop.replace(/FromIndex$/, '');
  var useIndex = prop !== targetFuncName;
  var isWrite = build_writeMethods.includes(targetFuncName);
  if (
  // Bail if the target doesn't exist on the target. Eg, getAll isn't in Edge.
  !(targetFuncName in (useIndex ? IDBIndex : IDBObjectStore).prototype) || !(isWrite || build_readMethods.includes(targetFuncName))) {
    return;
  }
  var method = /*#__PURE__*/function () {
    var _ref3 = asyncToGenerator_asyncToGenerator( /*#__PURE__*/regeneratorRuntime_regeneratorRuntime().mark(function _callee(storeName) {
      var _target;
      var tx,
        target,
        _len,
        args,
        _key,
        _args = arguments;
      return regeneratorRuntime_regeneratorRuntime().wrap(function _callee$(_context) {
        while (1) {
          switch (_context.prev = _context.next) {
            case 0:
              // isWrite ? 'readwrite' : undefined gzipps better, but fails in Edge :(
              tx = this.transaction(storeName, isWrite ? 'readwrite' : 'readonly');
              target = tx.store;
              for (_len = _args.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
                args[_key - 1] = _args[_key];
              }
              if (useIndex) target = target.index(args.shift());
              // Must reject if op rejects.
              // If it's a write operation, must reject if tx.done rejects.
              // Must reject with op rejection first.
              // Must resolve with op value.
              // Must handle both promises (no unhandled rejections)
              _context.next = 6;
              return Promise.all([(_target = target)[targetFuncName].apply(_target, args), isWrite && tx.done]);
            case 6:
              return _context.abrupt("return", _context.sent[0]);
            case 7:
            case "end":
              return _context.stop();
          }
        }
      }, _callee, this);
    }));
    return function method(_x) {
      return _ref3.apply(this, arguments);
    };
  }();
  build_cachedMethods.set(prop, method);
  return method;
}
wrap_idb_value_replaceTraps(function (oldTraps) {
  return _objectSpread2(_objectSpread2({}, oldTraps), {}, {
    get: function get(target, prop, receiver) {
      return build_getMethod(target, prop) || oldTraps.get(target, prop, receiver);
    },
    has: function has(target, prop) {
      return !!build_getMethod(target, prop) || oldTraps.has(target, prop);
    }
  });
});

;// CONCATENATED MODULE: ./node_modules/@firebase/installations/dist/esm/index.esm2017.js





var _ERROR_DESCRIPTION_MA;




var esm_index_esm2017_name = "@firebase/installations";
var index_esm2017_version = "0.6.0";

/**
 * @license
 * Copyright 2019 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
var PENDING_TIMEOUT_MS = 10000;
var PACKAGE_VERSION = "w:".concat(index_esm2017_version);
var INTERNAL_AUTH_VERSION = 'FIS_v2';
var INSTALLATIONS_API_URL = 'https://firebaseinstallations.googleapis.com/v1';
var TOKEN_EXPIRATION_BUFFER = 60 * 60 * 1000; // One hour
var SERVICE = 'installations';
var SERVICE_NAME = 'Installations';

/**
 * @license
 * Copyright 2019 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
var ERROR_DESCRIPTION_MAP = (_ERROR_DESCRIPTION_MA = {}, (0,esm_defineProperty/* default */.Z)(_ERROR_DESCRIPTION_MA, "missing-app-config-values" /* ErrorCode.MISSING_APP_CONFIG_VALUES */, 'Missing App configuration value: "{$valueName}"'), (0,esm_defineProperty/* default */.Z)(_ERROR_DESCRIPTION_MA, "not-registered" /* ErrorCode.NOT_REGISTERED */, 'Firebase Installation is not registered.'), (0,esm_defineProperty/* default */.Z)(_ERROR_DESCRIPTION_MA, "installation-not-found" /* ErrorCode.INSTALLATION_NOT_FOUND */, 'Firebase Installation not found.'), (0,esm_defineProperty/* default */.Z)(_ERROR_DESCRIPTION_MA, "request-failed" /* ErrorCode.REQUEST_FAILED */, '{$requestName} request failed with error "{$serverCode} {$serverStatus}: {$serverMessage}"'), (0,esm_defineProperty/* default */.Z)(_ERROR_DESCRIPTION_MA, "app-offline" /* ErrorCode.APP_OFFLINE */, 'Could not process request. Application offline.'), (0,esm_defineProperty/* default */.Z)(_ERROR_DESCRIPTION_MA, "delete-pending-registration" /* ErrorCode.DELETE_PENDING_REGISTRATION */, "Can't delete installation while there is a pending registration request."), _ERROR_DESCRIPTION_MA);
var index_esm2017_ERROR_FACTORY = new ErrorFactory(SERVICE, SERVICE_NAME, ERROR_DESCRIPTION_MAP);
/** Returns true if error is a FirebaseError that is based on an error from the server. */
function isServerError(error) {
  return error instanceof FirebaseError && error.code.includes("request-failed" /* ErrorCode.REQUEST_FAILED */);
}

/**
 * @license
 * Copyright 2019 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
function getInstallationsEndpoint(_ref) {
  var projectId = _ref.projectId;
  return "".concat(INSTALLATIONS_API_URL, "/projects/").concat(projectId, "/installations");
}
function extractAuthTokenInfoFromResponse(response) {
  return {
    token: response.token,
    requestStatus: 2 /* RequestStatus.COMPLETED */,
    expiresIn: getExpiresInFromResponseExpiresIn(response.expiresIn),
    creationTime: Date.now()
  };
}
function getErrorFromResponse(_x, _x2) {
  return _getErrorFromResponse.apply(this, arguments);
}
function _getErrorFromResponse() {
  _getErrorFromResponse = asyncToGenerator_asyncToGenerator( /*#__PURE__*/regeneratorRuntime_regeneratorRuntime().mark(function _callee(requestName, response) {
    var responseJson, errorData;
    return regeneratorRuntime_regeneratorRuntime().wrap(function _callee$(_context) {
      while (1) {
        switch (_context.prev = _context.next) {
          case 0:
            _context.next = 2;
            return response.json();
          case 2:
            responseJson = _context.sent;
            errorData = responseJson.error;
            return _context.abrupt("return", index_esm2017_ERROR_FACTORY.create("request-failed" /* ErrorCode.REQUEST_FAILED */, {
              requestName: requestName,
              serverCode: errorData.code,
              serverMessage: errorData.message,
              serverStatus: errorData.status
            }));
          case 5:
          case "end":
            return _context.stop();
        }
      }
    }, _callee);
  }));
  return _getErrorFromResponse.apply(this, arguments);
}
function getHeaders(_ref2) {
  var apiKey = _ref2.apiKey;
  return new Headers({
    'Content-Type': 'application/json',
    Accept: 'application/json',
    'x-goog-api-key': apiKey
  });
}
function getHeadersWithAuth(appConfig, _ref3) {
  var refreshToken = _ref3.refreshToken;
  var headers = getHeaders(appConfig);
  headers.append('Authorization', getAuthorizationHeader(refreshToken));
  return headers;
}
/**
 * Calls the passed in fetch wrapper and returns the response.
 * If the returned response has a status of 5xx, re-runs the function once and
 * returns the response.
 */
function retryIfServerError(_x3) {
  return _retryIfServerError.apply(this, arguments);
}
function _retryIfServerError() {
  _retryIfServerError = asyncToGenerator_asyncToGenerator( /*#__PURE__*/regeneratorRuntime_regeneratorRuntime().mark(function _callee2(fn) {
    var result;
    return regeneratorRuntime_regeneratorRuntime().wrap(function _callee2$(_context2) {
      while (1) {
        switch (_context2.prev = _context2.next) {
          case 0:
            _context2.next = 2;
            return fn();
          case 2:
            result = _context2.sent;
            if (!(result.status >= 500 && result.status < 600)) {
              _context2.next = 5;
              break;
            }
            return _context2.abrupt("return", fn());
          case 5:
            return _context2.abrupt("return", result);
          case 6:
          case "end":
            return _context2.stop();
        }
      }
    }, _callee2);
  }));
  return _retryIfServerError.apply(this, arguments);
}
function getExpiresInFromResponseExpiresIn(responseExpiresIn) {
  // This works because the server will never respond with fractions of a second.
  return Number(responseExpiresIn.replace('s', '000'));
}
function getAuthorizationHeader(refreshToken) {
  return "".concat(INTERNAL_AUTH_VERSION, " ").concat(refreshToken);
}

/**
 * @license
 * Copyright 2019 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
function createInstallationRequest(_x4, _x5) {
  return _createInstallationRequest.apply(this, arguments);
}
/**
 * @license
 * Copyright 2019 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/** Returns a promise that resolves after given time passes. */
function _createInstallationRequest() {
  _createInstallationRequest = asyncToGenerator_asyncToGenerator( /*#__PURE__*/regeneratorRuntime_regeneratorRuntime().mark(function _callee3(_ref4, _ref5) {
    var appConfig, heartbeatServiceProvider, fid, endpoint, headers, heartbeatService, heartbeatsHeader, body, request, response, responseValue, registeredInstallationEntry;
    return regeneratorRuntime_regeneratorRuntime().wrap(function _callee3$(_context3) {
      while (1) {
        switch (_context3.prev = _context3.next) {
          case 0:
            appConfig = _ref4.appConfig, heartbeatServiceProvider = _ref4.heartbeatServiceProvider;
            fid = _ref5.fid;
            endpoint = getInstallationsEndpoint(appConfig);
            headers = getHeaders(appConfig); // If heartbeat service exists, add the heartbeat string to the header.
            heartbeatService = heartbeatServiceProvider.getImmediate({
              optional: true
            });
            if (!heartbeatService) {
              _context3.next = 10;
              break;
            }
            _context3.next = 8;
            return heartbeatService.getHeartbeatsHeader();
          case 8:
            heartbeatsHeader = _context3.sent;
            if (heartbeatsHeader) {
              headers.append('x-firebase-client', heartbeatsHeader);
            }
          case 10:
            body = {
              fid: fid,
              authVersion: INTERNAL_AUTH_VERSION,
              appId: appConfig.appId,
              sdkVersion: PACKAGE_VERSION
            };
            request = {
              method: 'POST',
              headers: headers,
              body: JSON.stringify(body)
            };
            _context3.next = 14;
            return retryIfServerError(function () {
              return fetch(endpoint, request);
            });
          case 14:
            response = _context3.sent;
            if (!response.ok) {
              _context3.next = 23;
              break;
            }
            _context3.next = 18;
            return response.json();
          case 18:
            responseValue = _context3.sent;
            registeredInstallationEntry = {
              fid: responseValue.fid || fid,
              registrationStatus: 2 /* RequestStatus.COMPLETED */,
              refreshToken: responseValue.refreshToken,
              authToken: extractAuthTokenInfoFromResponse(responseValue.authToken)
            };
            return _context3.abrupt("return", registeredInstallationEntry);
          case 23:
            _context3.next = 25;
            return getErrorFromResponse('Create Installation', response);
          case 25:
            throw _context3.sent;
          case 26:
          case "end":
            return _context3.stop();
        }
      }
    }, _callee3);
  }));
  return _createInstallationRequest.apply(this, arguments);
}
function sleep(ms) {
  return new Promise(function (resolve) {
    setTimeout(resolve, ms);
  });
}

/**
 * @license
 * Copyright 2019 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
function bufferToBase64UrlSafe(array) {
  var b64 = btoa(String.fromCharCode.apply(String, (0,toConsumableArray/* default */.Z)(array)));
  return b64.replace(/\+/g, '-').replace(/\//g, '_');
}

/**
 * @license
 * Copyright 2019 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
var VALID_FID_PATTERN = /^[cdef][\w-]{21}$/;
var INVALID_FID = '';
/**
 * Generates a new FID using random values from Web Crypto API.
 * Returns an empty string if FID generation fails for any reason.
 */
function generateFid() {
  try {
    // A valid FID has exactly 22 base64 characters, which is 132 bits, or 16.5
    // bytes. our implementation generates a 17 byte array instead.
    var fidByteArray = new Uint8Array(17);
    var crypto = self.crypto || self.msCrypto;
    crypto.getRandomValues(fidByteArray);
    // Replace the first 4 random bits with the constant FID header of 0b0111.
    fidByteArray[0] = 112 + fidByteArray[0] % 16;
    var fid = encode(fidByteArray);
    return VALID_FID_PATTERN.test(fid) ? fid : INVALID_FID;
  } catch (_a) {
    // FID generation errored
    return INVALID_FID;
  }
}
/** Converts a FID Uint8Array to a base64 string representation. */
function encode(fidByteArray) {
  var b64String = bufferToBase64UrlSafe(fidByteArray);
  // Remove the 23rd character that was added because of the extra 4 bits at the
  // end of our 17 byte array, and the '=' padding.
  return b64String.substr(0, 22);
}

/**
 * @license
 * Copyright 2019 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/** Returns a string key that can be used to identify the app. */
function getKey(appConfig) {
  return "".concat(appConfig.appName, "!").concat(appConfig.appId);
}

/**
 * @license
 * Copyright 2019 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
var fidChangeCallbacks = new Map();
/**
 * Calls the onIdChange callbacks with the new FID value, and broadcasts the
 * change to other tabs.
 */
function fidChanged(appConfig, fid) {
  var key = getKey(appConfig);
  callFidChangeCallbacks(key, fid);
  broadcastFidChange(key, fid);
}
function addCallback(appConfig, callback) {
  // Open the broadcast channel if it's not already open,
  // to be able to listen to change events from other tabs.
  getBroadcastChannel();
  var key = getKey(appConfig);
  var callbackSet = fidChangeCallbacks.get(key);
  if (!callbackSet) {
    callbackSet = new Set();
    fidChangeCallbacks.set(key, callbackSet);
  }
  callbackSet.add(callback);
}
function removeCallback(appConfig, callback) {
  var key = getKey(appConfig);
  var callbackSet = fidChangeCallbacks.get(key);
  if (!callbackSet) {
    return;
  }
  callbackSet.delete(callback);
  if (callbackSet.size === 0) {
    fidChangeCallbacks.delete(key);
  }
  // Close broadcast channel if there are no more callbacks.
  closeBroadcastChannel();
}
function callFidChangeCallbacks(key, fid) {
  var callbacks = fidChangeCallbacks.get(key);
  if (!callbacks) {
    return;
  }
  var _iterator = createForOfIteratorHelper_createForOfIteratorHelper(callbacks),
    _step;
  try {
    for (_iterator.s(); !(_step = _iterator.n()).done;) {
      var callback = _step.value;
      callback(fid);
    }
  } catch (err) {
    _iterator.e(err);
  } finally {
    _iterator.f();
  }
}
function broadcastFidChange(key, fid) {
  var channel = getBroadcastChannel();
  if (channel) {
    channel.postMessage({
      key: key,
      fid: fid
    });
  }
  closeBroadcastChannel();
}
var broadcastChannel = null;
/** Opens and returns a BroadcastChannel if it is supported by the browser. */
function getBroadcastChannel() {
  if (!broadcastChannel && 'BroadcastChannel' in self) {
    broadcastChannel = new BroadcastChannel('[Firebase] FID Change');
    broadcastChannel.onmessage = function (e) {
      callFidChangeCallbacks(e.data.key, e.data.fid);
    };
  }
  return broadcastChannel;
}
function closeBroadcastChannel() {
  if (fidChangeCallbacks.size === 0 && broadcastChannel) {
    broadcastChannel.close();
    broadcastChannel = null;
  }
}

/**
 * @license
 * Copyright 2019 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
var DATABASE_NAME = 'firebase-installations-database';
var DATABASE_VERSION = 1;
var OBJECT_STORE_NAME = 'firebase-installations-store';
var index_esm2017_dbPromise = null;
function index_esm2017_getDbPromise() {
  if (!index_esm2017_dbPromise) {
    index_esm2017_dbPromise = build_openDB(DATABASE_NAME, DATABASE_VERSION, {
      upgrade: function upgrade(db, oldVersion) {
        // We don't use 'break' in this switch statement, the fall-through
        // behavior is what we want, because if there are multiple versions between
        // the old version and the current version, we want ALL the migrations
        // that correspond to those versions to run, not only the last one.
        // eslint-disable-next-line default-case
        switch (oldVersion) {
          case 0:
            db.createObjectStore(OBJECT_STORE_NAME);
        }
      }
    });
  }
  return index_esm2017_dbPromise;
}
/** Assigns or overwrites the record for the given key with the given value. */
function index_esm2017_set(_x6, _x7) {
  return _set.apply(this, arguments);
}
/** Removes record(s) from the objectStore that match the given key. */
function _set() {
  _set = asyncToGenerator_asyncToGenerator( /*#__PURE__*/regeneratorRuntime_regeneratorRuntime().mark(function _callee4(appConfig, value) {
    var key, db, tx, objectStore, oldValue;
    return regeneratorRuntime_regeneratorRuntime().wrap(function _callee4$(_context4) {
      while (1) {
        switch (_context4.prev = _context4.next) {
          case 0:
            key = getKey(appConfig);
            _context4.next = 3;
            return index_esm2017_getDbPromise();
          case 3:
            db = _context4.sent;
            tx = db.transaction(OBJECT_STORE_NAME, 'readwrite');
            objectStore = tx.objectStore(OBJECT_STORE_NAME);
            _context4.next = 8;
            return objectStore.get(key);
          case 8:
            oldValue = _context4.sent;
            _context4.next = 11;
            return objectStore.put(value, key);
          case 11:
            _context4.next = 13;
            return tx.done;
          case 13:
            if (!oldValue || oldValue.fid !== value.fid) {
              fidChanged(appConfig, value.fid);
            }
            return _context4.abrupt("return", value);
          case 15:
          case "end":
            return _context4.stop();
        }
      }
    }, _callee4);
  }));
  return _set.apply(this, arguments);
}
function index_esm2017_remove(_x8) {
  return _remove.apply(this, arguments);
}
/**
 * Atomically updates a record with the result of updateFn, which gets
 * called with the current value. If newValue is undefined, the record is
 * deleted instead.
 * @return Updated value
 */
function _remove() {
  _remove = asyncToGenerator_asyncToGenerator( /*#__PURE__*/regeneratorRuntime_regeneratorRuntime().mark(function _callee5(appConfig) {
    var key, db, tx;
    return regeneratorRuntime_regeneratorRuntime().wrap(function _callee5$(_context5) {
      while (1) {
        switch (_context5.prev = _context5.next) {
          case 0:
            key = getKey(appConfig);
            _context5.next = 3;
            return index_esm2017_getDbPromise();
          case 3:
            db = _context5.sent;
            tx = db.transaction(OBJECT_STORE_NAME, 'readwrite');
            _context5.next = 7;
            return tx.objectStore(OBJECT_STORE_NAME).delete(key);
          case 7:
            _context5.next = 9;
            return tx.done;
          case 9:
          case "end":
            return _context5.stop();
        }
      }
    }, _callee5);
  }));
  return _remove.apply(this, arguments);
}
function update(_x9, _x10) {
  return _update.apply(this, arguments);
}
/**
 * @license
 * Copyright 2019 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * Updates and returns the InstallationEntry from the database.
 * Also triggers a registration request if it is necessary and possible.
 */
function _update() {
  _update = asyncToGenerator_asyncToGenerator( /*#__PURE__*/regeneratorRuntime_regeneratorRuntime().mark(function _callee6(appConfig, updateFn) {
    var key, db, tx, store, oldValue, newValue;
    return regeneratorRuntime_regeneratorRuntime().wrap(function _callee6$(_context6) {
      while (1) {
        switch (_context6.prev = _context6.next) {
          case 0:
            key = getKey(appConfig);
            _context6.next = 3;
            return index_esm2017_getDbPromise();
          case 3:
            db = _context6.sent;
            tx = db.transaction(OBJECT_STORE_NAME, 'readwrite');
            store = tx.objectStore(OBJECT_STORE_NAME);
            _context6.next = 8;
            return store.get(key);
          case 8:
            oldValue = _context6.sent;
            newValue = updateFn(oldValue);
            if (!(newValue === undefined)) {
              _context6.next = 15;
              break;
            }
            _context6.next = 13;
            return store.delete(key);
          case 13:
            _context6.next = 17;
            break;
          case 15:
            _context6.next = 17;
            return store.put(newValue, key);
          case 17:
            _context6.next = 19;
            return tx.done;
          case 19:
            if (newValue && (!oldValue || oldValue.fid !== newValue.fid)) {
              fidChanged(appConfig, newValue.fid);
            }
            return _context6.abrupt("return", newValue);
          case 21:
          case "end":
            return _context6.stop();
        }
      }
    }, _callee6);
  }));
  return _update.apply(this, arguments);
}
function getInstallationEntry(_x11) {
  return _getInstallationEntry.apply(this, arguments);
}
/**
 * Creates a new Installation Entry if one does not exist.
 * Also clears timed out pending requests.
 */
function _getInstallationEntry() {
  _getInstallationEntry = asyncToGenerator_asyncToGenerator( /*#__PURE__*/regeneratorRuntime_regeneratorRuntime().mark(function _callee7(installations) {
    var registrationPromise, installationEntry;
    return regeneratorRuntime_regeneratorRuntime().wrap(function _callee7$(_context7) {
      while (1) {
        switch (_context7.prev = _context7.next) {
          case 0:
            _context7.next = 2;
            return update(installations.appConfig, function (oldEntry) {
              var installationEntry = updateOrCreateInstallationEntry(oldEntry);
              var entryWithPromise = triggerRegistrationIfNecessary(installations, installationEntry);
              registrationPromise = entryWithPromise.registrationPromise;
              return entryWithPromise.installationEntry;
            });
          case 2:
            installationEntry = _context7.sent;
            if (!(installationEntry.fid === INVALID_FID)) {
              _context7.next = 8;
              break;
            }
            _context7.next = 6;
            return registrationPromise;
          case 6:
            _context7.t0 = _context7.sent;
            return _context7.abrupt("return", {
              installationEntry: _context7.t0
            });
          case 8:
            return _context7.abrupt("return", {
              installationEntry: installationEntry,
              registrationPromise: registrationPromise
            });
          case 9:
          case "end":
            return _context7.stop();
        }
      }
    }, _callee7);
  }));
  return _getInstallationEntry.apply(this, arguments);
}
function updateOrCreateInstallationEntry(oldEntry) {
  var entry = oldEntry || {
    fid: generateFid(),
    registrationStatus: 0 /* RequestStatus.NOT_STARTED */
  };

  return clearTimedOutRequest(entry);
}
/**
 * If the Firebase Installation is not registered yet, this will trigger the
 * registration and return an InProgressInstallationEntry.
 *
 * If registrationPromise does not exist, the installationEntry is guaranteed
 * to be registered.
 */
function triggerRegistrationIfNecessary(installations, installationEntry) {
  if (installationEntry.registrationStatus === 0 /* RequestStatus.NOT_STARTED */) {
    if (!navigator.onLine) {
      // Registration required but app is offline.
      var registrationPromiseWithError = Promise.reject(index_esm2017_ERROR_FACTORY.create("app-offline" /* ErrorCode.APP_OFFLINE */));
      return {
        installationEntry: installationEntry,
        registrationPromise: registrationPromiseWithError
      };
    }
    // Try registering. Change status to IN_PROGRESS.
    var inProgressEntry = {
      fid: installationEntry.fid,
      registrationStatus: 1 /* RequestStatus.IN_PROGRESS */,
      registrationTime: Date.now()
    };
    var registrationPromise = registerInstallation(installations, inProgressEntry);
    return {
      installationEntry: inProgressEntry,
      registrationPromise: registrationPromise
    };
  } else if (installationEntry.registrationStatus === 1 /* RequestStatus.IN_PROGRESS */) {
    return {
      installationEntry: installationEntry,
      registrationPromise: waitUntilFidRegistration(installations)
    };
  } else {
    return {
      installationEntry: installationEntry
    };
  }
}
/** This will be executed only once for each new Firebase Installation. */
function registerInstallation(_x12, _x13) {
  return _registerInstallation.apply(this, arguments);
}
/** Call if FID registration is pending in another request. */
function _registerInstallation() {
  _registerInstallation = asyncToGenerator_asyncToGenerator( /*#__PURE__*/regeneratorRuntime_regeneratorRuntime().mark(function _callee8(installations, installationEntry) {
    var registeredInstallationEntry;
    return regeneratorRuntime_regeneratorRuntime().wrap(function _callee8$(_context8) {
      while (1) {
        switch (_context8.prev = _context8.next) {
          case 0:
            _context8.prev = 0;
            _context8.next = 3;
            return createInstallationRequest(installations, installationEntry);
          case 3:
            registeredInstallationEntry = _context8.sent;
            return _context8.abrupt("return", index_esm2017_set(installations.appConfig, registeredInstallationEntry));
          case 7:
            _context8.prev = 7;
            _context8.t0 = _context8["catch"](0);
            if (!(isServerError(_context8.t0) && _context8.t0.customData.serverCode === 409)) {
              _context8.next = 14;
              break;
            }
            _context8.next = 12;
            return index_esm2017_remove(installations.appConfig);
          case 12:
            _context8.next = 16;
            break;
          case 14:
            _context8.next = 16;
            return index_esm2017_set(installations.appConfig, {
              fid: installationEntry.fid,
              registrationStatus: 0 /* RequestStatus.NOT_STARTED */
            });
          case 16:
            throw _context8.t0;
          case 17:
          case "end":
            return _context8.stop();
        }
      }
    }, _callee8, null, [[0, 7]]);
  }));
  return _registerInstallation.apply(this, arguments);
}
function waitUntilFidRegistration(_x14) {
  return _waitUntilFidRegistration.apply(this, arguments);
}
/**
 * Called only if there is a CreateInstallation request in progress.
 *
 * Updates the InstallationEntry in the DB based on the status of the
 * CreateInstallation request.
 *
 * Returns the updated InstallationEntry.
 */
function _waitUntilFidRegistration() {
  _waitUntilFidRegistration = asyncToGenerator_asyncToGenerator( /*#__PURE__*/regeneratorRuntime_regeneratorRuntime().mark(function _callee9(installations) {
    var entry, _yield$getInstallatio, installationEntry, registrationPromise;
    return regeneratorRuntime_regeneratorRuntime().wrap(function _callee9$(_context9) {
      while (1) {
        switch (_context9.prev = _context9.next) {
          case 0:
            _context9.next = 2;
            return updateInstallationRequest(installations.appConfig);
          case 2:
            entry = _context9.sent;
          case 3:
            if (!(entry.registrationStatus === 1 /* RequestStatus.IN_PROGRESS */)) {
              _context9.next = 11;
              break;
            }
            _context9.next = 6;
            return sleep(100);
          case 6:
            _context9.next = 8;
            return updateInstallationRequest(installations.appConfig);
          case 8:
            entry = _context9.sent;
            _context9.next = 3;
            break;
          case 11:
            if (!(entry.registrationStatus === 0 /* RequestStatus.NOT_STARTED */)) {
              _context9.next = 22;
              break;
            }
            _context9.next = 14;
            return getInstallationEntry(installations);
          case 14:
            _yield$getInstallatio = _context9.sent;
            installationEntry = _yield$getInstallatio.installationEntry;
            registrationPromise = _yield$getInstallatio.registrationPromise;
            if (!registrationPromise) {
              _context9.next = 21;
              break;
            }
            return _context9.abrupt("return", registrationPromise);
          case 21:
            return _context9.abrupt("return", installationEntry);
          case 22:
            return _context9.abrupt("return", entry);
          case 23:
          case "end":
            return _context9.stop();
        }
      }
    }, _callee9);
  }));
  return _waitUntilFidRegistration.apply(this, arguments);
}
function updateInstallationRequest(appConfig) {
  return update(appConfig, function (oldEntry) {
    if (!oldEntry) {
      throw index_esm2017_ERROR_FACTORY.create("installation-not-found" /* ErrorCode.INSTALLATION_NOT_FOUND */);
    }

    return clearTimedOutRequest(oldEntry);
  });
}
function clearTimedOutRequest(entry) {
  if (hasInstallationRequestTimedOut(entry)) {
    return {
      fid: entry.fid,
      registrationStatus: 0 /* RequestStatus.NOT_STARTED */
    };
  }

  return entry;
}
function hasInstallationRequestTimedOut(installationEntry) {
  return installationEntry.registrationStatus === 1 /* RequestStatus.IN_PROGRESS */ && installationEntry.registrationTime + PENDING_TIMEOUT_MS < Date.now();
}

/**
 * @license
 * Copyright 2019 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
function generateAuthTokenRequest(_x15, _x16) {
  return _generateAuthTokenRequest.apply(this, arguments);
}
function _generateAuthTokenRequest() {
  _generateAuthTokenRequest = asyncToGenerator_asyncToGenerator( /*#__PURE__*/regeneratorRuntime_regeneratorRuntime().mark(function _callee10(_ref6, installationEntry) {
    var appConfig, heartbeatServiceProvider, endpoint, headers, heartbeatService, heartbeatsHeader, body, request, response, responseValue, completedAuthToken;
    return regeneratorRuntime_regeneratorRuntime().wrap(function _callee10$(_context10) {
      while (1) {
        switch (_context10.prev = _context10.next) {
          case 0:
            appConfig = _ref6.appConfig, heartbeatServiceProvider = _ref6.heartbeatServiceProvider;
            endpoint = getGenerateAuthTokenEndpoint(appConfig, installationEntry);
            headers = getHeadersWithAuth(appConfig, installationEntry); // If heartbeat service exists, add the heartbeat string to the header.
            heartbeatService = heartbeatServiceProvider.getImmediate({
              optional: true
            });
            if (!heartbeatService) {
              _context10.next = 9;
              break;
            }
            _context10.next = 7;
            return heartbeatService.getHeartbeatsHeader();
          case 7:
            heartbeatsHeader = _context10.sent;
            if (heartbeatsHeader) {
              headers.append('x-firebase-client', heartbeatsHeader);
            }
          case 9:
            body = {
              installation: {
                sdkVersion: PACKAGE_VERSION,
                appId: appConfig.appId
              }
            };
            request = {
              method: 'POST',
              headers: headers,
              body: JSON.stringify(body)
            };
            _context10.next = 13;
            return retryIfServerError(function () {
              return fetch(endpoint, request);
            });
          case 13:
            response = _context10.sent;
            if (!response.ok) {
              _context10.next = 22;
              break;
            }
            _context10.next = 17;
            return response.json();
          case 17:
            responseValue = _context10.sent;
            completedAuthToken = extractAuthTokenInfoFromResponse(responseValue);
            return _context10.abrupt("return", completedAuthToken);
          case 22:
            _context10.next = 24;
            return getErrorFromResponse('Generate Auth Token', response);
          case 24:
            throw _context10.sent;
          case 25:
          case "end":
            return _context10.stop();
        }
      }
    }, _callee10);
  }));
  return _generateAuthTokenRequest.apply(this, arguments);
}
function getGenerateAuthTokenEndpoint(appConfig, _ref7) {
  var fid = _ref7.fid;
  return "".concat(getInstallationsEndpoint(appConfig), "/").concat(fid, "/authTokens:generate");
}

/**
 * @license
 * Copyright 2019 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * Returns a valid authentication token for the installation. Generates a new
 * token if one doesn't exist, is expired or about to expire.
 *
 * Should only be called if the Firebase Installation is registered.
 */
function refreshAuthToken(_x17) {
  return _refreshAuthToken.apply(this, arguments);
}
/**
 * Call only if FID is registered and Auth Token request is in progress.
 *
 * Waits until the current pending request finishes. If the request times out,
 * tries once in this thread as well.
 */
function _refreshAuthToken() {
  _refreshAuthToken = asyncToGenerator_asyncToGenerator( /*#__PURE__*/regeneratorRuntime_regeneratorRuntime().mark(function _callee11(installations) {
    var forceRefresh,
      tokenPromise,
      entry,
      authToken,
      _args11 = arguments;
    return regeneratorRuntime_regeneratorRuntime().wrap(function _callee11$(_context11) {
      while (1) {
        switch (_context11.prev = _context11.next) {
          case 0:
            forceRefresh = _args11.length > 1 && _args11[1] !== undefined ? _args11[1] : false;
            _context11.next = 3;
            return update(installations.appConfig, function (oldEntry) {
              if (!isEntryRegistered(oldEntry)) {
                throw index_esm2017_ERROR_FACTORY.create("not-registered" /* ErrorCode.NOT_REGISTERED */);
              }

              var oldAuthToken = oldEntry.authToken;
              if (!forceRefresh && isAuthTokenValid(oldAuthToken)) {
                // There is a valid token in the DB.
                return oldEntry;
              } else if (oldAuthToken.requestStatus === 1 /* RequestStatus.IN_PROGRESS */) {
                // There already is a token request in progress.
                tokenPromise = waitUntilAuthTokenRequest(installations, forceRefresh);
                return oldEntry;
              } else {
                // No token or token expired.
                if (!navigator.onLine) {
                  throw index_esm2017_ERROR_FACTORY.create("app-offline" /* ErrorCode.APP_OFFLINE */);
                }

                var inProgressEntry = makeAuthTokenRequestInProgressEntry(oldEntry);
                tokenPromise = fetchAuthTokenFromServer(installations, inProgressEntry);
                return inProgressEntry;
              }
            });
          case 3:
            entry = _context11.sent;
            if (!tokenPromise) {
              _context11.next = 10;
              break;
            }
            _context11.next = 7;
            return tokenPromise;
          case 7:
            _context11.t0 = _context11.sent;
            _context11.next = 11;
            break;
          case 10:
            _context11.t0 = entry.authToken;
          case 11:
            authToken = _context11.t0;
            return _context11.abrupt("return", authToken);
          case 13:
          case "end":
            return _context11.stop();
        }
      }
    }, _callee11);
  }));
  return _refreshAuthToken.apply(this, arguments);
}
function waitUntilAuthTokenRequest(_x18, _x19) {
  return _waitUntilAuthTokenRequest.apply(this, arguments);
}
/**
 * Called only if there is a GenerateAuthToken request in progress.
 *
 * Updates the InstallationEntry in the DB based on the status of the
 * GenerateAuthToken request.
 *
 * Returns the updated InstallationEntry.
 */
function _waitUntilAuthTokenRequest() {
  _waitUntilAuthTokenRequest = asyncToGenerator_asyncToGenerator( /*#__PURE__*/regeneratorRuntime_regeneratorRuntime().mark(function _callee12(installations, forceRefresh) {
    var entry, authToken;
    return regeneratorRuntime_regeneratorRuntime().wrap(function _callee12$(_context12) {
      while (1) {
        switch (_context12.prev = _context12.next) {
          case 0:
            _context12.next = 2;
            return updateAuthTokenRequest(installations.appConfig);
          case 2:
            entry = _context12.sent;
          case 3:
            if (!(entry.authToken.requestStatus === 1 /* RequestStatus.IN_PROGRESS */)) {
              _context12.next = 11;
              break;
            }
            _context12.next = 6;
            return sleep(100);
          case 6:
            _context12.next = 8;
            return updateAuthTokenRequest(installations.appConfig);
          case 8:
            entry = _context12.sent;
            _context12.next = 3;
            break;
          case 11:
            authToken = entry.authToken;
            if (!(authToken.requestStatus === 0 /* RequestStatus.NOT_STARTED */)) {
              _context12.next = 16;
              break;
            }
            return _context12.abrupt("return", refreshAuthToken(installations, forceRefresh));
          case 16:
            return _context12.abrupt("return", authToken);
          case 17:
          case "end":
            return _context12.stop();
        }
      }
    }, _callee12);
  }));
  return _waitUntilAuthTokenRequest.apply(this, arguments);
}
function updateAuthTokenRequest(appConfig) {
  return update(appConfig, function (oldEntry) {
    if (!isEntryRegistered(oldEntry)) {
      throw index_esm2017_ERROR_FACTORY.create("not-registered" /* ErrorCode.NOT_REGISTERED */);
    }

    var oldAuthToken = oldEntry.authToken;
    if (hasAuthTokenRequestTimedOut(oldAuthToken)) {
      return Object.assign(Object.assign({}, oldEntry), {
        authToken: {
          requestStatus: 0 /* RequestStatus.NOT_STARTED */
        }
      });
    }

    return oldEntry;
  });
}
function fetchAuthTokenFromServer(_x20, _x21) {
  return _fetchAuthTokenFromServer.apply(this, arguments);
}
function _fetchAuthTokenFromServer() {
  _fetchAuthTokenFromServer = asyncToGenerator_asyncToGenerator( /*#__PURE__*/regeneratorRuntime_regeneratorRuntime().mark(function _callee13(installations, installationEntry) {
    var authToken, updatedInstallationEntry, _updatedInstallationEntry;
    return regeneratorRuntime_regeneratorRuntime().wrap(function _callee13$(_context13) {
      while (1) {
        switch (_context13.prev = _context13.next) {
          case 0:
            _context13.prev = 0;
            _context13.next = 3;
            return generateAuthTokenRequest(installations, installationEntry);
          case 3:
            authToken = _context13.sent;
            updatedInstallationEntry = Object.assign(Object.assign({}, installationEntry), {
              authToken: authToken
            });
            _context13.next = 7;
            return index_esm2017_set(installations.appConfig, updatedInstallationEntry);
          case 7:
            return _context13.abrupt("return", authToken);
          case 10:
            _context13.prev = 10;
            _context13.t0 = _context13["catch"](0);
            if (!(isServerError(_context13.t0) && (_context13.t0.customData.serverCode === 401 || _context13.t0.customData.serverCode === 404))) {
              _context13.next = 17;
              break;
            }
            _context13.next = 15;
            return index_esm2017_remove(installations.appConfig);
          case 15:
            _context13.next = 20;
            break;
          case 17:
            _updatedInstallationEntry = Object.assign(Object.assign({}, installationEntry), {
              authToken: {
                requestStatus: 0 /* RequestStatus.NOT_STARTED */
              }
            });
            _context13.next = 20;
            return index_esm2017_set(installations.appConfig, _updatedInstallationEntry);
          case 20:
            throw _context13.t0;
          case 21:
          case "end":
            return _context13.stop();
        }
      }
    }, _callee13, null, [[0, 10]]);
  }));
  return _fetchAuthTokenFromServer.apply(this, arguments);
}
function isEntryRegistered(installationEntry) {
  return installationEntry !== undefined && installationEntry.registrationStatus === 2 /* RequestStatus.COMPLETED */;
}

function isAuthTokenValid(authToken) {
  return authToken.requestStatus === 2 /* RequestStatus.COMPLETED */ && !isAuthTokenExpired(authToken);
}
function isAuthTokenExpired(authToken) {
  var now = Date.now();
  return now < authToken.creationTime || authToken.creationTime + authToken.expiresIn < now + TOKEN_EXPIRATION_BUFFER;
}
/** Returns an updated InstallationEntry with an InProgressAuthToken. */
function makeAuthTokenRequestInProgressEntry(oldEntry) {
  var inProgressAuthToken = {
    requestStatus: 1 /* RequestStatus.IN_PROGRESS */,
    requestTime: Date.now()
  };
  return Object.assign(Object.assign({}, oldEntry), {
    authToken: inProgressAuthToken
  });
}
function hasAuthTokenRequestTimedOut(authToken) {
  return authToken.requestStatus === 1 /* RequestStatus.IN_PROGRESS */ && authToken.requestTime + PENDING_TIMEOUT_MS < Date.now();
}

/**
 * @license
 * Copyright 2019 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * Creates a Firebase Installation if there isn't one for the app and
 * returns the Installation ID.
 * @param installations - The `Installations` instance.
 *
 * @public
 */
function _getId2(_x22) {
  return _getId.apply(this, arguments);
}
/**
 * @license
 * Copyright 2019 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * Returns a Firebase Installations auth token, identifying the current
 * Firebase Installation.
 * @param installations - The `Installations` instance.
 * @param forceRefresh - Force refresh regardless of token expiration.
 *
 * @public
 */
function _getId() {
  _getId = asyncToGenerator_asyncToGenerator( /*#__PURE__*/regeneratorRuntime_regeneratorRuntime().mark(function _callee14(installations) {
    var installationsImpl, _yield$getInstallatio2, installationEntry, registrationPromise;
    return regeneratorRuntime_regeneratorRuntime().wrap(function _callee14$(_context14) {
      while (1) {
        switch (_context14.prev = _context14.next) {
          case 0:
            installationsImpl = installations;
            _context14.next = 3;
            return getInstallationEntry(installationsImpl);
          case 3:
            _yield$getInstallatio2 = _context14.sent;
            installationEntry = _yield$getInstallatio2.installationEntry;
            registrationPromise = _yield$getInstallatio2.registrationPromise;
            if (registrationPromise) {
              registrationPromise.catch(console.error);
            } else {
              // If the installation is already registered, update the authentication
              // token if needed.
              refreshAuthToken(installationsImpl).catch(console.error);
            }
            return _context14.abrupt("return", installationEntry.fid);
          case 8:
          case "end":
            return _context14.stop();
        }
      }
    }, _callee14);
  }));
  return _getId.apply(this, arguments);
}
function _getToken2(_x23) {
  return _getToken.apply(this, arguments);
}
function _getToken() {
  _getToken = asyncToGenerator_asyncToGenerator( /*#__PURE__*/regeneratorRuntime_regeneratorRuntime().mark(function _callee15(installations) {
    var forceRefresh,
      installationsImpl,
      authToken,
      _args15 = arguments;
    return regeneratorRuntime_regeneratorRuntime().wrap(function _callee15$(_context15) {
      while (1) {
        switch (_context15.prev = _context15.next) {
          case 0:
            forceRefresh = _args15.length > 1 && _args15[1] !== undefined ? _args15[1] : false;
            installationsImpl = installations;
            _context15.next = 4;
            return completeInstallationRegistration(installationsImpl);
          case 4:
            _context15.next = 6;
            return refreshAuthToken(installationsImpl, forceRefresh);
          case 6:
            authToken = _context15.sent;
            return _context15.abrupt("return", authToken.token);
          case 8:
          case "end":
            return _context15.stop();
        }
      }
    }, _callee15);
  }));
  return _getToken.apply(this, arguments);
}
function completeInstallationRegistration(_x24) {
  return _completeInstallationRegistration.apply(this, arguments);
}
/**
 * @license
 * Copyright 2019 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
function _completeInstallationRegistration() {
  _completeInstallationRegistration = asyncToGenerator_asyncToGenerator( /*#__PURE__*/regeneratorRuntime_regeneratorRuntime().mark(function _callee16(installations) {
    var _yield$getInstallatio3, registrationPromise;
    return regeneratorRuntime_regeneratorRuntime().wrap(function _callee16$(_context16) {
      while (1) {
        switch (_context16.prev = _context16.next) {
          case 0:
            _context16.next = 2;
            return getInstallationEntry(installations);
          case 2:
            _yield$getInstallatio3 = _context16.sent;
            registrationPromise = _yield$getInstallatio3.registrationPromise;
            if (!registrationPromise) {
              _context16.next = 7;
              break;
            }
            _context16.next = 7;
            return registrationPromise;
          case 7:
          case "end":
            return _context16.stop();
        }
      }
    }, _callee16);
  }));
  return _completeInstallationRegistration.apply(this, arguments);
}
function deleteInstallationRequest(_x25, _x26) {
  return _deleteInstallationRequest.apply(this, arguments);
}
function _deleteInstallationRequest() {
  _deleteInstallationRequest = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee17(appConfig, installationEntry) {
    var endpoint, headers, request, response;
    return _regeneratorRuntime().wrap(function _callee17$(_context17) {
      while (1) {
        switch (_context17.prev = _context17.next) {
          case 0:
            endpoint = getDeleteEndpoint(appConfig, installationEntry);
            headers = getHeadersWithAuth(appConfig, installationEntry);
            request = {
              method: 'DELETE',
              headers: headers
            };
            _context17.next = 5;
            return retryIfServerError(function () {
              return fetch(endpoint, request);
            });
          case 5:
            response = _context17.sent;
            if (response.ok) {
              _context17.next = 10;
              break;
            }
            _context17.next = 9;
            return getErrorFromResponse('Delete Installation', response);
          case 9:
            throw _context17.sent;
          case 10:
          case "end":
            return _context17.stop();
        }
      }
    }, _callee17);
  }));
  return _deleteInstallationRequest.apply(this, arguments);
}
function getDeleteEndpoint(appConfig, _ref8) {
  var fid = _ref8.fid;
  return "".concat(getInstallationsEndpoint(appConfig), "/").concat(fid);
}

/**
 * @license
 * Copyright 2019 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * Deletes the Firebase Installation and all associated data.
 * @param installations - The `Installations` instance.
 *
 * @public
 */
function deleteInstallations(_x27) {
  return _deleteInstallations.apply(this, arguments);
}
/**
 * @license
 * Copyright 2019 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * Sets a new callback that will get called when Installation ID changes.
 * Returns an unsubscribe function that will remove the callback when called.
 * @param installations - The `Installations` instance.
 * @param callback - The callback function that is invoked when FID changes.
 * @returns A function that can be called to unsubscribe.
 *
 * @public
 */
function _deleteInstallations() {
  _deleteInstallations = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee18(installations) {
    var appConfig, entry;
    return _regeneratorRuntime().wrap(function _callee18$(_context18) {
      while (1) {
        switch (_context18.prev = _context18.next) {
          case 0:
            appConfig = installations.appConfig;
            _context18.next = 3;
            return update(appConfig, function (oldEntry) {
              if (oldEntry && oldEntry.registrationStatus === 0 /* RequestStatus.NOT_STARTED */) {
                // Delete the unregistered entry without sending a deleteInstallation request.
                return undefined;
              }
              return oldEntry;
            });
          case 3:
            entry = _context18.sent;
            if (!entry) {
              _context18.next = 18;
              break;
            }
            if (!(entry.registrationStatus === 1 /* RequestStatus.IN_PROGRESS */)) {
              _context18.next = 9;
              break;
            }
            throw index_esm2017_ERROR_FACTORY.create("delete-pending-registration" /* ErrorCode.DELETE_PENDING_REGISTRATION */);
          case 9:
            if (!(entry.registrationStatus === 2 /* RequestStatus.COMPLETED */)) {
              _context18.next = 18;
              break;
            }
            if (navigator.onLine) {
              _context18.next = 14;
              break;
            }
            throw index_esm2017_ERROR_FACTORY.create("app-offline" /* ErrorCode.APP_OFFLINE */);
          case 14:
            _context18.next = 16;
            return deleteInstallationRequest(appConfig, entry);
          case 16:
            _context18.next = 18;
            return index_esm2017_remove(appConfig);
          case 18:
          case "end":
            return _context18.stop();
        }
      }
    }, _callee18);
  }));
  return _deleteInstallations.apply(this, arguments);
}
function onIdChange(installations, callback) {
  var appConfig = installations.appConfig;
  addCallback(appConfig, callback);
  return function () {
    removeCallback(appConfig, callback);
  };
}

/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * Returns an instance of {@link Installations} associated with the given
 * {@link @firebase/app#FirebaseApp} instance.
 * @param app - The {@link @firebase/app#FirebaseApp} instance.
 *
 * @public
 */
function getInstallations() {
  var app = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : getApp();
  var installationsImpl = _getProvider(app, 'installations').getImmediate();
  return installationsImpl;
}

/**
 * @license
 * Copyright 2019 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
function extractAppConfig(app) {
  if (!app || !app.options) {
    throw getMissingValueError('App Configuration');
  }
  if (!app.name) {
    throw getMissingValueError('App Name');
  }
  // Required app config keys
  var configKeys = ['projectId', 'apiKey', 'appId'];
  for (var _i = 0, _configKeys = configKeys; _i < _configKeys.length; _i++) {
    var keyName = _configKeys[_i];
    if (!app.options[keyName]) {
      throw getMissingValueError(keyName);
    }
  }
  return {
    appName: app.name,
    projectId: app.options.projectId,
    apiKey: app.options.apiKey,
    appId: app.options.appId
  };
}
function getMissingValueError(valueName) {
  return index_esm2017_ERROR_FACTORY.create("missing-app-config-values" /* ErrorCode.MISSING_APP_CONFIG_VALUES */, {
    valueName: valueName
  });
}

/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
var INSTALLATIONS_NAME = 'installations';
var INSTALLATIONS_NAME_INTERNAL = 'installations-internal';
var publicFactory = function publicFactory(container) {
  var app = container.getProvider('app').getImmediate();
  // Throws if app isn't configured properly.
  var appConfig = extractAppConfig(app);
  var heartbeatServiceProvider = index_esm2017_getProvider(app, 'heartbeat');
  var installationsImpl = {
    app: app,
    appConfig: appConfig,
    heartbeatServiceProvider: heartbeatServiceProvider,
    _delete: function _delete() {
      return Promise.resolve();
    }
  };
  return installationsImpl;
};
var internalFactory = function internalFactory(container) {
  var app = container.getProvider('app').getImmediate();
  // Internal FIS instance relies on public FIS instance.
  var installations = index_esm2017_getProvider(app, INSTALLATIONS_NAME).getImmediate();
  var installationsInternal = {
    getId: function getId() {
      return _getId2(installations);
    },
    getToken: function getToken(forceRefresh) {
      return _getToken2(installations, forceRefresh);
    }
  };
  return installationsInternal;
};
function registerInstallations() {
  _registerComponent(new Component(INSTALLATIONS_NAME, publicFactory, "PUBLIC" /* ComponentType.PUBLIC */));
  _registerComponent(new Component(INSTALLATIONS_NAME_INTERNAL, internalFactory, "PRIVATE" /* ComponentType.PRIVATE */));
}

/**
 * Firebase Installations
 *
 * @packageDocumentation
 */
registerInstallations();
registerVersion(esm_index_esm2017_name, index_esm2017_version);
// BUILD_TARGET will be replaced by values like esm5, esm2017, cjs5, etc during the compilation
registerVersion(esm_index_esm2017_name, index_esm2017_version, 'esm2017');

;// CONCATENATED MODULE: ./node_modules/@firebase/analytics/dist/esm/index.esm2017.js







var index_esm2017_ERRORS;






/**
 * @license
 * Copyright 2019 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * Type constant for Firebase Analytics.
 */
var ANALYTICS_TYPE = 'analytics';
// Key to attach FID to in gtag params.
var GA_FID_KEY = 'firebase_id';
var ORIGIN_KEY = 'origin';
var FETCH_TIMEOUT_MILLIS = 60 * 1000;
var DYNAMIC_CONFIG_URL = 'https://firebase.googleapis.com/v1alpha/projects/-/apps/{app-id}/webConfig';
var GTAG_URL = 'https://www.googletagmanager.com/gtag/js';

/**
 * @license
 * Copyright 2019 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
var index_esm2017_logger = new Logger('@firebase/analytics');

/**
 * @license
 * Copyright 2019 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * Makeshift polyfill for Promise.allSettled(). Resolves when all promises
 * have either resolved or rejected.
 *
 * @param promises Array of promises to wait for.
 */
function promiseAllSettled(promises) {
  return Promise.all(promises.map(function (promise) {
    return promise.catch(function (e) {
      return e;
    });
  }));
}
/**
 * Inserts gtag script tag into the page to asynchronously download gtag.
 * @param dataLayerName Name of datalayer (most often the default, "_dataLayer").
 */
function insertScriptTag(dataLayerName, measurementId) {
  var script = document.createElement('script');
  // We are not providing an analyticsId in the URL because it would trigger a `page_view`
  // without fid. We will initialize ga-id using gtag (config) command together with fid.
  script.src = "".concat(GTAG_URL, "?l=").concat(dataLayerName, "&id=").concat(measurementId);
  script.async = true;
  document.head.appendChild(script);
}
/**
 * Get reference to, or create, global datalayer.
 * @param dataLayerName Name of datalayer (most often the default, "_dataLayer").
 */
function getOrCreateDataLayer(dataLayerName) {
  // Check for existing dataLayer and create if needed.
  var dataLayer = [];
  if (Array.isArray(window[dataLayerName])) {
    dataLayer = window[dataLayerName];
  } else {
    window[dataLayerName] = dataLayer;
  }
  return dataLayer;
}
/**
 * Wrapped gtag logic when gtag is called with 'config' command.
 *
 * @param gtagCore Basic gtag function that just appends to dataLayer.
 * @param initializationPromisesMap Map of appIds to their initialization promises.
 * @param dynamicConfigPromisesList Array of dynamic config fetch promises.
 * @param measurementIdToAppId Map of GA measurementIDs to corresponding Firebase appId.
 * @param measurementId GA Measurement ID to set config for.
 * @param gtagParams Gtag config params to set.
 */
function gtagOnConfig(_x, _x2, _x3, _x4, _x5, _x6) {
  return _gtagOnConfig.apply(this, arguments);
}
/**
 * Wrapped gtag logic when gtag is called with 'event' command.
 *
 * @param gtagCore Basic gtag function that just appends to dataLayer.
 * @param initializationPromisesMap Map of appIds to their initialization promises.
 * @param dynamicConfigPromisesList Array of dynamic config fetch promises.
 * @param measurementId GA Measurement ID to log event to.
 * @param gtagParams Params to log with this event.
 */
function _gtagOnConfig() {
  _gtagOnConfig = asyncToGenerator_asyncToGenerator( /*#__PURE__*/regeneratorRuntime_regeneratorRuntime().mark(function _callee2(gtagCore, initializationPromisesMap, dynamicConfigPromisesList, measurementIdToAppId, measurementId, gtagParams) {
    var correspondingAppId, dynamicConfigResults, foundConfig;
    return regeneratorRuntime_regeneratorRuntime().wrap(function _callee2$(_context2) {
      while (1) {
        switch (_context2.prev = _context2.next) {
          case 0:
            // If config is already fetched, we know the appId and can use it to look up what FID promise we
            /// are waiting for, and wait only on that one.
            correspondingAppId = measurementIdToAppId[measurementId];
            _context2.prev = 1;
            if (!correspondingAppId) {
              _context2.next = 7;
              break;
            }
            _context2.next = 5;
            return initializationPromisesMap[correspondingAppId];
          case 5:
            _context2.next = 14;
            break;
          case 7:
            _context2.next = 9;
            return promiseAllSettled(dynamicConfigPromisesList);
          case 9:
            dynamicConfigResults = _context2.sent;
            foundConfig = dynamicConfigResults.find(function (config) {
              return config.measurementId === measurementId;
            });
            if (!foundConfig) {
              _context2.next = 14;
              break;
            }
            _context2.next = 14;
            return initializationPromisesMap[foundConfig.appId];
          case 14:
            _context2.next = 19;
            break;
          case 16:
            _context2.prev = 16;
            _context2.t0 = _context2["catch"](1);
            index_esm2017_logger.error(_context2.t0);
          case 19:
            gtagCore("config" /* GtagCommand.CONFIG */, measurementId, gtagParams);
          case 20:
          case "end":
            return _context2.stop();
        }
      }
    }, _callee2, null, [[1, 16]]);
  }));
  return _gtagOnConfig.apply(this, arguments);
}
function gtagOnEvent(_x7, _x8, _x9, _x10, _x11) {
  return _gtagOnEvent.apply(this, arguments);
}
/**
 * Wraps a standard gtag function with extra code to wait for completion of
 * relevant initialization promises before sending requests.
 *
 * @param gtagCore Basic gtag function that just appends to dataLayer.
 * @param initializationPromisesMap Map of appIds to their initialization promises.
 * @param dynamicConfigPromisesList Array of dynamic config fetch promises.
 * @param measurementIdToAppId Map of GA measurementIDs to corresponding Firebase appId.
 */
function _gtagOnEvent() {
  _gtagOnEvent = asyncToGenerator_asyncToGenerator( /*#__PURE__*/regeneratorRuntime_regeneratorRuntime().mark(function _callee3(gtagCore, initializationPromisesMap, dynamicConfigPromisesList, measurementId, gtagParams) {
    var initializationPromisesToWaitFor, gaSendToList, dynamicConfigResults, _iterator, _step, _loop, _ret;
    return regeneratorRuntime_regeneratorRuntime().wrap(function _callee3$(_context3) {
      while (1) {
        switch (_context3.prev = _context3.next) {
          case 0:
            _context3.prev = 0;
            initializationPromisesToWaitFor = []; // If there's a 'send_to' param, check if any ID specified matches
            // an initializeIds() promise we are waiting for.
            if (!(gtagParams && gtagParams['send_to'])) {
              _context3.next = 26;
              break;
            }
            gaSendToList = gtagParams['send_to']; // Make it an array if is isn't, so it can be dealt with the same way.
            if (!Array.isArray(gaSendToList)) {
              gaSendToList = [gaSendToList];
            }
            // Checking 'send_to' fields requires having all measurement ID results back from
            // the dynamic config fetch.
            _context3.next = 7;
            return promiseAllSettled(dynamicConfigPromisesList);
          case 7:
            dynamicConfigResults = _context3.sent;
            _iterator = createForOfIteratorHelper_createForOfIteratorHelper(gaSendToList);
            _context3.prev = 9;
            _loop = function _loop() {
              var sendToId = _step.value;
              // Any fetched dynamic measurement ID that matches this 'send_to' ID
              var foundConfig = dynamicConfigResults.find(function (config) {
                return config.measurementId === sendToId;
              });
              var initializationPromise = foundConfig && initializationPromisesMap[foundConfig.appId];
              if (initializationPromise) {
                initializationPromisesToWaitFor.push(initializationPromise);
              } else {
                // Found an item in 'send_to' that is not associated
                // directly with an FID, possibly a group.  Empty this array,
                // exit the loop early, and let it get populated below.
                initializationPromisesToWaitFor = [];
                return "break";
              }
            };
            _iterator.s();
          case 12:
            if ((_step = _iterator.n()).done) {
              _context3.next = 18;
              break;
            }
            _ret = _loop();
            if (!(_ret === "break")) {
              _context3.next = 16;
              break;
            }
            return _context3.abrupt("break", 18);
          case 16:
            _context3.next = 12;
            break;
          case 18:
            _context3.next = 23;
            break;
          case 20:
            _context3.prev = 20;
            _context3.t0 = _context3["catch"](9);
            _iterator.e(_context3.t0);
          case 23:
            _context3.prev = 23;
            _iterator.f();
            return _context3.finish(23);
          case 26:
            // This will be unpopulated if there was no 'send_to' field , or
            // if not all entries in the 'send_to' field could be mapped to
            // a FID. In these cases, wait on all pending initialization promises.
            if (initializationPromisesToWaitFor.length === 0) {
              initializationPromisesToWaitFor = Object.values(initializationPromisesMap);
            }
            // Run core gtag function with args after all relevant initialization
            // promises have been resolved.
            _context3.next = 29;
            return Promise.all(initializationPromisesToWaitFor);
          case 29:
            // Workaround for http://b/141370449 - third argument cannot be undefined.
            gtagCore("event" /* GtagCommand.EVENT */, measurementId, gtagParams || {});
            _context3.next = 35;
            break;
          case 32:
            _context3.prev = 32;
            _context3.t1 = _context3["catch"](0);
            index_esm2017_logger.error(_context3.t1);
          case 35:
          case "end":
            return _context3.stop();
        }
      }
    }, _callee3, null, [[0, 32], [9, 20, 23, 26]]);
  }));
  return _gtagOnEvent.apply(this, arguments);
}
function wrapGtag(gtagCore,
/**
 * Allows wrapped gtag calls to wait on whichever intialization promises are required,
 * depending on the contents of the gtag params' `send_to` field, if any.
 */
initializationPromisesMap,
/**
 * Wrapped gtag calls sometimes require all dynamic config fetches to have returned
 * before determining what initialization promises (which include FIDs) to wait for.
 */
dynamicConfigPromisesList,
/**
 * Wrapped gtag config calls can narrow down which initialization promise (with FID)
 * to wait for if the measurementId is already fetched, by getting the corresponding appId,
 * which is the key for the initialization promises map.
 */
measurementIdToAppId) {
  /**
   * Wrapper around gtag that ensures FID is sent with gtag calls.
   * @param command Gtag command type.
   * @param idOrNameOrParams Measurement ID if command is EVENT/CONFIG, params if command is SET.
   * @param gtagParams Params if event is EVENT/CONFIG.
   */
  function gtagWrapper(_x12, _x13, _x14) {
    return _gtagWrapper.apply(this, arguments);
  }
  function _gtagWrapper() {
    _gtagWrapper = asyncToGenerator_asyncToGenerator( /*#__PURE__*/regeneratorRuntime_regeneratorRuntime().mark(function _callee(command, idOrNameOrParams, gtagParams) {
      return regeneratorRuntime_regeneratorRuntime().wrap(function _callee$(_context) {
        while (1) {
          switch (_context.prev = _context.next) {
            case 0:
              _context.prev = 0;
              if (!(command === "event" /* GtagCommand.EVENT */)) {
                _context.next = 6;
                break;
              }
              _context.next = 4;
              return gtagOnEvent(gtagCore, initializationPromisesMap, dynamicConfigPromisesList, idOrNameOrParams, gtagParams);
            case 4:
              _context.next = 12;
              break;
            case 6:
              if (!(command === "config" /* GtagCommand.CONFIG */)) {
                _context.next = 11;
                break;
              }
              _context.next = 9;
              return gtagOnConfig(gtagCore, initializationPromisesMap, dynamicConfigPromisesList, measurementIdToAppId, idOrNameOrParams, gtagParams);
            case 9:
              _context.next = 12;
              break;
            case 11:
              if (command === "consent" /* GtagCommand.CONSENT */) {
                // If CONFIG, second arg must be measurementId.
                gtagCore("consent" /* GtagCommand.CONSENT */, 'update', gtagParams);
              } else {
                // If SET, second arg must be params.
                gtagCore("set" /* GtagCommand.SET */, idOrNameOrParams);
              }
            case 12:
              _context.next = 17;
              break;
            case 14:
              _context.prev = 14;
              _context.t0 = _context["catch"](0);
              index_esm2017_logger.error(_context.t0);
            case 17:
            case "end":
              return _context.stop();
          }
        }
      }, _callee, null, [[0, 14]]);
    }));
    return _gtagWrapper.apply(this, arguments);
  }
  return gtagWrapper;
}
/**
 * Creates global gtag function or wraps existing one if found.
 * This wrapped function attaches Firebase instance ID (FID) to gtag 'config' and
 * 'event' calls that belong to the GAID associated with this Firebase instance.
 *
 * @param initializationPromisesMap Map of appIds to their initialization promises.
 * @param dynamicConfigPromisesList Array of dynamic config fetch promises.
 * @param measurementIdToAppId Map of GA measurementIDs to corresponding Firebase appId.
 * @param dataLayerName Name of global GA datalayer array.
 * @param gtagFunctionName Name of global gtag function ("gtag" if not user-specified).
 */
function wrapOrCreateGtag(initializationPromisesMap, dynamicConfigPromisesList, measurementIdToAppId, dataLayerName, gtagFunctionName) {
  // Create a basic core gtag function
  var gtagCore = function gtagCore() {
    for (var _len = arguments.length, _args = new Array(_len), _key = 0; _key < _len; _key++) {
      _args[_key] = arguments[_key];
    }
    // Must push IArguments object, not an array.
    window[dataLayerName].push(arguments);
  };
  // Replace it with existing one if found
  if (window[gtagFunctionName] && typeof window[gtagFunctionName] === 'function') {
    // @ts-ignore
    gtagCore = window[gtagFunctionName];
  }
  window[gtagFunctionName] = wrapGtag(gtagCore, initializationPromisesMap, dynamicConfigPromisesList, measurementIdToAppId);
  return {
    gtagCore: gtagCore,
    wrappedGtag: window[gtagFunctionName]
  };
}
/**
 * Returns the script tag in the DOM matching both the gtag url pattern
 * and the provided data layer name.
 */
function findGtagScriptOnPage(dataLayerName) {
  var scriptTags = window.document.getElementsByTagName('script');
  for (var _i = 0, _Object$values = Object.values(scriptTags); _i < _Object$values.length; _i++) {
    var tag = _Object$values[_i];
    if (tag.src && tag.src.includes(GTAG_URL) && tag.src.includes(dataLayerName)) {
      return tag;
    }
  }
  return null;
}

/**
 * @license
 * Copyright 2019 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
var esm_index_esm2017_ERRORS = (index_esm2017_ERRORS = {}, (0,esm_defineProperty/* default */.Z)(index_esm2017_ERRORS, "already-exists" /* AnalyticsError.ALREADY_EXISTS */, 'A Firebase Analytics instance with the appId {$id} ' + ' already exists. ' + 'Only one Firebase Analytics instance can be created for each appId.'), (0,esm_defineProperty/* default */.Z)(index_esm2017_ERRORS, "already-initialized" /* AnalyticsError.ALREADY_INITIALIZED */, 'initializeAnalytics() cannot be called again with different options than those ' + 'it was initially called with. It can be called again with the same options to ' + 'return the existing instance, or getAnalytics() can be used ' + 'to get a reference to the already-intialized instance.'), (0,esm_defineProperty/* default */.Z)(index_esm2017_ERRORS, "already-initialized-settings" /* AnalyticsError.ALREADY_INITIALIZED_SETTINGS */, 'Firebase Analytics has already been initialized.' + 'settings() must be called before initializing any Analytics instance' + 'or it will have no effect.'), (0,esm_defineProperty/* default */.Z)(index_esm2017_ERRORS, "interop-component-reg-failed" /* AnalyticsError.INTEROP_COMPONENT_REG_FAILED */, 'Firebase Analytics Interop Component failed to instantiate: {$reason}'), (0,esm_defineProperty/* default */.Z)(index_esm2017_ERRORS, "invalid-analytics-context" /* AnalyticsError.INVALID_ANALYTICS_CONTEXT */, 'Firebase Analytics is not supported in this environment. ' + 'Wrap initialization of analytics in analytics.isSupported() ' + 'to prevent initialization in unsupported environments. Details: {$errorInfo}'), (0,esm_defineProperty/* default */.Z)(index_esm2017_ERRORS, "indexeddb-unavailable" /* AnalyticsError.INDEXEDDB_UNAVAILABLE */, 'IndexedDB unavailable or restricted in this environment. ' + 'Wrap initialization of analytics in analytics.isSupported() ' + 'to prevent initialization in unsupported environments. Details: {$errorInfo}'), (0,esm_defineProperty/* default */.Z)(index_esm2017_ERRORS, "fetch-throttle" /* AnalyticsError.FETCH_THROTTLE */, 'The config fetch request timed out while in an exponential backoff state.' + ' Unix timestamp in milliseconds when fetch request throttling ends: {$throttleEndTimeMillis}.'), (0,esm_defineProperty/* default */.Z)(index_esm2017_ERRORS, "config-fetch-failed" /* AnalyticsError.CONFIG_FETCH_FAILED */, 'Dynamic config fetch failed: [{$httpStatus}] {$responseMessage}'), (0,esm_defineProperty/* default */.Z)(index_esm2017_ERRORS, "no-api-key" /* AnalyticsError.NO_API_KEY */, 'The "apiKey" field is empty in the local Firebase config. Firebase Analytics requires this field to' + 'contain a valid API key.'), (0,esm_defineProperty/* default */.Z)(index_esm2017_ERRORS, "no-app-id" /* AnalyticsError.NO_APP_ID */, 'The "appId" field is empty in the local Firebase config. Firebase Analytics requires this field to' + 'contain a valid app ID.'), index_esm2017_ERRORS);
var esm_index_esm2017_ERROR_FACTORY = new ErrorFactory('analytics', 'Analytics', esm_index_esm2017_ERRORS);

/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * Backoff factor for 503 errors, which we want to be conservative about
 * to avoid overloading servers. Each retry interval will be
 * BASE_INTERVAL_MILLIS * LONG_RETRY_FACTOR ^ retryCount, so the second one
 * will be ~30 seconds (with fuzzing).
 */
var LONG_RETRY_FACTOR = 30;
/**
 * Base wait interval to multiplied by backoffFactor^backoffCount.
 */
var BASE_INTERVAL_MILLIS = 1000;
/**
 * Stubbable retry data storage class.
 */
var RetryData = /*#__PURE__*/function () {
  function RetryData() {
    var throttleMetadata = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
    var intervalMillis = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : BASE_INTERVAL_MILLIS;
    classCallCheck_classCallCheck(this, RetryData);
    this.throttleMetadata = throttleMetadata;
    this.intervalMillis = intervalMillis;
  }
  createClass_createClass(RetryData, [{
    key: "getThrottleMetadata",
    value: function getThrottleMetadata(appId) {
      return this.throttleMetadata[appId];
    }
  }, {
    key: "setThrottleMetadata",
    value: function setThrottleMetadata(appId, metadata) {
      this.throttleMetadata[appId] = metadata;
    }
  }, {
    key: "deleteThrottleMetadata",
    value: function deleteThrottleMetadata(appId) {
      delete this.throttleMetadata[appId];
    }
  }]);
  return RetryData;
}();
var defaultRetryData = new RetryData();
/**
 * Set GET request headers.
 * @param apiKey App API key.
 */
function index_esm2017_getHeaders(apiKey) {
  return new Headers({
    Accept: 'application/json',
    'x-goog-api-key': apiKey
  });
}
/**
 * Fetches dynamic config from backend.
 * @param app Firebase app to fetch config for.
 */
function fetchDynamicConfig(_x15) {
  return _fetchDynamicConfig.apply(this, arguments);
}
/**
 * Fetches dynamic config from backend, retrying if failed.
 * @param app Firebase app to fetch config for.
 */
function _fetchDynamicConfig() {
  _fetchDynamicConfig = asyncToGenerator_asyncToGenerator( /*#__PURE__*/regeneratorRuntime_regeneratorRuntime().mark(function _callee4(appFields) {
    var _a, appId, apiKey, request, appUrl, response, errorMessage, jsonResponse;
    return regeneratorRuntime_regeneratorRuntime().wrap(function _callee4$(_context4) {
      while (1) {
        switch (_context4.prev = _context4.next) {
          case 0:
            appId = appFields.appId, apiKey = appFields.apiKey;
            request = {
              method: 'GET',
              headers: index_esm2017_getHeaders(apiKey)
            };
            appUrl = DYNAMIC_CONFIG_URL.replace('{app-id}', appId);
            _context4.next = 5;
            return fetch(appUrl, request);
          case 5:
            response = _context4.sent;
            if (!(response.status !== 200 && response.status !== 304)) {
              _context4.next = 18;
              break;
            }
            errorMessage = '';
            _context4.prev = 8;
            _context4.next = 11;
            return response.json();
          case 11:
            jsonResponse = _context4.sent;
            if ((_a = jsonResponse.error) === null || _a === void 0 ? void 0 : _a.message) {
              errorMessage = jsonResponse.error.message;
            }
            _context4.next = 17;
            break;
          case 15:
            _context4.prev = 15;
            _context4.t0 = _context4["catch"](8);
          case 17:
            throw esm_index_esm2017_ERROR_FACTORY.create("config-fetch-failed" /* AnalyticsError.CONFIG_FETCH_FAILED */, {
              httpStatus: response.status,
              responseMessage: errorMessage
            });
          case 18:
            return _context4.abrupt("return", response.json());
          case 19:
          case "end":
            return _context4.stop();
        }
      }
    }, _callee4, null, [[8, 15]]);
  }));
  return _fetchDynamicConfig.apply(this, arguments);
}
function fetchDynamicConfigWithRetry(_x16) {
  return _fetchDynamicConfigWithRetry.apply(this, arguments);
}
/**
 * Runs one retry attempt.
 * @param appFields Necessary app config fields.
 * @param throttleMetadata Ongoing metadata to determine throttling times.
 * @param signal Abort signal.
 */
function _fetchDynamicConfigWithRetry() {
  _fetchDynamicConfigWithRetry = asyncToGenerator_asyncToGenerator( /*#__PURE__*/regeneratorRuntime_regeneratorRuntime().mark(function _callee6(app) {
    var retryData,
      timeoutMillis,
      _app$options,
      appId,
      apiKey,
      measurementId,
      throttleMetadata,
      signal,
      _args7 = arguments;
    return regeneratorRuntime_regeneratorRuntime().wrap(function _callee6$(_context6) {
      while (1) {
        switch (_context6.prev = _context6.next) {
          case 0:
            retryData = _args7.length > 1 && _args7[1] !== undefined ? _args7[1] : defaultRetryData;
            timeoutMillis = _args7.length > 2 ? _args7[2] : undefined;
            _app$options = app.options, appId = _app$options.appId, apiKey = _app$options.apiKey, measurementId = _app$options.measurementId;
            if (appId) {
              _context6.next = 5;
              break;
            }
            throw esm_index_esm2017_ERROR_FACTORY.create("no-app-id" /* AnalyticsError.NO_APP_ID */);
          case 5:
            if (apiKey) {
              _context6.next = 9;
              break;
            }
            if (!measurementId) {
              _context6.next = 8;
              break;
            }
            return _context6.abrupt("return", {
              measurementId: measurementId,
              appId: appId
            });
          case 8:
            throw esm_index_esm2017_ERROR_FACTORY.create("no-api-key" /* AnalyticsError.NO_API_KEY */);
          case 9:
            throttleMetadata = retryData.getThrottleMetadata(appId) || {
              backoffCount: 0,
              throttleEndTimeMillis: Date.now()
            };
            signal = new AnalyticsAbortSignal();
            setTimeout( /*#__PURE__*/asyncToGenerator_asyncToGenerator( /*#__PURE__*/regeneratorRuntime_regeneratorRuntime().mark(function _callee5() {
              return regeneratorRuntime_regeneratorRuntime().wrap(function _callee5$(_context5) {
                while (1) {
                  switch (_context5.prev = _context5.next) {
                    case 0:
                      // Note a very low delay, eg < 10ms, can elapse before listeners are initialized.
                      signal.abort();
                    case 1:
                    case "end":
                      return _context5.stop();
                  }
                }
              }, _callee5);
            })), timeoutMillis !== undefined ? timeoutMillis : FETCH_TIMEOUT_MILLIS);
            return _context6.abrupt("return", attemptFetchDynamicConfigWithRetry({
              appId: appId,
              apiKey: apiKey,
              measurementId: measurementId
            }, throttleMetadata, signal, retryData));
          case 13:
          case "end":
            return _context6.stop();
        }
      }
    }, _callee6);
  }));
  return _fetchDynamicConfigWithRetry.apply(this, arguments);
}
function attemptFetchDynamicConfigWithRetry(_x17, _x18, _x19) {
  return _attemptFetchDynamicConfigWithRetry.apply(this, arguments);
}
/**
 * Supports waiting on a backoff by:
 *
 * <ul>
 *   <li>Promisifying setTimeout, so we can set a timeout in our Promise chain</li>
 *   <li>Listening on a signal bus for abort events, just like the Fetch API</li>
 *   <li>Failing in the same way the Fetch API fails, so timing out a live request and a throttled
 *       request appear the same.</li>
 * </ul>
 *
 * <p>Visible for testing.
 */
function _attemptFetchDynamicConfigWithRetry() {
  _attemptFetchDynamicConfigWithRetry = asyncToGenerator_asyncToGenerator( /*#__PURE__*/regeneratorRuntime_regeneratorRuntime().mark(function _callee7(appFields, _ref, signal) {
    var throttleEndTimeMillis,
      backoffCount,
      retryData,
      _a,
      appId,
      measurementId,
      response,
      error,
      backoffMillis,
      throttleMetadata,
      _args8 = arguments;
    return regeneratorRuntime_regeneratorRuntime().wrap(function _callee7$(_context7) {
      while (1) {
        switch (_context7.prev = _context7.next) {
          case 0:
            throttleEndTimeMillis = _ref.throttleEndTimeMillis, backoffCount = _ref.backoffCount;
            retryData = _args8.length > 3 && _args8[3] !== undefined ? _args8[3] : defaultRetryData;
            appId = appFields.appId, measurementId = appFields.measurementId; // Starts with a (potentially zero) timeout to support resumption from stored state.
            // Ensures the throttle end time is honored if the last attempt timed out.
            // Note the SDK will never make a request if the fetch timeout expires at this point.
            _context7.prev = 3;
            _context7.next = 6;
            return setAbortableTimeout(signal, throttleEndTimeMillis);
          case 6:
            _context7.next = 14;
            break;
          case 8:
            _context7.prev = 8;
            _context7.t0 = _context7["catch"](3);
            if (!measurementId) {
              _context7.next = 13;
              break;
            }
            index_esm2017_logger.warn("Timed out fetching this Firebase app's measurement ID from the server." + " Falling back to the measurement ID ".concat(measurementId) + " provided in the \"measurementId\" field in the local Firebase config. [".concat(_context7.t0 === null || _context7.t0 === void 0 ? void 0 : _context7.t0.message, "]"));
            return _context7.abrupt("return", {
              appId: appId,
              measurementId: measurementId
            });
          case 13:
            throw _context7.t0;
          case 14:
            _context7.prev = 14;
            _context7.next = 17;
            return fetchDynamicConfig(appFields);
          case 17:
            response = _context7.sent;
            // Note the SDK only clears throttle state if response is success or non-retriable.
            retryData.deleteThrottleMetadata(appId);
            return _context7.abrupt("return", response);
          case 22:
            _context7.prev = 22;
            _context7.t1 = _context7["catch"](14);
            error = _context7.t1;
            if (isRetriableError(error)) {
              _context7.next = 33;
              break;
            }
            retryData.deleteThrottleMetadata(appId);
            if (!measurementId) {
              _context7.next = 32;
              break;
            }
            index_esm2017_logger.warn("Failed to fetch this Firebase app's measurement ID from the server." + " Falling back to the measurement ID ".concat(measurementId) + " provided in the \"measurementId\" field in the local Firebase config. [".concat(error === null || error === void 0 ? void 0 : error.message, "]"));
            return _context7.abrupt("return", {
              appId: appId,
              measurementId: measurementId
            });
          case 32:
            throw _context7.t1;
          case 33:
            backoffMillis = Number((_a = error === null || error === void 0 ? void 0 : error.customData) === null || _a === void 0 ? void 0 : _a.httpStatus) === 503 ? calculateBackoffMillis(backoffCount, retryData.intervalMillis, LONG_RETRY_FACTOR) : calculateBackoffMillis(backoffCount, retryData.intervalMillis); // Increments backoff state.
            throttleMetadata = {
              throttleEndTimeMillis: Date.now() + backoffMillis,
              backoffCount: backoffCount + 1
            }; // Persists state.
            retryData.setThrottleMetadata(appId, throttleMetadata);
            index_esm2017_logger.debug("Calling attemptFetch again in ".concat(backoffMillis, " millis"));
            return _context7.abrupt("return", attemptFetchDynamicConfigWithRetry(appFields, throttleMetadata, signal, retryData));
          case 38:
          case "end":
            return _context7.stop();
        }
      }
    }, _callee7, null, [[3, 8], [14, 22]]);
  }));
  return _attemptFetchDynamicConfigWithRetry.apply(this, arguments);
}
function setAbortableTimeout(signal, throttleEndTimeMillis) {
  return new Promise(function (resolve, reject) {
    // Derives backoff from given end time, normalizing negative numbers to zero.
    var backoffMillis = Math.max(throttleEndTimeMillis - Date.now(), 0);
    var timeout = setTimeout(resolve, backoffMillis);
    // Adds listener, rather than sets onabort, because signal is a shared object.
    signal.addEventListener(function () {
      clearTimeout(timeout);
      // If the request completes before this timeout, the rejection has no effect.
      reject(esm_index_esm2017_ERROR_FACTORY.create("fetch-throttle" /* AnalyticsError.FETCH_THROTTLE */, {
        throttleEndTimeMillis: throttleEndTimeMillis
      }));
    });
  });
}
/**
 * Returns true if the {@link Error} indicates a fetch request may succeed later.
 */
function isRetriableError(e) {
  if (!(e instanceof FirebaseError) || !e.customData) {
    return false;
  }
  // Uses string index defined by ErrorData, which FirebaseError implements.
  var httpStatus = Number(e.customData['httpStatus']);
  return httpStatus === 429 || httpStatus === 500 || httpStatus === 503 || httpStatus === 504;
}
/**
 * Shims a minimal AbortSignal (copied from Remote Config).
 *
 * <p>AbortController's AbortSignal conveniently decouples fetch timeout logic from other aspects
 * of networking, such as retries. Firebase doesn't use AbortController enough to justify a
 * polyfill recommendation, like we do with the Fetch API, but this minimal shim can easily be
 * swapped out if/when we do.
 */
var AnalyticsAbortSignal = /*#__PURE__*/function () {
  function AnalyticsAbortSignal() {
    classCallCheck_classCallCheck(this, AnalyticsAbortSignal);
    this.listeners = [];
  }
  createClass_createClass(AnalyticsAbortSignal, [{
    key: "addEventListener",
    value: function addEventListener(listener) {
      this.listeners.push(listener);
    }
  }, {
    key: "abort",
    value: function abort() {
      this.listeners.forEach(function (listener) {
        return listener();
      });
    }
  }]);
  return AnalyticsAbortSignal;
}();
/**
 * @license
 * Copyright 2019 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * Event parameters to set on 'gtag' during initialization.
 */
var defaultEventParametersForInit;
/**
 * Logs an analytics event through the Firebase SDK.
 *
 * @param gtagFunction Wrapped gtag function that waits for fid to be set before sending an event
 * @param eventName Google Analytics event name, choose from standard list or use a custom string.
 * @param eventParams Analytics event parameters.
 */
function logEvent$1(_x20, _x21, _x22, _x23, _x24) {
  return _logEvent$.apply(this, arguments);
}
/**
 * Set screen_name parameter for this Google Analytics ID.
 *
 * @deprecated Use {@link logEvent} with `eventName` as 'screen_view' and add relevant `eventParams`.
 * See {@link https://firebase.google.com/docs/analytics/screenviews | Track Screenviews}.
 *
 * @param gtagFunction Wrapped gtag function that waits for fid to be set before sending an event
 * @param screenName Screen name string to set.
 */
function _logEvent$() {
  _logEvent$ = asyncToGenerator_asyncToGenerator( /*#__PURE__*/regeneratorRuntime_regeneratorRuntime().mark(function _callee8(gtagFunction, initializationPromise, eventName, eventParams, options) {
    var measurementId, params;
    return regeneratorRuntime_regeneratorRuntime().wrap(function _callee8$(_context8) {
      while (1) {
        switch (_context8.prev = _context8.next) {
          case 0:
            if (!(options && options.global)) {
              _context8.next = 5;
              break;
            }
            gtagFunction("event" /* GtagCommand.EVENT */, eventName, eventParams);
            return _context8.abrupt("return");
          case 5:
            _context8.next = 7;
            return initializationPromise;
          case 7:
            measurementId = _context8.sent;
            params = Object.assign(Object.assign({}, eventParams), {
              'send_to': measurementId
            });
            gtagFunction("event" /* GtagCommand.EVENT */, eventName, params);
          case 10:
          case "end":
            return _context8.stop();
        }
      }
    }, _callee8);
  }));
  return _logEvent$.apply(this, arguments);
}
function setCurrentScreen$1(_x25, _x26, _x27, _x28) {
  return _setCurrentScreen$.apply(this, arguments);
}
/**
 * Set user_id parameter for this Google Analytics ID.
 *
 * @param gtagFunction Wrapped gtag function that waits for fid to be set before sending an event
 * @param id User ID string to set
 */
function _setCurrentScreen$() {
  _setCurrentScreen$ = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee9(gtagFunction, initializationPromise, screenName, options) {
    var measurementId;
    return _regeneratorRuntime().wrap(function _callee9$(_context9) {
      while (1) {
        switch (_context9.prev = _context9.next) {
          case 0:
            if (!(options && options.global)) {
              _context9.next = 5;
              break;
            }
            gtagFunction("set" /* GtagCommand.SET */, {
              'screen_name': screenName
            });
            return _context9.abrupt("return", Promise.resolve());
          case 5:
            _context9.next = 7;
            return initializationPromise;
          case 7:
            measurementId = _context9.sent;
            gtagFunction("config" /* GtagCommand.CONFIG */, measurementId, {
              update: true,
              'screen_name': screenName
            });
          case 9:
          case "end":
            return _context9.stop();
        }
      }
    }, _callee9);
  }));
  return _setCurrentScreen$.apply(this, arguments);
}
function setUserId$1(_x29, _x30, _x31, _x32) {
  return _setUserId$.apply(this, arguments);
}
/**
 * Set all other user properties other than user_id and screen_name.
 *
 * @param gtagFunction Wrapped gtag function that waits for fid to be set before sending an event
 * @param properties Map of user properties to set
 */
function _setUserId$() {
  _setUserId$ = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee10(gtagFunction, initializationPromise, id, options) {
    var measurementId;
    return _regeneratorRuntime().wrap(function _callee10$(_context10) {
      while (1) {
        switch (_context10.prev = _context10.next) {
          case 0:
            if (!(options && options.global)) {
              _context10.next = 5;
              break;
            }
            gtagFunction("set" /* GtagCommand.SET */, {
              'user_id': id
            });
            return _context10.abrupt("return", Promise.resolve());
          case 5:
            _context10.next = 7;
            return initializationPromise;
          case 7:
            measurementId = _context10.sent;
            gtagFunction("config" /* GtagCommand.CONFIG */, measurementId, {
              update: true,
              'user_id': id
            });
          case 9:
          case "end":
            return _context10.stop();
        }
      }
    }, _callee10);
  }));
  return _setUserId$.apply(this, arguments);
}
function setUserProperties$1(_x33, _x34, _x35, _x36) {
  return _setUserProperties$.apply(this, arguments);
}
/**
 * Set whether collection is enabled for this ID.
 *
 * @param enabled If true, collection is enabled for this ID.
 */
function _setUserProperties$() {
  _setUserProperties$ = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee11(gtagFunction, initializationPromise, properties, options) {
    var flatProperties, _i2, _Object$keys, key, measurementId;
    return _regeneratorRuntime().wrap(function _callee11$(_context11) {
      while (1) {
        switch (_context11.prev = _context11.next) {
          case 0:
            if (!(options && options.global)) {
              _context11.next = 7;
              break;
            }
            flatProperties = {};
            for (_i2 = 0, _Object$keys = Object.keys(properties); _i2 < _Object$keys.length; _i2++) {
              key = _Object$keys[_i2];
              // use dot notation for merge behavior in gtag.js
              flatProperties["user_properties.".concat(key)] = properties[key];
            }
            gtagFunction("set" /* GtagCommand.SET */, flatProperties);
            return _context11.abrupt("return", Promise.resolve());
          case 7:
            _context11.next = 9;
            return initializationPromise;
          case 9:
            measurementId = _context11.sent;
            gtagFunction("config" /* GtagCommand.CONFIG */, measurementId, {
              update: true,
              'user_properties': properties
            });
          case 11:
          case "end":
            return _context11.stop();
        }
      }
    }, _callee11);
  }));
  return _setUserProperties$.apply(this, arguments);
}
function setAnalyticsCollectionEnabled$1(_x37, _x38) {
  return _setAnalyticsCollectionEnabled$.apply(this, arguments);
}
/**
 * Consent parameters to default to during 'gtag' initialization.
 */
function _setAnalyticsCollectionEnabled$() {
  _setAnalyticsCollectionEnabled$ = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee12(initializationPromise, enabled) {
    var measurementId;
    return _regeneratorRuntime().wrap(function _callee12$(_context12) {
      while (1) {
        switch (_context12.prev = _context12.next) {
          case 0:
            _context12.next = 2;
            return initializationPromise;
          case 2:
            measurementId = _context12.sent;
            window["ga-disable-".concat(measurementId)] = !enabled;
          case 4:
          case "end":
            return _context12.stop();
        }
      }
    }, _callee12);
  }));
  return _setAnalyticsCollectionEnabled$.apply(this, arguments);
}
var defaultConsentSettingsForInit;
/**
 * Sets the variable {@link defaultConsentSettingsForInit} for use in the initialization of
 * analytics.
 *
 * @param consentSettings Maps the applicable end user consent state for gtag.js.
 */
function _setConsentDefaultForInit(consentSettings) {
  defaultConsentSettingsForInit = consentSettings;
}
/**
 * Sets the variable `defaultEventParametersForInit` for use in the initialization of
 * analytics.
 *
 * @param customParams Any custom params the user may pass to gtag.js.
 */
function _setDefaultEventParametersForInit(customParams) {
  defaultEventParametersForInit = customParams;
}

/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
function validateIndexedDB() {
  return _validateIndexedDB.apply(this, arguments);
}
/**
 * Initialize the analytics instance in gtag.js by calling config command with fid.
 *
 * NOTE: We combine analytics initialization and setting fid together because we want fid to be
 * part of the `page_view` event that's sent during the initialization
 * @param app Firebase app
 * @param gtagCore The gtag function that's not wrapped.
 * @param dynamicConfigPromisesList Array of all dynamic config promises.
 * @param measurementIdToAppId Maps measurementID to appID.
 * @param installations _FirebaseInstallationsInternal instance.
 *
 * @returns Measurement ID.
 */
function _validateIndexedDB() {
  _validateIndexedDB = asyncToGenerator_asyncToGenerator( /*#__PURE__*/regeneratorRuntime_regeneratorRuntime().mark(function _callee13() {
    return regeneratorRuntime_regeneratorRuntime().wrap(function _callee13$(_context13) {
      while (1) {
        switch (_context13.prev = _context13.next) {
          case 0:
            if (index_esm2017_isIndexedDBAvailable()) {
              _context13.next = 5;
              break;
            }
            index_esm2017_logger.warn(esm_index_esm2017_ERROR_FACTORY.create("indexeddb-unavailable" /* AnalyticsError.INDEXEDDB_UNAVAILABLE */, {
              errorInfo: 'IndexedDB is not available in this environment.'
            }).message);
            return _context13.abrupt("return", false);
          case 5:
            _context13.prev = 5;
            _context13.next = 8;
            return index_esm2017_validateIndexedDBOpenable();
          case 8:
            _context13.next = 14;
            break;
          case 10:
            _context13.prev = 10;
            _context13.t0 = _context13["catch"](5);
            index_esm2017_logger.warn(esm_index_esm2017_ERROR_FACTORY.create("indexeddb-unavailable" /* AnalyticsError.INDEXEDDB_UNAVAILABLE */, {
              errorInfo: _context13.t0 === null || _context13.t0 === void 0 ? void 0 : _context13.t0.toString()
            }).message);
            return _context13.abrupt("return", false);
          case 14:
            return _context13.abrupt("return", true);
          case 15:
          case "end":
            return _context13.stop();
        }
      }
    }, _callee13, null, [[5, 10]]);
  }));
  return _validateIndexedDB.apply(this, arguments);
}
function _initializeAnalytics(_x39, _x40, _x41, _x42, _x43, _x44, _x45) {
  return _initializeAnalytics2.apply(this, arguments);
}
/**
 * @license
 * Copyright 2019 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * Analytics Service class.
 */
function _initializeAnalytics2() {
  _initializeAnalytics2 = asyncToGenerator_asyncToGenerator( /*#__PURE__*/regeneratorRuntime_regeneratorRuntime().mark(function _callee14(app, dynamicConfigPromisesList, measurementIdToAppId, installations, gtagCore, dataLayerName, options) {
    var _a, dynamicConfigPromise, fidPromise, _yield$Promise$all, _yield$Promise$all2, dynamicConfig, fid, configProperties;
    return regeneratorRuntime_regeneratorRuntime().wrap(function _callee14$(_context14) {
      while (1) {
        switch (_context14.prev = _context14.next) {
          case 0:
            dynamicConfigPromise = fetchDynamicConfigWithRetry(app); // Once fetched, map measurementIds to appId, for ease of lookup in wrapped gtag function.
            dynamicConfigPromise.then(function (config) {
              measurementIdToAppId[config.measurementId] = config.appId;
              if (app.options.measurementId && config.measurementId !== app.options.measurementId) {
                index_esm2017_logger.warn("The measurement ID in the local Firebase config (".concat(app.options.measurementId, ")") + " does not match the measurement ID fetched from the server (".concat(config.measurementId, ").") + " To ensure analytics events are always sent to the correct Analytics property," + " update the" + " measurement ID field in the local config or remove it from the local config.");
              }
            }).catch(function (e) {
              return index_esm2017_logger.error(e);
            });
            // Add to list to track state of all dynamic config promises.
            dynamicConfigPromisesList.push(dynamicConfigPromise);
            fidPromise = validateIndexedDB().then(function (envIsValid) {
              if (envIsValid) {
                return installations.getId();
              } else {
                return undefined;
              }
            });
            _context14.next = 6;
            return Promise.all([dynamicConfigPromise, fidPromise]);
          case 6:
            _yield$Promise$all = _context14.sent;
            _yield$Promise$all2 = (0,slicedToArray/* default */.Z)(_yield$Promise$all, 2);
            dynamicConfig = _yield$Promise$all2[0];
            fid = _yield$Promise$all2[1];
            // Detect if user has already put the gtag <script> tag on this page with the passed in
            // data layer name.
            if (!findGtagScriptOnPage(dataLayerName)) {
              insertScriptTag(dataLayerName, dynamicConfig.measurementId);
            }
            // Detects if there are consent settings that need to be configured.
            if (defaultConsentSettingsForInit) {
              gtagCore("consent" /* GtagCommand.CONSENT */, 'default', defaultConsentSettingsForInit);
              _setConsentDefaultForInit(undefined);
            }
            // This command initializes gtag.js and only needs to be called once for the entire web app,
            // but since it is idempotent, we can call it multiple times.
            // We keep it together with other initialization logic for better code structure.
            // eslint-disable-next-line @typescript-eslint/no-explicit-any
            gtagCore('js', new Date());
            // User config added first. We don't want users to accidentally overwrite
            // base Firebase config properties.
            configProperties = (_a = options === null || options === void 0 ? void 0 : options.config) !== null && _a !== void 0 ? _a : {}; // guard against developers accidentally setting properties with prefix `firebase_`
            configProperties[ORIGIN_KEY] = 'firebase';
            configProperties.update = true;
            if (fid != null) {
              configProperties[GA_FID_KEY] = fid;
            }
            // It should be the first config command called on this GA-ID
            // Initialize this GA-ID and set FID on it using the gtag config API.
            // Note: This will trigger a page_view event unless 'send_page_view' is set to false in
            // `configProperties`.
            gtagCore("config" /* GtagCommand.CONFIG */, dynamicConfig.measurementId, configProperties);
            // Detects if there is data that will be set on every event logged from the SDK.
            if (defaultEventParametersForInit) {
              gtagCore("set" /* GtagCommand.SET */, defaultEventParametersForInit);
              _setDefaultEventParametersForInit(undefined);
            }
            return _context14.abrupt("return", dynamicConfig.measurementId);
          case 20:
          case "end":
            return _context14.stop();
        }
      }
    }, _callee14);
  }));
  return _initializeAnalytics2.apply(this, arguments);
}
var AnalyticsService = /*#__PURE__*/function () {
  function AnalyticsService(app) {
    classCallCheck_classCallCheck(this, AnalyticsService);
    this.app = app;
  }
  createClass_createClass(AnalyticsService, [{
    key: "_delete",
    value: function _delete() {
      delete initializationPromisesMap[this.app.options.appId];
      return Promise.resolve();
    }
  }]);
  return AnalyticsService;
}();
/**
 * Maps appId to full initialization promise. Wrapped gtag calls must wait on
 * all or some of these, depending on the call's `send_to` param and the status
 * of the dynamic config fetches (see below).
 */
var initializationPromisesMap = {};
/**
 * List of dynamic config fetch promises. In certain cases, wrapped gtag calls
 * wait on all these to be complete in order to determine if it can selectively
 * wait for only certain initialization (FID) promises or if it must wait for all.
 */
var dynamicConfigPromisesList = [];
/**
 * Maps fetched measurementIds to appId. Populated when the app's dynamic config
 * fetch completes. If already populated, gtag config calls can use this to
 * selectively wait for only this app's initialization promise (FID) instead of all
 * initialization promises.
 */
var measurementIdToAppId = {};
/**
 * Name for window global data layer array used by GA: defaults to 'dataLayer'.
 */
var dataLayerName = 'dataLayer';
/**
 * Name for window global gtag function used by GA: defaults to 'gtag'.
 */
var gtagName = 'gtag';
/**
 * Reproduction of standard gtag function or reference to existing
 * gtag function on window object.
 */
var gtagCoreFunction;
/**
 * Wrapper around gtag function that ensures FID is sent with all
 * relevant event and config calls.
 */
var wrappedGtagFunction;
/**
 * Flag to ensure page initialization steps (creation or wrapping of
 * dataLayer and gtag script) are only run once per page load.
 */
var globalInitDone = false;
/**
 * Configures Firebase Analytics to use custom `gtag` or `dataLayer` names.
 * Intended to be used if `gtag.js` script has been installed on
 * this page independently of Firebase Analytics, and is using non-default
 * names for either the `gtag` function or for `dataLayer`.
 * Must be called before calling `getAnalytics()` or it won't
 * have any effect.
 *
 * @public
 *
 * @param options - Custom gtag and dataLayer names.
 */
function settings(options) {
  if (globalInitDone) {
    throw esm_index_esm2017_ERROR_FACTORY.create("already-initialized" /* AnalyticsError.ALREADY_INITIALIZED */);
  }

  if (options.dataLayerName) {
    dataLayerName = options.dataLayerName;
  }
  if (options.gtagName) {
    gtagName = options.gtagName;
  }
}
/**
 * Returns true if no environment mismatch is found.
 * If environment mismatches are found, throws an INVALID_ANALYTICS_CONTEXT
 * error that also lists details for each mismatch found.
 */
function warnOnBrowserContextMismatch() {
  var mismatchedEnvMessages = [];
  if (index_esm2017_isBrowserExtension()) {
    mismatchedEnvMessages.push('This is a browser extension environment.');
  }
  if (!index_esm2017_areCookiesEnabled()) {
    mismatchedEnvMessages.push('Cookies are not available.');
  }
  if (mismatchedEnvMessages.length > 0) {
    var details = mismatchedEnvMessages.map(function (message, index) {
      return "(".concat(index + 1, ") ").concat(message);
    }).join(' ');
    var err = esm_index_esm2017_ERROR_FACTORY.create("invalid-analytics-context" /* AnalyticsError.INVALID_ANALYTICS_CONTEXT */, {
      errorInfo: details
    });
    index_esm2017_logger.warn(err.message);
  }
}
/**
 * Analytics instance factory.
 * @internal
 */
function factory(app, installations, options) {
  warnOnBrowserContextMismatch();
  var appId = app.options.appId;
  if (!appId) {
    throw esm_index_esm2017_ERROR_FACTORY.create("no-app-id" /* AnalyticsError.NO_APP_ID */);
  }

  if (!app.options.apiKey) {
    if (app.options.measurementId) {
      index_esm2017_logger.warn("The \"apiKey\" field is empty in the local Firebase config. This is needed to fetch the latest" + " measurement ID for this Firebase app. Falling back to the measurement ID ".concat(app.options.measurementId) + " provided in the \"measurementId\" field in the local Firebase config.");
    } else {
      throw esm_index_esm2017_ERROR_FACTORY.create("no-api-key" /* AnalyticsError.NO_API_KEY */);
    }
  }

  if (initializationPromisesMap[appId] != null) {
    throw esm_index_esm2017_ERROR_FACTORY.create("already-exists" /* AnalyticsError.ALREADY_EXISTS */, {
      id: appId
    });
  }
  if (!globalInitDone) {
    // Steps here should only be done once per page: creation or wrapping
    // of dataLayer and global gtag function.
    getOrCreateDataLayer(dataLayerName);
    var _wrapOrCreateGtag = wrapOrCreateGtag(initializationPromisesMap, dynamicConfigPromisesList, measurementIdToAppId, dataLayerName, gtagName),
      wrappedGtag = _wrapOrCreateGtag.wrappedGtag,
      gtagCore = _wrapOrCreateGtag.gtagCore;
    wrappedGtagFunction = wrappedGtag;
    gtagCoreFunction = gtagCore;
    globalInitDone = true;
  }
  // Async but non-blocking.
  // This map reflects the completion state of all promises for each appId.
  initializationPromisesMap[appId] = _initializeAnalytics(app, dynamicConfigPromisesList, measurementIdToAppId, installations, gtagCoreFunction, dataLayerName, options);
  var analyticsInstance = new AnalyticsService(app);
  return analyticsInstance;
}

/* eslint-disable @typescript-eslint/no-explicit-any */
/**
 * Returns an {@link Analytics} instance for the given app.
 *
 * @public
 *
 * @param app - The {@link @firebase/app#FirebaseApp} to use.
 */
function getAnalytics() {
  var app = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : index_esm2017_getApp();
  app = index_esm2017_getModularInstance(app);
  // Dependencies
  var analyticsProvider = index_esm2017_getProvider(app, ANALYTICS_TYPE);
  if (analyticsProvider.isInitialized()) {
    return analyticsProvider.getImmediate();
  }
  return initializeAnalytics(app);
}
/**
 * Returns an {@link Analytics} instance for the given app.
 *
 * @public
 *
 * @param app - The {@link @firebase/app#FirebaseApp} to use.
 */
function initializeAnalytics(app) {
  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
  // Dependencies
  var analyticsProvider = index_esm2017_getProvider(app, ANALYTICS_TYPE);
  if (analyticsProvider.isInitialized()) {
    var existingInstance = analyticsProvider.getImmediate();
    if (index_esm2017_deepEqual(options, analyticsProvider.getOptions())) {
      return existingInstance;
    } else {
      throw esm_index_esm2017_ERROR_FACTORY.create("already-initialized" /* AnalyticsError.ALREADY_INITIALIZED */);
    }
  }

  var analyticsInstance = analyticsProvider.initialize({
    options: options
  });
  return analyticsInstance;
}
/**
 * This is a public static method provided to users that wraps four different checks:
 *
 * 1. Check if it's not a browser extension environment.
 * 2. Check if cookies are enabled in current browser.
 * 3. Check if IndexedDB is supported by the browser environment.
 * 4. Check if the current browser context is valid for using `IndexedDB.open()`.
 *
 * @public
 *
 */
function isSupported() {
  return _isSupported.apply(this, arguments);
}
/**
 * Use gtag `config` command to set `screen_name`.
 *
 * @public
 *
 * @deprecated Use {@link logEvent} with `eventName` as 'screen_view' and add relevant `eventParams`.
 * See {@link https://firebase.google.com/docs/analytics/screenviews | Track Screenviews}.
 *
 * @param analyticsInstance - The {@link Analytics} instance.
 * @param screenName - Screen name to set.
 */
function _isSupported() {
  _isSupported = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee15() {
    var isDBOpenable;
    return _regeneratorRuntime().wrap(function _callee15$(_context15) {
      while (1) {
        switch (_context15.prev = _context15.next) {
          case 0:
            if (!isBrowserExtension()) {
              _context15.next = 2;
              break;
            }
            return _context15.abrupt("return", false);
          case 2:
            if (areCookiesEnabled()) {
              _context15.next = 4;
              break;
            }
            return _context15.abrupt("return", false);
          case 4:
            if (isIndexedDBAvailable()) {
              _context15.next = 6;
              break;
            }
            return _context15.abrupt("return", false);
          case 6:
            _context15.prev = 6;
            _context15.next = 9;
            return validateIndexedDBOpenable();
          case 9:
            isDBOpenable = _context15.sent;
            return _context15.abrupt("return", isDBOpenable);
          case 13:
            _context15.prev = 13;
            _context15.t0 = _context15["catch"](6);
            return _context15.abrupt("return", false);
          case 16:
          case "end":
            return _context15.stop();
        }
      }
    }, _callee15, null, [[6, 13]]);
  }));
  return _isSupported.apply(this, arguments);
}
function setCurrentScreen(analyticsInstance, screenName, options) {
  analyticsInstance = getModularInstance(analyticsInstance);
  setCurrentScreen$1(wrappedGtagFunction, initializationPromisesMap[analyticsInstance.app.options.appId], screenName, options).catch(function (e) {
    return index_esm2017_logger.error(e);
  });
}
/**
 * Use gtag `config` command to set `user_id`.
 *
 * @public
 *
 * @param analyticsInstance - The {@link Analytics} instance.
 * @param id - User ID to set.
 */
function setUserId(analyticsInstance, id, options) {
  analyticsInstance = getModularInstance(analyticsInstance);
  setUserId$1(wrappedGtagFunction, initializationPromisesMap[analyticsInstance.app.options.appId], id, options).catch(function (e) {
    return index_esm2017_logger.error(e);
  });
}
/**
 * Use gtag `config` command to set all params specified.
 *
 * @public
 */
function setUserProperties(analyticsInstance, properties, options) {
  analyticsInstance = getModularInstance(analyticsInstance);
  setUserProperties$1(wrappedGtagFunction, initializationPromisesMap[analyticsInstance.app.options.appId], properties, options).catch(function (e) {
    return index_esm2017_logger.error(e);
  });
}
/**
 * Sets whether Google Analytics collection is enabled for this app on this device.
 * Sets global `window['ga-disable-analyticsId'] = true;`
 *
 * @public
 *
 * @param analyticsInstance - The {@link Analytics} instance.
 * @param enabled - If true, enables collection, if false, disables it.
 */
function setAnalyticsCollectionEnabled(analyticsInstance, enabled) {
  analyticsInstance = getModularInstance(analyticsInstance);
  setAnalyticsCollectionEnabled$1(initializationPromisesMap[analyticsInstance.app.options.appId], enabled).catch(function (e) {
    return index_esm2017_logger.error(e);
  });
}
/**
 * Adds data that will be set on every event logged from the SDK, including automatic ones.
 * With gtag's "set" command, the values passed persist on the current page and are passed with
 * all subsequent events.
 * @public
 * @param customParams - Any custom params the user may pass to gtag.js.
 */
function setDefaultEventParameters(customParams) {
  // Check if reference to existing gtag function on window object exists
  if (wrappedGtagFunction) {
    wrappedGtagFunction("set" /* GtagCommand.SET */, customParams);
  } else {
    _setDefaultEventParametersForInit(customParams);
  }
}
/**
 * Sends a Google Analytics event with given `eventParams`. This method
 * automatically associates this logged event with this Firebase web
 * app instance on this device.
 * List of official event parameters can be found in the gtag.js
 * reference documentation:
 * {@link https://developers.google.com/gtagjs/reference/ga4-events
 * | the GA4 reference documentation}.
 *
 * @public
 */
function _logEvent(analyticsInstance, eventName, eventParams, options) {
  analyticsInstance = index_esm2017_getModularInstance(analyticsInstance);
  logEvent$1(wrappedGtagFunction, initializationPromisesMap[analyticsInstance.app.options.appId], eventName, eventParams, options).catch(function (e) {
    return index_esm2017_logger.error(e);
  });
}
/**
 * Sets the applicable end user consent state for this web app across all gtag references once
 * Firebase Analytics is initialized.
 *
 * Use the {@link ConsentSettings} to specify individual consent type values. By default consent
 * types are set to "granted".
 * @public
 * @param consentSettings - Maps the applicable end user consent state for gtag.js.
 */
function setConsent(consentSettings) {
  // Check if reference to existing gtag function on window object exists
  if (wrappedGtagFunction) {
    wrappedGtagFunction("consent" /* GtagCommand.CONSENT */, 'update', consentSettings);
  } else {
    _setConsentDefaultForInit(consentSettings);
  }
}
var dist_esm_index_esm2017_name = "@firebase/analytics";
var esm_index_esm2017_version = "0.9.0";

/**
 * Firebase Analytics
 *
 * @packageDocumentation
 */
function registerAnalytics() {
  _registerComponent(new Component(ANALYTICS_TYPE, function (container, _ref2) {
    var analyticsOptions = _ref2.options;
    // getImmediate for FirebaseApp will always succeed
    var app = container.getProvider('app').getImmediate();
    var installations = container.getProvider('installations-internal').getImmediate();
    return factory(app, installations, analyticsOptions);
  }, "PUBLIC" /* ComponentType.PUBLIC */));
  _registerComponent(new Component('analytics-internal', internalFactory, "PRIVATE" /* ComponentType.PRIVATE */));
  registerVersion(dist_esm_index_esm2017_name, esm_index_esm2017_version);
  // BUILD_TARGET will be replaced by values like esm5, esm2017, cjs5, etc during the compilation
  registerVersion(dist_esm_index_esm2017_name, esm_index_esm2017_version, 'esm2017');
  function internalFactory(container) {
    try {
      var analytics = container.getProvider(ANALYTICS_TYPE).getImmediate();
      return {
        logEvent: function logEvent(eventName, eventParams, options) {
          return _logEvent(analytics, eventName, eventParams, options);
        }
      };
    } catch (e) {
      throw esm_index_esm2017_ERROR_FACTORY.create("interop-component-reg-failed" /* AnalyticsError.INTEROP_COMPONENT_REG_FAILED */, {
        reason: e
      });
    }
  }
}
registerAnalytics();

;// CONCATENATED MODULE: ./node_modules/firebase/analytics/dist/esm/index.esm.js

;// CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/esm/superPropBase.js

function _superPropBase(object, property) {
  while (!Object.prototype.hasOwnProperty.call(object, property)) {
    object = getPrototypeOf_getPrototypeOf(object);
    if (object === null) break;
  }
  return object;
}
;// CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/esm/get.js

function get_get() {
  if (typeof Reflect !== "undefined" && Reflect.get) {
    get_get = Reflect.get.bind();
  } else {
    get_get = function _get(target, property, receiver) {
      var base = _superPropBase(target, property);
      if (!base) return;
      var desc = Object.getOwnPropertyDescriptor(base, property);
      if (desc.get) {
        return desc.get.call(arguments.length < 3 ? target : receiver);
      }
      return desc.value;
    };
  }
  return get_get.apply(this, arguments);
}
;// CONCATENATED MODULE: ./node_modules/@firebase/webchannel-wrapper/dist/index.esm2017.js








var commonjsGlobal = typeof globalThis !== 'undefined' ? globalThis : typeof window !== 'undefined' ? window : typeof __webpack_require__.g !== 'undefined' ? __webpack_require__.g : typeof self !== 'undefined' ? self : {};
var esm = {};

/*

 Copyright The Closure Library Authors.
 SPDX-License-Identifier: Apache-2.0
*/

var k,
  goog = goog || {},
  l = commonjsGlobal || self;
function aa() {}
function ba(a) {
  var b = typeof a;
  b = "object" != b ? b : a ? Array.isArray(a) ? "array" : b : "null";
  return "array" == b || "object" == b && "number" == typeof a.length;
}
function p(a) {
  var b = typeof a;
  return "object" == b && null != a || "function" == b;
}
function ca(a) {
  return Object.prototype.hasOwnProperty.call(a, da) && a[da] || (a[da] = ++ea);
}
var da = "closure_uid_" + (1E9 * Math.random() >>> 0),
  ea = 0;
function fa(a, b, c) {
  return a.call.apply(a.bind, arguments);
}
function ha(a, b, c) {
  if (!a) throw Error();
  if (2 < arguments.length) {
    var d = Array.prototype.slice.call(arguments, 2);
    return function () {
      var e = Array.prototype.slice.call(arguments);
      Array.prototype.unshift.apply(e, d);
      return a.apply(b, e);
    };
  }
  return function () {
    return a.apply(b, arguments);
  };
}
function q(a, b, c) {
  Function.prototype.bind && -1 != Function.prototype.bind.toString().indexOf("native code") ? q = fa : q = ha;
  return q.apply(null, arguments);
}
function ia(a, b) {
  var c = Array.prototype.slice.call(arguments, 1);
  return function () {
    var d = c.slice();
    d.push.apply(d, arguments);
    return a.apply(this, d);
  };
}
function t(a, b) {
  function c() {}
  c.prototype = b.prototype;
  a.X = b.prototype;
  a.prototype = new c();
  a.prototype.constructor = a;
  a.Wb = function (d, e, f) {
    for (var h = Array(arguments.length - 2), n = 2; n < arguments.length; n++) {
      h[n - 2] = arguments[n];
    }
    return b.prototype[e].apply(d, h);
  };
}
function v() {
  this.s = this.s;
  this.o = this.o;
}
var ja = 0;
v.prototype.s = !1;
v.prototype.na = function () {
  if (!this.s && (this.s = !0, this.M(), 0 != ja)) {
    ca(this);
  }
};
v.prototype.M = function () {
  if (this.o) for (; this.o.length;) {
    this.o.shift()();
  }
};
var la = Array.prototype.indexOf ? function (a, b) {
  return Array.prototype.indexOf.call(a, b, void 0);
} : function (a, b) {
  if ("string" === typeof a) return "string" !== typeof b || 1 != b.length ? -1 : a.indexOf(b, 0);
  for (var c = 0; c < a.length; c++) {
    if (c in a && a[c] === b) return c;
  }
  return -1;
};
function ma(a) {
  var b = a.length;
  if (0 < b) {
    var c = Array(b);
    for (var d = 0; d < b; d++) {
      c[d] = a[d];
    }
    return c;
  }
  return [];
}
function na(a, b) {
  for (var c = 1; c < arguments.length; c++) {
    var d = arguments[c];
    if (ba(d)) {
      var e = a.length || 0,
        f = d.length || 0;
      a.length = e + f;
      for (var h = 0; h < f; h++) {
        a[e + h] = d[h];
      }
    } else a.push(d);
  }
}
function w(a, b) {
  this.type = a;
  this.g = this.target = b;
  this.defaultPrevented = !1;
}
w.prototype.h = function () {
  this.defaultPrevented = !0;
};
var oa = function () {
  if (!l.addEventListener || !Object.defineProperty) return !1;
  var a = !1,
    b = Object.defineProperty({}, "passive", {
      get: function get() {
        a = !0;
      }
    });
  try {
    l.addEventListener("test", aa, b), l.removeEventListener("test", aa, b);
  } catch (c) {}
  return a;
}();
function pa(a) {
  return /^[\s\xa0]*$/.test(a);
}
var qa = String.prototype.trim ? function (a) {
  return a.trim();
} : function (a) {
  return /^[\s\xa0]*([\s\S]*?)[\s\xa0]*$/.exec(a)[1];
};
function ra(a, b) {
  return a < b ? -1 : a > b ? 1 : 0;
}
function sa() {
  var a = l.navigator;
  return a && (a = a.userAgent) ? a : "";
}
function x(a) {
  return -1 != sa().indexOf(a);
}
function ta(a) {
  ta[" "](a);
  return a;
}
ta[" "] = aa;
function ua(a) {
  var b = va;
  return Object.prototype.hasOwnProperty.call(b, 9) ? b[9] : b[9] = a(9);
}
var wa = x("Opera"),
  y = x("Trident") || x("MSIE"),
  xa = x("Edge"),
  ya = xa || y,
  za = x("Gecko") && !(-1 != sa().toLowerCase().indexOf("webkit") && !x("Edge")) && !(x("Trident") || x("MSIE")) && !x("Edge"),
  Aa = -1 != sa().toLowerCase().indexOf("webkit") && !x("Edge");
function Ba() {
  var a = l.document;
  return a ? a.documentMode : void 0;
}
var Ea;
a: {
  var Fa = "",
    Ga = function () {
      var a = sa();
      if (za) return /rv:([^\);]+)(\)|;)/.exec(a);
      if (xa) return /Edge\/([\d\.]+)/.exec(a);
      if (y) return /\b(?:MSIE|rv)[: ]([^\);]+)(\)|;)/.exec(a);
      if (Aa) return /WebKit\/(\S+)/.exec(a);
      if (wa) return /(?:Version)[ \/]?(\S+)/.exec(a);
    }();
  Ga && (Fa = Ga ? Ga[1] : "");
  if (y) {
    var Ha = Ba();
    if (null != Ha && Ha > parseFloat(Fa)) {
      Ea = String(Ha);
      break a;
    }
  }
  Ea = Fa;
}
var va = {};
function Ia() {
  return ua(function () {
    var a = 0;
    var b = qa(String(Ea)).split("."),
      c = qa("9").split("."),
      d = Math.max(b.length, c.length);
    for (var h = 0; 0 == a && h < d; h++) {
      var e = b[h] || "",
        f = c[h] || "";
      do {
        e = /(\d*)(\D*)(.*)/.exec(e) || ["", "", "", ""];
        f = /(\d*)(\D*)(.*)/.exec(f) || ["", "", "", ""];
        if (0 == e[0].length && 0 == f[0].length) break;
        a = ra(0 == e[1].length ? 0 : parseInt(e[1], 10), 0 == f[1].length ? 0 : parseInt(f[1], 10)) || ra(0 == e[2].length, 0 == f[2].length) || ra(e[2], f[2]);
        e = e[3];
        f = f[3];
      } while (0 == a);
    }
    return 0 <= a;
  });
}
var Ja;
if (l.document && y) {
  var Ka = Ba();
  Ja = Ka ? Ka : parseInt(Ea, 10) || void 0;
} else Ja = void 0;
var La = Ja;
function z(a, b) {
  w.call(this, a ? a.type : "");
  this.relatedTarget = this.g = this.target = null;
  this.button = this.screenY = this.screenX = this.clientY = this.clientX = 0;
  this.key = "";
  this.metaKey = this.shiftKey = this.altKey = this.ctrlKey = !1;
  this.state = null;
  this.pointerId = 0;
  this.pointerType = "";
  this.i = null;
  if (a) {
    var c = this.type = a.type,
      d = a.changedTouches && a.changedTouches.length ? a.changedTouches[0] : null;
    this.target = a.target || a.srcElement;
    this.g = b;
    if (b = a.relatedTarget) {
      if (za) {
        a: {
          try {
            ta(b.nodeName);
            var e = !0;
            break a;
          } catch (f) {}
          e = !1;
        }
        e || (b = null);
      }
    } else "mouseover" == c ? b = a.fromElement : "mouseout" == c && (b = a.toElement);
    this.relatedTarget = b;
    d ? (this.clientX = void 0 !== d.clientX ? d.clientX : d.pageX, this.clientY = void 0 !== d.clientY ? d.clientY : d.pageY, this.screenX = d.screenX || 0, this.screenY = d.screenY || 0) : (this.clientX = void 0 !== a.clientX ? a.clientX : a.pageX, this.clientY = void 0 !== a.clientY ? a.clientY : a.pageY, this.screenX = a.screenX || 0, this.screenY = a.screenY || 0);
    this.button = a.button;
    this.key = a.key || "";
    this.ctrlKey = a.ctrlKey;
    this.altKey = a.altKey;
    this.shiftKey = a.shiftKey;
    this.metaKey = a.metaKey;
    this.pointerId = a.pointerId || 0;
    this.pointerType = "string" === typeof a.pointerType ? a.pointerType : Ma[a.pointerType] || "";
    this.state = a.state;
    this.i = a;
    a.defaultPrevented && z.X.h.call(this);
  }
}
t(z, w);
var Ma = {
  2: "touch",
  3: "pen",
  4: "mouse"
};
z.prototype.h = function () {
  z.X.h.call(this);
  var a = this.i;
  a.preventDefault ? a.preventDefault() : a.returnValue = !1;
};
var A = "closure_listenable_" + (1E6 * Math.random() | 0);
var Na = 0;
function Oa(a, b, c, d, e) {
  this.listener = a;
  this.proxy = null;
  this.src = b;
  this.type = c;
  this.capture = !!d;
  this.ha = e;
  this.key = ++Na;
  this.ba = this.ea = !1;
}
function Pa(a) {
  a.ba = !0;
  a.listener = null;
  a.proxy = null;
  a.src = null;
  a.ha = null;
}
function Qa(a, b, c) {
  for (var d in a) {
    b.call(c, a[d], d, a);
  }
}
function Ra(a) {
  var b = {};
  for (var c in a) {
    b[c] = a[c];
  }
  return b;
}
var Sa = "constructor hasOwnProperty isPrototypeOf propertyIsEnumerable toLocaleString toString valueOf".split(" ");
function Ta(a, b) {
  var c, d;
  for (var e = 1; e < arguments.length; e++) {
    d = arguments[e];
    for (c in d) {
      a[c] = d[c];
    }
    for (var f = 0; f < Sa.length; f++) {
      c = Sa[f], Object.prototype.hasOwnProperty.call(d, c) && (a[c] = d[c]);
    }
  }
}
function Ua(a) {
  this.src = a;
  this.g = {};
  this.h = 0;
}
Ua.prototype.add = function (a, b, c, d, e) {
  var f = a.toString();
  a = this.g[f];
  a || (a = this.g[f] = [], this.h++);
  var h = Va(a, b, d, e);
  -1 < h ? (b = a[h], c || (b.ea = !1)) : (b = new Oa(b, this.src, f, !!d, e), b.ea = c, a.push(b));
  return b;
};
function Wa(a, b) {
  var c = b.type;
  if (c in a.g) {
    var d = a.g[c],
      e = la(d, b),
      f;
    (f = 0 <= e) && Array.prototype.splice.call(d, e, 1);
    f && (Pa(b), 0 == a.g[c].length && (delete a.g[c], a.h--));
  }
}
function Va(a, b, c, d) {
  for (var e = 0; e < a.length; ++e) {
    var f = a[e];
    if (!f.ba && f.listener == b && f.capture == !!c && f.ha == d) return e;
  }
  return -1;
}
var Xa = "closure_lm_" + (1E6 * Math.random() | 0),
  Ya = {};
function $a(a, b, c, d, e) {
  if (d && d.once) return ab(a, b, c, d, e);
  if (Array.isArray(b)) {
    for (var f = 0; f < b.length; f++) {
      $a(a, b[f], c, d, e);
    }
    return null;
  }
  c = bb(c);
  return a && a[A] ? a.N(b, c, p(d) ? !!d.capture : !!d, e) : cb(a, b, c, !1, d, e);
}
function cb(a, b, c, d, e, f) {
  if (!b) throw Error("Invalid event type");
  var h = p(e) ? !!e.capture : !!e,
    n = db(a);
  n || (a[Xa] = n = new Ua(a));
  c = n.add(b, c, d, h, f);
  if (c.proxy) return c;
  d = eb();
  c.proxy = d;
  d.src = a;
  d.listener = c;
  if (a.addEventListener) oa || (e = h), void 0 === e && (e = !1), a.addEventListener(b.toString(), d, e);else if (a.attachEvent) a.attachEvent(fb(b.toString()), d);else if (a.addListener && a.removeListener) a.addListener(d);else throw Error("addEventListener and attachEvent are unavailable.");
  return c;
}
function eb() {
  function a(c) {
    return b.call(a.src, a.listener, c);
  }
  var b = gb;
  return a;
}
function ab(a, b, c, d, e) {
  if (Array.isArray(b)) {
    for (var f = 0; f < b.length; f++) {
      ab(a, b[f], c, d, e);
    }
    return null;
  }
  c = bb(c);
  return a && a[A] ? a.O(b, c, p(d) ? !!d.capture : !!d, e) : cb(a, b, c, !0, d, e);
}
function hb(a, b, c, d, e) {
  if (Array.isArray(b)) for (var f = 0; f < b.length; f++) {
    hb(a, b[f], c, d, e);
  } else (d = p(d) ? !!d.capture : !!d, c = bb(c), a && a[A]) ? (a = a.i, b = String(b).toString(), b in a.g && (f = a.g[b], c = Va(f, c, d, e), -1 < c && (Pa(f[c]), Array.prototype.splice.call(f, c, 1), 0 == f.length && (delete a.g[b], a.h--)))) : a && (a = db(a)) && (b = a.g[b.toString()], a = -1, b && (a = Va(b, c, d, e)), (c = -1 < a ? b[a] : null) && ib(c));
}
function ib(a) {
  if ("number" !== typeof a && a && !a.ba) {
    var b = a.src;
    if (b && b[A]) Wa(b.i, a);else {
      var c = a.type,
        d = a.proxy;
      b.removeEventListener ? b.removeEventListener(c, d, a.capture) : b.detachEvent ? b.detachEvent(fb(c), d) : b.addListener && b.removeListener && b.removeListener(d);
      (c = db(b)) ? (Wa(c, a), 0 == c.h && (c.src = null, b[Xa] = null)) : Pa(a);
    }
  }
}
function fb(a) {
  return a in Ya ? Ya[a] : Ya[a] = "on" + a;
}
function gb(a, b) {
  if (a.ba) a = !0;else {
    b = new z(b, this);
    var c = a.listener,
      d = a.ha || a.src;
    a.ea && ib(a);
    a = c.call(d, b);
  }
  return a;
}
function db(a) {
  a = a[Xa];
  return a instanceof Ua ? a : null;
}
var jb = "__closure_events_fn_" + (1E9 * Math.random() >>> 0);
function bb(a) {
  if ("function" === typeof a) return a;
  a[jb] || (a[jb] = function (b) {
    return a.handleEvent(b);
  });
  return a[jb];
}
function B() {
  v.call(this);
  this.i = new Ua(this);
  this.P = this;
  this.I = null;
}
t(B, v);
B.prototype[A] = !0;
B.prototype.removeEventListener = function (a, b, c, d) {
  hb(this, a, b, c, d);
};
function C(a, b) {
  var c,
    d = a.I;
  if (d) for (c = []; d; d = d.I) {
    c.push(d);
  }
  a = a.P;
  d = b.type || b;
  if ("string" === typeof b) b = new w(b, a);else if (b instanceof w) b.target = b.target || a;else {
    var e = b;
    b = new w(d, a);
    Ta(b, e);
  }
  e = !0;
  if (c) for (var f = c.length - 1; 0 <= f; f--) {
    var h = b.g = c[f];
    e = kb(h, d, !0, b) && e;
  }
  h = b.g = a;
  e = kb(h, d, !0, b) && e;
  e = kb(h, d, !1, b) && e;
  if (c) for (f = 0; f < c.length; f++) {
    h = b.g = c[f], e = kb(h, d, !1, b) && e;
  }
}
B.prototype.M = function () {
  B.X.M.call(this);
  if (this.i) {
    var a = this.i,
      c;
    for (c in a.g) {
      for (var d = a.g[c], e = 0; e < d.length; e++) {
        Pa(d[e]);
      }
      delete a.g[c];
      a.h--;
    }
  }
  this.I = null;
};
B.prototype.N = function (a, b, c, d) {
  return this.i.add(String(a), b, !1, c, d);
};
B.prototype.O = function (a, b, c, d) {
  return this.i.add(String(a), b, !0, c, d);
};
function kb(a, b, c, d) {
  b = a.i.g[String(b)];
  if (!b) return !0;
  b = b.concat();
  for (var e = !0, f = 0; f < b.length; ++f) {
    var h = b[f];
    if (h && !h.ba && h.capture == c) {
      var n = h.listener,
        u = h.ha || h.src;
      h.ea && Wa(a.i, h);
      e = !1 !== n.call(u, d) && e;
    }
  }
  return e && !d.defaultPrevented;
}
var lb = l.JSON.stringify;
function mb() {
  var a = nb;
  var b = null;
  a.g && (b = a.g, a.g = a.g.next, a.g || (a.h = null), b.next = null);
  return b;
}
var ob = /*#__PURE__*/function () {
  function ob() {
    classCallCheck_classCallCheck(this, ob);
    this.h = this.g = null;
  }
  createClass_createClass(ob, [{
    key: "add",
    value: function add(a, b) {
      var c = pb.get();
      c.set(a, b);
      this.h ? this.h.next = c : this.g = c;
      this.h = c;
    }
  }]);
  return ob;
}();
var pb = new ( /*#__PURE__*/function () {
  function _class(a, b) {
    classCallCheck_classCallCheck(this, _class);
    this.i = a;
    this.j = b;
    this.h = 0;
    this.g = null;
  }
  createClass_createClass(_class, [{
    key: "get",
    value: function get() {
      var a;
      0 < this.h ? (this.h--, a = this.g, this.g = a.next, a.next = null) : a = this.i();
      return a;
    }
  }]);
  return _class;
}())(function () {
  return new qb();
}, function (a) {
  return a.reset();
});
var qb = /*#__PURE__*/function () {
  function qb() {
    classCallCheck_classCallCheck(this, qb);
    this.next = this.g = this.h = null;
  }
  createClass_createClass(qb, [{
    key: "set",
    value: function set(a, b) {
      this.h = a;
      this.g = b;
      this.next = null;
    }
  }, {
    key: "reset",
    value: function reset() {
      this.next = this.g = this.h = null;
    }
  }]);
  return qb;
}();
function rb(a) {
  l.setTimeout(function () {
    throw a;
  }, 0);
}
function sb(a, b) {
  ub || vb();
  wb || (ub(), wb = !0);
  nb.add(a, b);
}
var ub;
function vb() {
  var a = l.Promise.resolve(void 0);
  ub = function ub() {
    a.then(xb);
  };
}
var wb = !1,
  nb = new ob();
function xb() {
  for (var a; a = mb();) {
    try {
      a.h.call(a.g);
    } catch (c) {
      rb(c);
    }
    var b = pb;
    b.j(a);
    100 > b.h && (b.h++, a.next = b.g, b.g = a);
  }
  wb = !1;
}
function yb(a, b) {
  B.call(this);
  this.h = a || 1;
  this.g = b || l;
  this.j = q(this.lb, this);
  this.l = Date.now();
}
t(yb, B);
k = yb.prototype;
k.ca = !1;
k.R = null;
k.lb = function () {
  if (this.ca) {
    var a = Date.now() - this.l;
    0 < a && a < .8 * this.h ? this.R = this.g.setTimeout(this.j, this.h - a) : (this.R && (this.g.clearTimeout(this.R), this.R = null), C(this, "tick"), this.ca && (zb(this), this.start()));
  }
};
k.start = function () {
  this.ca = !0;
  this.R || (this.R = this.g.setTimeout(this.j, this.h), this.l = Date.now());
};
function zb(a) {
  a.ca = !1;
  a.R && (a.g.clearTimeout(a.R), a.R = null);
}
k.M = function () {
  yb.X.M.call(this);
  zb(this);
  delete this.g;
};
function Ab(a, b, c) {
  if ("function" === typeof a) c && (a = q(a, c));else if (a && "function" == typeof a.handleEvent) a = q(a.handleEvent, a);else throw Error("Invalid listener argument");
  return 2147483647 < Number(b) ? -1 : l.setTimeout(a, b || 0);
}
function Bb(a) {
  a.g = Ab(function () {
    a.g = null;
    a.i && (a.i = !1, Bb(a));
  }, a.j);
  var b = a.h;
  a.h = null;
  a.m.apply(null, b);
}
var Cb = /*#__PURE__*/function (_v) {
  inherits_inherits(Cb, _v);
  var _super = createSuper_createSuper(Cb);
  function Cb(a, b) {
    var _this;
    classCallCheck_classCallCheck(this, Cb);
    _this = _super.call(this);
    _this.m = a;
    _this.j = b;
    _this.h = null;
    _this.i = !1;
    _this.g = null;
    return _this;
  }
  createClass_createClass(Cb, [{
    key: "l",
    value: function l(a) {
      this.h = arguments;
      this.g ? this.i = !0 : Bb(this);
    }
  }, {
    key: "M",
    value: function M() {
      get_get(getPrototypeOf_getPrototypeOf(Cb.prototype), "M", this).call(this);
      this.g && (l.clearTimeout(this.g), this.g = null, this.i = !1, this.h = null);
    }
  }]);
  return Cb;
}(v);
function D(a) {
  v.call(this);
  this.h = a;
  this.g = {};
}
t(D, v);
var Db = [];
function Eb(a, b, c, d) {
  Array.isArray(c) || (c && (Db[0] = c.toString()), c = Db);
  for (var e = 0; e < c.length; e++) {
    var f = $a(b, c[e], d || a.handleEvent, !1, a.h || a);
    if (!f) break;
    a.g[f.key] = f;
  }
}
function Fb(a) {
  Qa(a.g, function (b, c) {
    this.g.hasOwnProperty(c) && ib(b);
  }, a);
  a.g = {};
}
D.prototype.M = function () {
  D.X.M.call(this);
  Fb(this);
};
D.prototype.handleEvent = function () {
  throw Error("EventHandler.handleEvent not implemented");
};
function Gb() {
  this.g = !0;
}
Gb.prototype.Aa = function () {
  this.g = !1;
};
function Hb(a, b, c, d, e, f) {
  a.info(function () {
    if (a.g) {
      if (f) {
        var h = "";
        for (var n = f.split("&"), u = 0; u < n.length; u++) {
          var m = n[u].split("=");
          if (1 < m.length) {
            var r = m[0];
            m = m[1];
            var F = r.split("_");
            h = 2 <= F.length && "type" == F[1] ? h + (r + "=" + m + "&") : h + (r + "=redacted&");
          }
        }
      } else h = null;
    } else h = f;
    return "XMLHTTP REQ (" + d + ") [attempt " + e + "]: " + b + "\n" + c + "\n" + h;
  });
}
function Ib(a, b, c, d, e, f, h) {
  a.info(function () {
    return "XMLHTTP RESP (" + d + ") [ attempt " + e + "]: " + b + "\n" + c + "\n" + f + " " + h;
  });
}
function E(a, b, c, d) {
  a.info(function () {
    return "XMLHTTP TEXT (" + b + "): " + Jb(a, c) + (d ? " " + d : "");
  });
}
function Kb(a, b) {
  a.info(function () {
    return "TIMEOUT: " + b;
  });
}
Gb.prototype.info = function () {};
function Jb(a, b) {
  if (!a.g) return b;
  if (!b) return null;
  try {
    var c = JSON.parse(b);
    if (c) for (a = 0; a < c.length; a++) {
      if (Array.isArray(c[a])) {
        var d = c[a];
        if (!(2 > d.length)) {
          var e = d[1];
          if (Array.isArray(e) && !(1 > e.length)) {
            var f = e[0];
            if ("noop" != f && "stop" != f && "close" != f) for (var h = 1; h < e.length; h++) {
              e[h] = "";
            }
          }
        }
      }
    }
    return lb(c);
  } catch (n) {
    return b;
  }
}
var G = {},
  Lb = null;
function Mb() {
  return Lb = Lb || new B();
}
G.Pa = "serverreachability";
function Nb(a) {
  w.call(this, G.Pa, a);
}
t(Nb, w);
function H(a) {
  var b = Mb();
  C(b, new Nb(b));
}
G.STAT_EVENT = "statevent";
function Ob(a, b) {
  w.call(this, G.STAT_EVENT, a);
  this.stat = b;
}
t(Ob, w);
function I(a) {
  var b = Mb();
  C(b, new Ob(b, a));
}
G.Qa = "timingevent";
function Pb(a, b) {
  w.call(this, G.Qa, a);
  this.size = b;
}
t(Pb, w);
function J(a, b) {
  if ("function" !== typeof a) throw Error("Fn must not be null and must be a function");
  return l.setTimeout(function () {
    a();
  }, b);
}
var Qb = {
  NO_ERROR: 0,
  mb: 1,
  zb: 2,
  yb: 3,
  tb: 4,
  xb: 5,
  Ab: 6,
  Ma: 7,
  TIMEOUT: 8,
  Db: 9
};
var Rb = {
  rb: "complete",
  Nb: "success",
  Na: "error",
  Ma: "abort",
  Fb: "ready",
  Gb: "readystatechange",
  TIMEOUT: "timeout",
  Bb: "incrementaldata",
  Eb: "progress",
  ub: "downloadprogress",
  Vb: "uploadprogress"
};
function Sb() {}
Sb.prototype.h = null;
function Tb(a) {
  return a.h || (a.h = a.i());
}
function Ub() {}
var K = {
  OPEN: "a",
  qb: "b",
  Na: "c",
  Cb: "d"
};
function Vb() {
  w.call(this, "d");
}
t(Vb, w);
function Wb() {
  w.call(this, "c");
}
t(Wb, w);
var Xb;
function Yb() {}
t(Yb, Sb);
Yb.prototype.g = function () {
  return new XMLHttpRequest();
};
Yb.prototype.i = function () {
  return {};
};
Xb = new Yb();
function L(a, b, c, d) {
  this.l = a;
  this.j = b;
  this.m = c;
  this.U = d || 1;
  this.S = new D(this);
  this.O = Zb;
  a = ya ? 125 : void 0;
  this.T = new yb(a);
  this.H = null;
  this.i = !1;
  this.s = this.A = this.v = this.K = this.F = this.V = this.B = null;
  this.D = [];
  this.g = null;
  this.C = 0;
  this.o = this.u = null;
  this.Y = -1;
  this.I = !1;
  this.N = 0;
  this.L = null;
  this.$ = this.J = this.Z = this.P = !1;
  this.h = new $b();
}
function $b() {
  this.i = null;
  this.g = "";
  this.h = !1;
}
var Zb = 45E3,
  ac = {},
  bc = {};
k = L.prototype;
k.setTimeout = function (a) {
  this.O = a;
};
function cc(a, b, c) {
  a.K = 1;
  a.v = dc(M(b));
  a.s = c;
  a.P = !0;
  ec(a, null);
}
function ec(a, b) {
  a.F = Date.now();
  N(a);
  a.A = M(a.v);
  var c = a.A,
    d = a.U;
  Array.isArray(d) || (d = [String(d)]);
  fc(c.i, "t", d);
  a.C = 0;
  c = a.l.H;
  a.h = new $b();
  a.g = gc(a.l, c ? b : null, !a.s);
  0 < a.N && (a.L = new Cb(q(a.La, a, a.g), a.N));
  Eb(a.S, a.g, "readystatechange", a.ib);
  b = a.H ? Ra(a.H) : {};
  a.s ? (a.u || (a.u = "POST"), b["Content-Type"] = "application/x-www-form-urlencoded", a.g.da(a.A, a.u, a.s, b)) : (a.u = "GET", a.g.da(a.A, a.u, null, b));
  H();
  Hb(a.j, a.u, a.A, a.m, a.U, a.s);
}
k.ib = function (a) {
  a = a.target;
  var b = this.L;
  b && 3 == O(a) ? b.l() : this.La(a);
};
k.La = function (a) {
  try {
    if (a == this.g) a: {
      var r = O(this.g);
      var b = this.g.Ea();
      var F = this.g.aa();
      if (!(3 > r) && (3 != r || ya || this.g && (this.h.h || this.g.fa() || hc(this.g)))) {
        this.I || 4 != r || 7 == b || (8 == b || 0 >= F ? H(3) : H(2));
        ic(this);
        var c = this.g.aa();
        this.Y = c;
        b: if (jc(this)) {
          var d = hc(this.g);
          a = "";
          var e = d.length,
            f = 4 == O(this.g);
          if (!this.h.i) {
            if ("undefined" === typeof TextDecoder) {
              P(this);
              Q(this);
              var h = "";
              break b;
            }
            this.h.i = new l.TextDecoder();
          }
          for (b = 0; b < e; b++) {
            this.h.h = !0, a += this.h.i.decode(d[b], {
              stream: f && b == e - 1
            });
          }
          d.splice(0, e);
          this.h.g += a;
          this.C = 0;
          h = this.h.g;
        } else h = this.g.fa();
        this.i = 200 == c;
        Ib(this.j, this.u, this.A, this.m, this.U, r, c);
        if (this.i) {
          if (this.Z && !this.J) {
            b: {
              if (this.g) {
                var n,
                  u = this.g;
                if ((n = u.g ? u.g.getResponseHeader("X-HTTP-Initial-Response") : null) && !pa(n)) {
                  var m = n;
                  break b;
                }
              }
              m = null;
            }
            if (c = m) E(this.j, this.m, c, "Initial handshake response via X-HTTP-Initial-Response"), this.J = !0, kc(this, c);else {
              this.i = !1;
              this.o = 3;
              I(12);
              P(this);
              Q(this);
              break a;
            }
          }
          this.P ? (lc(this, r, h), ya && this.i && 3 == r && (Eb(this.S, this.T, "tick", this.hb), this.T.start())) : (E(this.j, this.m, h, null), kc(this, h));
          4 == r && P(this);
          this.i && !this.I && (4 == r ? mc(this.l, this) : (this.i = !1, N(this)));
        } else 400 == c && 0 < h.indexOf("Unknown SID") ? (this.o = 3, I(12)) : (this.o = 0, I(13)), P(this), Q(this);
      }
    }
  } catch (r) {} finally {}
};
function jc(a) {
  return a.g ? "GET" == a.u && 2 != a.K && a.l.Da : !1;
}
function lc(a, b, c) {
  var d = !0,
    e;
  for (; !a.I && a.C < c.length;) {
    if (e = nc(a, c), e == bc) {
      4 == b && (a.o = 4, I(14), d = !1);
      E(a.j, a.m, null, "[Incomplete Response]");
      break;
    } else if (e == ac) {
      a.o = 4;
      I(15);
      E(a.j, a.m, c, "[Invalid Chunk]");
      d = !1;
      break;
    } else E(a.j, a.m, e, null), kc(a, e);
  }
  jc(a) && e != bc && e != ac && (a.h.g = "", a.C = 0);
  4 != b || 0 != c.length || a.h.h || (a.o = 1, I(16), d = !1);
  a.i = a.i && d;
  d ? 0 < c.length && !a.$ && (a.$ = !0, b = a.l, b.g == a && b.$ && !b.K && (b.j.info("Great, no buffering proxy detected. Bytes received: " + c.length), oc(b), b.K = !0, I(11))) : (E(a.j, a.m, c, "[Invalid Chunked Response]"), P(a), Q(a));
}
k.hb = function () {
  if (this.g) {
    var a = O(this.g),
      b = this.g.fa();
    this.C < b.length && (ic(this), lc(this, a, b), this.i && 4 != a && N(this));
  }
};
function nc(a, b) {
  var c = a.C,
    d = b.indexOf("\n", c);
  if (-1 == d) return bc;
  c = Number(b.substring(c, d));
  if (isNaN(c)) return ac;
  d += 1;
  if (d + c > b.length) return bc;
  b = b.substr(d, c);
  a.C = d + c;
  return b;
}
k.cancel = function () {
  this.I = !0;
  P(this);
};
function N(a) {
  a.V = Date.now() + a.O;
  pc(a, a.O);
}
function pc(a, b) {
  if (null != a.B) throw Error("WatchDog timer not null");
  a.B = J(q(a.gb, a), b);
}
function ic(a) {
  a.B && (l.clearTimeout(a.B), a.B = null);
}
k.gb = function () {
  this.B = null;
  var a = Date.now();
  0 <= a - this.V ? (Kb(this.j, this.A), 2 != this.K && (H(), I(17)), P(this), this.o = 2, Q(this)) : pc(this, this.V - a);
};
function Q(a) {
  0 == a.l.G || a.I || mc(a.l, a);
}
function P(a) {
  ic(a);
  var b = a.L;
  b && "function" == typeof b.na && b.na();
  a.L = null;
  zb(a.T);
  Fb(a.S);
  a.g && (b = a.g, a.g = null, b.abort(), b.na());
}
function kc(a, b) {
  try {
    var c = a.l;
    if (0 != c.G && (c.g == a || qc(c.h, a))) if (!a.J && qc(c.h, a) && 3 == c.G) {
      try {
        var d = c.Fa.g.parse(b);
      } catch (m) {
        d = null;
      }
      if (Array.isArray(d) && 3 == d.length) {
        var e = d;
        if (0 == e[0]) a: {
          if (!c.u) {
            if (c.g) if (c.g.F + 3E3 < a.F) rc(c), sc(c);else break a;
            tc(c);
            I(18);
          }
        } else c.Ba = e[1], 0 < c.Ba - c.T && 37500 > e[2] && c.L && 0 == c.A && !c.v && (c.v = J(q(c.cb, c), 6E3));
        if (1 >= uc(c.h) && c.ja) {
          try {
            c.ja();
          } catch (m) {}
          c.ja = void 0;
        }
      } else R(c, 11);
    } else if ((a.J || c.g == a) && rc(c), !pa(b)) for (e = c.Fa.g.parse(b), b = 0; b < e.length; b++) {
      var m = e[b];
      c.T = m[0];
      m = m[1];
      if (2 == c.G) {
        if ("c" == m[0]) {
          c.I = m[1];
          c.ka = m[2];
          var r = m[3];
          null != r && (c.ma = r, c.j.info("VER=" + c.ma));
          var F = m[4];
          null != F && (c.Ca = F, c.j.info("SVER=" + c.Ca));
          var Ca = m[5];
          null != Ca && "number" === typeof Ca && 0 < Ca && (d = 1.5 * Ca, c.J = d, c.j.info("backChannelRequestTimeoutMs_=" + d));
          d = c;
          var Z = a.g;
          if (Z) {
            var Da = Z.g ? Z.g.getResponseHeader("X-Client-Wire-Protocol") : null;
            if (Da) {
              var f = d.h;
              f.g || -1 == Da.indexOf("spdy") && -1 == Da.indexOf("quic") && -1 == Da.indexOf("h2") || (f.j = f.l, f.g = new Set(), f.h && (vc(f, f.h), f.h = null));
            }
            if (d.D) {
              var tb = Z.g ? Z.g.getResponseHeader("X-HTTP-Session-Id") : null;
              tb && (d.za = tb, S(d.F, d.D, tb));
            }
          }
          c.G = 3;
          c.l && c.l.xa();
          c.$ && (c.P = Date.now() - a.F, c.j.info("Handshake RTT: " + c.P + "ms"));
          d = c;
          var h = a;
          d.sa = wc(d, d.H ? d.ka : null, d.V);
          if (h.J) {
            xc(d.h, h);
            var n = h,
              u = d.J;
            u && n.setTimeout(u);
            n.B && (ic(n), N(n));
            d.g = h;
          } else yc(d);
          0 < c.i.length && zc(c);
        } else "stop" != m[0] && "close" != m[0] || R(c, 7);
      } else 3 == c.G && ("stop" == m[0] || "close" == m[0] ? "stop" == m[0] ? R(c, 7) : Ac(c) : "noop" != m[0] && c.l && c.l.wa(m), c.A = 0);
    }
    H(4);
  } catch (m) {}
}
function Bc(a) {
  if (a.W && "function" == typeof a.W) return a.W();
  if ("undefined" !== typeof Map && a instanceof Map || "undefined" !== typeof Set && a instanceof Set) return Array.from(a.values());
  if ("string" === typeof a) return a.split("");
  if (ba(a)) {
    for (var b = [], c = a.length, d = 0; d < c; d++) {
      b.push(a[d]);
    }
    return b;
  }
  b = [];
  c = 0;
  for (d in a) {
    b[c++] = a[d];
  }
  return b;
}
function Cc(a) {
  if (a.oa && "function" == typeof a.oa) return a.oa();
  if (!a.W || "function" != typeof a.W) {
    if ("undefined" !== typeof Map && a instanceof Map) return Array.from(a.keys());
    if (!("undefined" !== typeof Set && a instanceof Set)) {
      if (ba(a) || "string" === typeof a) {
        var b = [];
        a = a.length;
        for (var c = 0; c < a; c++) {
          b.push(c);
        }
        return b;
      }
      b = [];
      c = 0;
      for (var d in a) {
        b[c++] = d;
      }
      return b;
    }
  }
}
function Dc(a, b) {
  if (a.forEach && "function" == typeof a.forEach) a.forEach(b, void 0);else if (ba(a) || "string" === typeof a) Array.prototype.forEach.call(a, b, void 0);else for (var c = Cc(a), d = Bc(a), e = d.length, f = 0; f < e; f++) {
    b.call(void 0, d[f], c && c[f], a);
  }
}
var Ec = RegExp("^(?:([^:/?#.]+):)?(?://(?:([^\\\\/?#]*)@)?([^\\\\/?#]*?)(?::([0-9]+))?(?=[\\\\/?#]|$))?([^?#]+)?(?:\\?([^#]*))?(?:#([\\s\\S]*))?$");
function Fc(a, b) {
  if (a) {
    a = a.split("&");
    for (var c = 0; c < a.length; c++) {
      var d = a[c].indexOf("="),
        e = null;
      if (0 <= d) {
        var f = a[c].substring(0, d);
        e = a[c].substring(d + 1);
      } else f = a[c];
      b(f, e ? decodeURIComponent(e.replace(/\+/g, " ")) : "");
    }
  }
}
function T(a, b) {
  this.g = this.s = this.j = "";
  this.m = null;
  this.o = this.l = "";
  this.h = !1;
  if (a instanceof T) {
    this.h = void 0 !== b ? b : a.h;
    Gc(this, a.j);
    this.s = a.s;
    this.g = a.g;
    Hc(this, a.m);
    this.l = a.l;
    b = a.i;
    var c = new Ic();
    c.i = b.i;
    b.g && (c.g = new Map(b.g), c.h = b.h);
    Jc(this, c);
    this.o = a.o;
  } else a && (c = String(a).match(Ec)) ? (this.h = !!b, Gc(this, c[1] || "", !0), this.s = Kc(c[2] || ""), this.g = Kc(c[3] || "", !0), Hc(this, c[4]), this.l = Kc(c[5] || "", !0), Jc(this, c[6] || "", !0), this.o = Kc(c[7] || "")) : (this.h = !!b, this.i = new Ic(null, this.h));
}
T.prototype.toString = function () {
  var a = [],
    b = this.j;
  b && a.push(Lc(b, Mc, !0), ":");
  var c = this.g;
  if (c || "file" == b) a.push("//"), (b = this.s) && a.push(Lc(b, Mc, !0), "@"), a.push(encodeURIComponent(String(c)).replace(/%25([0-9a-fA-F]{2})/g, "%$1")), c = this.m, null != c && a.push(":", String(c));
  if (c = this.l) this.g && "/" != c.charAt(0) && a.push("/"), a.push(Lc(c, "/" == c.charAt(0) ? Nc : Oc, !0));
  (c = this.i.toString()) && a.push("?", c);
  (c = this.o) && a.push("#", Lc(c, Pc));
  return a.join("");
};
function M(a) {
  return new T(a);
}
function Gc(a, b, c) {
  a.j = c ? Kc(b, !0) : b;
  a.j && (a.j = a.j.replace(/:$/, ""));
}
function Hc(a, b) {
  if (b) {
    b = Number(b);
    if (isNaN(b) || 0 > b) throw Error("Bad port number " + b);
    a.m = b;
  } else a.m = null;
}
function Jc(a, b, c) {
  b instanceof Ic ? (a.i = b, Qc(a.i, a.h)) : (c || (b = Lc(b, Rc)), a.i = new Ic(b, a.h));
}
function S(a, b, c) {
  a.i.set(b, c);
}
function dc(a) {
  S(a, "zx", Math.floor(2147483648 * Math.random()).toString(36) + Math.abs(Math.floor(2147483648 * Math.random()) ^ Date.now()).toString(36));
  return a;
}
function Kc(a, b) {
  return a ? b ? decodeURI(a.replace(/%25/g, "%2525")) : decodeURIComponent(a) : "";
}
function Lc(a, b, c) {
  return "string" === typeof a ? (a = encodeURI(a).replace(b, Sc), c && (a = a.replace(/%25([0-9a-fA-F]{2})/g, "%$1")), a) : null;
}
function Sc(a) {
  a = a.charCodeAt(0);
  return "%" + (a >> 4 & 15).toString(16) + (a & 15).toString(16);
}
var Mc = /[#\/\?@]/g,
  Oc = /[#\?:]/g,
  Nc = /[#\?]/g,
  Rc = /[#\?@]/g,
  Pc = /#/g;
function Ic(a, b) {
  this.h = this.g = null;
  this.i = a || null;
  this.j = !!b;
}
function U(a) {
  a.g || (a.g = new Map(), a.h = 0, a.i && Fc(a.i, function (b, c) {
    a.add(decodeURIComponent(b.replace(/\+/g, " ")), c);
  }));
}
k = Ic.prototype;
k.add = function (a, b) {
  U(this);
  this.i = null;
  a = V(this, a);
  var c = this.g.get(a);
  c || this.g.set(a, c = []);
  c.push(b);
  this.h += 1;
  return this;
};
function Tc(a, b) {
  U(a);
  b = V(a, b);
  a.g.has(b) && (a.i = null, a.h -= a.g.get(b).length, a.g.delete(b));
}
function Uc(a, b) {
  U(a);
  b = V(a, b);
  return a.g.has(b);
}
k.forEach = function (a, b) {
  U(this);
  this.g.forEach(function (c, d) {
    c.forEach(function (e) {
      a.call(b, e, d, this);
    }, this);
  }, this);
};
k.oa = function () {
  U(this);
  var a = Array.from(this.g.values()),
    b = Array.from(this.g.keys()),
    c = [];
  for (var d = 0; d < b.length; d++) {
    var e = a[d];
    for (var f = 0; f < e.length; f++) {
      c.push(b[d]);
    }
  }
  return c;
};
k.W = function (a) {
  U(this);
  var b = [];
  if ("string" === typeof a) Uc(this, a) && (b = b.concat(this.g.get(V(this, a))));else {
    a = Array.from(this.g.values());
    for (var c = 0; c < a.length; c++) {
      b = b.concat(a[c]);
    }
  }
  return b;
};
k.set = function (a, b) {
  U(this);
  this.i = null;
  a = V(this, a);
  Uc(this, a) && (this.h -= this.g.get(a).length);
  this.g.set(a, [b]);
  this.h += 1;
  return this;
};
k.get = function (a, b) {
  if (!a) return b;
  a = this.W(a);
  return 0 < a.length ? String(a[0]) : b;
};
function fc(a, b, c) {
  Tc(a, b);
  0 < c.length && (a.i = null, a.g.set(V(a, b), ma(c)), a.h += c.length);
}
k.toString = function () {
  if (this.i) return this.i;
  if (!this.g) return "";
  var a = [],
    b = Array.from(this.g.keys());
  for (var c = 0; c < b.length; c++) {
    var d = b[c];
    var f = encodeURIComponent(String(d)),
      h = this.W(d);
    for (d = 0; d < h.length; d++) {
      var e = f;
      "" !== h[d] && (e += "=" + encodeURIComponent(String(h[d])));
      a.push(e);
    }
  }
  return this.i = a.join("&");
};
function V(a, b) {
  b = String(b);
  a.j && (b = b.toLowerCase());
  return b;
}
function Qc(a, b) {
  b && !a.j && (U(a), a.i = null, a.g.forEach(function (c, d) {
    var e = d.toLowerCase();
    d != e && (Tc(this, d), fc(this, e, c));
  }, a));
  a.j = b;
}
var Vc = /*#__PURE__*/createClass_createClass(function Vc(a, b) {
  classCallCheck_classCallCheck(this, Vc);
  this.h = a;
  this.g = b;
});
function Wc(a) {
  this.l = a || Xc;
  l.PerformanceNavigationTiming ? (a = l.performance.getEntriesByType("navigation"), a = 0 < a.length && ("hq" == a[0].nextHopProtocol || "h2" == a[0].nextHopProtocol)) : a = !!(l.g && l.g.Ga && l.g.Ga() && l.g.Ga().$b);
  this.j = a ? this.l : 1;
  this.g = null;
  1 < this.j && (this.g = new Set());
  this.h = null;
  this.i = [];
}
var Xc = 10;
function Yc(a) {
  return a.h ? !0 : a.g ? a.g.size >= a.j : !1;
}
function uc(a) {
  return a.h ? 1 : a.g ? a.g.size : 0;
}
function qc(a, b) {
  return a.h ? a.h == b : a.g ? a.g.has(b) : !1;
}
function vc(a, b) {
  a.g ? a.g.add(b) : a.h = b;
}
function xc(a, b) {
  a.h && a.h == b ? a.h = null : a.g && a.g.has(b) && a.g.delete(b);
}
Wc.prototype.cancel = function () {
  this.i = Zc(this);
  if (this.h) this.h.cancel(), this.h = null;else if (this.g && 0 !== this.g.size) {
    var _iterator = createForOfIteratorHelper_createForOfIteratorHelper(this.g.values()),
      _step;
    try {
      for (_iterator.s(); !(_step = _iterator.n()).done;) {
        var a = _step.value;
        a.cancel();
      }
    } catch (err) {
      _iterator.e(err);
    } finally {
      _iterator.f();
    }
    this.g.clear();
  }
};
function Zc(a) {
  if (null != a.h) return a.i.concat(a.h.D);
  if (null != a.g && 0 !== a.g.size) {
    var b = a.i;
    var _iterator2 = createForOfIteratorHelper_createForOfIteratorHelper(a.g.values()),
      _step2;
    try {
      for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {
        var c = _step2.value;
        b = b.concat(c.D);
      }
    } catch (err) {
      _iterator2.e(err);
    } finally {
      _iterator2.f();
    }
    return b;
  }
  return ma(a.i);
}
function $c() {}
$c.prototype.stringify = function (a) {
  return l.JSON.stringify(a, void 0);
};
$c.prototype.parse = function (a) {
  return l.JSON.parse(a, void 0);
};
function ad() {
  this.g = new $c();
}
function bd(a, b, c) {
  var d = c || "";
  try {
    Dc(a, function (e, f) {
      var h = e;
      p(e) && (h = lb(e));
      b.push(d + f + "=" + encodeURIComponent(h));
    });
  } catch (e) {
    throw b.push(d + "type=" + encodeURIComponent("_badmap")), e;
  }
}
function cd(a, b) {
  var c = new Gb();
  if (l.Image) {
    var d = new Image();
    d.onload = ia(dd, c, d, "TestLoadImage: loaded", !0, b);
    d.onerror = ia(dd, c, d, "TestLoadImage: error", !1, b);
    d.onabort = ia(dd, c, d, "TestLoadImage: abort", !1, b);
    d.ontimeout = ia(dd, c, d, "TestLoadImage: timeout", !1, b);
    l.setTimeout(function () {
      if (d.ontimeout) d.ontimeout();
    }, 1E4);
    d.src = a;
  } else b(!1);
}
function dd(a, b, c, d, e) {
  try {
    b.onload = null, b.onerror = null, b.onabort = null, b.ontimeout = null, e(d);
  } catch (f) {}
}
function ed(a) {
  this.l = a.ac || null;
  this.j = a.jb || !1;
}
t(ed, Sb);
ed.prototype.g = function () {
  return new fd(this.l, this.j);
};
ed.prototype.i = function (a) {
  return function () {
    return a;
  };
}({});
function fd(a, b) {
  B.call(this);
  this.D = a;
  this.u = b;
  this.m = void 0;
  this.readyState = gd;
  this.status = 0;
  this.responseType = this.responseText = this.response = this.statusText = "";
  this.onreadystatechange = null;
  this.v = new Headers();
  this.h = null;
  this.C = "GET";
  this.B = "";
  this.g = !1;
  this.A = this.j = this.l = null;
}
t(fd, B);
var gd = 0;
k = fd.prototype;
k.open = function (a, b) {
  if (this.readyState != gd) throw this.abort(), Error("Error reopening a connection");
  this.C = a;
  this.B = b;
  this.readyState = 1;
  hd(this);
};
k.send = function (a) {
  if (1 != this.readyState) throw this.abort(), Error("need to call open() first. ");
  this.g = !0;
  var b = {
    headers: this.v,
    method: this.C,
    credentials: this.m,
    cache: void 0
  };
  a && (b.body = a);
  (this.D || l).fetch(new Request(this.B, b)).then(this.Wa.bind(this), this.ga.bind(this));
};
k.abort = function () {
  this.response = this.responseText = "";
  this.v = new Headers();
  this.status = 0;
  this.j && this.j.cancel("Request was aborted.").catch(function () {});
  1 <= this.readyState && this.g && 4 != this.readyState && (this.g = !1, id(this));
  this.readyState = gd;
};
k.Wa = function (a) {
  if (this.g && (this.l = a, this.h || (this.status = this.l.status, this.statusText = this.l.statusText, this.h = a.headers, this.readyState = 2, hd(this)), this.g && (this.readyState = 3, hd(this), this.g))) if ("arraybuffer" === this.responseType) a.arrayBuffer().then(this.Ua.bind(this), this.ga.bind(this));else if ("undefined" !== typeof l.ReadableStream && "body" in a) {
    this.j = a.body.getReader();
    if (this.u) {
      if (this.responseType) throw Error('responseType must be empty for "streamBinaryChunks" mode responses.');
      this.response = [];
    } else this.response = this.responseText = "", this.A = new TextDecoder();
    jd(this);
  } else a.text().then(this.Va.bind(this), this.ga.bind(this));
};
function jd(a) {
  a.j.read().then(a.Ta.bind(a)).catch(a.ga.bind(a));
}
k.Ta = function (a) {
  if (this.g) {
    if (this.u && a.value) this.response.push(a.value);else if (!this.u) {
      var b = a.value ? a.value : new Uint8Array(0);
      if (b = this.A.decode(b, {
        stream: !a.done
      })) this.response = this.responseText += b;
    }
    a.done ? id(this) : hd(this);
    3 == this.readyState && jd(this);
  }
};
k.Va = function (a) {
  this.g && (this.response = this.responseText = a, id(this));
};
k.Ua = function (a) {
  this.g && (this.response = a, id(this));
};
k.ga = function () {
  this.g && id(this);
};
function id(a) {
  a.readyState = 4;
  a.l = null;
  a.j = null;
  a.A = null;
  hd(a);
}
k.setRequestHeader = function (a, b) {
  this.v.append(a, b);
};
k.getResponseHeader = function (a) {
  return this.h ? this.h.get(a.toLowerCase()) || "" : "";
};
k.getAllResponseHeaders = function () {
  if (!this.h) return "";
  var a = [],
    b = this.h.entries();
  for (var c = b.next(); !c.done;) {
    c = c.value, a.push(c[0] + ": " + c[1]), c = b.next();
  }
  return a.join("\r\n");
};
function hd(a) {
  a.onreadystatechange && a.onreadystatechange.call(a);
}
Object.defineProperty(fd.prototype, "withCredentials", {
  get: function get() {
    return "include" === this.m;
  },
  set: function set(a) {
    this.m = a ? "include" : "same-origin";
  }
});
var kd = l.JSON.parse;
function W(a) {
  B.call(this);
  this.headers = new Map();
  this.u = a || null;
  this.h = !1;
  this.C = this.g = null;
  this.H = "";
  this.m = 0;
  this.j = "";
  this.l = this.F = this.v = this.D = !1;
  this.B = 0;
  this.A = null;
  this.J = ld;
  this.K = this.L = !1;
}
t(W, B);
var ld = "",
  md = /^https?$/i,
  nd = ["POST", "PUT"];
k = W.prototype;
k.Ka = function (a) {
  this.L = a;
};
k.da = function (a, b, c, d) {
  if (this.g) throw Error("[goog.net.XhrIo] Object is active with another request=" + this.H + "; newUri=" + a);
  b = b ? b.toUpperCase() : "GET";
  this.H = a;
  this.j = "";
  this.m = 0;
  this.D = !1;
  this.h = !0;
  this.g = this.u ? this.u.g() : Xb.g();
  this.C = this.u ? Tb(this.u) : Tb(Xb);
  this.g.onreadystatechange = q(this.Ha, this);
  try {
    this.F = !0, this.g.open(b, String(a), !0), this.F = !1;
  } catch (f) {
    od(this, f);
    return;
  }
  a = c || "";
  c = new Map(this.headers);
  if (d) if (Object.getPrototypeOf(d) === Object.prototype) for (var e in d) {
    c.set(e, d[e]);
  } else if ("function" === typeof d.keys && "function" === typeof d.get) {
    var _iterator3 = createForOfIteratorHelper_createForOfIteratorHelper(d.keys()),
      _step3;
    try {
      for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {
        var f = _step3.value;
        c.set(f, d.get(f));
      }
    } catch (err) {
      _iterator3.e(err);
    } finally {
      _iterator3.f();
    }
  } else throw Error("Unknown input type for opt_headers: " + String(d));
  d = Array.from(c.keys()).find(function (f) {
    return "content-type" == f.toLowerCase();
  });
  e = l.FormData && a instanceof l.FormData;
  !(0 <= la(nd, b)) || d || e || c.set("Content-Type", "application/x-www-form-urlencoded;charset=utf-8");
  var _iterator4 = createForOfIteratorHelper_createForOfIteratorHelper(c),
    _step4;
  try {
    for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {
      var _step4$value = (0,slicedToArray/* default */.Z)(_step4.value, 2),
        _f = _step4$value[0],
        h = _step4$value[1];
      this.g.setRequestHeader(_f, h);
    }
  } catch (err) {
    _iterator4.e(err);
  } finally {
    _iterator4.f();
  }
  this.J && (this.g.responseType = this.J);
  "withCredentials" in this.g && this.g.withCredentials !== this.L && (this.g.withCredentials = this.L);
  try {
    pd(this), 0 < this.B && ((this.K = qd(this.g)) ? (this.g.timeout = this.B, this.g.ontimeout = q(this.qa, this)) : this.A = Ab(this.qa, this.B, this)), this.v = !0, this.g.send(a), this.v = !1;
  } catch (f) {
    od(this, f);
  }
};
function qd(a) {
  return y && Ia() && "number" === typeof a.timeout && void 0 !== a.ontimeout;
}
k.qa = function () {
  "undefined" != typeof goog && this.g && (this.j = "Timed out after " + this.B + "ms, aborting", this.m = 8, C(this, "timeout"), this.abort(8));
};
function od(a, b) {
  a.h = !1;
  a.g && (a.l = !0, a.g.abort(), a.l = !1);
  a.j = b;
  a.m = 5;
  rd(a);
  sd(a);
}
function rd(a) {
  a.D || (a.D = !0, C(a, "complete"), C(a, "error"));
}
k.abort = function (a) {
  this.g && this.h && (this.h = !1, this.l = !0, this.g.abort(), this.l = !1, this.m = a || 7, C(this, "complete"), C(this, "abort"), sd(this));
};
k.M = function () {
  this.g && (this.h && (this.h = !1, this.l = !0, this.g.abort(), this.l = !1), sd(this, !0));
  W.X.M.call(this);
};
k.Ha = function () {
  this.s || (this.F || this.v || this.l ? td(this) : this.fb());
};
k.fb = function () {
  td(this);
};
function td(a) {
  if (a.h && "undefined" != typeof goog && (!a.C[1] || 4 != O(a) || 2 != a.aa())) if (a.v && 4 == O(a)) Ab(a.Ha, 0, a);else if (C(a, "readystatechange"), 4 == O(a)) {
    a.h = !1;
    try {
      var n = a.aa();
      a: switch (n) {
        case 200:
        case 201:
        case 202:
        case 204:
        case 206:
        case 304:
        case 1223:
          var b = !0;
          break a;
        default:
          b = !1;
      }
      var c;
      if (!(c = b)) {
        var d;
        if (d = 0 === n) {
          var e = String(a.H).match(Ec)[1] || null;
          if (!e && l.self && l.self.location) {
            var f = l.self.location.protocol;
            e = f.substr(0, f.length - 1);
          }
          d = !md.test(e ? e.toLowerCase() : "");
        }
        c = d;
      }
      if (c) C(a, "complete"), C(a, "success");else {
        a.m = 6;
        try {
          var h = 2 < O(a) ? a.g.statusText : "";
        } catch (u) {
          h = "";
        }
        a.j = h + " [" + a.aa() + "]";
        rd(a);
      }
    } finally {
      sd(a);
    }
  }
}
function sd(a, b) {
  if (a.g) {
    pd(a);
    var c = a.g,
      d = a.C[0] ? aa : null;
    a.g = null;
    a.C = null;
    b || C(a, "ready");
    try {
      c.onreadystatechange = d;
    } catch (e) {}
  }
}
function pd(a) {
  a.g && a.K && (a.g.ontimeout = null);
  a.A && (l.clearTimeout(a.A), a.A = null);
}
function O(a) {
  return a.g ? a.g.readyState : 0;
}
k.aa = function () {
  try {
    return 2 < O(this) ? this.g.status : -1;
  } catch (a) {
    return -1;
  }
};
k.fa = function () {
  try {
    return this.g ? this.g.responseText : "";
  } catch (a) {
    return "";
  }
};
k.Sa = function (a) {
  if (this.g) {
    var b = this.g.responseText;
    a && 0 == b.indexOf(a) && (b = b.substring(a.length));
    return kd(b);
  }
};
function hc(a) {
  try {
    if (!a.g) return null;
    if ("response" in a.g) return a.g.response;
    switch (a.J) {
      case ld:
      case "text":
        return a.g.responseText;
      case "arraybuffer":
        if ("mozResponseArrayBuffer" in a.g) return a.g.mozResponseArrayBuffer;
    }
    return null;
  } catch (b) {
    return null;
  }
}
k.Ea = function () {
  return this.m;
};
k.Oa = function () {
  return "string" === typeof this.j ? this.j : String(this.j);
};
function ud(a) {
  var b = "";
  Qa(a, function (c, d) {
    b += d;
    b += ":";
    b += c;
    b += "\r\n";
  });
  return b;
}
function vd(a, b, c) {
  a: {
    for (d in c) {
      var d = !1;
      break a;
    }
    d = !0;
  }
  d || (c = ud(c), "string" === typeof a ? null != c && encodeURIComponent(String(c)) : S(a, b, c));
}
function wd(a, b, c) {
  return c && c.internalChannelParams ? c.internalChannelParams[a] || b : b;
}
function xd(a) {
  this.Ca = 0;
  this.i = [];
  this.j = new Gb();
  this.ka = this.sa = this.F = this.V = this.g = this.za = this.D = this.ia = this.o = this.S = this.s = null;
  this.ab = this.U = 0;
  this.Za = wd("failFast", !1, a);
  this.L = this.v = this.u = this.m = this.l = null;
  this.Y = !0;
  this.pa = this.Ba = this.T = -1;
  this.Z = this.A = this.C = 0;
  this.Xa = wd("baseRetryDelayMs", 5E3, a);
  this.bb = wd("retryDelaySeedMs", 1E4, a);
  this.$a = wd("forwardChannelMaxRetries", 2, a);
  this.ta = wd("forwardChannelRequestTimeoutMs", 2E4, a);
  this.ra = a && a.xmlHttpFactory || void 0;
  this.Da = a && a.Zb || !1;
  this.J = void 0;
  this.H = a && a.supportsCrossDomainXhr || !1;
  this.I = "";
  this.h = new Wc(a && a.concurrentRequestLimit);
  this.Fa = new ad();
  this.O = a && a.fastHandshake || !1;
  this.N = a && a.encodeInitMessageHeaders || !1;
  this.O && this.N && (this.N = !1);
  this.Ya = a && a.Xb || !1;
  a && a.Aa && this.j.Aa();
  a && a.forceLongPolling && (this.Y = !1);
  this.$ = !this.O && this.Y && a && a.detectBufferingProxy || !1;
  this.ja = void 0;
  this.P = 0;
  this.K = !1;
  this.la = this.B = null;
}
k = xd.prototype;
k.ma = 8;
k.G = 1;
function Ac(a) {
  yd(a);
  if (3 == a.G) {
    var b = a.U++,
      c = M(a.F);
    S(c, "SID", a.I);
    S(c, "RID", b);
    S(c, "TYPE", "terminate");
    zd(a, c);
    b = new L(a, a.j, b, void 0);
    b.K = 2;
    b.v = dc(M(c));
    c = !1;
    l.navigator && l.navigator.sendBeacon && (c = l.navigator.sendBeacon(b.v.toString(), ""));
    !c && l.Image && (new Image().src = b.v, c = !0);
    c || (b.g = gc(b.l, null), b.g.da(b.v));
    b.F = Date.now();
    N(b);
  }
  Ad(a);
}
function sc(a) {
  a.g && (oc(a), a.g.cancel(), a.g = null);
}
function yd(a) {
  sc(a);
  a.u && (l.clearTimeout(a.u), a.u = null);
  rc(a);
  a.h.cancel();
  a.m && ("number" === typeof a.m && l.clearTimeout(a.m), a.m = null);
}
function zc(a) {
  Yc(a.h) || a.m || (a.m = !0, sb(a.Ja, a), a.C = 0);
}
function Bd(a, b) {
  if (uc(a.h) >= a.h.j - (a.m ? 1 : 0)) return !1;
  if (a.m) return a.i = b.D.concat(a.i), !0;
  if (1 == a.G || 2 == a.G || a.C >= (a.Za ? 0 : a.$a)) return !1;
  a.m = J(q(a.Ja, a, b), Cd(a, a.C));
  a.C++;
  return !0;
}
k.Ja = function (a) {
  if (this.m) if (this.m = null, 1 == this.G) {
    if (!a) {
      this.U = Math.floor(1E5 * Math.random());
      a = this.U++;
      var e = new L(this, this.j, a, void 0);
      var f = this.s;
      this.S && (f ? (f = Ra(f), Ta(f, this.S)) : f = this.S);
      null !== this.o || this.N || (e.H = f, f = null);
      if (this.O) a: {
        var b = 0;
        for (var c = 0; c < this.i.length; c++) {
          b: {
            var d = this.i[c];
            if ("__data__" in d.g && (d = d.g.__data__, "string" === typeof d)) {
              d = d.length;
              break b;
            }
            d = void 0;
          }
          if (void 0 === d) break;
          b += d;
          if (4096 < b) {
            b = c;
            break a;
          }
          if (4096 === b || c === this.i.length - 1) {
            b = c + 1;
            break a;
          }
        }
        b = 1E3;
      } else b = 1E3;
      b = Dd(this, e, b);
      c = M(this.F);
      S(c, "RID", a);
      S(c, "CVER", 22);
      this.D && S(c, "X-HTTP-Session-Id", this.D);
      zd(this, c);
      f && (this.N ? b = "headers=" + encodeURIComponent(String(ud(f))) + "&" + b : this.o && vd(c, this.o, f));
      vc(this.h, e);
      this.Ya && S(c, "TYPE", "init");
      this.O ? (S(c, "$req", b), S(c, "SID", "null"), e.Z = !0, cc(e, c, null)) : cc(e, c, b);
      this.G = 2;
    }
  } else 3 == this.G && (a ? Ed(this, a) : 0 == this.i.length || Yc(this.h) || Ed(this));
};
function Ed(a, b) {
  var c;
  b ? c = b.m : c = a.U++;
  var d = M(a.F);
  S(d, "SID", a.I);
  S(d, "RID", c);
  S(d, "AID", a.T);
  zd(a, d);
  a.o && a.s && vd(d, a.o, a.s);
  c = new L(a, a.j, c, a.C + 1);
  null === a.o && (c.H = a.s);
  b && (a.i = b.D.concat(a.i));
  b = Dd(a, c, 1E3);
  c.setTimeout(Math.round(.5 * a.ta) + Math.round(.5 * a.ta * Math.random()));
  vc(a.h, c);
  cc(c, d, b);
}
function zd(a, b) {
  a.ia && Qa(a.ia, function (c, d) {
    S(b, d, c);
  });
  a.l && Dc({}, function (c, d) {
    S(b, d, c);
  });
}
function Dd(a, b, c) {
  c = Math.min(a.i.length, c);
  var d = a.l ? q(a.l.Ra, a.l, a) : null;
  a: {
    var e = a.i;
    var f = -1;
    for (;;) {
      var h = ["count=" + c];
      -1 == f ? 0 < c ? (f = e[0].h, h.push("ofs=" + f)) : f = 0 : h.push("ofs=" + f);
      var n = !0;
      for (var u = 0; u < c; u++) {
        var m = e[u].h;
        var r = e[u].g;
        m -= f;
        if (0 > m) f = Math.max(0, e[u].h - 100), n = !1;else try {
          bd(r, h, "req" + m + "_");
        } catch (F) {
          d && d(r);
        }
      }
      if (n) {
        d = h.join("&");
        break a;
      }
    }
  }
  a = a.i.splice(0, c);
  b.D = a;
  return d;
}
function yc(a) {
  a.g || a.u || (a.Z = 1, sb(a.Ia, a), a.A = 0);
}
function tc(a) {
  if (a.g || a.u || 3 <= a.A) return !1;
  a.Z++;
  a.u = J(q(a.Ia, a), Cd(a, a.A));
  a.A++;
  return !0;
}
k.Ia = function () {
  this.u = null;
  Fd(this);
  if (this.$ && !(this.K || null == this.g || 0 >= this.P)) {
    var a = 2 * this.P;
    this.j.info("BP detection timer enabled: " + a);
    this.B = J(q(this.eb, this), a);
  }
};
k.eb = function () {
  this.B && (this.B = null, this.j.info("BP detection timeout reached."), this.j.info("Buffering proxy detected and switch to long-polling!"), this.L = !1, this.K = !0, I(10), sc(this), Fd(this));
};
function oc(a) {
  null != a.B && (l.clearTimeout(a.B), a.B = null);
}
function Fd(a) {
  a.g = new L(a, a.j, "rpc", a.Z);
  null === a.o && (a.g.H = a.s);
  a.g.N = 0;
  var b = M(a.sa);
  S(b, "RID", "rpc");
  S(b, "SID", a.I);
  S(b, "CI", a.L ? "0" : "1");
  S(b, "AID", a.T);
  S(b, "TYPE", "xmlhttp");
  zd(a, b);
  a.o && a.s && vd(b, a.o, a.s);
  a.J && a.g.setTimeout(a.J);
  var c = a.g;
  a = a.ka;
  c.K = 1;
  c.v = dc(M(b));
  c.s = null;
  c.P = !0;
  ec(c, a);
}
k.cb = function () {
  null != this.v && (this.v = null, sc(this), tc(this), I(19));
};
function rc(a) {
  null != a.v && (l.clearTimeout(a.v), a.v = null);
}
function mc(a, b) {
  var c = null;
  if (a.g == b) {
    rc(a);
    oc(a);
    a.g = null;
    var d = 2;
  } else if (qc(a.h, b)) c = b.D, xc(a.h, b), d = 1;else return;
  if (0 != a.G) if (a.pa = b.Y, b.i) {
    if (1 == d) {
      c = b.s ? b.s.length : 0;
      b = Date.now() - b.F;
      var e = a.C;
      d = Mb();
      C(d, new Pb(d, c));
      zc(a);
    } else yc(a);
  } else if (e = b.o, 3 == e || 0 == e && 0 < a.pa || !(1 == d && Bd(a, b) || 2 == d && tc(a))) switch (c && 0 < c.length && (b = a.h, b.i = b.i.concat(c)), e) {
    case 1:
      R(a, 5);
      break;
    case 4:
      R(a, 10);
      break;
    case 3:
      R(a, 6);
      break;
    default:
      R(a, 2);
  }
}
function Cd(a, b) {
  var c = a.Xa + Math.floor(Math.random() * a.bb);
  a.l || (c *= 2);
  return c * b;
}
function R(a, b) {
  a.j.info("Error code " + b);
  if (2 == b) {
    var c = null;
    a.l && (c = null);
    var d = q(a.kb, a);
    c || (c = new T("//www.google.com/images/cleardot.gif"), l.location && "http" == l.location.protocol || Gc(c, "https"), dc(c));
    cd(c.toString(), d);
  } else I(2);
  a.G = 0;
  a.l && a.l.va(b);
  Ad(a);
  yd(a);
}
k.kb = function (a) {
  a ? (this.j.info("Successfully pinged google.com"), I(2)) : (this.j.info("Failed to ping google.com"), I(1));
};
function Ad(a) {
  a.G = 0;
  a.la = [];
  if (a.l) {
    var b = Zc(a.h);
    if (0 != b.length || 0 != a.i.length) na(a.la, b), na(a.la, a.i), a.h.i.length = 0, ma(a.i), a.i.length = 0;
    a.l.ua();
  }
}
function wc(a, b, c) {
  var d = c instanceof T ? M(c) : new T(c, void 0);
  if ("" != d.g) b && (d.g = b + "." + d.g), Hc(d, d.m);else {
    var e = l.location;
    d = e.protocol;
    b = b ? b + "." + e.hostname : e.hostname;
    e = +e.port;
    var f = new T(null, void 0);
    d && Gc(f, d);
    b && (f.g = b);
    e && Hc(f, e);
    c && (f.l = c);
    d = f;
  }
  c = a.D;
  b = a.za;
  c && b && S(d, c, b);
  S(d, "VER", a.ma);
  zd(a, d);
  return d;
}
function gc(a, b, c) {
  if (b && !a.H) throw Error("Can't create secondary domain capable XhrIo object.");
  b = c && a.Da && !a.ra ? new W(new ed({
    jb: !0
  })) : new W(a.ra);
  b.Ka(a.H);
  return b;
}
function Gd() {}
k = Gd.prototype;
k.xa = function () {};
k.wa = function () {};
k.va = function () {};
k.ua = function () {};
k.Ra = function () {};
function Hd() {
  if (y && !(10 <= Number(La))) throw Error("Environmental error: no available transport.");
}
Hd.prototype.g = function (a, b) {
  return new X(a, b);
};
function X(a, b) {
  B.call(this);
  this.g = new xd(b);
  this.l = a;
  this.h = b && b.messageUrlParams || null;
  a = b && b.messageHeaders || null;
  b && b.clientProtocolHeaderRequired && (a ? a["X-Client-Protocol"] = "webchannel" : a = {
    "X-Client-Protocol": "webchannel"
  });
  this.g.s = a;
  a = b && b.initMessageHeaders || null;
  b && b.messageContentType && (a ? a["X-WebChannel-Content-Type"] = b.messageContentType : a = {
    "X-WebChannel-Content-Type": b.messageContentType
  });
  b && b.ya && (a ? a["X-WebChannel-Client-Profile"] = b.ya : a = {
    "X-WebChannel-Client-Profile": b.ya
  });
  this.g.S = a;
  (a = b && b.Yb) && !pa(a) && (this.g.o = a);
  this.A = b && b.supportsCrossDomainXhr || !1;
  this.v = b && b.sendRawJson || !1;
  (b = b && b.httpSessionIdParam) && !pa(b) && (this.g.D = b, a = this.h, null !== a && b in a && (a = this.h, b in a && delete a[b]));
  this.j = new Y(this);
}
t(X, B);
X.prototype.m = function () {
  this.g.l = this.j;
  this.A && (this.g.H = !0);
  var a = this.g,
    b = this.l,
    c = this.h || void 0;
  I(0);
  a.V = b;
  a.ia = c || {};
  a.L = a.Y;
  a.F = wc(a, null, a.V);
  zc(a);
};
X.prototype.close = function () {
  Ac(this.g);
};
X.prototype.u = function (a) {
  var b = this.g;
  if ("string" === typeof a) {
    var c = {};
    c.__data__ = a;
    a = c;
  } else this.v && (c = {}, c.__data__ = lb(a), a = c);
  b.i.push(new Vc(b.ab++, a));
  3 == b.G && zc(b);
};
X.prototype.M = function () {
  this.g.l = null;
  delete this.j;
  Ac(this.g);
  delete this.g;
  X.X.M.call(this);
};
function Id(a) {
  Vb.call(this);
  var b = a.__sm__;
  if (b) {
    a: {
      for (var c in b) {
        a = c;
        break a;
      }
      a = void 0;
    }
    if (this.i = a) a = this.i, b = null !== b && a in b ? b[a] : void 0;
    this.data = b;
  } else this.data = a;
}
t(Id, Vb);
function Jd() {
  Wb.call(this);
  this.status = 1;
}
t(Jd, Wb);
function Y(a) {
  this.g = a;
}
t(Y, Gd);
Y.prototype.xa = function () {
  C(this.g, "a");
};
Y.prototype.wa = function (a) {
  C(this.g, new Id(a));
};
Y.prototype.va = function (a) {
  C(this.g, new Jd());
};
Y.prototype.ua = function () {
  C(this.g, "b");
}; /*
   Copyright 2017 Google LLC
   Licensed under the Apache License, Version 2.0 (the "License");
   you may not use this file except in compliance with the License.
   You may obtain a copy of the License at
   http://www.apache.org/licenses/LICENSE-2.0
   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
   */
Hd.prototype.createWebChannel = Hd.prototype.g;
X.prototype.send = X.prototype.u;
X.prototype.open = X.prototype.m;
X.prototype.close = X.prototype.close;
Qb.NO_ERROR = 0;
Qb.TIMEOUT = 8;
Qb.HTTP_ERROR = 6;
Rb.COMPLETE = "complete";
Ub.EventType = K;
K.OPEN = "a";
K.CLOSE = "b";
K.ERROR = "c";
K.MESSAGE = "d";
B.prototype.listen = B.prototype.N;
W.prototype.listenOnce = W.prototype.O;
W.prototype.getLastError = W.prototype.Oa;
W.prototype.getLastErrorCode = W.prototype.Ea;
W.prototype.getStatus = W.prototype.aa;
W.prototype.getResponseJson = W.prototype.Sa;
W.prototype.getResponseText = W.prototype.fa;
W.prototype.send = W.prototype.da;
W.prototype.setWithCredentials = W.prototype.Ka;
var index_esm2017_createWebChannelTransport = esm.createWebChannelTransport = function () {
  return new Hd();
};
var index_esm2017_getStatEventTarget = esm.getStatEventTarget = function () {
  return Mb();
};
var index_esm2017_ErrorCode = esm.ErrorCode = Qb;
var index_esm2017_EventType = esm.EventType = Rb;
var index_esm2017_Event = esm.Event = G;
var index_esm2017_Stat = esm.Stat = {
  sb: 0,
  vb: 1,
  wb: 2,
  Pb: 3,
  Ub: 4,
  Rb: 5,
  Sb: 6,
  Qb: 7,
  Ob: 8,
  Tb: 9,
  PROXY: 10,
  NOPROXY: 11,
  Mb: 12,
  Ib: 13,
  Jb: 14,
  Hb: 15,
  Kb: 16,
  Lb: 17,
  ob: 18,
  nb: 19,
  pb: 20
};
var index_esm2017_FetchXmlHttpFactory = esm.FetchXmlHttpFactory = ed;
var index_esm2017_WebChannel = esm.WebChannel = Ub;
var index_esm2017_XhrIo = esm.XhrIo = W;

;// CONCATENATED MODULE: ./node_modules/@firebase/firestore/dist/index.esm2017.js

















var b = "@firebase/firestore";

/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * Simple wrapper around a nullable UID. Mostly exists to make code more
 * readable.
 */
var index_esm2017_P = /*#__PURE__*/function () {
  function P(t) {
    classCallCheck_classCallCheck(this, P);
    this.uid = t;
  }
  createClass_createClass(P, [{
    key: "isAuthenticated",
    value: function isAuthenticated() {
      return null != this.uid;
    }
    /**
     * Returns a key representing this user, suitable for inclusion in a
     * dictionary.
     */
  }, {
    key: "toKey",
    value: function toKey() {
      return this.isAuthenticated() ? "uid:" + this.uid : "anonymous-user";
    }
  }, {
    key: "isEqual",
    value: function isEqual(t) {
      return t.uid === this.uid;
    }
  }]);
  return P;
}();
/** A user with a null UID. */
index_esm2017_P.UNAUTHENTICATED = new index_esm2017_P(null),
// TODO(mikelehen): Look into getting a proper uid-equivalent for
// non-FirebaseAuth providers.
index_esm2017_P.GOOGLE_CREDENTIALS = new index_esm2017_P("google-credentials-uid"), index_esm2017_P.FIRST_PARTY = new index_esm2017_P("first-party-uid"), index_esm2017_P.MOCK_USER = new index_esm2017_P("mock-user");

/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
var index_esm2017_v = "9.15.0";

/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
var index_esm2017_V = new Logger("@firebase/firestore");

// Helper methods are needed because variables can't be exported as read/write
function index_esm2017_S() {
  return index_esm2017_V.logLevel;
}

/**
 * Sets the verbosity of Cloud Firestore logs (debug, error, or silent).
 *
 * @param logLevel - The verbosity you set for activity and error logging. Can
 *   be any of the following values:
 *
 *   <ul>
 *     <li>`debug` for the most verbose logging level, primarily for
 *     debugging.</li>
 *     <li>`error` to log errors only.</li>
 *     <li><code>`silent` to turn off logging.</li>
 *   </ul>
 */
function index_esm2017_D(t) {
  index_esm2017_V.setLogLevel(t);
}
function index_esm2017_C(t) {
  if (index_esm2017_V.logLevel <= index_esm2017_LogLevel.DEBUG) {
    for (var _len = arguments.length, e = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
      e[_key - 1] = arguments[_key];
    }
    var n = e.map(index_esm2017_k);
    index_esm2017_V.debug.apply(index_esm2017_V, ["Firestore (".concat(index_esm2017_v, "): ").concat(t)].concat((0,toConsumableArray/* default */.Z)(n)));
  }
}
function index_esm2017_x(t) {
  if (index_esm2017_V.logLevel <= index_esm2017_LogLevel.ERROR) {
    for (var _len2 = arguments.length, e = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {
      e[_key2 - 1] = arguments[_key2];
    }
    var n = e.map(index_esm2017_k);
    index_esm2017_V.error.apply(index_esm2017_V, ["Firestore (".concat(index_esm2017_v, "): ").concat(t)].concat((0,toConsumableArray/* default */.Z)(n)));
  }
}

/**
 * @internal
 */
function index_esm2017_N(t) {
  if (index_esm2017_V.logLevel <= index_esm2017_LogLevel.WARN) {
    for (var _len3 = arguments.length, e = new Array(_len3 > 1 ? _len3 - 1 : 0), _key3 = 1; _key3 < _len3; _key3++) {
      e[_key3 - 1] = arguments[_key3];
    }
    var n = e.map(index_esm2017_k);
    index_esm2017_V.warn.apply(index_esm2017_V, ["Firestore (".concat(index_esm2017_v, "): ").concat(t)].concat((0,toConsumableArray/* default */.Z)(n)));
  }
}

/**
 * Converts an additional log parameter to a string representation.
 */
function index_esm2017_k(t) {
  if ("string" == typeof t) return t;
  try {
    return e = t, JSON.stringify(e);
  } catch (e) {
    // Converting to JSON failed, just log the object directly
    return t;
  }
  /**
  * @license
  * Copyright 2020 Google LLC
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
  * you may not use this file except in compliance with the License.
  * You may obtain a copy of the License at
  *
  *   http://www.apache.org/licenses/LICENSE-2.0
  *
  * Unless required by applicable law or agreed to in writing, software
  * distributed under the License is distributed on an "AS IS" BASIS,
  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  * See the License for the specific language governing permissions and
  * limitations under the License.
  */
  /** Formats an object as a JSON string, suitable for logging. */
  var e;
}

/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * Unconditionally fails, throwing an Error with the given message.
 * Messages are stripped in production builds.
 *
 * Returns `never` and can be used in expressions:
 * @example
 * let futureVar = fail('not implemented yet');
 */
function index_esm2017_O() {
  var t = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : "Unexpected state";
  // Log the failure in addition to throw an exception, just in case the
  // exception is swallowed.
  var e = "FIRESTORE (".concat(index_esm2017_v, ") INTERNAL ASSERTION FAILED: ") + t;
  // NOTE: We don't use FirestoreError here because these are internal failures
  // that cannot be handled by the user. (Also it would create a circular
  // dependency between the error and assert modules which doesn't work.)
  throw index_esm2017_x(e), new Error(e);
}

/**
 * Fails if the given assertion condition is false, throwing an Error with the
 * given message if it did.
 *
 * Messages are stripped in production builds.
 */
function index_esm2017_M(t, e) {
  t || index_esm2017_O();
}

/**
 * Fails if the given assertion condition is false, throwing an Error with the
 * given message if it did.
 *
 * The code of callsites invoking this function are stripped out in production
 * builds. Any side-effects of code within the debugAssert() invocation will not
 * happen in this case.
 *
 * @internal
 */
function F(t, e) {
  t || index_esm2017_O();
}

/**
 * Casts `obj` to `T`. In non-production builds, verifies that `obj` is an
 * instance of `T` before casting.
 */
function $(t,
// eslint-disable-next-line @typescript-eslint/no-explicit-any
e) {
  return t;
}

/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
var index_esm2017_B = {
  // Causes are copied from:
  // https://github.com/grpc/grpc/blob/bceec94ea4fc5f0085d81235d8e1c06798dc341a/include/grpc%2B%2B/impl/codegen/status_code_enum.h
  /** Not an error; returned on success. */
  OK: "ok",
  /** The operation was cancelled (typically by the caller). */
  CANCELLED: "cancelled",
  /** Unknown error or an error from a different error domain. */
  UNKNOWN: "unknown",
  /**
   * Client specified an invalid argument. Note that this differs from
   * FAILED_PRECONDITION. INVALID_ARGUMENT indicates arguments that are
   * problematic regardless of the state of the system (e.g., a malformed file
   * name).
   */
  INVALID_ARGUMENT: "invalid-argument",
  /**
   * Deadline expired before operation could complete. For operations that
   * change the state of the system, this error may be returned even if the
   * operation has completed successfully. For example, a successful response
   * from a server could have been delayed long enough for the deadline to
   * expire.
   */
  DEADLINE_EXCEEDED: "deadline-exceeded",
  /** Some requested entity (e.g., file or directory) was not found. */
  NOT_FOUND: "not-found",
  /**
   * Some entity that we attempted to create (e.g., file or directory) already
   * exists.
   */
  ALREADY_EXISTS: "already-exists",
  /**
   * The caller does not have permission to execute the specified operation.
   * PERMISSION_DENIED must not be used for rejections caused by exhausting
   * some resource (use RESOURCE_EXHAUSTED instead for those errors).
   * PERMISSION_DENIED must not be used if the caller can not be identified
   * (use UNAUTHENTICATED instead for those errors).
   */
  PERMISSION_DENIED: "permission-denied",
  /**
   * The request does not have valid authentication credentials for the
   * operation.
   */
  UNAUTHENTICATED: "unauthenticated",
  /**
   * Some resource has been exhausted, perhaps a per-user quota, or perhaps the
   * entire file system is out of space.
   */
  RESOURCE_EXHAUSTED: "resource-exhausted",
  /**
   * Operation was rejected because the system is not in a state required for
   * the operation's execution. For example, directory to be deleted may be
   * non-empty, an rmdir operation is applied to a non-directory, etc.
   *
   * A litmus test that may help a service implementor in deciding
   * between FAILED_PRECONDITION, ABORTED, and UNAVAILABLE:
   *  (a) Use UNAVAILABLE if the client can retry just the failing call.
   *  (b) Use ABORTED if the client should retry at a higher-level
   *      (e.g., restarting a read-modify-write sequence).
   *  (c) Use FAILED_PRECONDITION if the client should not retry until
   *      the system state has been explicitly fixed. E.g., if an "rmdir"
   *      fails because the directory is non-empty, FAILED_PRECONDITION
   *      should be returned since the client should not retry unless
   *      they have first fixed up the directory by deleting files from it.
   *  (d) Use FAILED_PRECONDITION if the client performs conditional
   *      REST Get/Update/Delete on a resource and the resource on the
   *      server does not match the condition. E.g., conflicting
   *      read-modify-write on the same resource.
   */
  FAILED_PRECONDITION: "failed-precondition",
  /**
   * The operation was aborted, typically due to a concurrency issue like
   * sequencer check failures, transaction aborts, etc.
   *
   * See litmus test above for deciding between FAILED_PRECONDITION, ABORTED,
   * and UNAVAILABLE.
   */
  ABORTED: "aborted",
  /**
   * Operation was attempted past the valid range. E.g., seeking or reading
   * past end of file.
   *
   * Unlike INVALID_ARGUMENT, this error indicates a problem that may be fixed
   * if the system state changes. For example, a 32-bit file system will
   * generate INVALID_ARGUMENT if asked to read at an offset that is not in the
   * range [0,2^32-1], but it will generate OUT_OF_RANGE if asked to read from
   * an offset past the current file size.
   *
   * There is a fair bit of overlap between FAILED_PRECONDITION and
   * OUT_OF_RANGE. We recommend using OUT_OF_RANGE (the more specific error)
   * when it applies so that callers who are iterating through a space can
   * easily look for an OUT_OF_RANGE error to detect when they are done.
   */
  OUT_OF_RANGE: "out-of-range",
  /** Operation is not implemented or not supported/enabled in this service. */
  UNIMPLEMENTED: "unimplemented",
  /**
   * Internal errors. Means some invariants expected by underlying System has
   * been broken. If you see one of these errors, Something is very broken.
   */
  INTERNAL: "internal",
  /**
   * The service is currently unavailable. This is a most likely a transient
   * condition and may be corrected by retrying with a backoff.
   *
   * See litmus test above for deciding between FAILED_PRECONDITION, ABORTED,
   * and UNAVAILABLE.
   */
  UNAVAILABLE: "unavailable",
  /** Unrecoverable data loss or corruption. */
  DATA_LOSS: "data-loss"
};

/** An error returned by a Firestore operation. */
var index_esm2017_L = /*#__PURE__*/function (_FirebaseError) {
  inherits_inherits(L, _FirebaseError);
  var _super = createSuper_createSuper(L);
  /** @hideconstructor */
  function L(
  /**
   * The backend error code associated with this error.
   */
  t,
  /**
   * A custom error description.
   */
  e) {
    var _this;
    classCallCheck_classCallCheck(this, L);
    _this = _super.call(this, t, e), _this.code = t, _this.message = e,
    // HACK: We write a toString property directly because Error is not a real
    // class and so inheritance does not work correctly. We could alternatively
    // do the same "back-door inheritance" trick that FirebaseError does.
    _this.toString = function () {
      return "".concat(_this.name, ": [code=").concat(_this.code, "]: ").concat(_this.message);
    };
    return _this;
  }
  return createClass_createClass(L);
}(FirebaseError);
/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
var index_esm2017_q = /*#__PURE__*/createClass_createClass(function q() {
  var _this2 = this;
  classCallCheck_classCallCheck(this, q);
  this.promise = new Promise(function (t, e) {
    _this2.resolve = t, _this2.reject = e;
  });
});
/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
var index_esm2017_U = /*#__PURE__*/createClass_createClass(function U(t, e) {
  classCallCheck_classCallCheck(this, U);
  this.user = e, this.type = "OAuth", this.headers = new Map(), this.headers.set("Authorization", "Bearer ".concat(t));
});
/**
 * A CredentialsProvider that always yields an empty token.
 * @internal
 */
var index_esm2017_K = /*#__PURE__*/function () {
  function K() {
    classCallCheck_classCallCheck(this, K);
  }
  createClass_createClass(K, [{
    key: "getToken",
    value: function getToken() {
      return Promise.resolve(null);
    }
  }, {
    key: "invalidateToken",
    value: function invalidateToken() {}
  }, {
    key: "start",
    value: function start(t, e) {
      // Fire with initial user.
      t.enqueueRetryable(function () {
        return e(index_esm2017_P.UNAUTHENTICATED);
      });
    }
  }, {
    key: "shutdown",
    value: function shutdown() {}
  }]);
  return K;
}();
/**
 * A CredentialsProvider that always returns a constant token. Used for
 * emulator token mocking.
 */
var index_esm2017_G = /*#__PURE__*/function () {
  function G(t) {
    classCallCheck_classCallCheck(this, G);
    this.token = t,
    /**
     * Stores the listener registered with setChangeListener()
     * This isn't actually necessary since the UID never changes, but we use this
     * to verify the listen contract is adhered to in tests.
     */
    this.changeListener = null;
  }
  createClass_createClass(G, [{
    key: "getToken",
    value: function getToken() {
      return Promise.resolve(this.token);
    }
  }, {
    key: "invalidateToken",
    value: function invalidateToken() {}
  }, {
    key: "start",
    value: function start(t, e) {
      var _this3 = this;
      this.changeListener = e,
      // Fire with initial user.
      t.enqueueRetryable(function () {
        return e(_this3.token.user);
      });
    }
  }, {
    key: "shutdown",
    value: function shutdown() {
      this.changeListener = null;
    }
  }]);
  return G;
}();
var index_esm2017_Q = /*#__PURE__*/function () {
  function Q(t) {
    classCallCheck_classCallCheck(this, Q);
    this.t = t, /** Tracks the current User. */
    this.currentUser = index_esm2017_P.UNAUTHENTICATED,
    /**
     * Counter used to detect if the token changed while a getToken request was
     * outstanding.
     */
    this.i = 0, this.forceRefresh = !1, this.auth = null;
  }
  createClass_createClass(Q, [{
    key: "start",
    value: function start(t, e) {
      var _this4 = this;
      var n = this.i;
      // A change listener that prevents double-firing for the same token change.
      var s = function s(t) {
        return _this4.i !== n ? (n = _this4.i, e(t)) : Promise.resolve();
      };
      // A promise that can be waited on to block on the next token change.
      // This promise is re-created after each change.
      var i = new index_esm2017_q();
      this.o = function () {
        _this4.i++, _this4.currentUser = _this4.u(), i.resolve(), i = new index_esm2017_q(), t.enqueueRetryable(function () {
          return s(_this4.currentUser);
        });
      };
      var r = function r() {
          var e = i;
          t.enqueueRetryable( /*#__PURE__*/asyncToGenerator_asyncToGenerator( /*#__PURE__*/regeneratorRuntime_regeneratorRuntime().mark(function _callee() {
            return regeneratorRuntime_regeneratorRuntime().wrap(function _callee$(_context) {
              while (1) {
                switch (_context.prev = _context.next) {
                  case 0:
                    _context.next = 2;
                    return e.promise;
                  case 2:
                    _context.next = 4;
                    return s(_this4.currentUser);
                  case 4:
                  case "end":
                    return _context.stop();
                }
              }
            }, _callee);
          })));
        },
        o = function o(t) {
          index_esm2017_C("FirebaseAuthCredentialsProvider", "Auth detected"), _this4.auth = t, _this4.auth.addAuthTokenListener(_this4.o), r();
        };
      this.t.onInit(function (t) {
        return o(t);
      }),
      // Our users can initialize Auth right after Firestore, so we give it
      // a chance to register itself with the component framework before we
      // determine whether to start up in unauthenticated mode.
      setTimeout(function () {
        if (!_this4.auth) {
          var _t2 = _this4.t.getImmediate({
            optional: !0
          });
          _t2 ? o(_t2) : (
          // If auth is still not available, proceed with `null` user
          index_esm2017_C("FirebaseAuthCredentialsProvider", "Auth not yet detected"), i.resolve(), i = new index_esm2017_q());
        }
      }, 0), r();
    }
  }, {
    key: "getToken",
    value: function getToken() {
      var _this5 = this;
      // Take note of the current value of the tokenCounter so that this method
      // can fail (with an ABORTED error) if there is a token change while the
      // request is outstanding.
      var t = this.i,
        e = this.forceRefresh;
      return this.forceRefresh = !1, this.auth ? this.auth.getToken(e).then(function (e) {
        return (
          // Cancel the request since the token changed while the request was
          // outstanding so the response is potentially for a previous user (which
          // user, we can't be sure).
          _this5.i !== t ? (index_esm2017_C("FirebaseAuthCredentialsProvider", "getToken aborted due to token change."), _this5.getToken()) : e ? (index_esm2017_M("string" == typeof e.accessToken), new index_esm2017_U(e.accessToken, _this5.currentUser)) : null
        );
      }) : Promise.resolve(null);
    }
  }, {
    key: "invalidateToken",
    value: function invalidateToken() {
      this.forceRefresh = !0;
    }
  }, {
    key: "shutdown",
    value: function shutdown() {
      this.auth && this.auth.removeAuthTokenListener(this.o);
    }
    // Auth.getUid() can return null even with a user logged in. It is because
    // getUid() is synchronous, but the auth code populating Uid is asynchronous.
    // This method should only be called in the AuthTokenListener callback
    // to guarantee to get the actual user.
  }, {
    key: "u",
    value: function u() {
      var t = this.auth && this.auth.getUid();
      return index_esm2017_M(null === t || "string" == typeof t), new index_esm2017_P(t);
    }
  }]);
  return Q;
}();
/*
 * FirstPartyToken provides a fresh token each time its value
 * is requested, because if the token is too old, requests will be rejected.
 * Technically this may no longer be necessary since the SDK should gracefully
 * recover from unauthenticated errors (see b/33147818 for context), but it's
 * safer to keep the implementation as-is.
 */
var j = /*#__PURE__*/function () {
  function j(t, e, n, s) {
    classCallCheck_classCallCheck(this, j);
    this.h = t, this.l = e, this.m = n, this.g = s, this.type = "FirstParty", this.user = index_esm2017_P.FIRST_PARTY, this.p = new Map();
  }
  /** Gets an authorization token, using a provided factory function, or falling back to First Party GAPI. */
  createClass_createClass(j, [{
    key: "I",
    value: function I() {
      return this.g ? this.g() : (
      // Make sure this really is a Gapi client.
      index_esm2017_M(!("object" != typeof this.h || null === this.h || !this.h.auth || !this.h.auth.getAuthHeaderValueForFirstParty)), this.h.auth.getAuthHeaderValueForFirstParty([]));
    }
  }, {
    key: "headers",
    get: function get() {
      this.p.set("X-Goog-AuthUser", this.l);
      // Use array notation to prevent minification
      var t = this.I();
      return t && this.p.set("Authorization", t), this.m && this.p.set("X-Goog-Iam-Authorization-Token", this.m), this.p;
    }
  }]);
  return j;
}();
/*
 * Provides user credentials required for the Firestore JavaScript SDK
 * to authenticate the user, using technique that is only available
 * to applications hosted by Google.
 */
var index_esm2017_W = /*#__PURE__*/function () {
  function W(t, e, n, s) {
    classCallCheck_classCallCheck(this, W);
    this.h = t, this.l = e, this.m = n, this.g = s;
  }
  createClass_createClass(W, [{
    key: "getToken",
    value: function getToken() {
      return Promise.resolve(new j(this.h, this.l, this.m, this.g));
    }
  }, {
    key: "start",
    value: function start(t, e) {
      // Fire with initial uid.
      t.enqueueRetryable(function () {
        return e(index_esm2017_P.FIRST_PARTY);
      });
    }
  }, {
    key: "shutdown",
    value: function shutdown() {}
  }, {
    key: "invalidateToken",
    value: function invalidateToken() {}
  }]);
  return W;
}();
var index_esm2017_z = /*#__PURE__*/createClass_createClass(function z(t) {
  classCallCheck_classCallCheck(this, z);
  this.value = t, this.type = "AppCheck", this.headers = new Map(), t && t.length > 0 && this.headers.set("x-firebase-appcheck", this.value);
});
var index_esm2017_H = /*#__PURE__*/function () {
  function H(t) {
    classCallCheck_classCallCheck(this, H);
    this.T = t, this.forceRefresh = !1, this.appCheck = null, this.A = null;
  }
  createClass_createClass(H, [{
    key: "start",
    value: function start(t, e) {
      var _this6 = this;
      var n = function n(t) {
        null != t.error && index_esm2017_C("FirebaseAppCheckTokenProvider", "Error getting App Check token; using placeholder token instead. Error: ".concat(t.error.message));
        var n = t.token !== _this6.A;
        return _this6.A = t.token, index_esm2017_C("FirebaseAppCheckTokenProvider", "Received ".concat(n ? "new" : "existing", " token.")), n ? e(t.token) : Promise.resolve();
      };
      this.o = function (e) {
        t.enqueueRetryable(function () {
          return n(e);
        });
      };
      var s = function s(t) {
        index_esm2017_C("FirebaseAppCheckTokenProvider", "AppCheck detected"), _this6.appCheck = t, _this6.appCheck.addTokenListener(_this6.o);
      };
      this.T.onInit(function (t) {
        return s(t);
      }),
      // Our users can initialize AppCheck after Firestore, so we give it
      // a chance to register itself with the component framework.
      setTimeout(function () {
        if (!_this6.appCheck) {
          var _t3 = _this6.T.getImmediate({
            optional: !0
          });
          _t3 ? s(_t3) :
          // If AppCheck is still not available, proceed without it.
          index_esm2017_C("FirebaseAppCheckTokenProvider", "AppCheck not yet detected");
        }
      }, 0);
    }
  }, {
    key: "getToken",
    value: function getToken() {
      var _this7 = this;
      var t = this.forceRefresh;
      return this.forceRefresh = !1, this.appCheck ? this.appCheck.getToken(t).then(function (t) {
        return t ? (index_esm2017_M("string" == typeof t.token), _this7.A = t.token, new index_esm2017_z(t.token)) : null;
      }) : Promise.resolve(null);
    }
  }, {
    key: "invalidateToken",
    value: function invalidateToken() {
      this.forceRefresh = !0;
    }
  }, {
    key: "shutdown",
    value: function shutdown() {
      this.appCheck && this.appCheck.removeTokenListener(this.o);
    }
  }]);
  return H;
}();
/**
 * An AppCheck token provider that always yields an empty token.
 * @internal
 */
var index_esm2017_J = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  function J() {
    _classCallCheck(this, J);
  }
  _createClass(J, [{
    key: "getToken",
    value: function getToken() {
      return Promise.resolve(new index_esm2017_z(""));
    }
  }, {
    key: "invalidateToken",
    value: function invalidateToken() {}
  }, {
    key: "start",
    value: function start(t, e) {}
  }, {
    key: "shutdown",
    value: function shutdown() {}
  }]);
  return J;
}()));
/**
 * Builds a CredentialsProvider depending on the type of
 * the credentials passed in.
 */
/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * Generates `nBytes` of random bytes.
 *
 * If `nBytes < 0` , an error will be thrown.
 */
function index_esm2017_Y(t) {
  // Polyfills for IE and WebWorker by using `self` and `msCrypto` when `crypto` is not available.
  var e =
    // eslint-disable-next-line @typescript-eslint/no-explicit-any
    "undefined" != typeof self && (self.crypto || self.msCrypto),
    n = new Uint8Array(t);
  if (e && "function" == typeof e.getRandomValues) e.getRandomValues(n);else
    // Falls back to Math.random
    for (var _e2 = 0; _e2 < t; _e2++) {
      n[_e2] = Math.floor(256 * Math.random());
    }
  return n;
}

/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
var index_esm2017_X = /*#__PURE__*/function () {
  function X() {
    classCallCheck_classCallCheck(this, X);
  }
  createClass_createClass(X, null, [{
    key: "R",
    value: function R() {
      // Alphanumeric characters
      var t = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789",
        e = Math.floor(256 / t.length) * t.length;
      // The largest byte value that is a multiple of `char.length`.
      var n = "";
      for (; n.length < 20;) {
        var s = index_esm2017_Y(40);
        for (var i = 0; i < s.length; ++i) {
          // Only accept values that are [0, maxMultiple), this ensures they can
          // be evenly mapped to indices of `chars` via a modulo operation.
          n.length < 20 && s[i] < e && (n += t.charAt(s[i] % t.length));
        }
      }
      return n;
    }
  }]);
  return X;
}();
function Z(t, e) {
  return t < e ? -1 : t > e ? 1 : 0;
}

/** Helper to compare arrays using isEqual(). */
function tt(t, e, n) {
  return t.length === e.length && t.every(function (t, s) {
    return n(t, e[s]);
  });
}

/**
 * Returns the immediate lexicographically-following string. This is useful to
 * construct an inclusive range for indexeddb iterators.
 */
function et(t) {
  // Return the input string, with an additional NUL byte appended.
  return t + "\0";
}

/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
// The earliest date supported by Firestore timestamps (0001-01-01T00:00:00Z).
/**
 * A `Timestamp` represents a point in time independent of any time zone or
 * calendar, represented as seconds and fractions of seconds at nanosecond
 * resolution in UTC Epoch time.
 *
 * It is encoded using the Proleptic Gregorian Calendar which extends the
 * Gregorian calendar backwards to year one. It is encoded assuming all minutes
 * are 60 seconds long, i.e. leap seconds are "smeared" so that no leap second
 * table is needed for interpretation. Range is from 0001-01-01T00:00:00Z to
 * 9999-12-31T23:59:59.999999999Z.
 *
 * For examples and further specifications, refer to the
 * {@link https://github.com/google/protobuf/blob/master/src/google/protobuf/timestamp.proto | Timestamp definition}.
 */
var nt = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  /**
   * Creates a new timestamp.
   *
   * @param seconds - The number of seconds of UTC time since Unix epoch
   *     1970-01-01T00:00:00Z. Must be from 0001-01-01T00:00:00Z to
   *     9999-12-31T23:59:59Z inclusive.
   * @param nanoseconds - The non-negative fractions of a second at nanosecond
   *     resolution. Negative second values with fractions must still have
   *     non-negative nanoseconds values that count forward in time. Must be
   *     from 0 to 999,999,999 inclusive.
   */
  function nt(
  /**
   * The number of seconds of UTC time since Unix epoch 1970-01-01T00:00:00Z.
   */
  t,
  /**
   * The fractions of a second at nanosecond resolution.*
   */
  e) {
    _classCallCheck(this, nt);
    if (this.seconds = t, this.nanoseconds = e, e < 0) throw new index_esm2017_L(index_esm2017_B.INVALID_ARGUMENT, "Timestamp nanoseconds out of range: " + e);
    if (e >= 1e9) throw new index_esm2017_L(index_esm2017_B.INVALID_ARGUMENT, "Timestamp nanoseconds out of range: " + e);
    if (t < -62135596800) throw new index_esm2017_L(index_esm2017_B.INVALID_ARGUMENT, "Timestamp seconds out of range: " + t);
    // This will break in the year 10,000.
    if (t >= 253402300800) throw new index_esm2017_L(index_esm2017_B.INVALID_ARGUMENT, "Timestamp seconds out of range: " + t);
  }
  /**
   * Creates a new timestamp with the current date, with millisecond precision.
   *
   * @returns a new timestamp representing the current date.
   */
  _createClass(nt, [{
    key: "toDate",
    value:
    /**
     * Converts a `Timestamp` to a JavaScript `Date` object. This conversion
     * causes a loss of precision since `Date` objects only support millisecond
     * precision.
     *
     * @returns JavaScript `Date` object representing the same point in time as
     *     this `Timestamp`, with millisecond precision.
     */
    function toDate() {
      return new Date(this.toMillis());
    }
    /**
     * Converts a `Timestamp` to a numeric timestamp (in milliseconds since
     * epoch). This operation causes a loss of precision.
     *
     * @returns The point in time corresponding to this timestamp, represented as
     *     the number of milliseconds since Unix epoch 1970-01-01T00:00:00Z.
     */
  }, {
    key: "toMillis",
    value: function toMillis() {
      return 1e3 * this.seconds + this.nanoseconds / 1e6;
    }
  }, {
    key: "_compareTo",
    value: function _compareTo(t) {
      return this.seconds === t.seconds ? Z(this.nanoseconds, t.nanoseconds) : Z(this.seconds, t.seconds);
    }
    /**
     * Returns true if this `Timestamp` is equal to the provided one.
     *
     * @param other - The `Timestamp` to compare against.
     * @returns true if this `Timestamp` is equal to the provided one.
     */
  }, {
    key: "isEqual",
    value: function isEqual(t) {
      return t.seconds === this.seconds && t.nanoseconds === this.nanoseconds;
    }
    /** Returns a textual representation of this `Timestamp`. */
  }, {
    key: "toString",
    value: function toString() {
      return "Timestamp(seconds=" + this.seconds + ", nanoseconds=" + this.nanoseconds + ")";
    }
    /** Returns a JSON-serializable representation of this `Timestamp`. */
  }, {
    key: "toJSON",
    value: function toJSON() {
      return {
        seconds: this.seconds,
        nanoseconds: this.nanoseconds
      };
    }
    /**
     * Converts this object to a primitive string, which allows `Timestamp` objects
     * to be compared using the `>`, `<=`, `>=` and `>` operators.
     */
  }, {
    key: "valueOf",
    value: function valueOf() {
      // This method returns a string of the form <seconds>.<nanoseconds> where
      // <seconds> is translated to have a non-negative value and both <seconds>
      // and <nanoseconds> are left-padded with zeroes to be a consistent length.
      // Strings with this format then have a lexiographical ordering that matches
      // the expected ordering. The <seconds> translation is done to avoid having
      // a leading negative sign (i.e. a leading '-' character) in its string
      // representation, which would affect its lexiographical ordering.
      var t = this.seconds - -62135596800;
      // Note: Up to 12 decimal digits are required to represent all valid
      // 'seconds' values.
      return String(t).padStart(12, "0") + "." + String(this.nanoseconds).padStart(9, "0");
    }
  }], [{
    key: "now",
    value: function now() {
      return nt.fromMillis(Date.now());
    }
    /**
     * Creates a new timestamp from the given date.
     *
     * @param date - The date to initialize the `Timestamp` from.
     * @returns A new `Timestamp` representing the same point in time as the given
     *     date.
     */
  }, {
    key: "fromDate",
    value: function fromDate(t) {
      return nt.fromMillis(t.getTime());
    }
    /**
     * Creates a new timestamp from the given number of milliseconds.
     *
     * @param milliseconds - Number of milliseconds since Unix epoch
     *     1970-01-01T00:00:00Z.
     * @returns A new `Timestamp` representing the same point in time as the given
     *     number of milliseconds.
     */
  }, {
    key: "fromMillis",
    value: function fromMillis(t) {
      var e = Math.floor(t / 1e3),
        n = Math.floor(1e6 * (t - 1e3 * e));
      return new nt(e, n);
    }
  }]);
  return nt;
}()));
/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * A version of a document in Firestore. This corresponds to the version
 * timestamp, such as update_time or read_time.
 */
var st = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  function st(t) {
    _classCallCheck(this, st);
    this.timestamp = t;
  }
  _createClass(st, [{
    key: "compareTo",
    value: function compareTo(t) {
      return this.timestamp._compareTo(t.timestamp);
    }
  }, {
    key: "isEqual",
    value: function isEqual(t) {
      return this.timestamp.isEqual(t.timestamp);
    }
    /** Returns a number representation of the version for use in spec tests. */
  }, {
    key: "toMicroseconds",
    value: function toMicroseconds() {
      // Convert to microseconds.
      return 1e6 * this.timestamp.seconds + this.timestamp.nanoseconds / 1e3;
    }
  }, {
    key: "toString",
    value: function toString() {
      return "SnapshotVersion(" + this.timestamp.toString() + ")";
    }
  }, {
    key: "toTimestamp",
    value: function toTimestamp() {
      return this.timestamp;
    }
  }], [{
    key: "fromTimestamp",
    value: function fromTimestamp(t) {
      return new st(t);
    }
  }, {
    key: "min",
    value: function min() {
      return new st(new nt(0, 0));
    }
  }, {
    key: "max",
    value: function max() {
      return new st(new nt(253402300799, 999999999));
    }
  }]);
  return st;
}()));
/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * Path represents an ordered sequence of string segments.
 */
var it = /*#__PURE__*/function () {
  function it(t, e, n) {
    classCallCheck_classCallCheck(this, it);
    void 0 === e ? e = 0 : e > t.length && index_esm2017_O(), void 0 === n ? n = t.length - e : n > t.length - e && index_esm2017_O(), this.segments = t, this.offset = e, this.len = n;
  }
  createClass_createClass(it, [{
    key: "length",
    get: function get() {
      return this.len;
    }
  }, {
    key: "isEqual",
    value: function isEqual(t) {
      return 0 === it.comparator(this, t);
    }
  }, {
    key: "child",
    value: function child(t) {
      var e = this.segments.slice(this.offset, this.limit());
      return t instanceof it ? t.forEach(function (t) {
        e.push(t);
      }) : e.push(t), this.construct(e);
    }
    /** The index of one past the last segment of the path. */
  }, {
    key: "limit",
    value: function limit() {
      return this.offset + this.length;
    }
  }, {
    key: "popFirst",
    value: function popFirst(t) {
      return t = void 0 === t ? 1 : t, this.construct(this.segments, this.offset + t, this.length - t);
    }
  }, {
    key: "popLast",
    value: function popLast() {
      return this.construct(this.segments, this.offset, this.length - 1);
    }
  }, {
    key: "firstSegment",
    value: function firstSegment() {
      return this.segments[this.offset];
    }
  }, {
    key: "lastSegment",
    value: function lastSegment() {
      return this.get(this.length - 1);
    }
  }, {
    key: "get",
    value: function get(t) {
      return this.segments[this.offset + t];
    }
  }, {
    key: "isEmpty",
    value: function isEmpty() {
      return 0 === this.length;
    }
  }, {
    key: "isPrefixOf",
    value: function isPrefixOf(t) {
      if (t.length < this.length) return !1;
      for (var e = 0; e < this.length; e++) {
        if (this.get(e) !== t.get(e)) return !1;
      }
      return !0;
    }
  }, {
    key: "isImmediateParentOf",
    value: function isImmediateParentOf(t) {
      if (this.length + 1 !== t.length) return !1;
      for (var e = 0; e < this.length; e++) {
        if (this.get(e) !== t.get(e)) return !1;
      }
      return !0;
    }
  }, {
    key: "forEach",
    value: function forEach(t) {
      for (var e = this.offset, n = this.limit(); e < n; e++) {
        t(this.segments[e]);
      }
    }
  }, {
    key: "toArray",
    value: function toArray() {
      return this.segments.slice(this.offset, this.limit());
    }
  }], [{
    key: "comparator",
    value: function comparator(t, e) {
      var n = Math.min(t.length, e.length);
      for (var s = 0; s < n; s++) {
        var _n2 = t.get(s),
          i = e.get(s);
        if (_n2 < i) return -1;
        if (_n2 > i) return 1;
      }
      return t.length < e.length ? -1 : t.length > e.length ? 1 : 0;
    }
  }]);
  return it;
}();
/**
 * A slash-separated path for navigating resources (documents and collections)
 * within Firestore.
 *
 * @internal
 */
var rt = /*#__PURE__*/function (_it) {
  inherits_inherits(rt, _it);
  var _super2 = createSuper_createSuper(rt);
  function rt() {
    classCallCheck_classCallCheck(this, rt);
    return _super2.apply(this, arguments);
  }
  createClass_createClass(rt, [{
    key: "construct",
    value: function construct(t, e, n) {
      return new rt(t, e, n);
    }
  }, {
    key: "canonicalString",
    value: function canonicalString() {
      // NOTE: The client is ignorant of any path segments containing escape
      // sequences (e.g. __id123__) and just passes them through raw (they exist
      // for legacy reasons and should not be used frequently).
      return this.toArray().join("/");
    }
  }, {
    key: "toString",
    value: function toString() {
      return this.canonicalString();
    }
    /**
     * Creates a resource path from the given slash-delimited string. If multiple
     * arguments are provided, all components are combined. Leading and trailing
     * slashes from all components are ignored.
     */
  }], [{
    key: "fromString",
    value: function fromString() {
      // NOTE: The client is ignorant of any path segments containing escape
      // sequences (e.g. __id123__) and just passes them through raw (they exist
      // for legacy reasons and should not be used frequently).
      var e = [];
      for (var _len4 = arguments.length, t = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {
        t[_key4] = arguments[_key4];
      }
      for (var _i2 = 0, _t4 = t; _i2 < _t4.length; _i2++) {
        var n = _t4[_i2];
        if (n.indexOf("//") >= 0) throw new index_esm2017_L(index_esm2017_B.INVALID_ARGUMENT, "Invalid segment (".concat(n, "). Paths must not contain // in them."));
        // Strip leading and traling slashed.
        e.push.apply(e, (0,toConsumableArray/* default */.Z)(n.split("/").filter(function (t) {
          return t.length > 0;
        })));
      }
      return new rt(e);
    }
  }, {
    key: "emptyPath",
    value: function emptyPath() {
      return new rt([]);
    }
  }]);
  return rt;
}(it);
var ot = /^[_a-zA-Z][_a-zA-Z0-9]*$/;

/**
 * A dot-separated path for navigating sub-objects within a document.
 * @internal
 */
var ut = /*#__PURE__*/(/* unused pure expression or super */ null && (function (_it2) {
  _inherits(ut, _it2);
  var _super3 = _createSuper(ut);
  function ut() {
    _classCallCheck(this, ut);
    return _super3.apply(this, arguments);
  }
  _createClass(ut, [{
    key: "construct",
    value: function construct(t, e, n) {
      return new ut(t, e, n);
    }
    /**
     * Returns true if the string could be used as a segment in a field path
     * without escaping.
     */
  }, {
    key: "canonicalString",
    value: function canonicalString() {
      return this.toArray().map(function (t) {
        return t = t.replace(/\\/g, "\\\\").replace(/`/g, "\\`"), ut.isValidIdentifier(t) || (t = "`" + t + "`"), t;
      }).join(".");
    }
  }, {
    key: "toString",
    value: function toString() {
      return this.canonicalString();
    }
    /**
     * Returns true if this field references the key of a document.
     */
  }, {
    key: "isKeyField",
    value: function isKeyField() {
      return 1 === this.length && "__name__" === this.get(0);
    }
    /**
     * The field designating the key of a document.
     */
  }], [{
    key: "isValidIdentifier",
    value: function isValidIdentifier(t) {
      return ot.test(t);
    }
  }, {
    key: "keyField",
    value: function keyField() {
      return new ut(["__name__"]);
    }
    /**
     * Parses a field string from the given server-formatted string.
     *
     * - Splitting the empty string is not allowed (for now at least).
     * - Empty segments within the string (e.g. if there are two consecutive
     *   separators) are not allowed.
     *
     * TODO(b/37244157): we should make this more strict. Right now, it allows
     * non-identifier path components, even if they aren't escaped.
     */
  }, {
    key: "fromServerFormat",
    value: function fromServerFormat(t) {
      var e = [];
      var n = "",
        s = 0;
      var i = function i() {
        if (0 === n.length) throw new index_esm2017_L(index_esm2017_B.INVALID_ARGUMENT, "Invalid field path (".concat(t, "). Paths must not be empty, begin with '.', end with '.', or contain '..'"));
        e.push(n), n = "";
      };
      var r = !1;
      for (; s < t.length;) {
        var _e3 = t[s];
        if ("\\" === _e3) {
          if (s + 1 === t.length) throw new index_esm2017_L(index_esm2017_B.INVALID_ARGUMENT, "Path has trailing escape character: " + t);
          var _e4 = t[s + 1];
          if ("\\" !== _e4 && "." !== _e4 && "`" !== _e4) throw new index_esm2017_L(index_esm2017_B.INVALID_ARGUMENT, "Path has invalid escape sequence: " + t);
          n += _e4, s += 2;
        } else "`" === _e3 ? (r = !r, s++) : "." !== _e3 || r ? (n += _e3, s++) : (i(), s++);
      }
      if (i(), r) throw new index_esm2017_L(index_esm2017_B.INVALID_ARGUMENT, "Unterminated ` in path: " + t);
      return new ut(e);
    }
  }, {
    key: "emptyPath",
    value: function emptyPath() {
      return new ut([]);
    }
  }]);
  return ut;
}(it)));
/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * @internal
 */
var ct = /*#__PURE__*/function () {
  function ct(t) {
    classCallCheck_classCallCheck(this, ct);
    this.path = t;
  }
  createClass_createClass(ct, [{
    key: "collectionGroup",
    get: function get() {
      return this.path.popLast().lastSegment();
    }
    /** Returns true if the document is in the specified collectionId. */
  }, {
    key: "hasCollectionId",
    value: function hasCollectionId(t) {
      return this.path.length >= 2 && this.path.get(this.path.length - 2) === t;
    }
    /** Returns the collection group (i.e. the name of the parent collection) for this key. */
  }, {
    key: "getCollectionGroup",
    value: function getCollectionGroup() {
      return this.path.get(this.path.length - 2);
    }
    /** Returns the fully qualified path to the parent collection. */
  }, {
    key: "getCollectionPath",
    value: function getCollectionPath() {
      return this.path.popLast();
    }
  }, {
    key: "isEqual",
    value: function isEqual(t) {
      return null !== t && 0 === rt.comparator(this.path, t.path);
    }
  }, {
    key: "toString",
    value: function toString() {
      return this.path.toString();
    }
  }], [{
    key: "fromPath",
    value: function fromPath(t) {
      return new ct(rt.fromString(t));
    }
  }, {
    key: "fromName",
    value: function fromName(t) {
      return new ct(rt.fromString(t).popFirst(5));
    }
  }, {
    key: "empty",
    value: function empty() {
      return new ct(rt.emptyPath());
    }
  }, {
    key: "comparator",
    value: function comparator(t, e) {
      return rt.comparator(t.path, e.path);
    }
  }, {
    key: "isDocumentKey",
    value: function isDocumentKey(t) {
      return t.length % 2 == 0;
    }
    /**
     * Creates and returns a new document key with the given segments.
     *
     * @param segments - The segments of the path to the document
     * @returns A new instance of DocumentKey
     */
  }, {
    key: "fromSegments",
    value: function fromSegments(t) {
      return new ct(new rt(t.slice()));
    }
  }]);
  return ct;
}();
/**
 * @license
 * Copyright 2021 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * The initial mutation batch id for each index. Gets updated during index
 * backfill.
 */
/**
 * An index definition for field indexes in Firestore.
 *
 * Every index is associated with a collection. The definition contains a list
 * of fields and their index kind (which can be `ASCENDING`, `DESCENDING` or
 * `CONTAINS` for ArrayContains/ArrayContainsAny queries).
 *
 * Unlike the backend, the SDK does not differentiate between collection or
 * collection group-scoped indices. Every index can be used for both single
 * collection and collection group queries.
 */
var at = /*#__PURE__*/createClass_createClass(function at(
/**
 * The index ID. Returns -1 if the index ID is not available (e.g. the index
 * has not yet been persisted).
 */
t, /** The collection ID this index applies to. */
e, /** The field segments for this index. */
n, /** Shows how up-to-date the index is for the current user. */
s) {
  classCallCheck_classCallCheck(this, at);
  this.indexId = t, this.collectionGroup = e, this.fields = n, this.indexState = s;
});
/** An ID for an index that has not yet been added to persistence.  */
/** Returns the ArrayContains/ArrayContainsAny segment for this index. */
function ht(t) {
  return t.fields.find(function (t) {
    return 2 /* IndexKind.CONTAINS */ === t.kind;
  });
}

/** Returns all directional (ascending/descending) segments for this index. */
function lt(t) {
  return t.fields.filter(function (t) {
    return 2 /* IndexKind.CONTAINS */ !== t.kind;
  });
}

/**
 * Returns the order of the document key component for the given index.
 *
 * PORTING NOTE: This is only used in the Web IndexedDb implementation.
 */
/**
 * Compares indexes by collection group and segments. Ignores update time and
 * index ID.
 */
function ft(t, e) {
  var n = Z(t.collectionGroup, e.collectionGroup);
  if (0 !== n) return n;
  for (var s = 0; s < Math.min(t.fields.length, e.fields.length); ++s) {
    if (n = _t(t.fields[s], e.fields[s]), 0 !== n) return n;
  }
  return Z(t.fields.length, e.fields.length);
}

/** Returns a debug representation of the field index */
at.UNKNOWN_ID = -1;

/** An index component consisting of field path and index type.  */
var dt = /*#__PURE__*/(/* unused pure expression or super */ null && (_createClass(function dt( /** The field path of the component. */
t, /** The fields sorting order. */
e) {
  _classCallCheck(this, dt);
  this.fieldPath = t, this.kind = e;
})));
function _t(t, e) {
  var n = ut.comparator(t.fieldPath, e.fieldPath);
  return 0 !== n ? n : Z(t.kind, e.kind);
}

/**
 * Stores the "high water mark" that indicates how updated the Index is for the
 * current user.
 */
var wt = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  function wt(
  /**
   * Indicates when the index was last updated (relative to other indexes).
   */
  t, /** The the latest indexed read time, document and batch id. */
  e) {
    _classCallCheck(this, wt);
    this.sequenceNumber = t, this.offset = e;
  }
  /** The state of an index that has not yet been backfilled. */
  _createClass(wt, null, [{
    key: "empty",
    value: function empty() {
      return new wt(0, yt.min());
    }
  }]);
  return wt;
}()));
/**
 * Creates an offset that matches all documents with a read time higher than
 * `readTime`.
 */
function mt(t, e) {
  // We want to create an offset that matches all documents with a read time
  // greater than the provided read time. To do so, we technically need to
  // create an offset for `(readTime, MAX_DOCUMENT_KEY)`. While we could use
  // Unicode codepoints to generate MAX_DOCUMENT_KEY, it is much easier to use
  // `(readTime + 1, DocumentKey.empty())` since `> DocumentKey.empty()` matches
  // all valid document IDs.
  var n = t.toTimestamp().seconds,
    s = t.toTimestamp().nanoseconds + 1,
    i = st.fromTimestamp(1e9 === s ? new nt(n + 1, 0) : new nt(n, s));
  return new yt(i, ct.empty(), e);
}

/** Creates a new offset based on the provided document. */
function gt(t) {
  return new yt(t.readTime, t.key, -1);
}

/**
 * Stores the latest read time, document and batch ID that were processed for an
 * index.
 */
var yt = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  function yt(
  /**
   * The latest read time version that has been indexed by Firestore for this
   * field index.
   */
  t,
  /**
   * The key of the last document that was indexed for this query. Use
   * `DocumentKey.empty()` if no document has been indexed.
   */
  e,
  /*
   * The largest mutation batch id that's been processed by Firestore.
   */
  n) {
    _classCallCheck(this, yt);
    this.readTime = t, this.documentKey = e, this.largestBatchId = n;
  }
  /** Returns an offset that sorts before all regular offsets. */
  _createClass(yt, null, [{
    key: "min",
    value: function min() {
      return new yt(st.min(), ct.empty(), -1);
    }
    /** Returns an offset that sorts after all regular offsets. */
  }, {
    key: "max",
    value: function max() {
      return new yt(st.max(), ct.empty(), -1);
    }
  }]);
  return yt;
}()));
function pt(t, e) {
  var n = t.readTime.compareTo(e.readTime);
  return 0 !== n ? n : (n = ct.comparator(t.documentKey, e.documentKey), 0 !== n ? n : Z(t.largestBatchId, e.largestBatchId));
}

/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
var It = "The current tab is not in the required state to perform this operation. It might be necessary to refresh the browser tab.";

/**
 * A base class representing a persistence transaction, encapsulating both the
 * transaction's sequence numbers as well as a list of onCommitted listeners.
 *
 * When you call Persistence.runTransaction(), it will create a transaction and
 * pass it to your callback. You then pass it to any method that operates
 * on persistence.
 */
var Tt = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  function Tt() {
    _classCallCheck(this, Tt);
    this.onCommittedListeners = [];
  }
  _createClass(Tt, [{
    key: "addOnCommittedListener",
    value: function addOnCommittedListener(t) {
      this.onCommittedListeners.push(t);
    }
  }, {
    key: "raiseOnCommittedEvent",
    value: function raiseOnCommittedEvent() {
      this.onCommittedListeners.forEach(function (t) {
        return t();
      });
    }
  }]);
  return Tt;
}()));
/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * Verifies the error thrown by a LocalStore operation. If a LocalStore
 * operation fails because the primary lease has been taken by another client,
 * we ignore the error (the persistence layer will immediately call
 * `applyPrimaryLease` to propagate the primary state change). All other errors
 * are re-thrown.
 *
 * @param err - An error returned by a LocalStore operation.
 * @returns A Promise that resolves after we recovered, or the original error.
 */
function Et(_x) {
  return _Et.apply(this, arguments);
}
/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * PersistencePromise is essentially a re-implementation of Promise except
 * it has a .next() method instead of .then() and .next() and .catch() callbacks
 * are executed synchronously when a PersistencePromise resolves rather than
 * asynchronously (Promise implementations use setImmediate() or similar).
 *
 * This is necessary to interoperate with IndexedDB which will automatically
 * commit transactions if control is returned to the event loop without
 * synchronously initiating another operation on the transaction.
 *
 * NOTE: .then() and .catch() only allow a single consumer, unlike normal
 * Promises.
 */
function _Et() {
  _Et = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee74(t) {
    return _regeneratorRuntime().wrap(function _callee74$(_context74) {
      while (1) {
        switch (_context74.prev = _context74.next) {
          case 0:
            if (!(t.code !== index_esm2017_B.FAILED_PRECONDITION || t.message !== It)) {
              _context74.next = 2;
              break;
            }
            throw t;
          case 2:
            index_esm2017_C("LocalStore", "Unexpectedly lost primary lease");
          case 3:
          case "end":
            return _context74.stop();
        }
      }
    }, _callee74);
  }));
  return _Et.apply(this, arguments);
}
var At = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  function At(t) {
    var _this8 = this;
    _classCallCheck(this, At);
    // NOTE: next/catchCallback will always point to our own wrapper functions,
    // not the user's raw next() or catch() callbacks.
    this.nextCallback = null, this.catchCallback = null,
    // When the operation resolves, we'll set result or error and mark isDone.
    this.result = void 0, this.error = void 0, this.isDone = !1,
    // Set to true when .then() or .catch() are called and prevents additional
    // chaining.
    this.callbackAttached = !1, t(function (t) {
      _this8.isDone = !0, _this8.result = t, _this8.nextCallback &&
      // value should be defined unless T is Void, but we can't express
      // that in the type system.
      _this8.nextCallback(t);
    }, function (t) {
      _this8.isDone = !0, _this8.error = t, _this8.catchCallback && _this8.catchCallback(t);
    });
  }
  _createClass(At, [{
    key: "catch",
    value: function _catch(t) {
      return this.next(void 0, t);
    }
  }, {
    key: "next",
    value: function next(t, e) {
      var _this9 = this;
      return this.callbackAttached && index_esm2017_O(), this.callbackAttached = !0, this.isDone ? this.error ? this.wrapFailure(e, this.error) : this.wrapSuccess(t, this.result) : new At(function (n, s) {
        _this9.nextCallback = function (e) {
          _this9.wrapSuccess(t, e).next(n, s);
        }, _this9.catchCallback = function (t) {
          _this9.wrapFailure(e, t).next(n, s);
        };
      });
    }
  }, {
    key: "toPromise",
    value: function toPromise() {
      var _this10 = this;
      return new Promise(function (t, e) {
        _this10.next(t, e);
      });
    }
  }, {
    key: "wrapUserFunction",
    value: function wrapUserFunction(t) {
      try {
        var e = t();
        return e instanceof At ? e : At.resolve(e);
      } catch (t) {
        return At.reject(t);
      }
    }
  }, {
    key: "wrapSuccess",
    value: function wrapSuccess(t, e) {
      return t ? this.wrapUserFunction(function () {
        return t(e);
      }) : At.resolve(e);
    }
  }, {
    key: "wrapFailure",
    value: function wrapFailure(t, e) {
      return t ? this.wrapUserFunction(function () {
        return t(e);
      }) : At.reject(e);
    }
  }], [{
    key: "resolve",
    value: function resolve(t) {
      return new At(function (e, n) {
        e(t);
      });
    }
  }, {
    key: "reject",
    value: function reject(t) {
      return new At(function (e, n) {
        n(t);
      });
    }
  }, {
    key: "waitFor",
    value: function waitFor(
    // Accept all Promise types in waitFor().
    // eslint-disable-next-line @typescript-eslint/no-explicit-any
    t) {
      return new At(function (e, n) {
        var s = 0,
          i = 0,
          r = !1;
        t.forEach(function (t) {
          ++s, t.next(function () {
            ++i, r && i === s && e();
          }, function (t) {
            return n(t);
          });
        }), r = !0, i === s && e();
      });
    }
    /**
     * Given an array of predicate functions that asynchronously evaluate to a
     * boolean, implements a short-circuiting `or` between the results. Predicates
     * will be evaluated until one of them returns `true`, then stop. The final
     * result will be whether any of them returned `true`.
     */
  }, {
    key: "or",
    value: function or(t) {
      var e = At.resolve(!1);
      var _iterator = _createForOfIteratorHelper(t),
        _step;
      try {
        var _loop = function _loop() {
          var n = _step.value;
          e = e.next(function (t) {
            return t ? At.resolve(t) : n();
          });
        };
        for (_iterator.s(); !(_step = _iterator.n()).done;) {
          _loop();
        }
      } catch (err) {
        _iterator.e(err);
      } finally {
        _iterator.f();
      }
      return e;
    }
  }, {
    key: "forEach",
    value: function forEach(t, e) {
      var _this11 = this;
      var n = [];
      return t.forEach(function (t, s) {
        n.push(e.call(_this11, t, s));
      }), this.waitFor(n);
    }
    /**
     * Concurrently map all array elements through asynchronous function.
     */
  }, {
    key: "mapArray",
    value: function mapArray(t, e) {
      return new At(function (n, s) {
        var i = t.length,
          r = new Array(i);
        var o = 0;
        var _loop2 = function _loop2(u) {
          var c = u;
          e(t[c]).next(function (t) {
            r[c] = t, ++o, o === i && n(r);
          }, function (t) {
            return s(t);
          });
        };
        for (var u = 0; u < i; u++) {
          _loop2(u);
        }
      });
    }
    /**
     * An alternative to recursive PersistencePromise calls, that avoids
     * potential memory problems from unbounded chains of promises.
     *
     * The `action` will be called repeatedly while `condition` is true.
     */
  }, {
    key: "doWhile",
    value: function doWhile(t, e) {
      return new At(function (n, s) {
        var i = function i() {
          !0 === t() ? e().next(function () {
            i();
          }, s) : n();
        };
        i();
      });
    }
  }]);
  return At;
}()));
/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
// References to `window` are guarded by SimpleDb.isAvailable()
/* eslint-disable no-restricted-globals */
/**
 * Wraps an IDBTransaction and exposes a store() method to get a handle to a
 * specific object store.
 */
var Rt = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  function Rt(t, e) {
    var _this12 = this;
    _classCallCheck(this, Rt);
    this.action = t, this.transaction = e, this.aborted = !1,
    /**
     * A `Promise` that resolves with the result of the IndexedDb transaction.
     */
    this.P = new index_esm2017_q(), this.transaction.oncomplete = function () {
      _this12.P.resolve();
    }, this.transaction.onabort = function () {
      e.error ? _this12.P.reject(new vt(t, e.error)) : _this12.P.resolve();
    }, this.transaction.onerror = function (e) {
      var n = xt(e.target.error);
      _this12.P.reject(new vt(t, n));
    };
  }
  _createClass(Rt, [{
    key: "v",
    get: function get() {
      return this.P.promise;
    }
  }, {
    key: "abort",
    value: function abort(t) {
      t && this.P.reject(t), this.aborted || (index_esm2017_C("SimpleDb", "Aborting transaction:", t ? t.message : "Client-initiated abort"), this.aborted = !0, this.transaction.abort());
    }
  }, {
    key: "V",
    value: function V() {
      // If the browser supports V3 IndexedDB, we invoke commit() explicitly to
      // speed up index DB processing if the event loop remains blocks.
      // eslint-disable-next-line @typescript-eslint/no-explicit-any
      var t = this.transaction;
      this.aborted || "function" != typeof t.commit || t.commit();
    }
    /**
     * Returns a SimpleDbStore<KeyType, ValueType> for the specified store. All
     * operations performed on the SimpleDbStore happen within the context of this
     * transaction and it cannot be used anymore once the transaction is
     * completed.
     *
     * Note that we can't actually enforce that the KeyType and ValueType are
     * correct, but they allow type safety through the rest of the consuming code.
     */
  }, {
    key: "store",
    value: function store(t) {
      var e = this.transaction.objectStore(t);
      return new St(e);
    }
  }], [{
    key: "open",
    value: function open(t, e, n, s) {
      try {
        return new Rt(e, t.transaction(s, n));
      } catch (t) {
        throw new vt(e, t);
      }
    }
  }]);
  return Rt;
}()));
/**
 * Provides a wrapper around IndexedDb with a simplified interface that uses
 * Promise-like return values to chain operations. Real promises cannot be used
 * since .then() continuations are executed asynchronously (e.g. via
 * .setImmediate), which would cause IndexedDB to end the transaction.
 * See PersistencePromise for more details.
 */
var bt = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  /*
   * Creates a new SimpleDb wrapper for IndexedDb database `name`.
   *
   * Note that `version` must not be a downgrade. IndexedDB does not support
   * downgrading the schema version. We currently do not support any way to do
   * versioning outside of IndexedDB's versioning mechanism, as only
   * version-upgrade transactions are allowed to do things like create
   * objectstores.
   */
  function bt(t, e, n) {
    _classCallCheck(this, bt);
    this.name = t, this.version = e, this.S = n;
    // NOTE: According to https://bugs.webkit.org/show_bug.cgi?id=197050, the
    // bug we're checking for should exist in iOS >= 12.2 and < 13, but for
    // whatever reason it's much harder to hit after 12.2 so we only proactively
    // log on 12.2.
    12.2 === bt.D(getUA()) && index_esm2017_x("Firestore persistence suffers from a bug in iOS 12.2 Safari that may cause your app to stop working. See https://stackoverflow.com/q/56496296/110915 for details and a potential workaround.");
  }
  /** Deletes the specified database. */
  _createClass(bt, [{
    key: "F",
    value:
    /**
     * Opens the specified database, creating or upgrading it if necessary.
     */
    function () {
      var _F = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(t) {
        var _this13 = this;
        return _regeneratorRuntime().wrap(function _callee2$(_context2) {
          while (1) {
            switch (_context2.prev = _context2.next) {
              case 0:
                _context2.t0 = this.db;
                if (_context2.t0) {
                  _context2.next = 6;
                  break;
                }
                index_esm2017_C("SimpleDb", "Opening database:", this.name);
                _context2.next = 5;
                return new Promise(function (e, n) {
                  // TODO(mikelehen): Investigate browser compatibility.
                  // https://developer.mozilla.org/en-US/docs/Web/API/IndexedDB_API/Using_IndexedDB
                  // suggests IE9 and older WebKit browsers handle upgrade
                  // differently. They expect setVersion, as described here:
                  // https://developer.mozilla.org/en-US/docs/Web/API/IDBVersionChangeRequest/setVersion
                  var s = indexedDB.open(_this13.name, _this13.version);
                  s.onsuccess = function (t) {
                    var n = t.target.result;
                    e(n);
                  }, s.onblocked = function () {
                    n(new vt(t, "Cannot upgrade IndexedDB schema while another tab is open. Close all tabs that access Firestore and reload this page to proceed."));
                  }, s.onerror = function (e) {
                    var s = e.target.error;
                    "VersionError" === s.name ? n(new index_esm2017_L(index_esm2017_B.FAILED_PRECONDITION, "A newer version of the Firestore SDK was previously used and so the persisted data is not compatible with the version of the SDK you are now using. The SDK will operate with persistence disabled. If you need persistence, please re-upgrade to a newer version of the SDK or else clear the persisted IndexedDB data for your app to start fresh.")) : "InvalidStateError" === s.name ? n(new index_esm2017_L(index_esm2017_B.FAILED_PRECONDITION, "Unable to open an IndexedDB connection. This could be due to running in a private browsing session on a browser whose private browsing sessions do not support IndexedDB: " + s)) : n(new vt(t, s));
                  }, s.onupgradeneeded = function (t) {
                    index_esm2017_C("SimpleDb", 'Database "' + _this13.name + '" requires upgrade from version:', t.oldVersion);
                    var e = t.target.result;
                    _this13.S.$(e, s.transaction, t.oldVersion, _this13.version).next(function () {
                      index_esm2017_C("SimpleDb", "Database upgrade to version " + _this13.version + " complete");
                    });
                  };
                });
              case 5:
                this.db = _context2.sent;
              case 6:
                this.B && (this.db.onversionchange = function (t) {
                  return _this13.B(t);
                });
                return _context2.abrupt("return", this.db);
              case 8:
              case "end":
                return _context2.stop();
            }
          }
        }, _callee2, this);
      }));
      function F(_x2) {
        return _F.apply(this, arguments);
      }
      return F;
    }()
  }, {
    key: "L",
    value: function L(t) {
      this.B = t, this.db && (this.db.onversionchange = function (e) {
        return t(e);
      });
    }
  }, {
    key: "runTransaction",
    value: function () {
      var _runTransaction = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee4(t, e, n, s) {
        var _this14 = this;
        var i, r, _ret, _e5, _n3;
        return _regeneratorRuntime().wrap(function _callee4$(_context4) {
          while (1) {
            switch (_context4.prev = _context4.next) {
              case 0:
                i = "readonly" === e;
                r = 0;
              case 2:
                ++r;
                _context4.prev = 3;
                return _context4.delegateYield( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3() {
                  var e, r;
                  return _regeneratorRuntime().wrap(function _callee3$(_context3) {
                    while (1) {
                      switch (_context3.prev = _context3.next) {
                        case 0:
                          _context3.next = 2;
                          return _this14.F(t);
                        case 2:
                          _this14.db = _context3.sent;
                          e = Rt.open(_this14.db, t, i ? "readonly" : "readwrite", n), r = s(e).next(function (t) {
                            return e.V(), t;
                          }).catch(function (t) {
                            return (
                              // Abort the transaction if there was an error.
                              e.abort(t), At.reject(t)
                            );
                          }).toPromise(); // As noted above, errors are propagated by aborting the transaction. So
                          // we swallow any error here to avoid the browser logging it as unhandled.
                          r.catch(function () {});
                          _context3.next = 7;
                          return e.v;
                        case 7:
                          _context3.t0 = r;
                          return _context3.abrupt("return", {
                            v: _context3.t0
                          });
                        case 9:
                        case "end":
                          return _context3.stop();
                      }
                    }
                  }, _callee3);
                })(), "t0", 5);
              case 5:
                _ret = _context4.t0;
                if (!(typeof _ret === "object")) {
                  _context4.next = 8;
                  break;
                }
                return _context4.abrupt("return", _ret.v);
              case 8:
                _context4.next = 15;
                break;
              case 10:
                _context4.prev = 10;
                _context4.t1 = _context4["catch"](3);
                _e5 = _context4.t1, _n3 = "FirebaseError" !== _e5.name && r < 3; // TODO(schmidt-sebastian): We could probably be smarter about this and
                // not retry exceptions that are likely unrecoverable (such as quota
                // exceeded errors).
                // Note: We cannot use an instanceof check for FirestoreException, since the
                // exception is wrapped in a generic error by our async/await handling.
                if (!(index_esm2017_C("SimpleDb", "Transaction failed with error:", _e5.message, "Retrying:", _n3), this.close(), !_n3)) {
                  _context4.next = 15;
                  break;
                }
                return _context4.abrupt("return", Promise.reject(_e5));
              case 15:
                _context4.next = 2;
                break;
              case 17:
              case "end":
                return _context4.stop();
            }
          }
        }, _callee4, this, [[3, 10]]);
      }));
      function runTransaction(_x3, _x4, _x5, _x6) {
        return _runTransaction.apply(this, arguments);
      }
      return runTransaction;
    }()
  }, {
    key: "close",
    value: function close() {
      this.db && this.db.close(), this.db = void 0;
    }
  }], [{
    key: "delete",
    value: function _delete(t) {
      return index_esm2017_C("SimpleDb", "Removing database:", t), Dt(window.indexedDB.deleteDatabase(t)).toPromise();
    }
    /** Returns true if IndexedDB is available in the current environment. */
  }, {
    key: "C",
    value: function C() {
      if (!isIndexedDBAvailable()) return !1;
      if (bt.N()) return !0;
      // We extensively use indexed array values and compound keys,
      // which IE and Edge do not support. However, they still have indexedDB
      // defined on the window, so we need to check for them here and make sure
      // to return that persistence is not enabled for those browsers.
      // For tracking support of this feature, see here:
      // https://developer.microsoft.com/en-us/microsoft-edge/platform/status/indexeddbarraysandmultientrysupport/
      // Check the UA string to find out the browser.
      var t = getUA(),
        e = bt.D(t),
        n = 0 < e && e < 10,
        s = bt.k(t),
        i = 0 < s && s < 4.5;
      // IE 10
      // ua = 'Mozilla/5.0 (compatible; MSIE 10.0; Windows NT 6.2; Trident/6.0)';
      // IE 11
      // ua = 'Mozilla/5.0 (Windows NT 6.3; Trident/7.0; rv:11.0) like Gecko';
      // Edge
      // ua = 'Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML,
      // like Gecko) Chrome/39.0.2171.71 Safari/537.36 Edge/12.0';
      // iOS Safari: Disable for users running iOS version < 10.
      return !(t.indexOf("MSIE ") > 0 || t.indexOf("Trident/") > 0 || t.indexOf("Edge/") > 0 || n || i);
    }
    /**
     * Returns true if the backing IndexedDB store is the Node IndexedDBShim
     * (see https://github.com/axemclion/IndexedDBShim).
     */
  }, {
    key: "N",
    value: function N() {
      var t;
      return "undefined" != typeof process && "YES" === (null === (t = ({"NODE_ENV":"production","PUBLIC_URL":"","WDS_SOCKET_HOST":undefined,"WDS_SOCKET_PATH":undefined,"WDS_SOCKET_PORT":undefined,"FAST_REFRESH":true})) || void 0 === t ? void 0 : t.O);
    }
    /** Helper to get a typed SimpleDbStore from a transaction. */
  }, {
    key: "M",
    value: function M(t, e) {
      return t.store(e);
    }
    // visible for testing
    /** Parse User Agent to determine iOS version. Returns -1 if not found. */
  }, {
    key: "D",
    value: function D(t) {
      var e = t.match(/i(?:phone|pad|pod) os ([\d_]+)/i),
        n = e ? e[1].split("_").slice(0, 2).join(".") : "-1";
      return Number(n);
    }
    // visible for testing
    /** Parse User Agent to determine Android version. Returns -1 if not found. */
  }, {
    key: "k",
    value: function k(t) {
      var e = t.match(/Android ([\d.]+)/i),
        n = e ? e[1].split(".").slice(0, 2).join(".") : "-1";
      return Number(n);
    }
  }]);
  return bt;
}()));
/**
 * A controller for iterating over a key range or index. It allows an iterate
 * callback to delete the currently-referenced object, or jump to a new key
 * within the key range or index.
 */
var Pt = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  function Pt(t) {
    _classCallCheck(this, Pt);
    this.q = t, this.U = !1, this.K = null;
  }
  _createClass(Pt, [{
    key: "isDone",
    get: function get() {
      return this.U;
    }
  }, {
    key: "G",
    get: function get() {
      return this.K;
    }
  }, {
    key: "cursor",
    set: function set(t) {
      this.q = t;
    }
    /**
     * This function can be called to stop iteration at any point.
     */
  }, {
    key: "done",
    value: function done() {
      this.U = !0;
    }
    /**
     * This function can be called to skip to that next key, which could be
     * an index or a primary key.
     */
  }, {
    key: "j",
    value: function j(t) {
      this.K = t;
    }
    /**
     * Delete the current cursor value from the object store.
     *
     * NOTE: You CANNOT do this with a keysOnly query.
     */
  }, {
    key: "delete",
    value: function _delete() {
      return Dt(this.q.delete());
    }
  }]);
  return Pt;
}()));
/** An error that wraps exceptions that thrown during IndexedDB execution. */
var vt = /*#__PURE__*/(/* unused pure expression or super */ null && (function (_L) {
  _inherits(vt, _L);
  var _super4 = _createSuper(vt);
  function vt(t, e) {
    var _this15;
    _classCallCheck(this, vt);
    _this15 = _super4.call(this, index_esm2017_B.UNAVAILABLE, "IndexedDB transaction '".concat(t, "' failed: ").concat(e)), _this15.name = "IndexedDbTransactionError";
    return _this15;
  }
  return _createClass(vt);
}(index_esm2017_L)));
/** Verifies whether `e` is an IndexedDbTransactionError. */
function Vt(t) {
  // Use name equality, as instanceof checks on errors don't work with errors
  // that wrap other errors.
  return "IndexedDbTransactionError" === t.name;
}

/**
 * A wrapper around an IDBObjectStore providing an API that:
 *
 * 1) Has generic KeyType / ValueType parameters to provide strongly-typed
 * methods for acting against the object store.
 * 2) Deals with IndexedDB's onsuccess / onerror event callbacks, making every
 * method return a PersistencePromise instead.
 * 3) Provides a higher-level API to avoid needing to do excessive wrapping of
 * intermediate IndexedDB types (IDBCursorWithValue, etc.)
 */
var St = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  function St(t) {
    _classCallCheck(this, St);
    this.store = t;
  }
  _createClass(St, [{
    key: "put",
    value: function put(t, e) {
      var n;
      return void 0 !== e ? (index_esm2017_C("SimpleDb", "PUT", this.store.name, t, e), n = this.store.put(e, t)) : (index_esm2017_C("SimpleDb", "PUT", this.store.name, "<auto-key>", t), n = this.store.put(t)), Dt(n);
    }
    /**
     * Adds a new value into an Object Store and returns the new key. Similar to
     * IndexedDb's `add()`, this method will fail on primary key collisions.
     *
     * @param value - The object to write.
     * @returns The key of the value to add.
     */
  }, {
    key: "add",
    value: function add(t) {
      index_esm2017_C("SimpleDb", "ADD", this.store.name, t, t);
      return Dt(this.store.add(t));
    }
    /**
     * Gets the object with the specified key from the specified store, or null
     * if no object exists with the specified key.
     *
     * @key The key of the object to get.
     * @returns The object with the specified key or null if no object exists.
     */
  }, {
    key: "get",
    value: function get(t) {
      var _this16 = this;
      // We're doing an unsafe cast to ValueType.
      // eslint-disable-next-line @typescript-eslint/no-explicit-any
      return Dt(this.store.get(t)).next(function (e) {
        return (
          // Normalize nonexistence to null.
          void 0 === e && (e = null), index_esm2017_C("SimpleDb", "GET", _this16.store.name, t, e), e
        );
      });
    }
  }, {
    key: "delete",
    value: function _delete(t) {
      index_esm2017_C("SimpleDb", "DELETE", this.store.name, t);
      return Dt(this.store.delete(t));
    }
    /**
     * If we ever need more of the count variants, we can add overloads. For now,
     * all we need is to count everything in a store.
     *
     * Returns the number of rows in the store.
     */
  }, {
    key: "count",
    value: function count() {
      index_esm2017_C("SimpleDb", "COUNT", this.store.name);
      return Dt(this.store.count());
    }
  }, {
    key: "W",
    value: function W(t, e) {
      var n = this.options(t, e);
      // Use `getAll()` if the browser supports IndexedDB v3, as it is roughly
      // 20% faster. Unfortunately, getAll() does not support custom indices.
      if (n.index || "function" != typeof this.store.getAll) {
        var _t5 = this.cursor(n),
          _e6 = [];
        return this.H(_t5, function (t, n) {
          _e6.push(n);
        }).next(function () {
          return _e6;
        });
      }
      {
        var _t6 = this.store.getAll(n.range);
        return new At(function (e, n) {
          _t6.onerror = function (t) {
            n(t.target.error);
          }, _t6.onsuccess = function (t) {
            e(t.target.result);
          };
        });
      }
    }
    /**
     * Loads the first `count` elements from the provided index range. Loads all
     * elements if no limit is provided.
     */
  }, {
    key: "J",
    value: function J(t, e) {
      var n = this.store.getAll(t, null === e ? void 0 : e);
      return new At(function (t, e) {
        n.onerror = function (t) {
          e(t.target.error);
        }, n.onsuccess = function (e) {
          t(e.target.result);
        };
      });
    }
  }, {
    key: "Y",
    value: function Y(t, e) {
      index_esm2017_C("SimpleDb", "DELETE ALL", this.store.name);
      var n = this.options(t, e);
      n.X = !1;
      var s = this.cursor(n);
      return this.H(s, function (t, e, n) {
        return n.delete();
      });
    }
  }, {
    key: "Z",
    value: function Z(t, e) {
      var n;
      e ? n = t : (n = {}, e = t);
      var s = this.cursor(n);
      return this.H(s, e);
    }
    /**
     * Iterates over a store, but waits for the given callback to complete for
     * each entry before iterating the next entry. This allows the callback to do
     * asynchronous work to determine if this iteration should continue.
     *
     * The provided callback should return `true` to continue iteration, and
     * `false` otherwise.
     */
  }, {
    key: "tt",
    value: function tt(t) {
      var e = this.cursor({});
      return new At(function (n, s) {
        e.onerror = function (t) {
          var e = xt(t.target.error);
          s(e);
        }, e.onsuccess = function (e) {
          var s = e.target.result;
          s ? t(s.primaryKey, s.value).next(function (t) {
            t ? s.continue() : n();
          }) : n();
        };
      });
    }
  }, {
    key: "H",
    value: function H(t, e) {
      var n = [];
      return new At(function (s, i) {
        t.onerror = function (t) {
          i(t.target.error);
        }, t.onsuccess = function (t) {
          var i = t.target.result;
          if (!i) return void s();
          var r = new Pt(i),
            o = e(i.primaryKey, i.value, r);
          if (o instanceof At) {
            var _t7 = o.catch(function (t) {
              return r.done(), At.reject(t);
            });
            n.push(_t7);
          }
          r.isDone ? s() : null === r.G ? i.continue() : i.continue(r.G);
        };
      }).next(function () {
        return At.waitFor(n);
      });
    }
  }, {
    key: "options",
    value: function options(t, e) {
      var n;
      return void 0 !== t && ("string" == typeof t ? n = t : e = t), {
        index: n,
        range: e
      };
    }
  }, {
    key: "cursor",
    value: function cursor(t) {
      var e = "next";
      if (t.reverse && (e = "prev"), t.index) {
        var n = this.store.index(t.index);
        return t.X ? n.openKeyCursor(t.range, e) : n.openCursor(t.range, e);
      }
      return this.store.openCursor(t.range, e);
    }
  }]);
  return St;
}()));
/**
 * Wraps an IDBRequest in a PersistencePromise, using the onsuccess / onerror
 * handlers to resolve / reject the PersistencePromise as appropriate.
 */
function Dt(t) {
  return new At(function (e, n) {
    t.onsuccess = function (t) {
      var n = t.target.result;
      e(n);
    }, t.onerror = function (t) {
      var e = xt(t.target.error);
      n(e);
    };
  });
}

// Guard so we only report the error once.
var Ct = (/* unused pure expression or super */ null && (!1));
function xt(t) {
  var e = bt.D(getUA());
  if (e >= 12.2 && e < 13) {
    var _e7 = "An internal error was encountered in the Indexed Database server";
    if (t.message.indexOf(_e7) >= 0) {
      // Wrap error in a more descriptive one.
      var _t8 = new index_esm2017_L("internal", "IOS_INDEXEDDB_BUG1: IndexedDb has thrown '".concat(_e7, "'. This is likely due to an unavoidable bug in iOS. See https://stackoverflow.com/q/56496296/110915 for details and a potential workaround."));
      return Ct || (Ct = !0,
      // Throw a global exception outside of this promise chain, for the user to
      // potentially catch.
      setTimeout(function () {
        throw _t8;
      }, 0)), _t8;
    }
  }
  return t;
}

/** This class is responsible for the scheduling of Index Backfiller. */
var Nt = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  function Nt(t, e) {
    _classCallCheck(this, Nt);
    this.asyncQueue = t, this.et = e, this.task = null;
  }
  _createClass(Nt, [{
    key: "start",
    value: function start() {
      this.nt(15e3);
    }
  }, {
    key: "stop",
    value: function stop() {
      this.task && (this.task.cancel(), this.task = null);
    }
  }, {
    key: "started",
    get: function get() {
      return null !== this.task;
    }
  }, {
    key: "nt",
    value: function nt(t) {
      var _this17 = this;
      index_esm2017_C("IndexBackiller", "Scheduled in ".concat(t, "ms")), this.task = this.asyncQueue.enqueueAfterDelay("index_backfill" /* TimerId.IndexBackfill */, t, /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee5() {
        return _regeneratorRuntime().wrap(function _callee5$(_context5) {
          while (1) {
            switch (_context5.prev = _context5.next) {
              case 0:
                _this17.task = null;
                _context5.prev = 1;
                _context5.t0 = index_esm2017_C;
                _context5.t1 = "Documents written: ";
                _context5.next = 6;
                return _this17.et.st();
              case 6:
                _context5.t2 = _context5.sent;
                _context5.t3 = _context5.t1.concat.call(_context5.t1, _context5.t2);
                (0, _context5.t0)("IndexBackiller", _context5.t3);
                _context5.next = 19;
                break;
              case 11:
                _context5.prev = 11;
                _context5.t4 = _context5["catch"](1);
                if (!Vt(_context5.t4)) {
                  _context5.next = 17;
                  break;
                }
                index_esm2017_C("IndexBackiller", "Ignoring IndexedDB error during index backfill: ", _context5.t4);
                _context5.next = 19;
                break;
              case 17:
                _context5.next = 19;
                return Et(_context5.t4);
              case 19:
                _context5.next = 21;
                return _this17.nt(6e4);
              case 21:
              case "end":
                return _context5.stop();
            }
          }
        }, _callee5, null, [[1, 11]]);
      })));
    }
  }]);
  return Nt;
}()));
/** Implements the steps for backfilling indexes. */
var kt = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  function kt(
  /**
   * LocalStore provides access to IndexManager and LocalDocumentView.
   * These properties will update when the user changes. Consequently,
   * making a local copy of IndexManager and LocalDocumentView will require
   * updates over time. The simpler solution is to rely on LocalStore to have
   * an up-to-date references to IndexManager and LocalDocumentStore.
   */
  t, e) {
    _classCallCheck(this, kt);
    this.localStore = t, this.persistence = e;
  }
  _createClass(kt, [{
    key: "st",
    value: function () {
      var _st = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee6() {
        var _this18 = this;
        var t,
          _args6 = arguments;
        return _regeneratorRuntime().wrap(function _callee6$(_context6) {
          while (1) {
            switch (_context6.prev = _context6.next) {
              case 0:
                t = _args6.length > 0 && _args6[0] !== undefined ? _args6[0] : 50;
                return _context6.abrupt("return", this.persistence.runTransaction("Backfill Indexes", "readwrite-primary", function (e) {
                  return _this18.it(e, t);
                }));
              case 2:
              case "end":
                return _context6.stop();
            }
          }
        }, _callee6, this);
      }));
      function st() {
        return _st.apply(this, arguments);
      }
      return st;
    }() /** Writes index entries until the cap is reached. Returns the number of documents processed. */
  }, {
    key: "it",
    value: function it(t, e) {
      var _this19 = this;
      var n = new Set();
      var s = e,
        i = !0;
      return At.doWhile(function () {
        return !0 === i && s > 0;
      }, function () {
        return _this19.localStore.indexManager.getNextCollectionGroupToUpdate(t).next(function (e) {
          if (null !== e && !n.has(e)) return index_esm2017_C("IndexBackiller", "Processing collection: ".concat(e)), _this19.rt(t, e, s).next(function (t) {
            s -= t, n.add(e);
          });
          i = !1;
        });
      }).next(function () {
        return e - s;
      });
    }
    /**
     * Writes entries for the provided collection group. Returns the number of documents processed.
     */
  }, {
    key: "rt",
    value: function rt(t, e, n) {
      var _this20 = this;
      // Use the earliest offset of all field indexes to query the local cache.
      return this.localStore.indexManager.getMinOffsetFromCollectionGroup(t, e).next(function (s) {
        return _this20.localStore.localDocuments.getNextDocuments(t, e, s, n).next(function (n) {
          var i = n.changes;
          return _this20.localStore.indexManager.updateIndexEntries(t, i).next(function () {
            return _this20.ot(s, n);
          }).next(function (n) {
            return index_esm2017_C("IndexBackiller", "Updating offset: ".concat(n)), _this20.localStore.indexManager.updateCollectionGroup(t, e, n);
          }).next(function () {
            return i.size;
          });
        });
      });
    }
    /** Returns the next offset based on the provided documents. */
  }, {
    key: "ot",
    value: function ot(t, e) {
      var n = t;
      return e.changes.forEach(function (t, e) {
        var s = gt(e);
        pt(s, n) > 0 && (n = s);
      }), new yt(n.readTime, n.documentKey, Math.max(e.batchId, t.largestBatchId));
    }
  }]);
  return kt;
}()));
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * `ListenSequence` is a monotonic sequence. It is initialized with a minimum value to
 * exceed. All subsequent calls to next will return increasing values. If provided with a
 * `SequenceNumberSyncer`, it will additionally bump its next value when told of a new value, as
 * well as write out sequence numbers that it produces via `next()`.
 */
var Ot = /*#__PURE__*/function () {
  function Ot(t, e) {
    var _this21 = this;
    classCallCheck_classCallCheck(this, Ot);
    this.previousValue = t, e && (e.sequenceNumberHandler = function (t) {
      return _this21.ut(t);
    }, this.ct = function (t) {
      return e.writeSequenceNumber(t);
    });
  }
  createClass_createClass(Ot, [{
    key: "ut",
    value: function ut(t) {
      return this.previousValue = Math.max(t, this.previousValue), this.previousValue;
    }
  }, {
    key: "next",
    value: function next() {
      var t = ++this.previousValue;
      return this.ct && this.ct(t), t;
    }
  }]);
  return Ot;
}();
Ot.at = -1;

/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
var Mt = /*#__PURE__*/createClass_createClass(
/**
 * Constructs a DatabaseInfo using the provided host, databaseId and
 * persistenceKey.
 *
 * @param databaseId - The database to use.
 * @param appId - The Firebase App Id.
 * @param persistenceKey - A unique identifier for this Firestore's local
 * storage (used in conjunction with the databaseId).
 * @param host - The Firestore backend host to connect to.
 * @param ssl - Whether to use SSL when connecting.
 * @param forceLongPolling - Whether to use the forceLongPolling option
 * when using WebChannel as the network transport.
 * @param autoDetectLongPolling - Whether to use the detectBufferingProxy
 * option when using WebChannel as the network transport.
 * @param useFetchStreams Whether to use the Fetch API instead of
 * XMLHTTPRequest
 */
function Mt(t, e, n, s, i, r, o, u) {
  classCallCheck_classCallCheck(this, Mt);
  this.databaseId = t, this.appId = e, this.persistenceKey = n, this.host = s, this.ssl = i, this.forceLongPolling = r, this.autoDetectLongPolling = o, this.useFetchStreams = u;
});
/** The default database name for a project. */
/**
 * Represents the database ID a Firestore client is associated with.
 * @internal
 */
var Ft = /*#__PURE__*/function () {
  function Ft(t, e) {
    classCallCheck_classCallCheck(this, Ft);
    this.projectId = t, this.database = e || "(default)";
  }
  createClass_createClass(Ft, [{
    key: "isDefaultDatabase",
    get: function get() {
      return "(default)" === this.database;
    }
  }, {
    key: "isEqual",
    value: function isEqual(t) {
      return t instanceof Ft && t.projectId === this.projectId && t.database === this.database;
    }
  }], [{
    key: "empty",
    value: function empty() {
      return new Ft("", "");
    }
  }]);
  return Ft;
}();
/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
function $t(t) {
  var e = 0;
  for (var n in t) {
    Object.prototype.hasOwnProperty.call(t, n) && e++;
  }
  return e;
}
function Bt(t, e) {
  for (var n in t) {
    Object.prototype.hasOwnProperty.call(t, n) && e(n, t[n]);
  }
}
function Lt(t) {
  for (var e in t) {
    if (Object.prototype.hasOwnProperty.call(t, e)) return !1;
  }
  return !0;
}

/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/** Sentinel value that sorts before any Mutation Batch ID. */
/**
 * Returns whether a variable is either undefined or null.
 */
function qt(t) {
  return null == t;
}

/** Returns whether the value represents -0. */
function Ut(t) {
  // Detect if the value is -0.0. Based on polyfill from
  // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is
  return 0 === t && 1 / t == -1 / 0;
}

/**
 * Returns whether a value is an integer and in the safe integer range
 * @param value - The value to test for being an integer and in the safe range
 */
function Kt(t) {
  return "number" == typeof t && Number.isInteger(t) && !Ut(t) && t <= Number.MAX_SAFE_INTEGER && t >= Number.MIN_SAFE_INTEGER;
}

/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/** Converts a Base64 encoded string to a binary string. */
/** True if and only if the Base64 conversion functions are available. */
function Gt() {
  return "undefined" != typeof atob;
}

/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * Immutable class that represents a "proto" byte string.
 *
 * Proto byte strings can either be Base64-encoded strings or Uint8Arrays when
 * sent on the wire. This class abstracts away this differentiation by holding
 * the proto byte string in a common class that must be converted into a string
 * before being sent as a proto.
 * @internal
 */
var Qt = /*#__PURE__*/function (_Symbol$iterator) {
  function Qt(t) {
    classCallCheck_classCallCheck(this, Qt);
    this.binaryString = t;
  }
  createClass_createClass(Qt, [{
    key: _Symbol$iterator,
    value: function value() {
      var _this22 = this;
      var t = 0;
      return {
        next: function next() {
          return t < _this22.binaryString.length ? {
            value: _this22.binaryString.charCodeAt(t++),
            done: !1
          } : {
            value: void 0,
            done: !0
          };
        }
      };
    }
  }, {
    key: "toBase64",
    value: function toBase64() {
      return t = this.binaryString, btoa(t);
      /** Converts a binary string to a Base64 encoded string. */
      var t;
    }
  }, {
    key: "toUint8Array",
    value: function toUint8Array() {
      return function (t) {
        var e = new Uint8Array(t.length);
        for (var n = 0; n < t.length; n++) {
          e[n] = t.charCodeAt(n);
        }
        return e;
      }
      /**
      * @license
      * Copyright 2020 Google LLC
      *
      * Licensed under the Apache License, Version 2.0 (the "License");
      * you may not use this file except in compliance with the License.
      * You may obtain a copy of the License at
      *
      *   http://www.apache.org/licenses/LICENSE-2.0
      *
      * Unless required by applicable law or agreed to in writing, software
      * distributed under the License is distributed on an "AS IS" BASIS,
      * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
      * See the License for the specific language governing permissions and
      * limitations under the License.
      */
      // A RegExp matching ISO 8601 UTC timestamps with optional fraction.
      (this.binaryString);
    }
  }, {
    key: "approximateByteSize",
    value: function approximateByteSize() {
      return 2 * this.binaryString.length;
    }
  }, {
    key: "compareTo",
    value: function compareTo(t) {
      return Z(this.binaryString, t.binaryString);
    }
  }, {
    key: "isEqual",
    value: function isEqual(t) {
      return this.binaryString === t.binaryString;
    }
  }], [{
    key: "fromBase64String",
    value: function fromBase64String(t) {
      var e = atob(t);
      return new Qt(e);
    }
  }, {
    key: "fromUint8Array",
    value: function fromUint8Array(t) {
      // TODO(indexing); Remove the copy of the byte string here as this method
      // is frequently called during indexing.
      var e =
      /**
      * Helper function to convert an Uint8array to a binary string.
      */
      function (t) {
        var e = "";
        for (var n = 0; n < t.length; ++n) {
          e += String.fromCharCode(t[n]);
        }
        return e;
      }
      /**
      * Helper function to convert a binary string to an Uint8Array.
      */(t);
      return new Qt(e);
    }
  }]);
  return Qt;
}(Symbol.iterator);
Qt.EMPTY_BYTE_STRING = new Qt("");
var jt = (/* unused pure expression or super */ null && (new RegExp(/^\d{4}-\d\d-\d\dT\d\d:\d\d:\d\d(?:\.(\d+))?Z$/)));

/**
 * Converts the possible Proto values for a timestamp value into a "seconds and
 * nanos" representation.
 */
function Wt(t) {
  // The json interface (for the browser) will return an iso timestamp string,
  // while the proto js library (for node) will return a
  // google.protobuf.Timestamp instance.
  if (index_esm2017_M(!!t), "string" == typeof t) {
    // The date string can have higher precision (nanos) than the Date class
    // (millis), so we do some custom parsing here.
    // Parse the nanos right out of the string.
    var e = 0;
    var n = jt.exec(t);
    if (index_esm2017_M(!!n), n[1]) {
      // Pad the fraction out to 9 digits (nanos).
      var _t9 = n[1];
      _t9 = (_t9 + "000000000").substr(0, 9), e = Number(_t9);
    }
    // Parse the date to get the seconds.
    var s = new Date(t);
    return {
      seconds: Math.floor(s.getTime() / 1e3),
      nanos: e
    };
  }
  return {
    seconds: zt(t.seconds),
    nanos: zt(t.nanos)
  };
}

/**
 * Converts the possible Proto types for numbers into a JavaScript number.
 * Returns 0 if the value is not numeric.
 */
function zt(t) {
  // TODO(bjornick): Handle int64 greater than 53 bits.
  return "number" == typeof t ? t : "string" == typeof t ? Number(t) : 0;
}

/** Converts the possible Proto types for Blobs into a ByteString. */
function Ht(t) {
  return "string" == typeof t ? Qt.fromBase64String(t) : Qt.fromUint8Array(t);
}

/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * Represents a locally-applied ServerTimestamp.
 *
 * Server Timestamps are backed by MapValues that contain an internal field
 * `__type__` with a value of `server_timestamp`. The previous value and local
 * write time are stored in its `__previous_value__` and `__local_write_time__`
 * fields respectively.
 *
 * Notes:
 * - ServerTimestampValue instances are created as the result of applying a
 *   transform. They can only exist in the local view of a document. Therefore
 *   they do not need to be parsed or serialized.
 * - When evaluated locally (e.g. for snapshot.data()), they by default
 *   evaluate to `null`. This behavior can be configured by passing custom
 *   FieldValueOptions to value().
 * - With respect to other ServerTimestampValues, they sort by their
 *   localWriteTime.
 */
function Jt(t) {
  var e, n;
  return "server_timestamp" === (null === (n = ((null === (e = null == t ? void 0 : t.mapValue) || void 0 === e ? void 0 : e.fields) || {}).__type__) || void 0 === n ? void 0 : n.stringValue);
}

/**
 * Creates a new ServerTimestamp proto value (using the internal format).
 */
/**
 * Returns the value of the field before this ServerTimestamp was set.
 *
 * Preserving the previous values allows the user to display the last resoled
 * value until the backend responds with the timestamp.
 */
function Yt(t) {
  var e = t.mapValue.fields.__previous_value__;
  return Jt(e) ? Yt(e) : e;
}

/**
 * Returns the local time at which this timestamp was first set.
 */
function Xt(t) {
  var e = Wt(t.mapValue.fields.__local_write_time__.timestampValue);
  return new nt(e.seconds, e.nanos);
}

/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
var Zt = {
    mapValue: {
      fields: {
        __type__: {
          stringValue: "__max__"
        }
      }
    }
  },
  te = {
    nullValue: "NULL_VALUE"
  };

/** Extracts the backend's type order for the provided value. */
function ee(t) {
  return "nullValue" in t ? 0 /* TypeOrder.NullValue */ : "booleanValue" in t ? 1 /* TypeOrder.BooleanValue */ : "integerValue" in t || "doubleValue" in t ? 2 /* TypeOrder.NumberValue */ : "timestampValue" in t ? 3 /* TypeOrder.TimestampValue */ : "stringValue" in t ? 5 /* TypeOrder.StringValue */ : "bytesValue" in t ? 6 /* TypeOrder.BlobValue */ : "referenceValue" in t ? 7 /* TypeOrder.RefValue */ : "geoPointValue" in t ? 8 /* TypeOrder.GeoPointValue */ : "arrayValue" in t ? 9 /* TypeOrder.ArrayValue */ : "mapValue" in t ? Jt(t) ? 4 /* TypeOrder.ServerTimestampValue */ : we(t) ? 9007199254740991 /* TypeOrder.MaxValue */ : 10 /* TypeOrder.ObjectValue */ : index_esm2017_O();
}

/** Tests `left` and `right` for equality based on the backend semantics. */
function ne(t, e) {
  if (t === e) return !0;
  var n = ee(t);
  if (n !== ee(e)) return !1;
  switch (n) {
    case 0 /* TypeOrder.NullValue */:
    case 9007199254740991 /* TypeOrder.MaxValue */:
      return !0;
    case 1 /* TypeOrder.BooleanValue */:
      return t.booleanValue === e.booleanValue;
    case 4 /* TypeOrder.ServerTimestampValue */:
      return Xt(t).isEqual(Xt(e));
    case 3 /* TypeOrder.TimestampValue */:
      return function (t, e) {
        if ("string" == typeof t.timestampValue && "string" == typeof e.timestampValue && t.timestampValue.length === e.timestampValue.length)
          // Use string equality for ISO 8601 timestamps
          return t.timestampValue === e.timestampValue;
        var n = Wt(t.timestampValue),
          s = Wt(e.timestampValue);
        return n.seconds === s.seconds && n.nanos === s.nanos;
      }(t, e);
    case 5 /* TypeOrder.StringValue */:
      return t.stringValue === e.stringValue;
    case 6 /* TypeOrder.BlobValue */:
      return function (t, e) {
        return Ht(t.bytesValue).isEqual(Ht(e.bytesValue));
      }(t, e);
    case 7 /* TypeOrder.RefValue */:
      return t.referenceValue === e.referenceValue;
    case 8 /* TypeOrder.GeoPointValue */:
      return function (t, e) {
        return zt(t.geoPointValue.latitude) === zt(e.geoPointValue.latitude) && zt(t.geoPointValue.longitude) === zt(e.geoPointValue.longitude);
      }(t, e);
    case 2 /* TypeOrder.NumberValue */:
      return function (t, e) {
        if ("integerValue" in t && "integerValue" in e) return zt(t.integerValue) === zt(e.integerValue);
        if ("doubleValue" in t && "doubleValue" in e) {
          var _n4 = zt(t.doubleValue),
            s = zt(e.doubleValue);
          return _n4 === s ? Ut(_n4) === Ut(s) : isNaN(_n4) && isNaN(s);
        }
        return !1;
      }(t, e);
    case 9 /* TypeOrder.ArrayValue */:
      return tt(t.arrayValue.values || [], e.arrayValue.values || [], ne);
    case 10 /* TypeOrder.ObjectValue */:
      return function (t, e) {
        var n = t.mapValue.fields || {},
          s = e.mapValue.fields || {};
        if ($t(n) !== $t(s)) return !1;
        for (var _t10 in n) {
          if (n.hasOwnProperty(_t10) && (void 0 === s[_t10] || !ne(n[_t10], s[_t10]))) return !1;
        }
        return !0;
      }
      /** Returns true if the ArrayValue contains the specified element. */(t, e);
    default:
      return index_esm2017_O();
  }
}
function se(t, e) {
  return void 0 !== (t.values || []).find(function (t) {
    return ne(t, e);
  });
}
function ie(t, e) {
  if (t === e) return 0;
  var n = ee(t),
    s = ee(e);
  if (n !== s) return Z(n, s);
  switch (n) {
    case 0 /* TypeOrder.NullValue */:
    case 9007199254740991 /* TypeOrder.MaxValue */:
      return 0;
    case 1 /* TypeOrder.BooleanValue */:
      return Z(t.booleanValue, e.booleanValue);
    case 2 /* TypeOrder.NumberValue */:
      return function (t, e) {
        var n = zt(t.integerValue || t.doubleValue),
          s = zt(e.integerValue || e.doubleValue);
        return n < s ? -1 : n > s ? 1 : n === s ? 0 :
        // one or both are NaN.
        isNaN(n) ? isNaN(s) ? 0 : -1 : 1;
      }(t, e);
    case 3 /* TypeOrder.TimestampValue */:
      return re(t.timestampValue, e.timestampValue);
    case 4 /* TypeOrder.ServerTimestampValue */:
      return re(Xt(t), Xt(e));
    case 5 /* TypeOrder.StringValue */:
      return Z(t.stringValue, e.stringValue);
    case 6 /* TypeOrder.BlobValue */:
      return function (t, e) {
        var n = Ht(t),
          s = Ht(e);
        return n.compareTo(s);
      }(t.bytesValue, e.bytesValue);
    case 7 /* TypeOrder.RefValue */:
      return function (t, e) {
        var n = t.split("/"),
          s = e.split("/");
        for (var _t11 = 0; _t11 < n.length && _t11 < s.length; _t11++) {
          var _e8 = Z(n[_t11], s[_t11]);
          if (0 !== _e8) return _e8;
        }
        return Z(n.length, s.length);
      }(t.referenceValue, e.referenceValue);
    case 8 /* TypeOrder.GeoPointValue */:
      return function (t, e) {
        var n = Z(zt(t.latitude), zt(e.latitude));
        if (0 !== n) return n;
        return Z(zt(t.longitude), zt(e.longitude));
      }(t.geoPointValue, e.geoPointValue);
    case 9 /* TypeOrder.ArrayValue */:
      return function (t, e) {
        var n = t.values || [],
          s = e.values || [];
        for (var _t12 = 0; _t12 < n.length && _t12 < s.length; ++_t12) {
          var _e9 = ie(n[_t12], s[_t12]);
          if (_e9) return _e9;
        }
        return Z(n.length, s.length);
      }(t.arrayValue, e.arrayValue);
    case 10 /* TypeOrder.ObjectValue */:
      return function (t, e) {
        if (t === Zt.mapValue && e === Zt.mapValue) return 0;
        if (t === Zt.mapValue) return 1;
        if (e === Zt.mapValue) return -1;
        var n = t.fields || {},
          s = Object.keys(n),
          i = e.fields || {},
          r = Object.keys(i);
        // Even though MapValues are likely sorted correctly based on their insertion
        // order (e.g. when received from the backend), local modifications can bring
        // elements out of order. We need to re-sort the elements to ensure that
        // canonical IDs are independent of insertion order.
        s.sort(), r.sort();
        for (var _t13 = 0; _t13 < s.length && _t13 < r.length; ++_t13) {
          var _e10 = Z(s[_t13], r[_t13]);
          if (0 !== _e10) return _e10;
          var o = ie(n[s[_t13]], i[r[_t13]]);
          if (0 !== o) return o;
        }
        return Z(s.length, r.length);
      }
      /**
      * Generates the canonical ID for the provided field value (as used in Target
      * serialization).
      */(t.mapValue, e.mapValue);
    default:
      throw index_esm2017_O();
  }
}
function re(t, e) {
  if ("string" == typeof t && "string" == typeof e && t.length === e.length) return Z(t, e);
  var n = Wt(t),
    s = Wt(e),
    i = Z(n.seconds, s.seconds);
  return 0 !== i ? i : Z(n.nanos, s.nanos);
}
function oe(t) {
  return ue(t);
}
function ue(t) {
  return "nullValue" in t ? "null" : "booleanValue" in t ? "" + t.booleanValue : "integerValue" in t ? "" + t.integerValue : "doubleValue" in t ? "" + t.doubleValue : "timestampValue" in t ? function (t) {
    var e = Wt(t);
    return "time(".concat(e.seconds, ",").concat(e.nanos, ")");
  }(t.timestampValue) : "stringValue" in t ? t.stringValue : "bytesValue" in t ? Ht(t.bytesValue).toBase64() : "referenceValue" in t ? (n = t.referenceValue, ct.fromName(n).toString()) : "geoPointValue" in t ? "geo(".concat((e = t.geoPointValue).latitude, ",").concat(e.longitude, ")") : "arrayValue" in t ? function (t) {
    var e = "[",
      n = !0;
    var _iterator2 = _createForOfIteratorHelper(t.values || []),
      _step2;
    try {
      for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {
        var s = _step2.value;
        n ? n = !1 : e += ",", e += ue(s);
      }
    } catch (err) {
      _iterator2.e(err);
    } finally {
      _iterator2.f();
    }
    return e + "]";
  }
  /** Returns a reference value for the provided database and key. */(t.arrayValue) : "mapValue" in t ? function (t) {
    // Iteration order in JavaScript is not guaranteed. To ensure that we generate
    // matching canonical IDs for identical maps, we need to sort the keys.
    var e = Object.keys(t.fields || {}).sort();
    var n = "{",
      s = !0;
    var _iterator3 = _createForOfIteratorHelper(e),
      _step3;
    try {
      for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {
        var i = _step3.value;
        s ? s = !1 : n += ",", n += "".concat(i, ":").concat(ue(t.fields[i]));
      }
    } catch (err) {
      _iterator3.e(err);
    } finally {
      _iterator3.f();
    }
    return n + "}";
  }(t.mapValue) : index_esm2017_O();
  var e, n;
}
function ce(t, e) {
  return {
    referenceValue: "projects/".concat(t.projectId, "/databases/").concat(t.database, "/documents/").concat(e.path.canonicalString())
  };
}

/** Returns true if `value` is an IntegerValue . */
function ae(t) {
  return !!t && "integerValue" in t;
}

/** Returns true if `value` is a DoubleValue. */
/** Returns true if `value` is an ArrayValue. */
function he(t) {
  return !!t && "arrayValue" in t;
}

/** Returns true if `value` is a NullValue. */
function le(t) {
  return !!t && "nullValue" in t;
}

/** Returns true if `value` is NaN. */
function fe(t) {
  return !!t && "doubleValue" in t && isNaN(Number(t.doubleValue));
}

/** Returns true if `value` is a MapValue. */
function de(t) {
  return !!t && "mapValue" in t;
}

/** Creates a deep copy of `source`. */
function _e(t) {
  if (t.geoPointValue) return {
    geoPointValue: Object.assign({}, t.geoPointValue)
  };
  if (t.timestampValue && "object" == typeof t.timestampValue) return {
    timestampValue: Object.assign({}, t.timestampValue)
  };
  if (t.mapValue) {
    var e = {
      mapValue: {
        fields: {}
      }
    };
    return Bt(t.mapValue.fields, function (t, n) {
      return e.mapValue.fields[t] = _e(n);
    }), e;
  }
  if (t.arrayValue) {
    var _e11 = {
      arrayValue: {
        values: []
      }
    };
    for (var n = 0; n < (t.arrayValue.values || []).length; ++n) {
      _e11.arrayValue.values[n] = _e(t.arrayValue.values[n]);
    }
    return _e11;
  }
  return Object.assign({}, t);
}

/** Returns true if the Value represents the canonical {@link #MAX_VALUE} . */
function we(t) {
  return "__max__" === (((t.mapValue || {}).fields || {}).__type__ || {}).stringValue;
}

/** Returns the lowest value for the given value type (inclusive). */
function me(t) {
  return "nullValue" in t ? te : "booleanValue" in t ? {
    booleanValue: !1
  } : "integerValue" in t || "doubleValue" in t ? {
    doubleValue: NaN
  } : "timestampValue" in t ? {
    timestampValue: {
      seconds: Number.MIN_SAFE_INTEGER
    }
  } : "stringValue" in t ? {
    stringValue: ""
  } : "bytesValue" in t ? {
    bytesValue: ""
  } : "referenceValue" in t ? ce(Ft.empty(), ct.empty()) : "geoPointValue" in t ? {
    geoPointValue: {
      latitude: -90,
      longitude: -180
    }
  } : "arrayValue" in t ? {
    arrayValue: {}
  } : "mapValue" in t ? {
    mapValue: {}
  } : index_esm2017_O();
}

/** Returns the largest value for the given value type (exclusive). */
function ge(t) {
  return "nullValue" in t ? {
    booleanValue: !1
  } : "booleanValue" in t ? {
    doubleValue: NaN
  } : "integerValue" in t || "doubleValue" in t ? {
    timestampValue: {
      seconds: Number.MIN_SAFE_INTEGER
    }
  } : "timestampValue" in t ? {
    stringValue: ""
  } : "stringValue" in t ? {
    bytesValue: ""
  } : "bytesValue" in t ? ce(Ft.empty(), ct.empty()) : "referenceValue" in t ? {
    geoPointValue: {
      latitude: -90,
      longitude: -180
    }
  } : "geoPointValue" in t ? {
    arrayValue: {}
  } : "arrayValue" in t ? {
    mapValue: {}
  } : "mapValue" in t ? Zt : index_esm2017_O();
}
function ye(t, e) {
  var n = ie(t.value, e.value);
  return 0 !== n ? n : t.inclusive && !e.inclusive ? -1 : !t.inclusive && e.inclusive ? 1 : 0;
}
function pe(t, e) {
  var n = ie(t.value, e.value);
  return 0 !== n ? n : t.inclusive && !e.inclusive ? 1 : !t.inclusive && e.inclusive ? -1 : 0;
}

/**
 * @license
 * Copyright 2022 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * Represents a bound of a query.
 *
 * The bound is specified with the given components representing a position and
 * whether it's just before or just after the position (relative to whatever the
 * query order is).
 *
 * The position represents a logical index position for a query. It's a prefix
 * of values for the (potentially implicit) order by clauses of a query.
 *
 * Bound provides a function to determine whether a document comes before or
 * after a bound. This is influenced by whether the position is just before or
 * just after the provided values.
 */
var Ie = /*#__PURE__*/(/* unused pure expression or super */ null && (_createClass(function Ie(t, e) {
  _classCallCheck(this, Ie);
  this.position = t, this.inclusive = e;
})));
function Te(t, e, n) {
  var s = 0;
  for (var i = 0; i < t.position.length; i++) {
    var r = e[i],
      o = t.position[i];
    if (r.field.isKeyField()) s = ct.comparator(ct.fromName(o.referenceValue), n.key);else {
      s = ie(o, n.data.field(r.field));
    }
    if ("desc" /* Direction.DESCENDING */ === r.dir && (s *= -1), 0 !== s) break;
  }
  return s;
}

/**
 * Returns true if a document sorts after a bound using the provided sort
 * order.
 */
function Ee(t, e) {
  if (null === t) return null === e;
  if (null === e) return !1;
  if (t.inclusive !== e.inclusive || t.position.length !== e.position.length) return !1;
  for (var n = 0; n < t.position.length; n++) {
    if (!ne(t.position[n], e.position[n])) return !1;
  }
  return !0;
}

/**
 * @license
 * Copyright 2022 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
var Ae = /*#__PURE__*/(/* unused pure expression or super */ null && (_createClass(function Ae() {
  _classCallCheck(this, Ae);
})));
var Re = /*#__PURE__*/(/* unused pure expression or super */ null && (function (_Ae) {
  _inherits(Re, _Ae);
  var _super5 = _createSuper(Re);
  function Re(t, e, n) {
    var _this23;
    _classCallCheck(this, Re);
    _this23 = _super5.call(this), _this23.field = t, _this23.op = e, _this23.value = n;
    return _this23;
  }
  /**
   * Creates a filter based on the provided arguments.
   */
  _createClass(Re, [{
    key: "matches",
    value: function matches(t) {
      var e = t.data.field(this.field);
      // Types do not have to match in NOT_EQUAL filters.
      return "!=" /* Operator.NOT_EQUAL */ === this.op ? null !== e && this.matchesComparison(ie(e, this.value)) : null !== e && ee(this.value) === ee(e) && this.matchesComparison(ie(e, this.value));
      // Only compare types with matching backend order (such as double and int).
    }
  }, {
    key: "matchesComparison",
    value: function matchesComparison(t) {
      switch (this.op) {
        case "<" /* Operator.LESS_THAN */:
          return t < 0;
        case "<=" /* Operator.LESS_THAN_OR_EQUAL */:
          return t <= 0;
        case "==" /* Operator.EQUAL */:
          return 0 === t;
        case "!=" /* Operator.NOT_EQUAL */:
          return 0 !== t;
        case ">" /* Operator.GREATER_THAN */:
          return t > 0;
        case ">=" /* Operator.GREATER_THAN_OR_EQUAL */:
          return t >= 0;
        default:
          return index_esm2017_O();
      }
    }
  }, {
    key: "isInequality",
    value: function isInequality() {
      return ["<" /* Operator.LESS_THAN */, "<=" /* Operator.LESS_THAN_OR_EQUAL */, ">" /* Operator.GREATER_THAN */, ">=" /* Operator.GREATER_THAN_OR_EQUAL */, "!=" /* Operator.NOT_EQUAL */, "not-in" /* Operator.NOT_IN */].indexOf(this.op) >= 0;
    }
  }, {
    key: "getFlattenedFilters",
    value: function getFlattenedFilters() {
      return [this];
    }
  }, {
    key: "getFilters",
    value: function getFilters() {
      return [this];
    }
  }, {
    key: "getFirstInequalityField",
    value: function getFirstInequalityField() {
      return this.isInequality() ? this.field : null;
    }
  }], [{
    key: "create",
    value: function create(t, e, n) {
      return t.isKeyField() ? "in" /* Operator.IN */ === e || "not-in" /* Operator.NOT_IN */ === e ? this.createKeyFieldInFilter(t, e, n) : new ke(t, e, n) : "array-contains" /* Operator.ARRAY_CONTAINS */ === e ? new $e(t, n) : "in" /* Operator.IN */ === e ? new Be(t, n) : "not-in" /* Operator.NOT_IN */ === e ? new Le(t, n) : "array-contains-any" /* Operator.ARRAY_CONTAINS_ANY */ === e ? new qe(t, n) : new Re(t, e, n);
    }
  }, {
    key: "createKeyFieldInFilter",
    value: function createKeyFieldInFilter(t, e, n) {
      return "in" /* Operator.IN */ === e ? new Oe(t, n) : new Me(t, n);
    }
  }]);
  return Re;
}(Ae)));
var be = /*#__PURE__*/(/* unused pure expression or super */ null && (function (_Ae2) {
  _inherits(be, _Ae2);
  var _super6 = _createSuper(be);
  function be(t, e) {
    var _this24;
    _classCallCheck(this, be);
    _this24 = _super6.call(this), _this24.filters = t, _this24.op = e, _this24.ht = null;
    return _this24;
  }
  /**
   * Creates a filter based on the provided arguments.
   */
  _createClass(be, [{
    key: "matches",
    value: function matches(t) {
      return Pe(this) ? void 0 === this.filters.find(function (e) {
        return !e.matches(t);
      }) : void 0 !== this.filters.find(function (e) {
        return e.matches(t);
      });
    }
  }, {
    key: "getFlattenedFilters",
    value: function getFlattenedFilters() {
      return null !== this.ht || (this.ht = this.filters.reduce(function (t, e) {
        return t.concat(e.getFlattenedFilters());
      }, [])), this.ht;
    }
    // Returns a mutable copy of `this.filters`
  }, {
    key: "getFilters",
    value: function getFilters() {
      return Object.assign([], this.filters);
    }
  }, {
    key: "getFirstInequalityField",
    value: function getFirstInequalityField() {
      var t = this.lt(function (t) {
        return t.isInequality();
      });
      return null !== t ? t.field : null;
    }
    // Performs a depth-first search to find and return the first FieldFilter in the composite filter
    // that satisfies the predicate. Returns `null` if none of the FieldFilters satisfy the
    // predicate.
  }, {
    key: "lt",
    value: function lt(t) {
      var _iterator4 = _createForOfIteratorHelper(this.getFlattenedFilters()),
        _step4;
      try {
        for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {
          var e = _step4.value;
          if (t(e)) return e;
        }
      } catch (err) {
        _iterator4.e(err);
      } finally {
        _iterator4.f();
      }
      return null;
    }
  }], [{
    key: "create",
    value: function create(t, e) {
      return new be(t, e);
    }
  }]);
  return be;
}(Ae)));
function Pe(t) {
  return "and" /* CompositeOperator.AND */ === t.op;
}
function ve(t) {
  return "or" /* CompositeOperator.OR */ === t.op;
}

/**
 * Returns true if this filter is a conjunction of field filters only. Returns false otherwise.
 */
function Ve(t) {
  return Se(t) && Pe(t);
}

/**
 * Returns true if this filter does not contain any composite filters. Returns false otherwise.
 */
function Se(t) {
  var _iterator5 = _createForOfIteratorHelper(t.filters),
    _step5;
  try {
    for (_iterator5.s(); !(_step5 = _iterator5.n()).done;) {
      var e = _step5.value;
      if (e instanceof be) return !1;
    }
  } catch (err) {
    _iterator5.e(err);
  } finally {
    _iterator5.f();
  }
  return !0;
}
function De(t) {
  if (t instanceof Re)
    // TODO(b/29183165): Technically, this won't be unique if two values have
    // the same description, such as the int 3 and the string "3". So we should
    // add the types in here somehow, too.
    return t.field.canonicalString() + t.op.toString() + oe(t.value);
  {
    // filter instanceof CompositeFilter
    var e = t.filters.map(function (t) {
      return De(t);
    }).join(",");
    return "".concat(t.op, "(").concat(e, ")");
  }
}
function Ce(t, e) {
  return t instanceof Re ? function (t, e) {
    return e instanceof Re && t.op === e.op && t.field.isEqual(e.field) && ne(t.value, e.value);
  }(t, e) : t instanceof be ? function (t, e) {
    if (e instanceof be && t.op === e.op && t.filters.length === e.filters.length) {
      return t.filters.reduce(function (t, n, s) {
        return t && Ce(n, e.filters[s]);
      }, !0);
    }
    return !1;
  }
  /**
  * Returns a new composite filter that contains all filter from
  * `compositeFilter` plus all the given filters in `otherFilters`.
  */(t, e) : void index_esm2017_O();
}
function xe(t, e) {
  var n = t.filters.concat(e);
  return be.create(n, t.op);
}

/** Returns a debug description for `filter`. */
function Ne(t) {
  return t instanceof Re ? function (t) {
    return "".concat(t.field.canonicalString(), " ").concat(t.op, " ").concat(oe(t.value));
  }
  /** Filter that matches on key fields (i.e. '__name__'). */(t) : t instanceof be ? function (t) {
    return t.op.toString() + " {" + t.getFilters().map(Ne).join(" ,") + "}";
  }(t) : "Filter";
}
var ke = /*#__PURE__*/(/* unused pure expression or super */ null && (function (_Re) {
  _inherits(ke, _Re);
  var _super7 = _createSuper(ke);
  function ke(t, e, n) {
    var _this25;
    _classCallCheck(this, ke);
    _this25 = _super7.call(this, t, e, n), _this25.key = ct.fromName(n.referenceValue);
    return _this25;
  }
  _createClass(ke, [{
    key: "matches",
    value: function matches(t) {
      var e = ct.comparator(t.key, this.key);
      return this.matchesComparison(e);
    }
  }]);
  return ke;
}(Re)));
/** Filter that matches on key fields within an array. */
var Oe = /*#__PURE__*/(/* unused pure expression or super */ null && (function (_Re2) {
  _inherits(Oe, _Re2);
  var _super8 = _createSuper(Oe);
  function Oe(t, e) {
    var _this26;
    _classCallCheck(this, Oe);
    _this26 = _super8.call(this, t, "in" /* Operator.IN */, e), _this26.keys = Fe("in" /* Operator.IN */, e);
    return _this26;
  }
  _createClass(Oe, [{
    key: "matches",
    value: function matches(t) {
      return this.keys.some(function (e) {
        return e.isEqual(t.key);
      });
    }
  }]);
  return Oe;
}(Re)));
/** Filter that matches on key fields not present within an array. */
var Me = /*#__PURE__*/(/* unused pure expression or super */ null && (function (_Re3) {
  _inherits(Me, _Re3);
  var _super9 = _createSuper(Me);
  function Me(t, e) {
    var _this27;
    _classCallCheck(this, Me);
    _this27 = _super9.call(this, t, "not-in" /* Operator.NOT_IN */, e), _this27.keys = Fe("not-in" /* Operator.NOT_IN */, e);
    return _this27;
  }
  _createClass(Me, [{
    key: "matches",
    value: function matches(t) {
      return !this.keys.some(function (e) {
        return e.isEqual(t.key);
      });
    }
  }]);
  return Me;
}(Re)));
function Fe(t, e) {
  var n;
  return ((null === (n = e.arrayValue) || void 0 === n ? void 0 : n.values) || []).map(function (t) {
    return ct.fromName(t.referenceValue);
  });
}

/** A Filter that implements the array-contains operator. */
var $e = /*#__PURE__*/(/* unused pure expression or super */ null && (function (_Re4) {
  _inherits($e, _Re4);
  var _super10 = _createSuper($e);
  function $e(t, e) {
    _classCallCheck(this, $e);
    return _super10.call(this, t, "array-contains" /* Operator.ARRAY_CONTAINS */, e);
  }
  _createClass($e, [{
    key: "matches",
    value: function matches(t) {
      var e = t.data.field(this.field);
      return he(e) && se(e.arrayValue, this.value);
    }
  }]);
  return $e;
}(Re)));
/** A Filter that implements the IN operator. */
var Be = /*#__PURE__*/(/* unused pure expression or super */ null && (function (_Re5) {
  _inherits(Be, _Re5);
  var _super11 = _createSuper(Be);
  function Be(t, e) {
    _classCallCheck(this, Be);
    return _super11.call(this, t, "in" /* Operator.IN */, e);
  }
  _createClass(Be, [{
    key: "matches",
    value: function matches(t) {
      var e = t.data.field(this.field);
      return null !== e && se(this.value.arrayValue, e);
    }
  }]);
  return Be;
}(Re)));
/** A Filter that implements the not-in operator. */
var Le = /*#__PURE__*/(/* unused pure expression or super */ null && (function (_Re6) {
  _inherits(Le, _Re6);
  var _super12 = _createSuper(Le);
  function Le(t, e) {
    _classCallCheck(this, Le);
    return _super12.call(this, t, "not-in" /* Operator.NOT_IN */, e);
  }
  _createClass(Le, [{
    key: "matches",
    value: function matches(t) {
      if (se(this.value.arrayValue, {
        nullValue: "NULL_VALUE"
      })) return !1;
      var e = t.data.field(this.field);
      return null !== e && !se(this.value.arrayValue, e);
    }
  }]);
  return Le;
}(Re)));
/** A Filter that implements the array-contains-any operator. */
var qe = /*#__PURE__*/(/* unused pure expression or super */ null && (function (_Re7) {
  _inherits(qe, _Re7);
  var _super13 = _createSuper(qe);
  function qe(t, e) {
    _classCallCheck(this, qe);
    return _super13.call(this, t, "array-contains-any" /* Operator.ARRAY_CONTAINS_ANY */, e);
  }
  _createClass(qe, [{
    key: "matches",
    value: function matches(t) {
      var _this28 = this;
      var e = t.data.field(this.field);
      return !(!he(e) || !e.arrayValue.values) && e.arrayValue.values.some(function (t) {
        return se(_this28.value.arrayValue, t);
      });
    }
  }]);
  return qe;
}(Re)));
/**
 * @license
 * Copyright 2022 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * An ordering on a field, in some Direction. Direction defaults to ASCENDING.
 */
var Ue = /*#__PURE__*/(/* unused pure expression or super */ null && (_createClass(function Ue(t) {
  var e = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : "asc";
  _classCallCheck(this, Ue);
  this.field = t, this.dir = e;
})));
function Ke(t, e) {
  return t.dir === e.dir && t.field.isEqual(e.field);
}

/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
// An immutable sorted map implementation, based on a Left-leaning Red-Black
// tree.
var Ge = /*#__PURE__*/function () {
  function Ge(t, e) {
    classCallCheck_classCallCheck(this, Ge);
    this.comparator = t, this.root = e || je.EMPTY;
  }
  // Returns a copy of the map, with the specified key/value added or replaced.
  createClass_createClass(Ge, [{
    key: "insert",
    value: function insert(t, e) {
      return new Ge(this.comparator, this.root.insert(t, e, this.comparator).copy(null, null, je.BLACK, null, null));
    }
    // Returns a copy of the map, with the specified key removed.
  }, {
    key: "remove",
    value: function remove(t) {
      return new Ge(this.comparator, this.root.remove(t, this.comparator).copy(null, null, je.BLACK, null, null));
    }
    // Returns the value of the node with the given key, or null.
  }, {
    key: "get",
    value: function get(t) {
      var e = this.root;
      for (; !e.isEmpty();) {
        var n = this.comparator(t, e.key);
        if (0 === n) return e.value;
        n < 0 ? e = e.left : n > 0 && (e = e.right);
      }
      return null;
    }
    // Returns the index of the element in this sorted map, or -1 if it doesn't
    // exist.
  }, {
    key: "indexOf",
    value: function indexOf(t) {
      // Number of nodes that were pruned when descending right
      var e = 0,
        n = this.root;
      for (; !n.isEmpty();) {
        var s = this.comparator(t, n.key);
        if (0 === s) return e + n.left.size;
        s < 0 ? n = n.left : (
        // Count all nodes left of the node plus the node itself
        e += n.left.size + 1, n = n.right);
      }
      // Node not found
      return -1;
    }
  }, {
    key: "isEmpty",
    value: function isEmpty() {
      return this.root.isEmpty();
    }
    // Returns the total number of nodes in the map.
  }, {
    key: "size",
    get: function get() {
      return this.root.size;
    }
    // Returns the minimum key in the map.
  }, {
    key: "minKey",
    value: function minKey() {
      return this.root.minKey();
    }
    // Returns the maximum key in the map.
  }, {
    key: "maxKey",
    value: function maxKey() {
      return this.root.maxKey();
    }
    // Traverses the map in key order and calls the specified action function
    // for each key/value pair. If action returns true, traversal is aborted.
    // Returns the first truthy value returned by action, or the last falsey
    // value returned by action.
  }, {
    key: "inorderTraversal",
    value: function inorderTraversal(t) {
      return this.root.inorderTraversal(t);
    }
  }, {
    key: "forEach",
    value: function forEach(t) {
      this.inorderTraversal(function (e, n) {
        return t(e, n), !1;
      });
    }
  }, {
    key: "toString",
    value: function toString() {
      var t = [];
      return this.inorderTraversal(function (e, n) {
        return t.push("".concat(e, ":").concat(n)), !1;
      }), "{".concat(t.join(", "), "}");
    }
    // Traverses the map in reverse key order and calls the specified action
    // function for each key/value pair. If action returns true, traversal is
    // aborted.
    // Returns the first truthy value returned by action, or the last falsey
    // value returned by action.
  }, {
    key: "reverseTraversal",
    value: function reverseTraversal(t) {
      return this.root.reverseTraversal(t);
    }
    // Returns an iterator over the SortedMap.
  }, {
    key: "getIterator",
    value: function getIterator() {
      return new Qe(this.root, null, this.comparator, !1);
    }
  }, {
    key: "getIteratorFrom",
    value: function getIteratorFrom(t) {
      return new Qe(this.root, t, this.comparator, !1);
    }
  }, {
    key: "getReverseIterator",
    value: function getReverseIterator() {
      return new Qe(this.root, null, this.comparator, !0);
    }
  }, {
    key: "getReverseIteratorFrom",
    value: function getReverseIteratorFrom(t) {
      return new Qe(this.root, t, this.comparator, !0);
    }
  }]);
  return Ge;
}(); // end SortedMap
// An iterator over an LLRBNode.
var Qe = /*#__PURE__*/function () {
  function Qe(t, e, n, s) {
    classCallCheck_classCallCheck(this, Qe);
    this.isReverse = s, this.nodeStack = [];
    var i = 1;
    for (; !t.isEmpty();) {
      if (i = e ? n(t.key, e) : 1,
      // flip the comparison if we're going in reverse
      e && s && (i *= -1), i < 0)
        // This node is less than our start key. ignore it
        t = this.isReverse ? t.left : t.right;else {
        if (0 === i) {
          // This node is exactly equal to our start key. Push it on the stack,
          // but stop iterating;
          this.nodeStack.push(t);
          break;
        }
        // This node is greater than our start key, add it to the stack and move
        // to the next one
        this.nodeStack.push(t), t = this.isReverse ? t.right : t.left;
      }
    }
  }
  createClass_createClass(Qe, [{
    key: "getNext",
    value: function getNext() {
      var t = this.nodeStack.pop();
      var e = {
        key: t.key,
        value: t.value
      };
      if (this.isReverse) for (t = t.left; !t.isEmpty();) {
        this.nodeStack.push(t), t = t.right;
      } else for (t = t.right; !t.isEmpty();) {
        this.nodeStack.push(t), t = t.left;
      }
      return e;
    }
  }, {
    key: "hasNext",
    value: function hasNext() {
      return this.nodeStack.length > 0;
    }
  }, {
    key: "peek",
    value: function peek() {
      if (0 === this.nodeStack.length) return null;
      var t = this.nodeStack[this.nodeStack.length - 1];
      return {
        key: t.key,
        value: t.value
      };
    }
  }]);
  return Qe;
}(); // end SortedMapIterator
// Represents a node in a Left-leaning Red-Black tree.
var je = /*#__PURE__*/function () {
  function je(t, e, n, s, i) {
    classCallCheck_classCallCheck(this, je);
    this.key = t, this.value = e, this.color = null != n ? n : je.RED, this.left = null != s ? s : je.EMPTY, this.right = null != i ? i : je.EMPTY, this.size = this.left.size + 1 + this.right.size;
  }
  // Returns a copy of the current node, optionally replacing pieces of it.
  createClass_createClass(je, [{
    key: "copy",
    value: function copy(t, e, n, s, i) {
      return new je(null != t ? t : this.key, null != e ? e : this.value, null != n ? n : this.color, null != s ? s : this.left, null != i ? i : this.right);
    }
  }, {
    key: "isEmpty",
    value: function isEmpty() {
      return !1;
    }
    // Traverses the tree in key order and calls the specified action function
    // for each node. If action returns true, traversal is aborted.
    // Returns the first truthy value returned by action, or the last falsey
    // value returned by action.
  }, {
    key: "inorderTraversal",
    value: function inorderTraversal(t) {
      return this.left.inorderTraversal(t) || t(this.key, this.value) || this.right.inorderTraversal(t);
    }
    // Traverses the tree in reverse key order and calls the specified action
    // function for each node. If action returns true, traversal is aborted.
    // Returns the first truthy value returned by action, or the last falsey
    // value returned by action.
  }, {
    key: "reverseTraversal",
    value: function reverseTraversal(t) {
      return this.right.reverseTraversal(t) || t(this.key, this.value) || this.left.reverseTraversal(t);
    }
    // Returns the minimum node in the tree.
  }, {
    key: "min",
    value: function min() {
      return this.left.isEmpty() ? this : this.left.min();
    }
    // Returns the maximum key in the tree.
  }, {
    key: "minKey",
    value: function minKey() {
      return this.min().key;
    }
    // Returns the maximum key in the tree.
  }, {
    key: "maxKey",
    value: function maxKey() {
      return this.right.isEmpty() ? this.key : this.right.maxKey();
    }
    // Returns new tree, with the key/value added.
  }, {
    key: "insert",
    value: function insert(t, e, n) {
      var s = this;
      var i = n(t, s.key);
      return s = i < 0 ? s.copy(null, null, null, s.left.insert(t, e, n), null) : 0 === i ? s.copy(null, e, null, null, null) : s.copy(null, null, null, null, s.right.insert(t, e, n)), s.fixUp();
    }
  }, {
    key: "removeMin",
    value: function removeMin() {
      if (this.left.isEmpty()) return je.EMPTY;
      var t = this;
      return t.left.isRed() || t.left.left.isRed() || (t = t.moveRedLeft()), t = t.copy(null, null, null, t.left.removeMin(), null), t.fixUp();
    }
    // Returns new tree, with the specified item removed.
  }, {
    key: "remove",
    value: function remove(t, e) {
      var n,
        s = this;
      if (e(t, s.key) < 0) s.left.isEmpty() || s.left.isRed() || s.left.left.isRed() || (s = s.moveRedLeft()), s = s.copy(null, null, null, s.left.remove(t, e), null);else {
        if (s.left.isRed() && (s = s.rotateRight()), s.right.isEmpty() || s.right.isRed() || s.right.left.isRed() || (s = s.moveRedRight()), 0 === e(t, s.key)) {
          if (s.right.isEmpty()) return je.EMPTY;
          n = s.right.min(), s = s.copy(n.key, n.value, null, null, s.right.removeMin());
        }
        s = s.copy(null, null, null, null, s.right.remove(t, e));
      }
      return s.fixUp();
    }
  }, {
    key: "isRed",
    value: function isRed() {
      return this.color;
    }
    // Returns new tree after performing any needed rotations.
  }, {
    key: "fixUp",
    value: function fixUp() {
      var t = this;
      return t.right.isRed() && !t.left.isRed() && (t = t.rotateLeft()), t.left.isRed() && t.left.left.isRed() && (t = t.rotateRight()), t.left.isRed() && t.right.isRed() && (t = t.colorFlip()), t;
    }
  }, {
    key: "moveRedLeft",
    value: function moveRedLeft() {
      var t = this.colorFlip();
      return t.right.left.isRed() && (t = t.copy(null, null, null, null, t.right.rotateRight()), t = t.rotateLeft(), t = t.colorFlip()), t;
    }
  }, {
    key: "moveRedRight",
    value: function moveRedRight() {
      var t = this.colorFlip();
      return t.left.left.isRed() && (t = t.rotateRight(), t = t.colorFlip()), t;
    }
  }, {
    key: "rotateLeft",
    value: function rotateLeft() {
      var t = this.copy(null, null, je.RED, null, this.right.left);
      return this.right.copy(null, null, this.color, t, null);
    }
  }, {
    key: "rotateRight",
    value: function rotateRight() {
      var t = this.copy(null, null, je.RED, this.left.right, null);
      return this.left.copy(null, null, this.color, null, t);
    }
  }, {
    key: "colorFlip",
    value: function colorFlip() {
      var t = this.left.copy(null, null, !this.left.color, null, null),
        e = this.right.copy(null, null, !this.right.color, null, null);
      return this.copy(null, null, !this.color, t, e);
    }
    // For testing.
  }, {
    key: "checkMaxDepth",
    value: function checkMaxDepth() {
      var t = this.check();
      return Math.pow(2, t) <= this.size + 1;
    }
    // In a balanced RB tree, the black-depth (number of black nodes) from root to
    // leaves is equal on both sides.  This function verifies that or asserts.
  }, {
    key: "check",
    value: function check() {
      if (this.isRed() && this.left.isRed()) throw index_esm2017_O();
      if (this.right.isRed()) throw index_esm2017_O();
      var t = this.left.check();
      if (t !== this.right.check()) throw index_esm2017_O();
      return t + (this.isRed() ? 0 : 1);
    }
  }]);
  return je;
}(); // end LLRBNode
// Empty node is shared between all LLRB trees.
// eslint-disable-next-line @typescript-eslint/no-explicit-any
je.EMPTY = null, je.RED = !0, je.BLACK = !1;

// end LLRBEmptyNode
je.EMPTY = new (
/*#__PURE__*/
// Represents an empty node (a leaf node in the Red-Black Tree).
function () {
  function _class() {
    classCallCheck_classCallCheck(this, _class);
    this.size = 0;
  }
  createClass_createClass(_class, [{
    key: "key",
    get: function get() {
      throw index_esm2017_O();
    }
  }, {
    key: "value",
    get: function get() {
      throw index_esm2017_O();
    }
  }, {
    key: "color",
    get: function get() {
      throw index_esm2017_O();
    }
  }, {
    key: "left",
    get: function get() {
      throw index_esm2017_O();
    }
  }, {
    key: "right",
    get: function get() {
      throw index_esm2017_O();
    }
    // Returns a copy of the current node.
  }, {
    key: "copy",
    value: function copy(t, e, n, s, i) {
      return this;
    }
    // Returns a copy of the tree, with the specified key/value added.
  }, {
    key: "insert",
    value: function insert(t, e, n) {
      return new je(t, e);
    }
    // Returns a copy of the tree, with the specified key removed.
  }, {
    key: "remove",
    value: function remove(t, e) {
      return this;
    }
  }, {
    key: "isEmpty",
    value: function isEmpty() {
      return !0;
    }
  }, {
    key: "inorderTraversal",
    value: function inorderTraversal(t) {
      return !1;
    }
  }, {
    key: "reverseTraversal",
    value: function reverseTraversal(t) {
      return !1;
    }
  }, {
    key: "minKey",
    value: function minKey() {
      return null;
    }
  }, {
    key: "maxKey",
    value: function maxKey() {
      return null;
    }
  }, {
    key: "isRed",
    value: function isRed() {
      return !1;
    }
    // For testing.
  }, {
    key: "checkMaxDepth",
    value: function checkMaxDepth() {
      return !0;
    }
  }, {
    key: "check",
    value: function check() {
      return 0;
    }
  }]);
  return _class;
}())();

/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * SortedSet is an immutable (copy-on-write) collection that holds elements
 * in order specified by the provided comparator.
 *
 * NOTE: if provided comparator returns 0 for two elements, we consider them to
 * be equal!
 */
var We = /*#__PURE__*/function () {
  function We(t) {
    classCallCheck_classCallCheck(this, We);
    this.comparator = t, this.data = new Ge(this.comparator);
  }
  createClass_createClass(We, [{
    key: "has",
    value: function has(t) {
      return null !== this.data.get(t);
    }
  }, {
    key: "first",
    value: function first() {
      return this.data.minKey();
    }
  }, {
    key: "last",
    value: function last() {
      return this.data.maxKey();
    }
  }, {
    key: "size",
    get: function get() {
      return this.data.size;
    }
  }, {
    key: "indexOf",
    value: function indexOf(t) {
      return this.data.indexOf(t);
    }
    /** Iterates elements in order defined by "comparator" */
  }, {
    key: "forEach",
    value: function forEach(t) {
      this.data.inorderTraversal(function (e, n) {
        return t(e), !1;
      });
    }
    /** Iterates over `elem`s such that: range[0] &lt;= elem &lt; range[1]. */
  }, {
    key: "forEachInRange",
    value: function forEachInRange(t, e) {
      var n = this.data.getIteratorFrom(t[0]);
      for (; n.hasNext();) {
        var s = n.getNext();
        if (this.comparator(s.key, t[1]) >= 0) return;
        e(s.key);
      }
    }
    /**
     * Iterates over `elem`s such that: start &lt;= elem until false is returned.
     */
  }, {
    key: "forEachWhile",
    value: function forEachWhile(t, e) {
      var n;
      for (n = void 0 !== e ? this.data.getIteratorFrom(e) : this.data.getIterator(); n.hasNext();) {
        if (!t(n.getNext().key)) return;
      }
    }
    /** Finds the least element greater than or equal to `elem`. */
  }, {
    key: "firstAfterOrEqual",
    value: function firstAfterOrEqual(t) {
      var e = this.data.getIteratorFrom(t);
      return e.hasNext() ? e.getNext().key : null;
    }
  }, {
    key: "getIterator",
    value: function getIterator() {
      return new ze(this.data.getIterator());
    }
  }, {
    key: "getIteratorFrom",
    value: function getIteratorFrom(t) {
      return new ze(this.data.getIteratorFrom(t));
    }
    /** Inserts or updates an element */
  }, {
    key: "add",
    value: function add(t) {
      return this.copy(this.data.remove(t).insert(t, !0));
    }
    /** Deletes an element */
  }, {
    key: "delete",
    value: function _delete(t) {
      return this.has(t) ? this.copy(this.data.remove(t)) : this;
    }
  }, {
    key: "isEmpty",
    value: function isEmpty() {
      return this.data.isEmpty();
    }
  }, {
    key: "unionWith",
    value: function unionWith(t) {
      var e = this;
      // Make sure `result` always refers to the larger one of the two sets.
      return e.size < t.size && (e = t, t = this), t.forEach(function (t) {
        e = e.add(t);
      }), e;
    }
  }, {
    key: "isEqual",
    value: function isEqual(t) {
      if (!(t instanceof We)) return !1;
      if (this.size !== t.size) return !1;
      var e = this.data.getIterator(),
        n = t.data.getIterator();
      for (; e.hasNext();) {
        var _t14 = e.getNext().key,
          s = n.getNext().key;
        if (0 !== this.comparator(_t14, s)) return !1;
      }
      return !0;
    }
  }, {
    key: "toArray",
    value: function toArray() {
      var t = [];
      return this.forEach(function (e) {
        t.push(e);
      }), t;
    }
  }, {
    key: "toString",
    value: function toString() {
      var t = [];
      return this.forEach(function (e) {
        return t.push(e);
      }), "SortedSet(" + t.toString() + ")";
    }
  }, {
    key: "copy",
    value: function copy(t) {
      var e = new We(this.comparator);
      return e.data = t, e;
    }
  }]);
  return We;
}();
var ze = /*#__PURE__*/function () {
  function ze(t) {
    classCallCheck_classCallCheck(this, ze);
    this.iter = t;
  }
  createClass_createClass(ze, [{
    key: "getNext",
    value: function getNext() {
      return this.iter.getNext().key;
    }
  }, {
    key: "hasNext",
    value: function hasNext() {
      return this.iter.hasNext();
    }
  }]);
  return ze;
}();
/**
 * Compares two sorted sets for equality using their natural ordering. The
 * method computes the intersection and invokes `onAdd` for every element that
 * is in `after` but not `before`. `onRemove` is invoked for every element in
 * `before` but missing from `after`.
 *
 * The method creates a copy of both `before` and `after` and runs in O(n log
 * n), where n is the size of the two lists.
 *
 * @param before - The elements that exist in the original set.
 * @param after - The elements to diff against the original set.
 * @param comparator - The comparator for the elements in before and after.
 * @param onAdd - A function to invoke for every element that is part of `
 * after` but not `before`.
 * @param onRemove - A function to invoke for every element that is part of
 * `before` but not `after`.
 */
/**
 * Returns the next element from the iterator or `undefined` if none available.
 */
function He(t) {
  return t.hasNext() ? t.getNext() : void 0;
}

/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * Provides a set of fields that can be used to partially patch a document.
 * FieldMask is used in conjunction with ObjectValue.
 * Examples:
 *   foo - Overwrites foo entirely with the provided value. If foo is not
 *         present in the companion ObjectValue, the field is deleted.
 *   foo.bar - Overwrites only the field bar of the object foo.
 *             If foo is not an object, foo is replaced with an object
 *             containing foo
 */
var Je = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  function Je(t) {
    _classCallCheck(this, Je);
    this.fields = t,
    // TODO(dimond): validation of FieldMask
    // Sort the field mask to support `FieldMask.isEqual()` and assert below.
    t.sort(ut.comparator);
  }
  _createClass(Je, [{
    key: "unionWith",
    value:
    /**
     * Returns a new FieldMask object that is the result of adding all the given
     * fields paths to this field mask.
     */
    function unionWith(t) {
      var e = new We(ut.comparator);
      var _iterator6 = _createForOfIteratorHelper(this.fields),
        _step6;
      try {
        for (_iterator6.s(); !(_step6 = _iterator6.n()).done;) {
          var _t15 = _step6.value;
          e = e.add(_t15);
        }
      } catch (err) {
        _iterator6.e(err);
      } finally {
        _iterator6.f();
      }
      var _iterator7 = _createForOfIteratorHelper(t),
        _step7;
      try {
        for (_iterator7.s(); !(_step7 = _iterator7.n()).done;) {
          var n = _step7.value;
          e = e.add(n);
        }
      } catch (err) {
        _iterator7.e(err);
      } finally {
        _iterator7.f();
      }
      return new Je(e.toArray());
    }
    /**
     * Verifies that `fieldPath` is included by at least one field in this field
     * mask.
     *
     * This is an O(n) operation, where `n` is the size of the field mask.
     */
  }, {
    key: "covers",
    value: function covers(t) {
      var _iterator8 = _createForOfIteratorHelper(this.fields),
        _step8;
      try {
        for (_iterator8.s(); !(_step8 = _iterator8.n()).done;) {
          var e = _step8.value;
          if (e.isPrefixOf(t)) return !0;
        }
      } catch (err) {
        _iterator8.e(err);
      } finally {
        _iterator8.f();
      }
      return !1;
    }
  }, {
    key: "isEqual",
    value: function isEqual(t) {
      return tt(this.fields, t.fields, function (t, e) {
        return t.isEqual(e);
      });
    }
  }], [{
    key: "empty",
    value: function empty() {
      return new Je([]);
    }
  }]);
  return Je;
}()));
/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * An ObjectValue represents a MapValue in the Firestore Proto and offers the
 * ability to add and remove fields (via the ObjectValueBuilder).
 */
var Ye = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  function Ye(t) {
    _classCallCheck(this, Ye);
    this.value = t;
  }
  _createClass(Ye, [{
    key: "field",
    value:
    /**
     * Returns the value at the given path or null.
     *
     * @param path - the path to search
     * @returns The value at the path or null if the path is not set.
     */
    function field(t) {
      if (t.isEmpty()) return this.value;
      {
        var e = this.value;
        for (var n = 0; n < t.length - 1; ++n) {
          if (e = (e.mapValue.fields || {})[t.get(n)], !de(e)) return null;
        }
        return e = (e.mapValue.fields || {})[t.lastSegment()], e || null;
      }
    }
    /**
     * Sets the field to the provided value.
     *
     * @param path - The field path to set.
     * @param value - The value to set.
     */
  }, {
    key: "set",
    value: function set(t, e) {
      this.getFieldsMap(t.popLast())[t.lastSegment()] = _e(e);
    }
    /**
     * Sets the provided fields to the provided values.
     *
     * @param data - A map of fields to values (or null for deletes).
     */
  }, {
    key: "setAll",
    value: function setAll(t) {
      var _this29 = this;
      var e = ut.emptyPath(),
        n = {},
        s = [];
      t.forEach(function (t, i) {
        if (!e.isImmediateParentOf(i)) {
          // Insert the accumulated changes at this parent location
          var _t16 = _this29.getFieldsMap(e);
          _this29.applyChanges(_t16, n, s), n = {}, s = [], e = i.popLast();
        }
        t ? n[i.lastSegment()] = _e(t) : s.push(i.lastSegment());
      });
      var i = this.getFieldsMap(e);
      this.applyChanges(i, n, s);
    }
    /**
     * Removes the field at the specified path. If there is no field at the
     * specified path, nothing is changed.
     *
     * @param path - The field path to remove.
     */
  }, {
    key: "delete",
    value: function _delete(t) {
      var e = this.field(t.popLast());
      de(e) && e.mapValue.fields && delete e.mapValue.fields[t.lastSegment()];
    }
  }, {
    key: "isEqual",
    value: function isEqual(t) {
      return ne(this.value, t.value);
    }
    /**
     * Returns the map that contains the leaf element of `path`. If the parent
     * entry does not yet exist, or if it is not a map, a new map will be created.
     */
  }, {
    key: "getFieldsMap",
    value: function getFieldsMap(t) {
      var e = this.value;
      e.mapValue.fields || (e.mapValue = {
        fields: {}
      });
      for (var n = 0; n < t.length; ++n) {
        var s = e.mapValue.fields[t.get(n)];
        de(s) && s.mapValue.fields || (s = {
          mapValue: {
            fields: {}
          }
        }, e.mapValue.fields[t.get(n)] = s), e = s;
      }
      return e.mapValue.fields;
    }
    /**
     * Modifies `fieldsMap` by adding, replacing or deleting the specified
     * entries.
     */
  }, {
    key: "applyChanges",
    value: function applyChanges(t, e, n) {
      Bt(e, function (e, n) {
        return t[e] = n;
      });
      var _iterator9 = _createForOfIteratorHelper(n),
        _step9;
      try {
        for (_iterator9.s(); !(_step9 = _iterator9.n()).done;) {
          var _e12 = _step9.value;
          delete t[_e12];
        }
      } catch (err) {
        _iterator9.e(err);
      } finally {
        _iterator9.f();
      }
    }
  }, {
    key: "clone",
    value: function clone() {
      return new Ye(_e(this.value));
    }
  }], [{
    key: "empty",
    value: function empty() {
      return new Ye({
        mapValue: {}
      });
    }
  }]);
  return Ye;
}()));
/**
 * Returns a FieldMask built from all fields in a MapValue.
 */
function Xe(t) {
  var e = [];
  return Bt(t.fields, function (t, n) {
    var s = new ut([t]);
    if (de(n)) {
      var _t17 = Xe(n.mapValue).fields;
      if (0 === _t17.length)
        // Preserve the empty map by adding it to the FieldMask.
        e.push(s);else {
        // For nested and non-empty ObjectValues, add the FieldPath of the
        // leaf nodes.
        var _iterator10 = _createForOfIteratorHelper(_t17),
          _step10;
        try {
          for (_iterator10.s(); !(_step10 = _iterator10.n()).done;) {
            var _n5 = _step10.value;
            e.push(s.child(_n5));
          }
        } catch (err) {
          _iterator10.e(err);
        } finally {
          _iterator10.f();
        }
      }
    } else
      // For nested and non-empty ObjectValues, add the FieldPath of the leaf
      // nodes.
      e.push(s);
  }), new Je(e);
}

/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * Represents a document in Firestore with a key, version, data and whether it
 * has local mutations applied to it.
 *
 * Documents can transition between states via `convertToFoundDocument()`,
 * `convertToNoDocument()` and `convertToUnknownDocument()`. If a document does
 * not transition to one of these states even after all mutations have been
 * applied, `isValidDocument()` returns false and the document should be removed
 * from all views.
 */
var Ze = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  function Ze(t, e, n, s, i, r, o) {
    _classCallCheck(this, Ze);
    this.key = t, this.documentType = e, this.version = n, this.readTime = s, this.createTime = i, this.data = r, this.documentState = o;
  }
  /**
   * Creates a document with no known version or data, but which can serve as
   * base document for mutations.
   */
  _createClass(Ze, [{
    key: "convertToFoundDocument",
    value:
    /**
     * Changes the document type to indicate that it exists and that its version
     * and data are known.
     */
    function convertToFoundDocument(t, e) {
      // If a document is switching state from being an invalid or deleted
      // document to a valid (FOUND_DOCUMENT) document, either due to receiving an
      // update from Watch or due to applying a local set mutation on top
      // of a deleted document, our best guess about its createTime would be the
      // version at which the document transitioned to a FOUND_DOCUMENT.
      return !this.createTime.isEqual(st.min()) || 2 /* DocumentType.NO_DOCUMENT */ !== this.documentType && 0 /* DocumentType.INVALID */ !== this.documentType || (this.createTime = t), this.version = t, this.documentType = 1 /* DocumentType.FOUND_DOCUMENT */, this.data = e, this.documentState = 0 /* DocumentState.SYNCED */, this;
    }
    /**
     * Changes the document type to indicate that it doesn't exist at the given
     * version.
     */
  }, {
    key: "convertToNoDocument",
    value: function convertToNoDocument(t) {
      return this.version = t, this.documentType = 2 /* DocumentType.NO_DOCUMENT */, this.data = Ye.empty(), this.documentState = 0 /* DocumentState.SYNCED */, this;
    }
    /**
     * Changes the document type to indicate that it exists at a given version but
     * that its data is not known (e.g. a document that was updated without a known
     * base document).
     */
  }, {
    key: "convertToUnknownDocument",
    value: function convertToUnknownDocument(t) {
      return this.version = t, this.documentType = 3 /* DocumentType.UNKNOWN_DOCUMENT */, this.data = Ye.empty(), this.documentState = 2 /* DocumentState.HAS_COMMITTED_MUTATIONS */, this;
    }
  }, {
    key: "setHasCommittedMutations",
    value: function setHasCommittedMutations() {
      return this.documentState = 2 /* DocumentState.HAS_COMMITTED_MUTATIONS */, this;
    }
  }, {
    key: "setHasLocalMutations",
    value: function setHasLocalMutations() {
      return this.documentState = 1 /* DocumentState.HAS_LOCAL_MUTATIONS */, this.version = st.min(), this;
    }
  }, {
    key: "setReadTime",
    value: function setReadTime(t) {
      return this.readTime = t, this;
    }
  }, {
    key: "hasLocalMutations",
    get: function get() {
      return 1 /* DocumentState.HAS_LOCAL_MUTATIONS */ === this.documentState;
    }
  }, {
    key: "hasCommittedMutations",
    get: function get() {
      return 2 /* DocumentState.HAS_COMMITTED_MUTATIONS */ === this.documentState;
    }
  }, {
    key: "hasPendingWrites",
    get: function get() {
      return this.hasLocalMutations || this.hasCommittedMutations;
    }
  }, {
    key: "isValidDocument",
    value: function isValidDocument() {
      return 0 /* DocumentType.INVALID */ !== this.documentType;
    }
  }, {
    key: "isFoundDocument",
    value: function isFoundDocument() {
      return 1 /* DocumentType.FOUND_DOCUMENT */ === this.documentType;
    }
  }, {
    key: "isNoDocument",
    value: function isNoDocument() {
      return 2 /* DocumentType.NO_DOCUMENT */ === this.documentType;
    }
  }, {
    key: "isUnknownDocument",
    value: function isUnknownDocument() {
      return 3 /* DocumentType.UNKNOWN_DOCUMENT */ === this.documentType;
    }
  }, {
    key: "isEqual",
    value: function isEqual(t) {
      return t instanceof Ze && this.key.isEqual(t.key) && this.version.isEqual(t.version) && this.documentType === t.documentType && this.documentState === t.documentState && this.data.isEqual(t.data);
    }
  }, {
    key: "mutableCopy",
    value: function mutableCopy() {
      return new Ze(this.key, this.documentType, this.version, this.readTime, this.createTime, this.data.clone(), this.documentState);
    }
  }, {
    key: "toString",
    value: function toString() {
      return "Document(".concat(this.key, ", ").concat(this.version, ", ").concat(JSON.stringify(this.data.value), ", {createTime: ").concat(this.createTime, "}), {documentType: ").concat(this.documentType, "}), {documentState: ").concat(this.documentState, "})");
    }
  }], [{
    key: "newInvalidDocument",
    value: function newInvalidDocument(t) {
      return new Ze(t, 0 /* DocumentType.INVALID */, /* version */st.min(), /* readTime */st.min(), /* createTime */st.min(), Ye.empty(), 0 /* DocumentState.SYNCED */);
    }
    /**
     * Creates a new document that is known to exist with the given data at the
     * given version.
     */
  }, {
    key: "newFoundDocument",
    value: function newFoundDocument(t, e, n, s) {
      return new Ze(t, 1 /* DocumentType.FOUND_DOCUMENT */, /* version */e, /* readTime */st.min(), /* createTime */n, s, 0 /* DocumentState.SYNCED */);
    }
    /** Creates a new document that is known to not exist at the given version. */
  }, {
    key: "newNoDocument",
    value: function newNoDocument(t, e) {
      return new Ze(t, 2 /* DocumentType.NO_DOCUMENT */, /* version */e, /* readTime */st.min(), /* createTime */st.min(), Ye.empty(), 0 /* DocumentState.SYNCED */);
    }
    /**
     * Creates a new document that is known to exist at the given version but
     * whose data is not known (e.g. a document that was updated without a known
     * base document).
     */
  }, {
    key: "newUnknownDocument",
    value: function newUnknownDocument(t, e) {
      return new Ze(t, 3 /* DocumentType.UNKNOWN_DOCUMENT */, /* version */e, /* readTime */st.min(), /* createTime */st.min(), Ye.empty(), 2 /* DocumentState.HAS_COMMITTED_MUTATIONS */);
    }
  }]);
  return Ze;
}()));
/**
 * Compares the value for field `field` in the provided documents. Throws if
 * the field does not exist in both documents.
 */
/**
 * @license
 * Copyright 2019 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
// Visible for testing
var tn = /*#__PURE__*/(/* unused pure expression or super */ null && (_createClass(function tn(t) {
  var e = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;
  var n = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];
  var s = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : [];
  var i = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : null;
  var r = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : null;
  var o = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : null;
  _classCallCheck(this, tn);
  this.path = t, this.collectionGroup = e, this.orderBy = n, this.filters = s, this.limit = i, this.startAt = r, this.endAt = o, this.ft = null;
})));
/**
 * Initializes a Target with a path and optional additional query constraints.
 * Path must currently be empty if this is a collection group query.
 *
 * NOTE: you should always construct `Target` from `Query.toTarget` instead of
 * using this factory method, because `Query` provides an implicit `orderBy`
 * property.
 */
function en(t) {
  var e = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;
  var n = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];
  var s = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : [];
  var i = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : null;
  var r = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : null;
  var o = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : null;
  return new tn(t, e, n, s, i, r, o);
}
function nn(t) {
  var e = $(t);
  if (null === e.ft) {
    var _t18 = e.path.canonicalString();
    null !== e.collectionGroup && (_t18 += "|cg:" + e.collectionGroup), _t18 += "|f:", _t18 += e.filters.map(function (t) {
      return De(t);
    }).join(","), _t18 += "|ob:", _t18 += e.orderBy.map(function (t) {
      return function (t) {
        // TODO(b/29183165): Make this collision robust.
        return t.field.canonicalString() + t.dir;
      }(t);
    }).join(","), qt(e.limit) || (_t18 += "|l:", _t18 += e.limit), e.startAt && (_t18 += "|lb:", _t18 += e.startAt.inclusive ? "b:" : "a:", _t18 += e.startAt.position.map(function (t) {
      return oe(t);
    }).join(",")), e.endAt && (_t18 += "|ub:", _t18 += e.endAt.inclusive ? "a:" : "b:", _t18 += e.endAt.position.map(function (t) {
      return oe(t);
    }).join(",")), e.ft = _t18;
  }
  return e.ft;
}
function sn(t, e) {
  if (t.limit !== e.limit) return !1;
  if (t.orderBy.length !== e.orderBy.length) return !1;
  for (var n = 0; n < t.orderBy.length; n++) {
    if (!Ke(t.orderBy[n], e.orderBy[n])) return !1;
  }
  if (t.filters.length !== e.filters.length) return !1;
  for (var _n6 = 0; _n6 < t.filters.length; _n6++) {
    if (!Ce(t.filters[_n6], e.filters[_n6])) return !1;
  }
  return t.collectionGroup === e.collectionGroup && !!t.path.isEqual(e.path) && !!Ee(t.startAt, e.startAt) && Ee(t.endAt, e.endAt);
}
function rn(t) {
  return ct.isDocumentKey(t.path) && null === t.collectionGroup && 0 === t.filters.length;
}

/** Returns the field filters that target the given field path. */
function on(t, e) {
  return t.filters.filter(function (t) {
    return t instanceof Re && t.field.isEqual(e);
  });
}

/**
 * Returns the values that are used in ARRAY_CONTAINS or ARRAY_CONTAINS_ANY
 * filters. Returns `null` if there are no such filters.
 */
/**
 * Returns the value to use as the lower bound for ascending index segment at
 * the provided `fieldPath` (or the upper bound for an descending segment).
 */
function un(t, e, n) {
  var s = te,
    i = !0;
  // Process all filters to find a value for the current field segment
  var _iterator11 = _createForOfIteratorHelper(on(t, e)),
    _step11;
  try {
    for (_iterator11.s(); !(_step11 = _iterator11.n()).done;) {
      var _n7 = _step11.value;
      var _t20 = te,
        _e13 = !0;
      switch (_n7.op) {
        case "<" /* Operator.LESS_THAN */:
        case "<=" /* Operator.LESS_THAN_OR_EQUAL */:
          _t20 = me(_n7.value);
          break;
        case "==" /* Operator.EQUAL */:
        case "in" /* Operator.IN */:
        case ">=" /* Operator.GREATER_THAN_OR_EQUAL */:
          _t20 = _n7.value;
          break;
        case ">" /* Operator.GREATER_THAN */:
          _t20 = _n7.value, _e13 = !1;
          break;
        case "!=" /* Operator.NOT_EQUAL */:
        case "not-in" /* Operator.NOT_IN */:
          _t20 = te;
        // Remaining filters cannot be used as lower bounds.
      }

      ye({
        value: s,
        inclusive: i
      }, {
        value: _t20,
        inclusive: _e13
      }) < 0 && (s = _t20, i = _e13);
    }
    // If there is an additional bound, compare the values against the existing
    // range to see if we can narrow the scope.
  } catch (err) {
    _iterator11.e(err);
  } finally {
    _iterator11.f();
  }
  if (null !== n) for (var r = 0; r < t.orderBy.length; ++r) {
    if (t.orderBy[r].field.isEqual(e)) {
      var _t19 = n.position[r];
      ye({
        value: s,
        inclusive: i
      }, {
        value: _t19,
        inclusive: n.inclusive
      }) < 0 && (s = _t19, i = n.inclusive);
      break;
    }
  }
  return {
    value: s,
    inclusive: i
  };
}

/**
 * Returns the value to use as the upper bound for ascending index segment at
 * the provided `fieldPath` (or the lower bound for a descending segment).
 */
function cn(t, e, n) {
  var s = Zt,
    i = !0;
  // Process all filters to find a value for the current field segment
  var _iterator12 = _createForOfIteratorHelper(on(t, e)),
    _step12;
  try {
    for (_iterator12.s(); !(_step12 = _iterator12.n()).done;) {
      var _n8 = _step12.value;
      var _t22 = Zt,
        _e14 = !0;
      switch (_n8.op) {
        case ">=" /* Operator.GREATER_THAN_OR_EQUAL */:
        case ">" /* Operator.GREATER_THAN */:
          _t22 = ge(_n8.value), _e14 = !1;
          break;
        case "==" /* Operator.EQUAL */:
        case "in" /* Operator.IN */:
        case "<=" /* Operator.LESS_THAN_OR_EQUAL */:
          _t22 = _n8.value;
          break;
        case "<" /* Operator.LESS_THAN */:
          _t22 = _n8.value, _e14 = !1;
          break;
        case "!=" /* Operator.NOT_EQUAL */:
        case "not-in" /* Operator.NOT_IN */:
          _t22 = Zt;
        // Remaining filters cannot be used as upper bounds.
      }

      pe({
        value: s,
        inclusive: i
      }, {
        value: _t22,
        inclusive: _e14
      }) > 0 && (s = _t22, i = _e14);
    }
    // If there is an additional bound, compare the values against the existing
    // range to see if we can narrow the scope.
  } catch (err) {
    _iterator12.e(err);
  } finally {
    _iterator12.f();
  }
  if (null !== n) for (var r = 0; r < t.orderBy.length; ++r) {
    if (t.orderBy[r].field.isEqual(e)) {
      var _t21 = n.position[r];
      pe({
        value: s,
        inclusive: i
      }, {
        value: _t21,
        inclusive: n.inclusive
      }) > 0 && (s = _t21, i = n.inclusive);
      break;
    }
  }
  return {
    value: s,
    inclusive: i
  };
}

/** Returns the number of segments of a perfect index for this target. */
/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * Query encapsulates all the query attributes we support in the SDK. It can
 * be run against the LocalStore, as well as be converted to a `Target` to
 * query the RemoteStore results.
 *
 * Visible for testing.
 */
var an = /*#__PURE__*/(/* unused pure expression or super */ null && (_createClass(
/**
 * Initializes a Query with a path and optional additional query constraints.
 * Path must currently be empty if this is a collection group query.
 */
function an(t) {
  var e = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;
  var n = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];
  var s = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : [];
  var i = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : null;
  var r = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : "F";
  var o = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : null;
  var u = arguments.length > 7 && arguments[7] !== undefined ? arguments[7] : null;
  _classCallCheck(this, an);
  this.path = t, this.collectionGroup = e, this.explicitOrderBy = n, this.filters = s, this.limit = i, this.limitType = r, this.startAt = o, this.endAt = u, this.dt = null,
  // The corresponding `Target` of this `Query` instance.
  this._t = null, this.startAt, this.endAt;
})));
/** Creates a new Query instance with the options provided. */
function hn(t, e, n, s, i, r, o, u) {
  return new an(t, e, n, s, i, r, o, u);
}

/** Creates a new Query for a query that matches all documents at `path` */
function ln(t) {
  return new an(t);
}

/**
 * Helper to convert a collection group query into a collection query at a
 * specific path. This is used when executing collection group queries, since
 * we have to split the query into a set of collection queries at multiple
 * paths.
 */
/**
 * Returns true if this query does not specify any query constraints that
 * could remove results.
 */
function fn(t) {
  return 0 === t.filters.length && null === t.limit && null == t.startAt && null == t.endAt && (0 === t.explicitOrderBy.length || 1 === t.explicitOrderBy.length && t.explicitOrderBy[0].field.isKeyField());
}
function dn(t) {
  return t.explicitOrderBy.length > 0 ? t.explicitOrderBy[0].field : null;
}
function _n(t) {
  var _iterator13 = _createForOfIteratorHelper(t.filters),
    _step13;
  try {
    for (_iterator13.s(); !(_step13 = _iterator13.n()).done;) {
      var e = _step13.value;
      var _t23 = e.getFirstInequalityField();
      if (null !== _t23) return _t23;
    }
  } catch (err) {
    _iterator13.e(err);
  } finally {
    _iterator13.f();
  }
  return null;
}

/**
 * Creates a new Query for a collection group query that matches all documents
 * within the provided collection group.
 */
/**
 * Returns whether the query matches a collection group rather than a specific
 * collection.
 */
function wn(t) {
  return null !== t.collectionGroup;
}

/**
 * Returns the implicit order by constraint that is used to execute the Query,
 * which can be different from the order by constraints the user provided (e.g.
 * the SDK and backend always orders by `__name__`).
 */
function mn(t) {
  var e = $(t);
  if (null === e.dt) {
    e.dt = [];
    var _t24 = _n(e),
      n = dn(e);
    if (null !== _t24 && null === n)
      // In order to implicitly add key ordering, we must also add the
      // inequality filter field for it to be a valid query.
      // Note that the default inequality field and key ordering is ascending.
      _t24.isKeyField() || e.dt.push(new Ue(_t24)), e.dt.push(new Ue(ut.keyField(), "asc" /* Direction.ASCENDING */));else {
      var _t25 = !1;
      var _iterator14 = _createForOfIteratorHelper(e.explicitOrderBy),
        _step14;
      try {
        for (_iterator14.s(); !(_step14 = _iterator14.n()).done;) {
          var _n9 = _step14.value;
          e.dt.push(_n9), _n9.field.isKeyField() && (_t25 = !0);
        }
      } catch (err) {
        _iterator14.e(err);
      } finally {
        _iterator14.f();
      }
      if (!_t25) {
        // The order of the implicit key ordering always matches the last
        // explicit order by
        var _t26 = e.explicitOrderBy.length > 0 ? e.explicitOrderBy[e.explicitOrderBy.length - 1].dir : "asc" /* Direction.ASCENDING */;
        e.dt.push(new Ue(ut.keyField(), _t26));
      }
    }
  }
  return e.dt;
}

/**
 * Converts this `Query` instance to it's corresponding `Target` representation.
 */
function gn(t) {
  var e = $(t);
  if (!e._t) if ("F" /* LimitType.First */ === e.limitType) e._t = en(e.path, e.collectionGroup, mn(e), e.filters, e.limit, e.startAt, e.endAt);else {
    // Flip the orderBy directions since we want the last results
    var _t27 = [];
    var _iterator15 = _createForOfIteratorHelper(mn(e)),
      _step15;
    try {
      for (_iterator15.s(); !(_step15 = _iterator15.n()).done;) {
        var _n10 = _step15.value;
        var _e15 = "desc" /* Direction.DESCENDING */ === _n10.dir ? "asc" /* Direction.ASCENDING */ : "desc" /* Direction.DESCENDING */;
        _t27.push(new Ue(_n10.field, _e15));
      }
      // We need to swap the cursors to match the now-flipped query ordering.
    } catch (err) {
      _iterator15.e(err);
    } finally {
      _iterator15.f();
    }
    var n = e.endAt ? new Ie(e.endAt.position, e.endAt.inclusive) : null,
      s = e.startAt ? new Ie(e.startAt.position, e.startAt.inclusive) : null;
    // Now return as a LimitType.First query.
    e._t = en(e.path, e.collectionGroup, _t27, e.filters, e.limit, n, s);
  }
  return e._t;
}
function yn(t, e) {
  e.getFirstInequalityField(), _n(t);
  var n = t.filters.concat([e]);
  return new an(t.path, t.collectionGroup, t.explicitOrderBy.slice(), n, t.limit, t.limitType, t.startAt, t.endAt);
}
function pn(t, e, n) {
  return new an(t.path, t.collectionGroup, t.explicitOrderBy.slice(), t.filters.slice(), e, n, t.startAt, t.endAt);
}
function In(t, e) {
  return sn(gn(t), gn(e)) && t.limitType === e.limitType;
}

// TODO(b/29183165): This is used to get a unique string from a query to, for
// example, use as a dictionary key, but the implementation is subject to
// collisions. Make it collision-free.
function Tn(t) {
  return "".concat(nn(gn(t)), "|lt:").concat(t.limitType);
}
function En(t) {
  return "Query(target=".concat(function (t) {
    var e = t.path.canonicalString();
    return null !== t.collectionGroup && (e += " collectionGroup=" + t.collectionGroup), t.filters.length > 0 && (e += ", filters: [".concat(t.filters.map(function (t) {
      return Ne(t);
    }).join(", "), "]")), qt(t.limit) || (e += ", limit: " + t.limit), t.orderBy.length > 0 && (e += ", orderBy: [".concat(t.orderBy.map(function (t) {
      return function (t) {
        return "".concat(t.field.canonicalString(), " (").concat(t.dir, ")");
      }(t);
    }).join(", "), "]")), t.startAt && (e += ", startAt: ", e += t.startAt.inclusive ? "b:" : "a:", e += t.startAt.position.map(function (t) {
      return oe(t);
    }).join(",")), t.endAt && (e += ", endAt: ", e += t.endAt.inclusive ? "a:" : "b:", e += t.endAt.position.map(function (t) {
      return oe(t);
    }).join(",")), "Target(".concat(e, ")");
  }(gn(t)), "; limitType=").concat(t.limitType, ")");
}

/** Returns whether `doc` matches the constraints of `query`. */
function An(t, e) {
  return e.isFoundDocument() && function (t, e) {
    var n = e.key.path;
    return null !== t.collectionGroup ? e.key.hasCollectionId(t.collectionGroup) && t.path.isPrefixOf(n) : ct.isDocumentKey(t.path) ? t.path.isEqual(n) : t.path.isImmediateParentOf(n);
  }
  /**
  * A document must have a value for every ordering clause in order to show up
  * in the results.
  */(t, e) && function (t, e) {
    // We must use `queryOrderBy()` to get the list of all orderBys (both implicit and explicit).
    // Note that for OR queries, orderBy applies to all disjunction terms and implicit orderBys must
    // be taken into account. For example, the query "a > 1 || b==1" has an implicit "orderBy a" due
    // to the inequality, and is evaluated as "a > 1 orderBy a || b==1 orderBy a".
    // A document with content of {b:1} matches the filters, but does not match the orderBy because
    // it's missing the field 'a'.
    var _iterator16 = _createForOfIteratorHelper(mn(t)),
      _step16;
    try {
      for (_iterator16.s(); !(_step16 = _iterator16.n()).done;)
      // order by key always matches
      {
        var n = _step16.value;
        if (!n.field.isKeyField() && null === e.data.field(n.field)) return !1;
      }
    } catch (err) {
      _iterator16.e(err);
    } finally {
      _iterator16.f();
    }
    return !0;
  }(t, e) && function (t, e) {
    var _iterator17 = _createForOfIteratorHelper(t.filters),
      _step17;
    try {
      for (_iterator17.s(); !(_step17 = _iterator17.n()).done;) {
        var n = _step17.value;
        if (!n.matches(e)) return !1;
      }
    } catch (err) {
      _iterator17.e(err);
    } finally {
      _iterator17.f();
    }
    return !0;
  }
  /** Makes sure a document is within the bounds, if provided. */(t, e) && function (t, e) {
    if (t.startAt && !
    /**
    * Returns true if a document sorts before a bound using the provided sort
    * order.
    */
    function (t, e, n) {
      var s = Te(t, e, n);
      return t.inclusive ? s <= 0 : s < 0;
    }(t.startAt, mn(t), e)) return !1;
    if (t.endAt && !function (t, e, n) {
      var s = Te(t, e, n);
      return t.inclusive ? s >= 0 : s > 0;
    }(t.endAt, mn(t), e)) return !1;
    return !0;
  }
  /**
  * Returns the collection group that this query targets.
  *
  * PORTING NOTE: This is only used in the Web SDK to facilitate multi-tab
  * synchronization for query results.
  */(t, e);
}
function Rn(t) {
  return t.collectionGroup || (t.path.length % 2 == 1 ? t.path.lastSegment() : t.path.get(t.path.length - 2));
}

/**
 * Returns a new comparator function that can be used to compare two documents
 * based on the Query's ordering constraint.
 */
function bn(t) {
  return function (e, n) {
    var s = !1;
    var _iterator18 = _createForOfIteratorHelper(mn(t)),
      _step18;
    try {
      for (_iterator18.s(); !(_step18 = _iterator18.n()).done;) {
        var i = _step18.value;
        var _t28 = Pn(i, e, n);
        if (0 !== _t28) return _t28;
        s = s || i.field.isKeyField();
      }
    } catch (err) {
      _iterator18.e(err);
    } finally {
      _iterator18.f();
    }
    return 0;
  };
}
function Pn(t, e, n) {
  var s = t.field.isKeyField() ? ct.comparator(e.key, n.key) : function (t, e, n) {
    var s = e.data.field(t),
      i = n.data.field(t);
    return null !== s && null !== i ? ie(s, i) : index_esm2017_O();
  }(t.field, e, n);
  switch (t.dir) {
    case "asc" /* Direction.ASCENDING */:
      return s;
    case "desc" /* Direction.DESCENDING */:
      return -1 * s;
    default:
      return index_esm2017_O();
  }
}

/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * Returns an DoubleValue for `value` that is encoded based the serializer's
 * `useProto3Json` setting.
 */
function vn(t, e) {
  if (t.wt) {
    if (isNaN(e)) return {
      doubleValue: "NaN"
    };
    if (e === 1 / 0) return {
      doubleValue: "Infinity"
    };
    if (e === -1 / 0) return {
      doubleValue: "-Infinity"
    };
  }
  return {
    doubleValue: Ut(e) ? "-0" : e
  };
}

/**
 * Returns an IntegerValue for `value`.
 */
function Vn(t) {
  return {
    integerValue: "" + t
  };
}

/**
 * Returns a value for a number that's appropriate to put into a proto.
 * The return value is an IntegerValue if it can safely represent the value,
 * otherwise a DoubleValue is returned.
 */
function Sn(t, e) {
  return Kt(e) ? Vn(e) : vn(t, e);
}

/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/** Used to represent a field transform on a mutation. */
var Dn = /*#__PURE__*/(/* unused pure expression or super */ null && (_createClass(function Dn() {
  _classCallCheck(this, Dn);
  // Make sure that the structural type of `TransformOperation` is unique.
  // See https://github.com/microsoft/TypeScript/issues/5451
  this._ = void 0;
})));
/**
 * Computes the local transform result against the provided `previousValue`,
 * optionally using the provided localWriteTime.
 */
function Cn(t, e, n) {
  return t instanceof kn ? function (t, e) {
    var n = {
      fields: {
        __type__: {
          stringValue: "server_timestamp"
        },
        __local_write_time__: {
          timestampValue: {
            seconds: t.seconds,
            nanos: t.nanoseconds
          }
        }
      }
    };
    return e && (n.fields.__previous_value__ = e), {
      mapValue: n
    };
  }(n, e) : t instanceof On ? Mn(t, e) : t instanceof Fn ? $n(t, e) : function (t, e) {
    // PORTING NOTE: Since JavaScript's integer arithmetic is limited to 53 bit
    // precision and resolves overflows by reducing precision, we do not
    // manually cap overflows at 2^63.
    var n = Nn(t, e),
      s = Ln(n) + Ln(t.gt);
    return ae(n) && ae(t.gt) ? Vn(s) : vn(t.yt, s);
  }(t, e);
}

/**
 * Computes a final transform result after the transform has been acknowledged
 * by the server, potentially using the server-provided transformResult.
 */
function xn(t, e, n) {
  // The server just sends null as the transform result for array operations,
  // so we have to calculate a result the same as we do for local
  // applications.
  return t instanceof On ? Mn(t, e) : t instanceof Fn ? $n(t, e) : n;
}

/**
 * If this transform operation is not idempotent, returns the base value to
 * persist for this transform. If a base value is returned, the transform
 * operation is always applied to this base value, even if document has
 * already been updated.
 *
 * Base values provide consistent behavior for non-idempotent transforms and
 * allow us to return the same latency-compensated value even if the backend
 * has already applied the transform operation. The base value is null for
 * idempotent transforms, as they can be re-played even if the backend has
 * already applied them.
 *
 * @returns a base value to store along with the mutation, or null for
 * idempotent transforms.
 */
function Nn(t, e) {
  return t instanceof Bn ? ae(n = e) || function (t) {
    return !!t && "doubleValue" in t;
  }
  /** Returns true if `value` is either an IntegerValue or a DoubleValue. */(n) ? e : {
    integerValue: 0
  } : null;
  var n;
}

/** Transforms a value into a server-generated timestamp. */
var kn = /*#__PURE__*/(/* unused pure expression or super */ null && (function (_Dn) {
  _inherits(kn, _Dn);
  var _super14 = _createSuper(kn);
  function kn() {
    _classCallCheck(this, kn);
    return _super14.apply(this, arguments);
  }
  return _createClass(kn);
}(Dn)));
/** Transforms an array value via a union operation. */
var On = /*#__PURE__*/(/* unused pure expression or super */ null && (function (_Dn2) {
  _inherits(On, _Dn2);
  var _super15 = _createSuper(On);
  function On(t) {
    var _this30;
    _classCallCheck(this, On);
    _this30 = _super15.call(this), _this30.elements = t;
    return _this30;
  }
  return _createClass(On);
}(Dn)));
function Mn(t, e) {
  var n = qn(e);
  var _iterator19 = _createForOfIteratorHelper(t.elements),
    _step19;
  try {
    var _loop3 = function _loop3() {
      var e = _step19.value;
      n.some(function (t) {
        return ne(t, e);
      }) || n.push(e);
    };
    for (_iterator19.s(); !(_step19 = _iterator19.n()).done;) {
      _loop3();
    }
  } catch (err) {
    _iterator19.e(err);
  } finally {
    _iterator19.f();
  }
  return {
    arrayValue: {
      values: n
    }
  };
}

/** Transforms an array value via a remove operation. */
var Fn = /*#__PURE__*/(/* unused pure expression or super */ null && (function (_Dn3) {
  _inherits(Fn, _Dn3);
  var _super16 = _createSuper(Fn);
  function Fn(t) {
    var _this31;
    _classCallCheck(this, Fn);
    _this31 = _super16.call(this), _this31.elements = t;
    return _this31;
  }
  return _createClass(Fn);
}(Dn)));
function $n(t, e) {
  var n = qn(e);
  var _iterator20 = _createForOfIteratorHelper(t.elements),
    _step20;
  try {
    var _loop4 = function _loop4() {
      var e = _step20.value;
      n = n.filter(function (t) {
        return !ne(t, e);
      });
    };
    for (_iterator20.s(); !(_step20 = _iterator20.n()).done;) {
      _loop4();
    }
  } catch (err) {
    _iterator20.e(err);
  } finally {
    _iterator20.f();
  }
  return {
    arrayValue: {
      values: n
    }
  };
}

/**
 * Implements the backend semantics for locally computed NUMERIC_ADD (increment)
 * transforms. Converts all field values to integers or doubles, but unlike the
 * backend does not cap integer values at 2^63. Instead, JavaScript number
 * arithmetic is used and precision loss can occur for values greater than 2^53.
 */
var Bn = /*#__PURE__*/(/* unused pure expression or super */ null && (function (_Dn4) {
  _inherits(Bn, _Dn4);
  var _super17 = _createSuper(Bn);
  function Bn(t, e) {
    var _this32;
    _classCallCheck(this, Bn);
    _this32 = _super17.call(this), _this32.yt = t, _this32.gt = e;
    return _this32;
  }
  return _createClass(Bn);
}(Dn)));
function Ln(t) {
  return zt(t.integerValue || t.doubleValue);
}
function qn(t) {
  return he(t) && t.arrayValue.values ? t.arrayValue.values.slice() : [];
}

/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/** A field path and the TransformOperation to perform upon it. */
var Un = /*#__PURE__*/(/* unused pure expression or super */ null && (_createClass(function Un(t, e) {
  _classCallCheck(this, Un);
  this.field = t, this.transform = e;
})));
function Kn(t, e) {
  return t.field.isEqual(e.field) && function (t, e) {
    return t instanceof On && e instanceof On || t instanceof Fn && e instanceof Fn ? tt(t.elements, e.elements, ne) : t instanceof Bn && e instanceof Bn ? ne(t.gt, e.gt) : t instanceof kn && e instanceof kn;
  }(t.transform, e.transform);
}

/** The result of successfully applying a mutation to the backend. */
var Gn = /*#__PURE__*/(/* unused pure expression or super */ null && (_createClass(function Gn(
/**
 * The version at which the mutation was committed:
 *
 * - For most operations, this is the updateTime in the WriteResult.
 * - For deletes, the commitTime of the WriteResponse (because deletes are
 *   not stored and have no updateTime).
 *
 * Note that these versions can be different: No-op writes will not change
 * the updateTime even though the commitTime advances.
 */
t,
/**
 * The resulting fields returned from the backend after a mutation
 * containing field transforms has been committed. Contains one FieldValue
 * for each FieldTransform that was in the mutation.
 *
 * Will be empty if the mutation did not contain any field transforms.
 */
e) {
  _classCallCheck(this, Gn);
  this.version = t, this.transformResults = e;
})));
/**
 * Encodes a precondition for a mutation. This follows the model that the
 * backend accepts with the special case of an explicit "empty" precondition
 * (meaning no precondition).
 */
var Qn = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  function Qn(t, e) {
    _classCallCheck(this, Qn);
    this.updateTime = t, this.exists = e;
  }
  /** Creates a new empty Precondition. */
  _createClass(Qn, [{
    key: "isNone",
    get: /** Returns whether this Precondition is empty. */function get() {
      return void 0 === this.updateTime && void 0 === this.exists;
    }
  }, {
    key: "isEqual",
    value: function isEqual(t) {
      return this.exists === t.exists && (this.updateTime ? !!t.updateTime && this.updateTime.isEqual(t.updateTime) : !t.updateTime);
    }
  }], [{
    key: "none",
    value: function none() {
      return new Qn();
    }
    /** Creates a new Precondition with an exists flag. */
  }, {
    key: "exists",
    value: function exists(t) {
      return new Qn(void 0, t);
    }
    /** Creates a new Precondition based on a version a document exists at. */
  }, {
    key: "updateTime",
    value: function updateTime(t) {
      return new Qn(t);
    }
  }]);
  return Qn;
}()));
/** Returns true if the preconditions is valid for the given document. */
function jn(t, e) {
  return void 0 !== t.updateTime ? e.isFoundDocument() && e.version.isEqual(t.updateTime) : void 0 === t.exists || t.exists === e.isFoundDocument();
}

/**
 * A mutation describes a self-contained change to a document. Mutations can
 * create, replace, delete, and update subsets of documents.
 *
 * Mutations not only act on the value of the document but also its version.
 *
 * For local mutations (mutations that haven't been committed yet), we preserve
 * the existing version for Set and Patch mutations. For Delete mutations, we
 * reset the version to 0.
 *
 * Here's the expected transition table.
 *
 * MUTATION           APPLIED TO            RESULTS IN
 *
 * SetMutation        Document(v3)          Document(v3)
 * SetMutation        NoDocument(v3)        Document(v0)
 * SetMutation        InvalidDocument(v0)   Document(v0)
 * PatchMutation      Document(v3)          Document(v3)
 * PatchMutation      NoDocument(v3)        NoDocument(v3)
 * PatchMutation      InvalidDocument(v0)   UnknownDocument(v3)
 * DeleteMutation     Document(v3)          NoDocument(v0)
 * DeleteMutation     NoDocument(v3)        NoDocument(v0)
 * DeleteMutation     InvalidDocument(v0)   NoDocument(v0)
 *
 * For acknowledged mutations, we use the updateTime of the WriteResponse as
 * the resulting version for Set and Patch mutations. As deletes have no
 * explicit update time, we use the commitTime of the WriteResponse for
 * Delete mutations.
 *
 * If a mutation is acknowledged by the backend but fails the precondition check
 * locally, we transition to an `UnknownDocument` and rely on Watch to send us
 * the updated version.
 *
 * Field transforms are used only with Patch and Set Mutations. We use the
 * `updateTransforms` message to store transforms, rather than the `transforms`s
 * messages.
 *
 * ## Subclassing Notes
 *
 * Every type of mutation needs to implement its own applyToRemoteDocument() and
 * applyToLocalView() to implement the actual behavior of applying the mutation
 * to some source document (see `setMutationApplyToRemoteDocument()` for an
 * example).
 */
var Wn = /*#__PURE__*/(/* unused pure expression or super */ null && (_createClass(function Wn() {
  _classCallCheck(this, Wn);
})));
/**
 * A utility method to calculate a `Mutation` representing the overlay from the
 * final state of the document, and a `FieldMask` representing the fields that
 * are mutated by the local mutations.
 */
function zn(t, e) {
  if (!t.hasLocalMutations || e && 0 === e.fields.length) return null;
  // mask is null when sets or deletes are applied to the current document.
  if (null === e) return t.isNoDocument() ? new is(t.key, Qn.none()) : new Zn(t.key, t.data, Qn.none());
  {
    var n = t.data,
      s = Ye.empty();
    var i = new We(ut.comparator);
    var _iterator21 = _createForOfIteratorHelper(e.fields),
      _step21;
    try {
      for (_iterator21.s(); !(_step21 = _iterator21.n()).done;) {
        var _t29 = _step21.value;
        if (!i.has(_t29)) {
          var _e16 = n.field(_t29);
          // If we are deleting a nested field, we take the immediate parent as
          // the mask used to construct the resulting mutation.
          // Justification: Nested fields can create parent fields implicitly. If
          // only a leaf entry is deleted in later mutations, the parent field
          // should still remain, but we may have lost this information.
          // Consider mutation (foo.bar 1), then mutation (foo.bar delete()).
          // This leaves the final result (foo, {}). Despite the fact that `doc`
          // has the correct result, `foo` is not in `mask`, and the resulting
          // mutation would miss `foo`.
          null === _e16 && _t29.length > 1 && (_t29 = _t29.popLast(), _e16 = n.field(_t29)), null === _e16 ? s.delete(_t29) : s.set(_t29, _e16), i = i.add(_t29);
        }
      }
    } catch (err) {
      _iterator21.e(err);
    } finally {
      _iterator21.f();
    }
    return new ts(t.key, s, new Je(i.toArray()), Qn.none());
  }
}

/**
 * Applies this mutation to the given document for the purposes of computing a
 * new remote document. If the input document doesn't match the expected state
 * (e.g. it is invalid or outdated), the document type may transition to
 * unknown.
 *
 * @param mutation - The mutation to apply.
 * @param document - The document to mutate. The input document can be an
 *     invalid document if the client has no knowledge of the pre-mutation state
 *     of the document.
 * @param mutationResult - The result of applying the mutation from the backend.
 */
function Hn(t, e, n) {
  t instanceof Zn ? function (t, e, n) {
    // Unlike setMutationApplyToLocalView, if we're applying a mutation to a
    // remote document the server has accepted the mutation so the precondition
    // must have held.
    var s = t.value.clone(),
      i = ns(t.fieldTransforms, e, n.transformResults);
    s.setAll(i), e.convertToFoundDocument(n.version, s).setHasCommittedMutations();
  }(t, e, n) : t instanceof ts ? function (t, e, n) {
    if (!jn(t.precondition, e))
      // Since the mutation was not rejected, we know that the precondition
      // matched on the backend. We therefore must not have the expected version
      // of the document in our cache and convert to an UnknownDocument with a
      // known updateTime.
      return void e.convertToUnknownDocument(n.version);
    var s = ns(t.fieldTransforms, e, n.transformResults),
      i = e.data;
    i.setAll(es(t)), i.setAll(s), e.convertToFoundDocument(n.version, i).setHasCommittedMutations();
  }(t, e, n) : function (t, e, n) {
    // Unlike applyToLocalView, if we're applying a mutation to a remote
    // document the server has accepted the mutation so the precondition must
    // have held.
    e.convertToNoDocument(n.version).setHasCommittedMutations();
  }(0, e, n);
}

/**
 * Applies this mutation to the given document for the purposes of computing
 * the new local view of a document. If the input document doesn't match the
 * expected state, the document is not modified.
 *
 * @param mutation - The mutation to apply.
 * @param document - The document to mutate. The input document can be an
 *     invalid document if the client has no knowledge of the pre-mutation state
 *     of the document.
 * @param previousMask - The fields that have been updated before applying this mutation.
 * @param localWriteTime - A timestamp indicating the local write time of the
 *     batch this mutation is a part of.
 * @returns A `FieldMask` representing the fields that are changed by applying this mutation.
 */
function Jn(t, e, n, s) {
  return t instanceof Zn ? function (t, e, n, s) {
    if (!jn(t.precondition, e))
      // The mutation failed to apply (e.g. a document ID created with add()
      // caused a name collision).
      return n;
    var i = t.value.clone(),
      r = ss(t.fieldTransforms, s, e);
    return i.setAll(r), e.convertToFoundDocument(e.version, i).setHasLocalMutations(), null;
    // SetMutation overwrites all fields.
  }
  /**
  * A mutation that modifies fields of the document at the given key with the
  * given values. The values are applied through a field mask:
  *
  *  * When a field is in both the mask and the values, the corresponding field
  *    is updated.
  *  * When a field is in neither the mask nor the values, the corresponding
  *    field is unmodified.
  *  * When a field is in the mask but not in the values, the corresponding field
  *    is deleted.
  *  * When a field is not in the mask but is in the values, the values map is
  *    ignored.
  */(t, e, n, s) : t instanceof ts ? function (t, e, n, s) {
    if (!jn(t.precondition, e)) return n;
    var i = ss(t.fieldTransforms, s, e),
      r = e.data;
    if (r.setAll(es(t)), r.setAll(i), e.convertToFoundDocument(e.version, r).setHasLocalMutations(), null === n) return null;
    return n.unionWith(t.fieldMask.fields).unionWith(t.fieldTransforms.map(function (t) {
      return t.field;
    }));
  }
  /**
  * Returns a FieldPath/Value map with the content of the PatchMutation.
  */(t, e, n, s) : function (t, e, n) {
    if (jn(t.precondition, e)) return e.convertToNoDocument(e.version).setHasLocalMutations(), null;
    return n;
  }
  /**
  * A mutation that verifies the existence of the document at the given key with
  * the provided precondition.
  *
  * The `verify` operation is only used in Transactions, and this class serves
  * primarily to facilitate serialization into protos.
  */(t, e, n);
}

/**
 * If this mutation is not idempotent, returns the base value to persist with
 * this mutation. If a base value is returned, the mutation is always applied
 * to this base value, even if document has already been updated.
 *
 * The base value is a sparse object that consists of only the document
 * fields for which this mutation contains a non-idempotent transformation
 * (e.g. a numeric increment). The provided value guarantees consistent
 * behavior for non-idempotent transforms and allow us to return the same
 * latency-compensated value even if the backend has already applied the
 * mutation. The base value is null for idempotent mutations, as they can be
 * re-played even if the backend has already applied them.
 *
 * @returns a base value to store along with the mutation, or null for
 * idempotent mutations.
 */
function Yn(t, e) {
  var n = null;
  var _iterator22 = _createForOfIteratorHelper(t.fieldTransforms),
    _step22;
  try {
    for (_iterator22.s(); !(_step22 = _iterator22.n()).done;) {
      var s = _step22.value;
      var _t30 = e.data.field(s.field),
        i = Nn(s.transform, _t30 || null);
      null != i && (null === n && (n = Ye.empty()), n.set(s.field, i));
    }
  } catch (err) {
    _iterator22.e(err);
  } finally {
    _iterator22.f();
  }
  return n || null;
}
function Xn(t, e) {
  return t.type === e.type && !!t.key.isEqual(e.key) && !!t.precondition.isEqual(e.precondition) && !!function (t, e) {
    return void 0 === t && void 0 === e || !(!t || !e) && tt(t, e, function (t, e) {
      return Kn(t, e);
    });
  }(t.fieldTransforms, e.fieldTransforms) && (0 /* MutationType.Set */ === t.type ? t.value.isEqual(e.value) : 1 /* MutationType.Patch */ !== t.type || t.data.isEqual(e.data) && t.fieldMask.isEqual(e.fieldMask));
}

/**
 * A mutation that creates or replaces the document at the given key with the
 * object value contents.
 */
var Zn = /*#__PURE__*/(/* unused pure expression or super */ null && (function (_Wn) {
  _inherits(Zn, _Wn);
  var _super18 = _createSuper(Zn);
  function Zn(t, e, n) {
    var _this33;
    var s = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : [];
    _classCallCheck(this, Zn);
    _this33 = _super18.call(this), _this33.key = t, _this33.value = e, _this33.precondition = n, _this33.fieldTransforms = s, _this33.type = 0 /* MutationType.Set */;
    return _this33;
  }
  _createClass(Zn, [{
    key: "getFieldMask",
    value: function getFieldMask() {
      return null;
    }
  }]);
  return Zn;
}(Wn)));
var ts = /*#__PURE__*/(/* unused pure expression or super */ null && (function (_Wn2) {
  _inherits(ts, _Wn2);
  var _super19 = _createSuper(ts);
  function ts(t, e, n, s) {
    var _this34;
    var i = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : [];
    _classCallCheck(this, ts);
    _this34 = _super19.call(this), _this34.key = t, _this34.data = e, _this34.fieldMask = n, _this34.precondition = s, _this34.fieldTransforms = i, _this34.type = 1 /* MutationType.Patch */;
    return _this34;
  }
  _createClass(ts, [{
    key: "getFieldMask",
    value: function getFieldMask() {
      return this.fieldMask;
    }
  }]);
  return ts;
}(Wn)));
function es(t) {
  var e = new Map();
  return t.fieldMask.fields.forEach(function (n) {
    if (!n.isEmpty()) {
      var s = t.data.field(n);
      e.set(n, s);
    }
  }), e;
}

/**
 * Creates a list of "transform results" (a transform result is a field value
 * representing the result of applying a transform) for use after a mutation
 * containing transforms has been acknowledged by the server.
 *
 * @param fieldTransforms - The field transforms to apply the result to.
 * @param mutableDocument - The current state of the document after applying all
 * previous mutations.
 * @param serverTransformResults - The transform results received by the server.
 * @returns The transform results list.
 */
function ns(t, e, n) {
  var s = new Map();
  index_esm2017_M(t.length === n.length);
  for (var i = 0; i < n.length; i++) {
    var r = t[i],
      o = r.transform,
      u = e.data.field(r.field);
    s.set(r.field, xn(o, u, n[i]));
  }
  return s;
}

/**
 * Creates a list of "transform results" (a transform result is a field value
 * representing the result of applying a transform) for use when applying a
 * transform locally.
 *
 * @param fieldTransforms - The field transforms to apply the result to.
 * @param localWriteTime - The local time of the mutation (used to
 *     generate ServerTimestampValues).
 * @param mutableDocument - The document to apply transforms on.
 * @returns The transform results list.
 */
function ss(t, e, n) {
  var s = new Map();
  var _iterator23 = _createForOfIteratorHelper(t),
    _step23;
  try {
    for (_iterator23.s(); !(_step23 = _iterator23.n()).done;) {
      var i = _step23.value;
      var _t31 = i.transform,
        r = n.data.field(i.field);
      s.set(i.field, Cn(_t31, r, e));
    }
  } catch (err) {
    _iterator23.e(err);
  } finally {
    _iterator23.f();
  }
  return s;
}

/** A mutation that deletes the document at the given key. */
var is = /*#__PURE__*/(/* unused pure expression or super */ null && (function (_Wn3) {
  _inherits(is, _Wn3);
  var _super20 = _createSuper(is);
  function is(t, e) {
    var _this35;
    _classCallCheck(this, is);
    _this35 = _super20.call(this), _this35.key = t, _this35.precondition = e, _this35.type = 2 /* MutationType.Delete */, _this35.fieldTransforms = [];
    return _this35;
  }
  _createClass(is, [{
    key: "getFieldMask",
    value: function getFieldMask() {
      return null;
    }
  }]);
  return is;
}(Wn)));
var rs = /*#__PURE__*/(/* unused pure expression or super */ null && (function (_Wn4) {
  _inherits(rs, _Wn4);
  var _super21 = _createSuper(rs);
  function rs(t, e) {
    var _this36;
    _classCallCheck(this, rs);
    _this36 = _super21.call(this), _this36.key = t, _this36.precondition = e, _this36.type = 3 /* MutationType.Verify */, _this36.fieldTransforms = [];
    return _this36;
  }
  _createClass(rs, [{
    key: "getFieldMask",
    value: function getFieldMask() {
      return null;
    }
  }]);
  return rs;
}(Wn)));
/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
var os = /*#__PURE__*/(/* unused pure expression or super */ null && (_createClass(
// TODO(b/33078163): just use simplest form of existence filter for now
function os(t) {
  _classCallCheck(this, os);
  this.count = t;
})));
/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * Error Codes describing the different ways GRPC can fail. These are copied
 * directly from GRPC's sources here:
 *
 * https://github.com/grpc/grpc/blob/bceec94ea4fc5f0085d81235d8e1c06798dc341a/include/grpc%2B%2B/impl/codegen/status_code_enum.h
 *
 * Important! The names of these identifiers matter because the string forms
 * are used for reverse lookups from the webchannel stream. Do NOT change the
 * names of these identifiers or change this into a const enum.
 */
var us, cs;

/**
 * Determines whether an error code represents a permanent error when received
 * in response to a non-write operation.
 *
 * See isPermanentWriteError for classifying write errors.
 */
function as(t) {
  switch (t) {
    default:
      return index_esm2017_O();
    case index_esm2017_B.CANCELLED:
    case index_esm2017_B.UNKNOWN:
    case index_esm2017_B.DEADLINE_EXCEEDED:
    case index_esm2017_B.RESOURCE_EXHAUSTED:
    case index_esm2017_B.INTERNAL:
    case index_esm2017_B.UNAVAILABLE:
    // Unauthenticated means something went wrong with our token and we need
    // to retry with new credentials which will happen automatically.
    case index_esm2017_B.UNAUTHENTICATED:
      return !1;
    case index_esm2017_B.INVALID_ARGUMENT:
    case index_esm2017_B.NOT_FOUND:
    case index_esm2017_B.ALREADY_EXISTS:
    case index_esm2017_B.PERMISSION_DENIED:
    case index_esm2017_B.FAILED_PRECONDITION:
    // Aborted might be retried in some scenarios, but that is dependant on
    // the context and should handled individually by the calling code.
    // See https://cloud.google.com/apis/design/errors.
    case index_esm2017_B.ABORTED:
    case index_esm2017_B.OUT_OF_RANGE:
    case index_esm2017_B.UNIMPLEMENTED:
    case index_esm2017_B.DATA_LOSS:
      return !0;
  }
}

/**
 * Determines whether an error code represents a permanent error when received
 * in response to a write operation.
 *
 * Write operations must be handled specially because as of b/119437764, ABORTED
 * errors on the write stream should be retried too (even though ABORTED errors
 * are not generally retryable).
 *
 * Note that during the initial handshake on the write stream an ABORTED error
 * signals that we should discard our stream token (i.e. it is permanent). This
 * means a handshake error should be classified with isPermanentError, above.
 */
/**
 * Maps an error Code from GRPC status code number, like 0, 1, or 14. These
 * are not the same as HTTP status codes.
 *
 * @returns The Code equivalent to the given GRPC status code. Fails if there
 *     is no match.
 */
function hs(t) {
  if (void 0 === t)
    // This shouldn't normally happen, but in certain error cases (like trying
    // to send invalid proto messages) we may get an error with no GRPC code.
    return index_esm2017_x("GRPC error has no .code"), index_esm2017_B.UNKNOWN;
  switch (t) {
    case us.OK:
      return index_esm2017_B.OK;
    case us.CANCELLED:
      return index_esm2017_B.CANCELLED;
    case us.UNKNOWN:
      return index_esm2017_B.UNKNOWN;
    case us.DEADLINE_EXCEEDED:
      return index_esm2017_B.DEADLINE_EXCEEDED;
    case us.RESOURCE_EXHAUSTED:
      return index_esm2017_B.RESOURCE_EXHAUSTED;
    case us.INTERNAL:
      return index_esm2017_B.INTERNAL;
    case us.UNAVAILABLE:
      return index_esm2017_B.UNAVAILABLE;
    case us.UNAUTHENTICATED:
      return index_esm2017_B.UNAUTHENTICATED;
    case us.INVALID_ARGUMENT:
      return index_esm2017_B.INVALID_ARGUMENT;
    case us.NOT_FOUND:
      return index_esm2017_B.NOT_FOUND;
    case us.ALREADY_EXISTS:
      return index_esm2017_B.ALREADY_EXISTS;
    case us.PERMISSION_DENIED:
      return index_esm2017_B.PERMISSION_DENIED;
    case us.FAILED_PRECONDITION:
      return index_esm2017_B.FAILED_PRECONDITION;
    case us.ABORTED:
      return index_esm2017_B.ABORTED;
    case us.OUT_OF_RANGE:
      return index_esm2017_B.OUT_OF_RANGE;
    case us.UNIMPLEMENTED:
      return index_esm2017_B.UNIMPLEMENTED;
    case us.DATA_LOSS:
      return index_esm2017_B.DATA_LOSS;
    default:
      return index_esm2017_O();
  }
}

/**
 * Converts an HTTP response's error status to the equivalent error code.
 *
 * @param status - An HTTP error response status ("FAILED_PRECONDITION",
 * "UNKNOWN", etc.)
 * @returns The equivalent Code. Non-matching responses are mapped to
 *     Code.UNKNOWN.
 */
(cs = us || (us = {}))[cs.OK = 0] = "OK", cs[cs.CANCELLED = 1] = "CANCELLED", cs[cs.UNKNOWN = 2] = "UNKNOWN", cs[cs.INVALID_ARGUMENT = 3] = "INVALID_ARGUMENT", cs[cs.DEADLINE_EXCEEDED = 4] = "DEADLINE_EXCEEDED", cs[cs.NOT_FOUND = 5] = "NOT_FOUND", cs[cs.ALREADY_EXISTS = 6] = "ALREADY_EXISTS", cs[cs.PERMISSION_DENIED = 7] = "PERMISSION_DENIED", cs[cs.UNAUTHENTICATED = 16] = "UNAUTHENTICATED", cs[cs.RESOURCE_EXHAUSTED = 8] = "RESOURCE_EXHAUSTED", cs[cs.FAILED_PRECONDITION = 9] = "FAILED_PRECONDITION", cs[cs.ABORTED = 10] = "ABORTED", cs[cs.OUT_OF_RANGE = 11] = "OUT_OF_RANGE", cs[cs.UNIMPLEMENTED = 12] = "UNIMPLEMENTED", cs[cs.INTERNAL = 13] = "INTERNAL", cs[cs.UNAVAILABLE = 14] = "UNAVAILABLE", cs[cs.DATA_LOSS = 15] = "DATA_LOSS";

/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * A map implementation that uses objects as keys. Objects must have an
 * associated equals function and must be immutable. Entries in the map are
 * stored together with the key being produced from the mapKeyFn. This map
 * automatically handles collisions of keys.
 */
var ls = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  function ls(t, e) {
    _classCallCheck(this, ls);
    this.mapKeyFn = t, this.equalsFn = e,
    /**
     * The inner map for a key/value pair. Due to the possibility of collisions we
     * keep a list of entries that we do a linear search through to find an actual
     * match. Note that collisions should be rare, so we still expect near
     * constant time lookups in practice.
     */
    this.inner = {}, /** The number of entries stored in the map */
    this.innerSize = 0;
  }
  /** Get a value for this key, or undefined if it does not exist. */
  _createClass(ls, [{
    key: "get",
    value: function get(t) {
      var e = this.mapKeyFn(t),
        n = this.inner[e];
      if (void 0 !== n) {
        var _iterator24 = _createForOfIteratorHelper(n),
          _step24;
        try {
          for (_iterator24.s(); !(_step24 = _iterator24.n()).done;) {
            var _step24$value = _slicedToArray(_step24.value, 2),
              _e17 = _step24$value[0],
              s = _step24$value[1];
            if (this.equalsFn(_e17, t)) return s;
          }
        } catch (err) {
          _iterator24.e(err);
        } finally {
          _iterator24.f();
        }
      }
    }
  }, {
    key: "has",
    value: function has(t) {
      return void 0 !== this.get(t);
    }
    /** Put this key and value in the map. */
  }, {
    key: "set",
    value: function set(t, e) {
      var n = this.mapKeyFn(t),
        s = this.inner[n];
      if (void 0 === s) return this.inner[n] = [[t, e]], void this.innerSize++;
      for (var _n11 = 0; _n11 < s.length; _n11++) {
        if (this.equalsFn(s[_n11][0], t))
          // This is updating an existing entry and does not increase `innerSize`.
          return void (s[_n11] = [t, e]);
      }
      s.push([t, e]), this.innerSize++;
    }
    /**
     * Remove this key from the map. Returns a boolean if anything was deleted.
     */
  }, {
    key: "delete",
    value: function _delete(t) {
      var e = this.mapKeyFn(t),
        n = this.inner[e];
      if (void 0 === n) return !1;
      for (var s = 0; s < n.length; s++) {
        if (this.equalsFn(n[s][0], t)) return 1 === n.length ? delete this.inner[e] : n.splice(s, 1), this.innerSize--, !0;
      }
      return !1;
    }
  }, {
    key: "forEach",
    value: function forEach(t) {
      Bt(this.inner, function (e, n) {
        var _iterator25 = _createForOfIteratorHelper(n),
          _step25;
        try {
          for (_iterator25.s(); !(_step25 = _iterator25.n()).done;) {
            var _step25$value = _slicedToArray(_step25.value, 2),
              _e18 = _step25$value[0],
              s = _step25$value[1];
            t(_e18, s);
          }
        } catch (err) {
          _iterator25.e(err);
        } finally {
          _iterator25.f();
        }
      });
    }
  }, {
    key: "isEmpty",
    value: function isEmpty() {
      return Lt(this.inner);
    }
  }, {
    key: "size",
    value: function size() {
      return this.innerSize;
    }
  }]);
  return ls;
}()));
/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
var fs = new Ge(ct.comparator);
function ds() {
  return fs;
}
var _s = new Ge(ct.comparator);
function ws() {
  var e = _s;
  for (var _len5 = arguments.length, t = new Array(_len5), _key5 = 0; _key5 < _len5; _key5++) {
    t[_key5] = arguments[_key5];
  }
  for (var _i3 = 0, _t32 = t; _i3 < _t32.length; _i3++) {
    var n = _t32[_i3];
    e = e.insert(n.key, n);
  }
  return e;
}
function ms(t) {
  var e = _s;
  return t.forEach(function (t, n) {
    return e = e.insert(t, n.overlayedDocument);
  }), e;
}
function gs() {
  return ps();
}
function ys() {
  return ps();
}
function ps() {
  return new ls(function (t) {
    return t.toString();
  }, function (t, e) {
    return t.isEqual(e);
  });
}
var Is = new Ge(ct.comparator);
var Ts = new We(ct.comparator);
function Es() {
  var e = Ts;
  for (var _len6 = arguments.length, t = new Array(_len6), _key6 = 0; _key6 < _len6; _key6++) {
    t[_key6] = arguments[_key6];
  }
  for (var _i4 = 0, _t33 = t; _i4 < _t33.length; _i4++) {
    var n = _t33[_i4];
    e = e.add(n);
  }
  return e;
}
var As = new We(Z);
function Rs() {
  return As;
}

/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * An event from the RemoteStore. It is split into targetChanges (changes to the
 * state or the set of documents in our watched targets) and documentUpdates
 * (changes to the actual documents).
 */
var bs = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  function bs(
  /**
   * The snapshot version this event brings us up to, or MIN if not set.
   */
  t,
  /**
   * A map from target to changes to the target. See TargetChange.
   */
  e,
  /**
   * A set of targets that is known to be inconsistent. Listens for these
   * targets should be re-established without resume tokens.
   */
  n,
  /**
   * A set of which documents have changed or been deleted, along with the
   * doc's new values (if not deleted).
   */
  s,
  /**
   * A set of which document updates are due only to limbo resolution targets.
   */
  i) {
    _classCallCheck(this, bs);
    this.snapshotVersion = t, this.targetChanges = e, this.targetMismatches = n, this.documentUpdates = s, this.resolvedLimboDocuments = i;
  }
  /**
   * HACK: Views require RemoteEvents in order to determine whether the view is
   * CURRENT, but secondary tabs don't receive remote events. So this method is
   * used to create a synthesized RemoteEvent that can be used to apply a
   * CURRENT status change to a View, for queries executed in a different tab.
   */
  // PORTING NOTE: Multi-tab only
  _createClass(bs, null, [{
    key: "createSynthesizedRemoteEventForCurrentChange",
    value: function createSynthesizedRemoteEventForCurrentChange(t, e, n) {
      var s = new Map();
      return s.set(t, Ps.createSynthesizedTargetChangeForCurrentChange(t, e, n)), new bs(st.min(), s, Rs(), ds(), Es());
    }
  }]);
  return bs;
}()));
/**
 * A TargetChange specifies the set of changes for a specific target as part of
 * a RemoteEvent. These changes track which documents are added, modified or
 * removed, as well as the target's resume token and whether the target is
 * marked CURRENT.
 * The actual changes *to* documents are not part of the TargetChange since
 * documents may be part of multiple targets.
 */
var Ps = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  function Ps(
  /**
   * An opaque, server-assigned token that allows watching a query to be resumed
   * after disconnecting without retransmitting all the data that matches the
   * query. The resume token essentially identifies a point in time from which
   * the server should resume sending results.
   */
  t,
  /**
   * The "current" (synced) status of this target. Note that "current"
   * has special meaning in the RPC protocol that implies that a target is
   * both up-to-date and consistent with the rest of the watch stream.
   */
  e,
  /**
   * The set of documents that were newly assigned to this target as part of
   * this remote event.
   */
  n,
  /**
   * The set of documents that were already assigned to this target but received
   * an update during this remote event.
   */
  s,
  /**
   * The set of documents that were removed from this target as part of this
   * remote event.
   */
  i) {
    _classCallCheck(this, Ps);
    this.resumeToken = t, this.current = e, this.addedDocuments = n, this.modifiedDocuments = s, this.removedDocuments = i;
  }
  /**
   * This method is used to create a synthesized TargetChanges that can be used to
   * apply a CURRENT status change to a View (for queries executed in a different
   * tab) or for new queries (to raise snapshots with correct CURRENT status).
   */
  _createClass(Ps, null, [{
    key: "createSynthesizedTargetChangeForCurrentChange",
    value: function createSynthesizedTargetChangeForCurrentChange(t, e, n) {
      return new Ps(n, e, Es(), Es(), Es());
    }
  }]);
  return Ps;
}()));
/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * Represents a changed document and a list of target ids to which this change
 * applies.
 *
 * If document has been deleted NoDocument will be provided.
 */
var vs = /*#__PURE__*/(/* unused pure expression or super */ null && (_createClass(function vs( /** The new document applies to all of these targets. */
t, /** The new document is removed from all of these targets. */
e, /** The key of the document for this change. */
n,
/**
 * The new document or NoDocument if it was deleted. Is null if the
 * document went out of view without the server sending a new document.
 */
s) {
  _classCallCheck(this, vs);
  this.It = t, this.removedTargetIds = e, this.key = n, this.Tt = s;
})));
var Vs = /*#__PURE__*/(/* unused pure expression or super */ null && (_createClass(function Vs(t, e) {
  _classCallCheck(this, Vs);
  this.targetId = t, this.Et = e;
})));
var Ss = /*#__PURE__*/(/* unused pure expression or super */ null && (_createClass(function Ss( /** What kind of change occurred to the watch target. */
t, /** The target IDs that were added/removed/set. */
e) {
  var n = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : Qt.EMPTY_BYTE_STRING;
  var s = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;
  _classCallCheck(this, Ss);
  this.state = t, this.targetIds = e, this.resumeToken = n, this.cause = s;
})));
/** Tracks the internal state of a Watch target. */
var Ds = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  function Ds() {
    _classCallCheck(this, Ds);
    /**
     * The number of pending responses (adds or removes) that we are waiting on.
     * We only consider targets active that have no pending responses.
     */
    this.At = 0,
    /**
     * Keeps track of the document changes since the last raised snapshot.
     *
     * These changes are continuously updated as we receive document updates and
     * always reflect the current set of changes against the last issued snapshot.
     */
    this.Rt = Ns(), /** See public getters for explanations of these fields. */
    this.bt = Qt.EMPTY_BYTE_STRING, this.Pt = !1,
    /**
     * Whether this target state should be included in the next snapshot. We
     * initialize to true so that newly-added targets are included in the next
     * RemoteEvent.
     */
    this.vt = !0;
  }
  /**
   * Whether this target has been marked 'current'.
   *
   * 'Current' has special meaning in the RPC protocol: It implies that the
   * Watch backend has sent us all changes up to the point at which the target
   * was added and that the target is consistent with the rest of the watch
   * stream.
   */
  _createClass(Ds, [{
    key: "current",
    get: function get() {
      return this.Pt;
    }
    /** The last resume token sent to us for this target. */
  }, {
    key: "resumeToken",
    get: function get() {
      return this.bt;
    }
    /** Whether this target has pending target adds or target removes. */
  }, {
    key: "Vt",
    get: function get() {
      return 0 !== this.At;
    }
    /** Whether we have modified any state that should trigger a snapshot. */
  }, {
    key: "St",
    get: function get() {
      return this.vt;
    }
    /**
     * Applies the resume token to the TargetChange, but only when it has a new
     * value. Empty resumeTokens are discarded.
     */
  }, {
    key: "Dt",
    value: function Dt(t) {
      t.approximateByteSize() > 0 && (this.vt = !0, this.bt = t);
    }
    /**
     * Creates a target change from the current set of changes.
     *
     * To reset the document changes after raising this snapshot, call
     * `clearPendingChanges()`.
     */
  }, {
    key: "Ct",
    value: function Ct() {
      var t = Es(),
        e = Es(),
        n = Es();
      return this.Rt.forEach(function (s, i) {
        switch (i) {
          case 0 /* ChangeType.Added */:
            t = t.add(s);
            break;
          case 2 /* ChangeType.Modified */:
            e = e.add(s);
            break;
          case 1 /* ChangeType.Removed */:
            n = n.add(s);
            break;
          default:
            index_esm2017_O();
        }
      }), new Ps(this.bt, this.Pt, t, e, n);
    }
    /**
     * Resets the document changes and sets `hasPendingChanges` to false.
     */
  }, {
    key: "xt",
    value: function xt() {
      this.vt = !1, this.Rt = Ns();
    }
  }, {
    key: "Nt",
    value: function Nt(t, e) {
      this.vt = !0, this.Rt = this.Rt.insert(t, e);
    }
  }, {
    key: "kt",
    value: function kt(t) {
      this.vt = !0, this.Rt = this.Rt.remove(t);
    }
  }, {
    key: "Ot",
    value: function Ot() {
      this.At += 1;
    }
  }, {
    key: "Mt",
    value: function Mt() {
      this.At -= 1;
    }
  }, {
    key: "Ft",
    value: function Ft() {
      this.vt = !0, this.Pt = !0;
    }
  }]);
  return Ds;
}()));
/**
 * A helper class to accumulate watch changes into a RemoteEvent.
 */
var Cs = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  function Cs(t) {
    _classCallCheck(this, Cs);
    this.$t = t, /** The internal state of all tracked targets. */
    this.Bt = new Map(), /** Keeps track of the documents to update since the last raised snapshot. */
    this.Lt = ds(), /** A mapping of document keys to their set of target IDs. */
    this.qt = xs(),
    /**
     * A list of targets with existence filter mismatches. These targets are
     * known to be inconsistent and their listens needs to be re-established by
     * RemoteStore.
     */
    this.Ut = new We(Z);
  }
  /**
   * Processes and adds the DocumentWatchChange to the current set of changes.
   */
  _createClass(Cs, [{
    key: "Kt",
    value: function Kt(t) {
      var _iterator26 = _createForOfIteratorHelper(t.It),
        _step26;
      try {
        for (_iterator26.s(); !(_step26 = _iterator26.n()).done;) {
          var e = _step26.value;
          t.Tt && t.Tt.isFoundDocument() ? this.Gt(e, t.Tt) : this.Qt(e, t.key, t.Tt);
        }
      } catch (err) {
        _iterator26.e(err);
      } finally {
        _iterator26.f();
      }
      var _iterator27 = _createForOfIteratorHelper(t.removedTargetIds),
        _step27;
      try {
        for (_iterator27.s(); !(_step27 = _iterator27.n()).done;) {
          var _e19 = _step27.value;
          this.Qt(_e19, t.key, t.Tt);
        }
      } catch (err) {
        _iterator27.e(err);
      } finally {
        _iterator27.f();
      }
    }
    /** Processes and adds the WatchTargetChange to the current set of changes. */
  }, {
    key: "jt",
    value: function jt(t) {
      var _this37 = this;
      this.forEachTarget(t, function (e) {
        var n = _this37.Wt(e);
        switch (t.state) {
          case 0 /* WatchTargetChangeState.NoChange */:
            _this37.zt(e) && n.Dt(t.resumeToken);
            break;
          case 1 /* WatchTargetChangeState.Added */:
            // We need to decrement the number of pending acks needed from watch
            // for this targetId.
            n.Mt(), n.Vt ||
            // We have a freshly added target, so we need to reset any state
            // that we had previously. This can happen e.g. when remove and add
            // back a target for existence filter mismatches.
            n.xt(), n.Dt(t.resumeToken);
            break;
          case 2 /* WatchTargetChangeState.Removed */:
            // We need to keep track of removed targets to we can post-filter and
            // remove any target changes.
            // We need to decrement the number of pending acks needed from watch
            // for this targetId.
            n.Mt(), n.Vt || _this37.removeTarget(e);
            break;
          case 3 /* WatchTargetChangeState.Current */:
            _this37.zt(e) && (n.Ft(), n.Dt(t.resumeToken));
            break;
          case 4 /* WatchTargetChangeState.Reset */:
            _this37.zt(e) && (
            // Reset the target and synthesizes removes for all existing
            // documents. The backend will re-add any documents that still
            // match the target before it sends the next global snapshot.
            _this37.Ht(e), n.Dt(t.resumeToken));
            break;
          default:
            index_esm2017_O();
        }
      });
    }
    /**
     * Iterates over all targetIds that the watch change applies to: either the
     * targetIds explicitly listed in the change or the targetIds of all currently
     * active targets.
     */
  }, {
    key: "forEachTarget",
    value: function forEachTarget(t, e) {
      var _this38 = this;
      t.targetIds.length > 0 ? t.targetIds.forEach(e) : this.Bt.forEach(function (t, n) {
        _this38.zt(n) && e(n);
      });
    }
    /**
     * Handles existence filters and synthesizes deletes for filter mismatches.
     * Targets that are invalidated by filter mismatches are added to
     * `pendingTargetResets`.
     */
  }, {
    key: "Jt",
    value: function Jt(t) {
      var e = t.targetId,
        n = t.Et.count,
        s = this.Yt(e);
      if (s) {
        var _t34 = s.target;
        if (rn(_t34)) {
          if (0 === n) {
            // The existence filter told us the document does not exist. We deduce
            // that this document does not exist and apply a deleted document to
            // our updates. Without applying this deleted document there might be
            // another query that will raise this document as part of a snapshot
            // until it is resolved, essentially exposing inconsistency between
            // queries.
            var _n12 = new ct(_t34.path);
            this.Qt(e, _n12, Ze.newNoDocument(_n12, st.min()));
          } else index_esm2017_M(1 === n);
        } else {
          this.Xt(e) !== n && (
          // Existence filter mismatch: We reset the mapping and raise a new
          // snapshot with `isFromCache:true`.
          this.Ht(e), this.Ut = this.Ut.add(e));
        }
      }
    }
    /**
     * Converts the currently accumulated state into a remote event at the
     * provided snapshot version. Resets the accumulated changes before returning.
     */
  }, {
    key: "Zt",
    value: function Zt(t) {
      var _this39 = this;
      var e = new Map();
      this.Bt.forEach(function (n, s) {
        var i = _this39.Yt(s);
        if (i) {
          if (n.current && rn(i.target)) {
            // Document queries for document that don't exist can produce an empty
            // result set. To update our local cache, we synthesize a document
            // delete if we have not previously received the document. This
            // resolves the limbo state of the document, removing it from
            // limboDocumentRefs.
            // TODO(dimond): Ideally we would have an explicit lookup target
            // instead resulting in an explicit delete message and we could
            // remove this special logic.
            var _e20 = new ct(i.target.path);
            null !== _this39.Lt.get(_e20) || _this39.te(s, _e20) || _this39.Qt(s, _e20, Ze.newNoDocument(_e20, t));
          }
          n.St && (e.set(s, n.Ct()), n.xt());
        }
      });
      var n = Es();
      // We extract the set of limbo-only document updates as the GC logic
      // special-cases documents that do not appear in the target cache.

      // TODO(gsoltis): Expand on this comment once GC is available in the JS
      // client.
      this.qt.forEach(function (t, e) {
        var s = !0;
        e.forEachWhile(function (t) {
          var e = _this39.Yt(t);
          return !e || 2 /* TargetPurpose.LimboResolution */ === e.purpose || (s = !1, !1);
        }), s && (n = n.add(t));
      }), this.Lt.forEach(function (e, n) {
        return n.setReadTime(t);
      });
      var s = new bs(t, e, this.Ut, this.Lt, n);
      return this.Lt = ds(), this.qt = xs(), this.Ut = new We(Z), s;
    }
    /**
     * Adds the provided document to the internal list of document updates and
     * its document key to the given target's mapping.
     */
    // Visible for testing.
  }, {
    key: "Gt",
    value: function Gt(t, e) {
      if (!this.zt(t)) return;
      var n = this.te(t, e.key) ? 2 /* ChangeType.Modified */ : 0 /* ChangeType.Added */;
      this.Wt(t).Nt(e.key, n), this.Lt = this.Lt.insert(e.key, e), this.qt = this.qt.insert(e.key, this.ee(e.key).add(t));
    }
    /**
     * Removes the provided document from the target mapping. If the
     * document no longer matches the target, but the document's state is still
     * known (e.g. we know that the document was deleted or we received the change
     * that caused the filter mismatch), the new document can be provided
     * to update the remote document cache.
     */
    // Visible for testing.
  }, {
    key: "Qt",
    value: function Qt(t, e, n) {
      if (!this.zt(t)) return;
      var s = this.Wt(t);
      this.te(t, e) ? s.Nt(e, 1 /* ChangeType.Removed */) :
      // The document may have entered and left the target before we raised a
      // snapshot, so we can just ignore the change.
      s.kt(e), this.qt = this.qt.insert(e, this.ee(e).delete(t)), n && (this.Lt = this.Lt.insert(e, n));
    }
  }, {
    key: "removeTarget",
    value: function removeTarget(t) {
      this.Bt.delete(t);
    }
    /**
     * Returns the current count of documents in the target. This includes both
     * the number of documents that the LocalStore considers to be part of the
     * target as well as any accumulated changes.
     */
  }, {
    key: "Xt",
    value: function Xt(t) {
      var e = this.Wt(t).Ct();
      return this.$t.getRemoteKeysForTarget(t).size + e.addedDocuments.size - e.removedDocuments.size;
    }
    /**
     * Increment the number of acks needed from watch before we can consider the
     * server to be 'in-sync' with the client's active targets.
     */
  }, {
    key: "Ot",
    value: function Ot(t) {
      this.Wt(t).Ot();
    }
  }, {
    key: "Wt",
    value: function Wt(t) {
      var e = this.Bt.get(t);
      return e || (e = new Ds(), this.Bt.set(t, e)), e;
    }
  }, {
    key: "ee",
    value: function ee(t) {
      var e = this.qt.get(t);
      return e || (e = new We(Z), this.qt = this.qt.insert(t, e)), e;
    }
    /**
     * Verifies that the user is still interested in this target (by calling
     * `getTargetDataForTarget()`) and that we are not waiting for pending ADDs
     * from watch.
     */
  }, {
    key: "zt",
    value: function zt(t) {
      var e = null !== this.Yt(t);
      return e || index_esm2017_C("WatchChangeAggregator", "Detected inactive target", t), e;
    }
    /**
     * Returns the TargetData for an active target (i.e. a target that the user
     * is still interested in that has no outstanding target change requests).
     */
  }, {
    key: "Yt",
    value: function Yt(t) {
      var e = this.Bt.get(t);
      return e && e.Vt ? null : this.$t.ne(t);
    }
    /**
     * Resets the state of a Watch target to its initial state (e.g. sets
     * 'current' to false, clears the resume token and removes its target mapping
     * from all documents).
     */
  }, {
    key: "Ht",
    value: function Ht(t) {
      var _this40 = this;
      this.Bt.set(t, new Ds());
      this.$t.getRemoteKeysForTarget(t).forEach(function (e) {
        _this40.Qt(t, e, /*updatedDocument=*/null);
      });
    }
    /**
     * Returns whether the LocalStore considers the document to be part of the
     * specified target.
     */
  }, {
    key: "te",
    value: function te(t, e) {
      return this.$t.getRemoteKeysForTarget(t).has(e);
    }
  }]);
  return Cs;
}()));
function xs() {
  return new Ge(ct.comparator);
}
function Ns() {
  return new Ge(ct.comparator);
}

/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
var ks = function () {
    var t = {
      asc: "ASCENDING",
      desc: "DESCENDING"
    };
    return t;
  }(),
  Os = function () {
    var t = {
      "<": "LESS_THAN",
      "<=": "LESS_THAN_OR_EQUAL",
      ">": "GREATER_THAN",
      ">=": "GREATER_THAN_OR_EQUAL",
      "==": "EQUAL",
      "!=": "NOT_EQUAL",
      "array-contains": "ARRAY_CONTAINS",
      in: "IN",
      "not-in": "NOT_IN",
      "array-contains-any": "ARRAY_CONTAINS_ANY"
    };
    return t;
  }(),
  Ms = function () {
    var t = {
      and: "AND",
      or: "OR"
    };
    return t;
  }();

/**
 * This class generates JsonObject values for the Datastore API suitable for
 * sending to either GRPC stub methods or via the JSON/HTTP REST API.
 *
 * The serializer supports both Protobuf.js and Proto3 JSON formats. By
 * setting `useProto3Json` to true, the serializer will use the Proto3 JSON
 * format.
 *
 * For a description of the Proto3 JSON format check
 * https://developers.google.com/protocol-buffers/docs/proto3#json
 *
 * TODO(klimt): We can remove the databaseId argument if we keep the full
 * resource name in documents.
 */
var Fs = /*#__PURE__*/(/* unused pure expression or super */ null && (_createClass(function Fs(t, e) {
  _classCallCheck(this, Fs);
  this.databaseId = t, this.wt = e;
})));
/**
 * Returns a value for a Date that's appropriate to put into a proto.
 */
function $s(t, e) {
  if (t.wt) {
    return "".concat(new Date(1e3 * e.seconds).toISOString().replace(/\.\d*/, "").replace("Z", ""), ".").concat(("000000000" + e.nanoseconds).slice(-9), "Z");
  }
  return {
    seconds: "" + e.seconds,
    nanos: e.nanoseconds
  };
}

/**
 * Returns a value for bytes that's appropriate to put in a proto.
 *
 * Visible for testing.
 */
function Bs(t, e) {
  return t.wt ? e.toBase64() : e.toUint8Array();
}

/**
 * Returns a ByteString based on the proto string value.
 */
function Ls(t, e) {
  return $s(t, e.toTimestamp());
}
function qs(t) {
  return index_esm2017_M(!!t), st.fromTimestamp(function (t) {
    var e = Wt(t);
    return new nt(e.seconds, e.nanos);
  }(t));
}
function Us(t, e) {
  return function (t) {
    return new rt(["projects", t.projectId, "databases", t.database]);
  }(t).child("documents").child(e).canonicalString();
}
function Ks(t) {
  var e = rt.fromString(t);
  return index_esm2017_M(wi(e)), e;
}
function Gs(t, e) {
  return Us(t.databaseId, e.path);
}
function Qs(t, e) {
  var n = Ks(e);
  if (n.get(1) !== t.databaseId.projectId) throw new index_esm2017_L(index_esm2017_B.INVALID_ARGUMENT, "Tried to deserialize key from different project: " + n.get(1) + " vs " + t.databaseId.projectId);
  if (n.get(3) !== t.databaseId.database) throw new index_esm2017_L(index_esm2017_B.INVALID_ARGUMENT, "Tried to deserialize key from different database: " + n.get(3) + " vs " + t.databaseId.database);
  return new ct(Hs(n));
}
function js(t, e) {
  return Us(t.databaseId, e);
}
function Ws(t) {
  var e = Ks(t);
  // In v1beta1 queries for collections at the root did not have a trailing
  // "/documents". In v1 all resource paths contain "/documents". Preserve the
  // ability to read the v1beta1 form for compatibility with queries persisted
  // in the local target cache.
  return 4 === e.length ? rt.emptyPath() : Hs(e);
}
function zs(t) {
  return new rt(["projects", t.databaseId.projectId, "databases", t.databaseId.database]).canonicalString();
}
function Hs(t) {
  return index_esm2017_M(t.length > 4 && "documents" === t.get(4)), t.popFirst(5);
}

/** Creates a Document proto from key and fields (but no create/update time) */
function Js(t, e, n) {
  return {
    name: Gs(t, e),
    fields: n.value.mapValue.fields
  };
}
function Ys(t, e, n) {
  var s = Qs(t, e.name),
    i = qs(e.updateTime),
    r = e.createTime ? qs(e.createTime) : st.min(),
    o = new Ye({
      mapValue: {
        fields: e.fields
      }
    }),
    u = Ze.newFoundDocument(s, i, r, o);
  return n && u.setHasCommittedMutations(), n ? u.setHasCommittedMutations() : u;
}
function Xs(t, e) {
  return "found" in e ? function (t, e) {
    index_esm2017_M(!!e.found), e.found.name, e.found.updateTime;
    var n = Qs(t, e.found.name),
      s = qs(e.found.updateTime),
      i = e.found.createTime ? qs(e.found.createTime) : st.min(),
      r = new Ye({
        mapValue: {
          fields: e.found.fields
        }
      });
    return Ze.newFoundDocument(n, s, i, r);
  }(t, e) : "missing" in e ? function (t, e) {
    index_esm2017_M(!!e.missing), index_esm2017_M(!!e.readTime);
    var n = Qs(t, e.missing),
      s = qs(e.readTime);
    return Ze.newNoDocument(n, s);
  }(t, e) : index_esm2017_O();
}
function Zs(t, e) {
  var n;
  if ("targetChange" in e) {
    e.targetChange;
    // proto3 default value is unset in JSON (undefined), so use 'NO_CHANGE'
    // if unset
    var s = function (t) {
        return "NO_CHANGE" === t ? 0 /* WatchTargetChangeState.NoChange */ : "ADD" === t ? 1 /* WatchTargetChangeState.Added */ : "REMOVE" === t ? 2 /* WatchTargetChangeState.Removed */ : "CURRENT" === t ? 3 /* WatchTargetChangeState.Current */ : "RESET" === t ? 4 /* WatchTargetChangeState.Reset */ : index_esm2017_O();
      }(e.targetChange.targetChangeType || "NO_CHANGE"),
      i = e.targetChange.targetIds || [],
      r = function (t, e) {
        return t.wt ? (index_esm2017_M(void 0 === e || "string" == typeof e), Qt.fromBase64String(e || "")) : (index_esm2017_M(void 0 === e || e instanceof Uint8Array), Qt.fromUint8Array(e || new Uint8Array()));
      }(t, e.targetChange.resumeToken),
      o = e.targetChange.cause,
      u = o && function (t) {
        var e = void 0 === t.code ? index_esm2017_B.UNKNOWN : hs(t.code);
        return new index_esm2017_L(e, t.message || "");
      }
      /**
      * Returns a value for a number (or null) that's appropriate to put into
      * a google.protobuf.Int32Value proto.
      * DO NOT USE THIS FOR ANYTHING ELSE.
      * This method cheats. It's typed as returning "number" because that's what
      * our generated proto interfaces say Int32Value must be. But GRPC actually
      * expects a { value: <number> } struct.
      */(o);
    n = new Ss(s, i, r, u || null);
  } else if ("documentChange" in e) {
    e.documentChange;
    var _s2 = e.documentChange;
    _s2.document, _s2.document.name, _s2.document.updateTime;
    var _i5 = Qs(t, _s2.document.name),
      _r2 = qs(_s2.document.updateTime),
      _o2 = _s2.document.createTime ? qs(_s2.document.createTime) : st.min(),
      _u2 = new Ye({
        mapValue: {
          fields: _s2.document.fields
        }
      }),
      c = Ze.newFoundDocument(_i5, _r2, _o2, _u2),
      a = _s2.targetIds || [],
      h = _s2.removedTargetIds || [];
    n = new vs(a, h, c.key, c);
  } else if ("documentDelete" in e) {
    e.documentDelete;
    var _s3 = e.documentDelete;
    _s3.document;
    var _i6 = Qs(t, _s3.document),
      _r3 = _s3.readTime ? qs(_s3.readTime) : st.min(),
      _o3 = Ze.newNoDocument(_i6, _r3),
      _u3 = _s3.removedTargetIds || [];
    n = new vs([], _u3, _o3.key, _o3);
  } else if ("documentRemove" in e) {
    e.documentRemove;
    var _s4 = e.documentRemove;
    _s4.document;
    var _i7 = Qs(t, _s4.document),
      _r4 = _s4.removedTargetIds || [];
    n = new vs([], _r4, _i7, null);
  } else {
    if (!("filter" in e)) return index_esm2017_O();
    {
      e.filter;
      var _t35 = e.filter;
      _t35.targetId;
      var _s5 = _t35.count || 0,
        _i8 = new os(_s5),
        _r5 = _t35.targetId;
      n = new Vs(_r5, _i8);
    }
  }
  return n;
}
function ti(t, e) {
  var n;
  if (e instanceof Zn) n = {
    update: Js(t, e.key, e.value)
  };else if (e instanceof is) n = {
    delete: Gs(t, e.key)
  };else if (e instanceof ts) n = {
    update: Js(t, e.key, e.data),
    updateMask: _i(e.fieldMask)
  };else {
    if (!(e instanceof rs)) return index_esm2017_O();
    n = {
      verify: Gs(t, e.key)
    };
  }
  return e.fieldTransforms.length > 0 && (n.updateTransforms = e.fieldTransforms.map(function (t) {
    return function (t, e) {
      var n = e.transform;
      if (n instanceof kn) return {
        fieldPath: e.field.canonicalString(),
        setToServerValue: "REQUEST_TIME"
      };
      if (n instanceof On) return {
        fieldPath: e.field.canonicalString(),
        appendMissingElements: {
          values: n.elements
        }
      };
      if (n instanceof Fn) return {
        fieldPath: e.field.canonicalString(),
        removeAllFromArray: {
          values: n.elements
        }
      };
      if (n instanceof Bn) return {
        fieldPath: e.field.canonicalString(),
        increment: n.gt
      };
      throw index_esm2017_O();
    }(0, t);
  })), e.precondition.isNone || (n.currentDocument = function (t, e) {
    return void 0 !== e.updateTime ? {
      updateTime: Ls(t, e.updateTime)
    } : void 0 !== e.exists ? {
      exists: e.exists
    } : index_esm2017_O();
  }(t, e.precondition)), n;
}
function ei(t, e) {
  var n = e.currentDocument ? function (t) {
      return void 0 !== t.updateTime ? Qn.updateTime(qs(t.updateTime)) : void 0 !== t.exists ? Qn.exists(t.exists) : Qn.none();
    }(e.currentDocument) : Qn.none(),
    s = e.updateTransforms ? e.updateTransforms.map(function (e) {
      return function (t, e) {
        var n = null;
        if ("setToServerValue" in e) index_esm2017_M("REQUEST_TIME" === e.setToServerValue), n = new kn();else if ("appendMissingElements" in e) {
          var _t36 = e.appendMissingElements.values || [];
          n = new On(_t36);
        } else if ("removeAllFromArray" in e) {
          var _t37 = e.removeAllFromArray.values || [];
          n = new Fn(_t37);
        } else "increment" in e ? n = new Bn(t, e.increment) : index_esm2017_O();
        var s = ut.fromServerFormat(e.fieldPath);
        return new Un(s, n);
      }(t, e);
    }) : [];
  if (e.update) {
    e.update.name;
    var i = Qs(t, e.update.name),
      r = new Ye({
        mapValue: {
          fields: e.update.fields
        }
      });
    if (e.updateMask) {
      var _t38 = function (t) {
        var e = t.fieldPaths || [];
        return new Je(e.map(function (t) {
          return ut.fromServerFormat(t);
        }));
      }(e.updateMask);
      return new ts(i, r, _t38, n, s);
    }
    return new Zn(i, r, n, s);
  }
  if (e.delete) {
    var _s6 = Qs(t, e.delete);
    return new is(_s6, n);
  }
  if (e.verify) {
    var _s7 = Qs(t, e.verify);
    return new rs(_s7, n);
  }
  return index_esm2017_O();
}
function ni(t, e) {
  return t && t.length > 0 ? (index_esm2017_M(void 0 !== e), t.map(function (t) {
    return function (t, e) {
      // NOTE: Deletes don't have an updateTime.
      var n = t.updateTime ? qs(t.updateTime) : qs(e);
      return n.isEqual(st.min()) && (
      // The Firestore Emulator currently returns an update time of 0 for
      // deletes of non-existing documents (rather than null). This breaks the
      // test "get deleted doc while offline with source=cache" as NoDocuments
      // with version 0 are filtered by IndexedDb's RemoteDocumentCache.
      // TODO(#2149): Remove this when Emulator is fixed
      n = qs(e)), new Gn(n, t.transformResults || []);
    }(t, e);
  })) : [];
}
function si(t, e) {
  return {
    documents: [js(t, e.path)]
  };
}
function ii(t, e) {
  // Dissect the path into parent, collectionId, and optional key filter.
  var n = {
      structuredQuery: {}
    },
    s = e.path;
  null !== e.collectionGroup ? (n.parent = js(t, s), n.structuredQuery.from = [{
    collectionId: e.collectionGroup,
    allDescendants: !0
  }]) : (n.parent = js(t, s.popLast()), n.structuredQuery.from = [{
    collectionId: s.lastSegment()
  }]);
  var i = function (t) {
    if (0 === t.length) return;
    return di(be.create(t, "and" /* CompositeOperator.AND */));
  }(e.filters);
  i && (n.structuredQuery.where = i);
  var r = function (t) {
    if (0 === t.length) return;
    return t.map(function (t) {
      return (
        // visible for testing
        function (t) {
          return {
            field: li(t.field),
            direction: ci(t.dir)
          };
        }(t)
      );
    });
  }(e.orderBy);
  r && (n.structuredQuery.orderBy = r);
  var o = function (t, e) {
    return t.wt || qt(e) ? e : {
      value: e
    };
  }
  /**
  * Returns a number (or null) from a google.protobuf.Int32Value proto.
  */(t, e.limit);
  var u;
  return null !== o && (n.structuredQuery.limit = o), e.startAt && (n.structuredQuery.startAt = {
    before: (u = e.startAt).inclusive,
    values: u.position
  }), e.endAt && (n.structuredQuery.endAt = function (t) {
    return {
      before: !t.inclusive,
      values: t.position
    };
  }(e.endAt)), n;
}
function ri(t) {
  var e = Ws(t.parent);
  var n = t.structuredQuery,
    s = n.from ? n.from.length : 0;
  var i = null;
  if (s > 0) {
    index_esm2017_M(1 === s);
    var _t39 = n.from[0];
    _t39.allDescendants ? i = _t39.collectionId : e = e.child(_t39.collectionId);
  }
  var r = [];
  n.where && (r = function (t) {
    var e = ui(t);
    if (e instanceof be && Ve(e)) return e.getFilters();
    return [e];
  }(n.where));
  var o = [];
  n.orderBy && (o = n.orderBy.map(function (t) {
    return function (t) {
      return new Ue(fi(t.field),
      // visible for testing
      function (t) {
        switch (t) {
          case "ASCENDING":
            return "asc" /* Direction.ASCENDING */;

          case "DESCENDING":
            return "desc" /* Direction.DESCENDING */;

          default:
            return;
        }
      }
      // visible for testing
      (t.direction));
    }
    // visible for testing
    (t);
  }));
  var u = null;
  n.limit && (u = function (t) {
    var e;
    return e = "object" == typeof t ? t.value : t, qt(e) ? null : e;
  }(n.limit));
  var c = null;
  n.startAt && (c = function (t) {
    var e = !!t.before,
      n = t.values || [];
    return new Ie(n, e);
  }(n.startAt));
  var a = null;
  return n.endAt && (a = function (t) {
    var e = !t.before,
      n = t.values || [];
    return new Ie(n, e);
  }
  // visible for testing
  (n.endAt)), hn(e, i, o, r, u, "F" /* LimitType.First */, c, a);
}
function oi(t, e) {
  var n = function (t, e) {
    switch (e) {
      case 0 /* TargetPurpose.Listen */:
        return null;
      case 1 /* TargetPurpose.ExistenceFilterMismatch */:
        return "existence-filter-mismatch";
      case 2 /* TargetPurpose.LimboResolution */:
        return "limbo-document";
      default:
        return index_esm2017_O();
    }
  }(0, e.purpose);
  return null == n ? null : {
    "goog-listen-tags": n
  };
}
function ui(t) {
  return void 0 !== t.unaryFilter ? function (t) {
    switch (t.unaryFilter.op) {
      case "IS_NAN":
        var e = fi(t.unaryFilter.field);
        return Re.create(e, "==" /* Operator.EQUAL */, {
          doubleValue: NaN
        });
      case "IS_NULL":
        var n = fi(t.unaryFilter.field);
        return Re.create(n, "==" /* Operator.EQUAL */, {
          nullValue: "NULL_VALUE"
        });
      case "IS_NOT_NAN":
        var s = fi(t.unaryFilter.field);
        return Re.create(s, "!=" /* Operator.NOT_EQUAL */, {
          doubleValue: NaN
        });
      case "IS_NOT_NULL":
        var i = fi(t.unaryFilter.field);
        return Re.create(i, "!=" /* Operator.NOT_EQUAL */, {
          nullValue: "NULL_VALUE"
        });
      default:
        return index_esm2017_O();
    }
  }(t) : void 0 !== t.fieldFilter ? function (t) {
    return Re.create(fi(t.fieldFilter.field), function (t) {
      switch (t) {
        case "EQUAL":
          return "==" /* Operator.EQUAL */;

        case "NOT_EQUAL":
          return "!=" /* Operator.NOT_EQUAL */;

        case "GREATER_THAN":
          return ">" /* Operator.GREATER_THAN */;

        case "GREATER_THAN_OR_EQUAL":
          return ">=" /* Operator.GREATER_THAN_OR_EQUAL */;

        case "LESS_THAN":
          return "<" /* Operator.LESS_THAN */;

        case "LESS_THAN_OR_EQUAL":
          return "<=" /* Operator.LESS_THAN_OR_EQUAL */;

        case "ARRAY_CONTAINS":
          return "array-contains" /* Operator.ARRAY_CONTAINS */;

        case "IN":
          return "in" /* Operator.IN */;

        case "NOT_IN":
          return "not-in" /* Operator.NOT_IN */;

        case "ARRAY_CONTAINS_ANY":
          return "array-contains-any" /* Operator.ARRAY_CONTAINS_ANY */;

        default:
          return index_esm2017_O();
      }
    }(t.fieldFilter.op), t.fieldFilter.value);
  }(t) : void 0 !== t.compositeFilter ? function (t) {
    return be.create(t.compositeFilter.filters.map(function (t) {
      return ui(t);
    }), function (t) {
      switch (t) {
        case "AND":
          return "and" /* CompositeOperator.AND */;

        case "OR":
          return "or" /* CompositeOperator.OR */;

        default:
          return index_esm2017_O();
      }
    }(t.compositeFilter.op));
  }(t) : index_esm2017_O();
}
function ci(t) {
  return ks[t];
}
function ai(t) {
  return Os[t];
}
function hi(t) {
  return Ms[t];
}
function li(t) {
  return {
    fieldPath: t.canonicalString()
  };
}
function fi(t) {
  return ut.fromServerFormat(t.fieldPath);
}
function di(t) {
  return t instanceof Re ? function (t) {
    if ("==" /* Operator.EQUAL */ === t.op) {
      if (fe(t.value)) return {
        unaryFilter: {
          field: li(t.field),
          op: "IS_NAN"
        }
      };
      if (le(t.value)) return {
        unaryFilter: {
          field: li(t.field),
          op: "IS_NULL"
        }
      };
    } else if ("!=" /* Operator.NOT_EQUAL */ === t.op) {
      if (fe(t.value)) return {
        unaryFilter: {
          field: li(t.field),
          op: "IS_NOT_NAN"
        }
      };
      if (le(t.value)) return {
        unaryFilter: {
          field: li(t.field),
          op: "IS_NOT_NULL"
        }
      };
    }
    return {
      fieldFilter: {
        field: li(t.field),
        op: ai(t.op),
        value: t.value
      }
    };
  }(t) : t instanceof be ? function (t) {
    var e = t.getFilters().map(function (t) {
      return di(t);
    });
    if (1 === e.length) return e[0];
    return {
      compositeFilter: {
        op: hi(t.op),
        filters: e
      }
    };
  }(t) : index_esm2017_O();
}
function _i(t) {
  var e = [];
  return t.fields.forEach(function (t) {
    return e.push(t.canonicalString());
  }), {
    fieldPaths: e
  };
}
function wi(t) {
  // Resource names have at least 4 components (project ID, database ID)
  return t.length >= 4 && "projects" === t.get(0) && "databases" === t.get(2);
}

/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * Encodes a resource path into a IndexedDb-compatible string form.
 */
function mi(t) {
  var e = "";
  for (var n = 0; n < t.length; n++) {
    e.length > 0 && (e = yi(e)), e = gi(t.get(n), e);
  }
  return yi(e);
}

/** Encodes a single segment of a resource path into the given result */
function gi(t, e) {
  var n = e;
  var s = t.length;
  for (var _e21 = 0; _e21 < s; _e21++) {
    var _s8 = t.charAt(_e21);
    switch (_s8) {
      case "\0":
        n += "";
        break;
      case "":
        n += "";
        break;
      default:
        n += _s8;
    }
  }
  return n;
}

/** Encodes a path separator into the given result */
function yi(t) {
  return t + "";
}

/**
 * Decodes the given IndexedDb-compatible string form of a resource path into
 * a ResourcePath instance. Note that this method is not suitable for use with
 * decoding resource names from the server; those are One Platform format
 * strings.
 */
function pi(t) {
  // Event the empty path must encode as a path of at least length 2. A path
  // with exactly 2 must be the empty path.
  var e = t.length;
  if (index_esm2017_M(e >= 2), 2 === e) return index_esm2017_M("" === t.charAt(0) && "" === t.charAt(1)), rt.emptyPath();
  // Escape characters cannot exist past the second-to-last position in the
  // source value.
  var n = e - 2,
    s = [];
  var i = "";
  for (var r = 0; r < e;) {
    // The last two characters of a valid encoded path must be a separator, so
    // there must be an end to this segment.
    var _e22 = t.indexOf("", r);
    (_e22 < 0 || _e22 > n) && index_esm2017_O();
    switch (t.charAt(_e22 + 1)) {
      case "":
        var _n13 = t.substring(r, _e22);
        var o = void 0;
        0 === i.length ?
        // Avoid copying for the common case of a segment that excludes \0
        // and \001
        o = _n13 : (i += _n13, o = i, i = ""), s.push(o);
        break;
      case "":
        i += t.substring(r, _e22), i += "\0";
        break;
      case "":
        // The escape character can be used in the output to encode itself.
        i += t.substring(r, _e22 + 1);
        break;
      default:
        index_esm2017_O();
    }
    r = _e22 + 2;
  }
  return new rt(s);
}

/**
 * @license
 * Copyright 2022 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
var Ii = (/* unused pure expression or super */ null && (["userId", "batchId"]));

/**
 * @license
 * Copyright 2022 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * Name of the IndexedDb object store.
 *
 * Note that the name 'owner' is chosen to ensure backwards compatibility with
 * older clients that only supported single locked access to the persistence
 * layer.
 */
/**
 * Creates a [userId, encodedPath] key for use in the DbDocumentMutations
 * index to iterate over all at document mutations for a given path or lower.
 */
function Ti(t, e) {
  return [t, mi(e)];
}

/**
 * Creates a full index key of [userId, encodedPath, batchId] for inserting
 * and deleting into the DbDocumentMutations index.
 */
function Ei(t, e, n) {
  return [t, mi(e), n];
}

/**
 * Because we store all the useful information for this store in the key,
 * there is no useful information to store as the value. The raw (unencoded)
 * path cannot be stored because IndexedDb doesn't store prototype
 * information.
 */
var Ai = {},
  Ri = (/* unused pure expression or super */ null && (["prefixPath", "collectionGroup", "readTime", "documentId"])),
  bi = (/* unused pure expression or super */ null && (["prefixPath", "collectionGroup", "documentId"])),
  Pi = (/* unused pure expression or super */ null && (["collectionGroup", "readTime", "prefixPath", "documentId"])),
  vi = (/* unused pure expression or super */ null && (["canonicalId", "targetId"])),
  Vi = (/* unused pure expression or super */ null && (["targetId", "path"])),
  Si = (/* unused pure expression or super */ null && (["path", "targetId"])),
  Di = (/* unused pure expression or super */ null && (["collectionId", "parent"])),
  Ci = (/* unused pure expression or super */ null && (["indexId", "uid"])),
  xi = (/* unused pure expression or super */ null && (["uid", "sequenceNumber"])),
  Ni = (/* unused pure expression or super */ null && (["indexId", "uid", "arrayValue", "directionalValue", "orderedDocumentKey", "documentKey"])),
  ki = (/* unused pure expression or super */ null && (["indexId", "uid", "orderedDocumentKey"])),
  Oi = (/* unused pure expression or super */ null && (["userId", "collectionPath", "documentId"])),
  Mi = (/* unused pure expression or super */ null && (["userId", "collectionPath", "largestBatchId"])),
  Fi = (/* unused pure expression or super */ null && (["userId", "collectionGroup", "largestBatchId"])),
  $i = ["mutationQueues", "mutations", "documentMutations", "remoteDocuments", "targets", "owner", "targetGlobal", "targetDocuments"].concat(["clientMetadata"]).concat(["remoteDocumentGlobal"]).concat(["collectionParents"]).concat(["bundles", "namedQueries"]),
  Bi = [].concat((0,toConsumableArray/* default */.Z)($i), ["documentOverlays"]),
  Li = ["mutationQueues", "mutations", "documentMutations", "remoteDocumentsV14", "targets", "owner", "targetGlobal", "targetDocuments", "clientMetadata", "remoteDocumentGlobal", "collectionParents", "bundles", "namedQueries", "documentOverlays"],
  qi = Li,
  Ui = [].concat(qi, ["indexConfiguration", "indexState", "indexEntries"]);

/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
var Ki = /*#__PURE__*/(/* unused pure expression or super */ null && (function (_Tt) {
  _inherits(Ki, _Tt);
  var _super22 = _createSuper(Ki);
  function Ki(t, e) {
    var _this41;
    _classCallCheck(this, Ki);
    _this41 = _super22.call(this), _this41.se = t, _this41.currentSequenceNumber = e;
    return _this41;
  }
  return _createClass(Ki);
}(Tt)));
function Gi(t, e) {
  var n = $(t);
  return bt.M(n.se, e);
}

/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * A batch of mutations that will be sent as one unit to the backend.
 */
var Qi = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  /**
   * @param batchId - The unique ID of this mutation batch.
   * @param localWriteTime - The original write time of this mutation.
   * @param baseMutations - Mutations that are used to populate the base
   * values when this mutation is applied locally. This can be used to locally
   * overwrite values that are persisted in the remote document cache. Base
   * mutations are never sent to the backend.
   * @param mutations - The user-provided mutations in this mutation batch.
   * User-provided mutations are applied both locally and remotely on the
   * backend.
   */
  function Qi(t, e, n, s) {
    _classCallCheck(this, Qi);
    this.batchId = t, this.localWriteTime = e, this.baseMutations = n, this.mutations = s;
  }
  /**
   * Applies all the mutations in this MutationBatch to the specified document
   * to compute the state of the remote document
   *
   * @param document - The document to apply mutations to.
   * @param batchResult - The result of applying the MutationBatch to the
   * backend.
   */
  _createClass(Qi, [{
    key: "applyToRemoteDocument",
    value: function applyToRemoteDocument(t, e) {
      var n = e.mutationResults;
      for (var _e23 = 0; _e23 < this.mutations.length; _e23++) {
        var s = this.mutations[_e23];
        if (s.key.isEqual(t.key)) {
          Hn(s, t, n[_e23]);
        }
      }
    }
    /**
     * Computes the local view of a document given all the mutations in this
     * batch.
     *
     * @param document - The document to apply mutations to.
     * @param mutatedFields - Fields that have been updated before applying this mutation batch.
     * @returns A `FieldMask` representing all the fields that are mutated.
     */
  }, {
    key: "applyToLocalView",
    value: function applyToLocalView(t, e) {
      // First, apply the base state. This allows us to apply non-idempotent
      // transform against a consistent set of values.
      var _iterator28 = _createForOfIteratorHelper(this.baseMutations),
        _step28;
      try {
        for (_iterator28.s(); !(_step28 = _iterator28.n()).done;) {
          var n = _step28.value;
          n.key.isEqual(t.key) && (e = Jn(n, t, e, this.localWriteTime));
        }
        // Second, apply all user-provided mutations.
      } catch (err) {
        _iterator28.e(err);
      } finally {
        _iterator28.f();
      }
      var _iterator29 = _createForOfIteratorHelper(this.mutations),
        _step29;
      try {
        for (_iterator29.s(); !(_step29 = _iterator29.n()).done;) {
          var _n14 = _step29.value;
          _n14.key.isEqual(t.key) && (e = Jn(_n14, t, e, this.localWriteTime));
        }
      } catch (err) {
        _iterator29.e(err);
      } finally {
        _iterator29.f();
      }
      return e;
    }
    /**
     * Computes the local view for all provided documents given the mutations in
     * this batch. Returns a `DocumentKey` to `Mutation` map which can be used to
     * replace all the mutation applications.
     */
  }, {
    key: "applyToLocalDocumentSet",
    value: function applyToLocalDocumentSet(t, e) {
      var _this42 = this;
      // TODO(mrschmidt): This implementation is O(n^2). If we apply the mutations
      // directly (as done in `applyToLocalView()`), we can reduce the complexity
      // to O(n).
      var n = ys();
      return this.mutations.forEach(function (s) {
        var i = t.get(s.key),
          r = i.overlayedDocument;
        // TODO(mutabledocuments): This method should take a MutableDocumentMap
        // and we should remove this cast.
        var o = _this42.applyToLocalView(r, i.mutatedFields);
        // Set mutatedFields to null if the document is only from local mutations.
        // This creates a Set or Delete mutation, instead of trying to create a
        // patch mutation as the overlay.
        o = e.has(s.key) ? null : o;
        var u = zn(r, o);
        null !== u && n.set(s.key, u), r.isValidDocument() || r.convertToNoDocument(st.min());
      }), n;
    }
  }, {
    key: "keys",
    value: function keys() {
      return this.mutations.reduce(function (t, e) {
        return t.add(e.key);
      }, Es());
    }
  }, {
    key: "isEqual",
    value: function isEqual(t) {
      return this.batchId === t.batchId && tt(this.mutations, t.mutations, function (t, e) {
        return Xn(t, e);
      }) && tt(this.baseMutations, t.baseMutations, function (t, e) {
        return Xn(t, e);
      });
    }
  }]);
  return Qi;
}()));
/** The result of applying a mutation batch to the backend. */
var ji = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  function ji(t, e, n,
  /**
   * A pre-computed mapping from each mutated document to the resulting
   * version.
   */
  s) {
    _classCallCheck(this, ji);
    this.batch = t, this.commitVersion = e, this.mutationResults = n, this.docVersions = s;
  }
  /**
   * Creates a new MutationBatchResult for the given batch and results. There
   * must be one result for each mutation in the batch. This static factory
   * caches a document=&gt;version mapping (docVersions).
   */
  _createClass(ji, null, [{
    key: "from",
    value: function from(t, e, n) {
      index_esm2017_M(t.mutations.length === n.length);
      var s = Is;
      var i = t.mutations;
      for (var _t40 = 0; _t40 < i.length; _t40++) {
        s = s.insert(i[_t40].key, n[_t40].version);
      }
      return new ji(t, e, n, s);
    }
  }]);
  return ji;
}()));
/**
 * @license
 * Copyright 2022 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * Representation of an overlay computed by Firestore.
 *
 * Holds information about a mutation and the largest batch id in Firestore when
 * the mutation was created.
 */
var Wi = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  function Wi(t, e) {
    _classCallCheck(this, Wi);
    this.largestBatchId = t, this.mutation = e;
  }
  _createClass(Wi, [{
    key: "getKey",
    value: function getKey() {
      return this.mutation.key;
    }
  }, {
    key: "isEqual",
    value: function isEqual(t) {
      return null !== t && this.mutation === t.mutation;
    }
  }, {
    key: "toString",
    value: function toString() {
      return "Overlay{\n      largestBatchId: ".concat(this.largestBatchId, ",\n      mutation: ").concat(this.mutation.toString(), "\n    }");
    }
  }]);
  return Wi;
}()));
/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * An immutable set of metadata that the local store tracks for each target.
 */
var zi = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  function zi( /** The target being listened to. */
  t,
  /**
   * The target ID to which the target corresponds; Assigned by the
   * LocalStore for user listens and by the SyncEngine for limbo watches.
   */
  e, /** The purpose of the target. */
  n,
  /**
   * The sequence number of the last transaction during which this target data
   * was modified.
   */
  s) {
    var i = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : st.min();
    var r = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : st.min();
    var o = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : Qt.EMPTY_BYTE_STRING;
    _classCallCheck(this, zi);
    this.target = t, this.targetId = e, this.purpose = n, this.sequenceNumber = s, this.snapshotVersion = i, this.lastLimboFreeSnapshotVersion = r, this.resumeToken = o;
  }
  /** Creates a new target data instance with an updated sequence number. */
  _createClass(zi, [{
    key: "withSequenceNumber",
    value: function withSequenceNumber(t) {
      return new zi(this.target, this.targetId, this.purpose, t, this.snapshotVersion, this.lastLimboFreeSnapshotVersion, this.resumeToken);
    }
    /**
     * Creates a new target data instance with an updated resume token and
     * snapshot version.
     */
  }, {
    key: "withResumeToken",
    value: function withResumeToken(t, e) {
      return new zi(this.target, this.targetId, this.purpose, this.sequenceNumber, e, this.lastLimboFreeSnapshotVersion, t);
    }
    /**
     * Creates a new target data instance with an updated last limbo free
     * snapshot version number.
     */
  }, {
    key: "withLastLimboFreeSnapshotVersion",
    value: function withLastLimboFreeSnapshotVersion(t) {
      return new zi(this.target, this.targetId, this.purpose, this.sequenceNumber, this.snapshotVersion, t, this.resumeToken);
    }
  }]);
  return zi;
}()));
/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/** Serializer for values stored in the LocalStore. */
var Hi = /*#__PURE__*/(/* unused pure expression or super */ null && (_createClass(function Hi(t) {
  _classCallCheck(this, Hi);
  this.ie = t;
})));
/** Decodes a remote document from storage locally to a Document. */
function Ji(t, e) {
  var n;
  if (e.document) n = Ys(t.ie, e.document, !!e.hasCommittedMutations);else if (e.noDocument) {
    var _t41 = ct.fromSegments(e.noDocument.path),
      s = tr(e.noDocument.readTime);
    n = Ze.newNoDocument(_t41, s), e.hasCommittedMutations && n.setHasCommittedMutations();
  } else {
    if (!e.unknownDocument) return index_esm2017_O();
    {
      var _t42 = ct.fromSegments(e.unknownDocument.path),
        _s9 = tr(e.unknownDocument.version);
      n = Ze.newUnknownDocument(_t42, _s9);
    }
  }
  return e.readTime && n.setReadTime(function (t) {
    var e = new nt(t[0], t[1]);
    return st.fromTimestamp(e);
  }(e.readTime)), n;
}

/** Encodes a document for storage locally. */
function Yi(t, e) {
  var n = e.key,
    s = {
      prefixPath: n.getCollectionPath().popLast().toArray(),
      collectionGroup: n.collectionGroup,
      documentId: n.path.lastSegment(),
      readTime: Xi(e.readTime),
      hasCommittedMutations: e.hasCommittedMutations
    };
  if (e.isFoundDocument()) s.document = function (t, e) {
    return {
      name: Gs(t, e.key),
      fields: e.data.value.mapValue.fields,
      updateTime: $s(t, e.version.toTimestamp()),
      createTime: $s(t, e.createTime.toTimestamp())
    };
  }(t.ie, e);else if (e.isNoDocument()) s.noDocument = {
    path: n.path.toArray(),
    readTime: Zi(e.version)
  };else {
    if (!e.isUnknownDocument()) return index_esm2017_O();
    s.unknownDocument = {
      path: n.path.toArray(),
      version: Zi(e.version)
    };
  }
  return s;
}
function Xi(t) {
  var e = t.toTimestamp();
  return [e.seconds, e.nanoseconds];
}
function Zi(t) {
  var e = t.toTimestamp();
  return {
    seconds: e.seconds,
    nanoseconds: e.nanoseconds
  };
}
function tr(t) {
  var e = new nt(t.seconds, t.nanoseconds);
  return st.fromTimestamp(e);
}

/** Encodes a batch of mutations into a DbMutationBatch for local storage. */
/** Decodes a DbMutationBatch into a MutationBatch */
function er(t, e) {
  var n = (e.baseMutations || []).map(function (e) {
    return ei(t.ie, e);
  });
  // Squash old transform mutations into existing patch or set mutations.
  // The replacement of representing `transforms` with `update_transforms`
  // on the SDK means that old `transform` mutations stored in IndexedDB need
  // to be updated to `update_transforms`.
  // TODO(b/174608374): Remove this code once we perform a schema migration.
  for (var _t43 = 0; _t43 < e.mutations.length - 1; ++_t43) {
    var _n15 = e.mutations[_t43];
    if (_t43 + 1 < e.mutations.length && void 0 !== e.mutations[_t43 + 1].transform) {
      var _s10 = e.mutations[_t43 + 1];
      _n15.updateTransforms = _s10.transform.fieldTransforms, e.mutations.splice(_t43 + 1, 1), ++_t43;
    }
  }
  var s = e.mutations.map(function (e) {
      return ei(t.ie, e);
    }),
    i = nt.fromMillis(e.localWriteTimeMs);
  return new Qi(e.batchId, i, n, s);
}

/** Decodes a DbTarget into TargetData */
function nr(t) {
  var e = tr(t.readTime),
    n = void 0 !== t.lastLimboFreeSnapshotVersion ? tr(t.lastLimboFreeSnapshotVersion) : st.min();
  var s;
  var i;
  return void 0 !== t.query.documents ? (index_esm2017_M(1 === (i = t.query).documents.length), s = gn(ln(Ws(i.documents[0])))) : s = function (t) {
    return gn(ri(t));
  }(t.query), new zi(s, t.targetId, 0 /* TargetPurpose.Listen */, t.lastListenSequenceNumber, e, n, Qt.fromBase64String(t.resumeToken));
}

/** Encodes TargetData into a DbTarget for storage locally. */
function sr(t, e) {
  var n = Zi(e.snapshotVersion),
    s = Zi(e.lastLimboFreeSnapshotVersion);
  var i;
  i = rn(e.target) ? si(t.ie, e.target) : ii(t.ie, e.target);
  // We can't store the resumeToken as a ByteString in IndexedDb, so we
  // convert it to a base64 string for storage.
  var r = e.resumeToken.toBase64();
  // lastListenSequenceNumber is always 0 until we do real GC.
  return {
    targetId: e.targetId,
    canonicalId: nn(e.target),
    readTime: n,
    resumeToken: r,
    lastListenSequenceNumber: e.sequenceNumber,
    lastLimboFreeSnapshotVersion: s,
    query: i
  };
}

/**
 * A helper function for figuring out what kind of query has been stored.
 */
/**
 * Encodes a `BundledQuery` from bundle proto to a Query object.
 *
 * This reconstructs the original query used to build the bundle being loaded,
 * including features exists only in SDKs (for example: limit-to-last).
 */
function ir(t) {
  var e = ri({
    parent: t.parent,
    structuredQuery: t.structuredQuery
  });
  return "LAST" === t.limitType ? pn(e, e.limit, "L" /* LimitType.Last */) : e;
}

/** Encodes a NamedQuery proto object to a NamedQuery model object. */
/** Encodes a DbDocumentOverlay object to an Overlay model object. */
function rr(t, e) {
  return new Wi(e.largestBatchId, ei(t.ie, e.overlayMutation));
}

/** Decodes an Overlay model object into a DbDocumentOverlay object. */
/**
 * Returns the DbDocumentOverlayKey corresponding to the given user and
 * document key.
 */
function or(t, e) {
  var n = e.path.lastSegment();
  return [t, mi(e.path.popLast()), n];
}
function ur(t, e, n, s) {
  return {
    indexId: t,
    uid: e.uid || "",
    sequenceNumber: n,
    readTime: Zi(s.readTime),
    documentKey: mi(s.documentKey.path),
    largestBatchId: s.largestBatchId
  };
}

/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
var cr = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  function cr() {
    _classCallCheck(this, cr);
  }
  _createClass(cr, [{
    key: "getBundleMetadata",
    value: function getBundleMetadata(t, e) {
      return ar(t).get(e).next(function (t) {
        if (t) return {
          id: (e = t).bundleId,
          createTime: tr(e.createTime),
          version: e.version
        };
        /** Encodes a DbBundle to a BundleMetadata object. */
        var e;
        /** Encodes a BundleMetadata to a DbBundle. */
      });
    }
  }, {
    key: "saveBundleMetadata",
    value: function saveBundleMetadata(t, e) {
      return ar(t).put({
        bundleId: (n = e).id,
        createTime: Zi(qs(n.createTime)),
        version: n.version
      });
      var n;
      /** Encodes a DbNamedQuery to a NamedQuery. */
    }
  }, {
    key: "getNamedQuery",
    value: function getNamedQuery(t, e) {
      return hr(t).get(e).next(function (t) {
        if (t) return {
          name: (e = t).name,
          query: ir(e.bundledQuery),
          readTime: tr(e.readTime)
        };
        var e;
        /** Encodes a NamedQuery from a bundle proto to a DbNamedQuery. */
      });
    }
  }, {
    key: "saveNamedQuery",
    value: function saveNamedQuery(t, e) {
      return hr(t).put(function (t) {
        return {
          name: t.name,
          readTime: Zi(qs(t.readTime)),
          bundledQuery: t.bundledQuery
        };
      }(e));
    }
  }]);
  return cr;
}()));
/**
 * Helper to get a typed SimpleDbStore for the bundles object store.
 */
function ar(t) {
  return Gi(t, "bundles");
}

/**
 * Helper to get a typed SimpleDbStore for the namedQueries object store.
 */
function hr(t) {
  return Gi(t, "namedQueries");
}

/**
 * @license
 * Copyright 2022 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * Implementation of DocumentOverlayCache using IndexedDb.
 */
var lr = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  /**
   * @param serializer - The document serializer.
   * @param userId - The userId for which we are accessing overlays.
   */
  function lr(t, e) {
    _classCallCheck(this, lr);
    this.yt = t, this.userId = e;
  }
  _createClass(lr, [{
    key: "getOverlay",
    value: function getOverlay(t, e) {
      var _this43 = this;
      return fr(t).get(or(this.userId, e)).next(function (t) {
        return t ? rr(_this43.yt, t) : null;
      });
    }
  }, {
    key: "getOverlays",
    value: function getOverlays(t, e) {
      var _this44 = this;
      var n = gs();
      return At.forEach(e, function (e) {
        return _this44.getOverlay(t, e).next(function (t) {
          null !== t && n.set(e, t);
        });
      }).next(function () {
        return n;
      });
    }
  }, {
    key: "saveOverlays",
    value: function saveOverlays(t, e, n) {
      var _this45 = this;
      var s = [];
      return n.forEach(function (n, i) {
        var r = new Wi(e, i);
        s.push(_this45.oe(t, r));
      }), At.waitFor(s);
    }
  }, {
    key: "removeOverlaysForBatchId",
    value: function removeOverlaysForBatchId(t, e, n) {
      var _this46 = this;
      var s = new Set();
      // Get the set of unique collection paths.
      e.forEach(function (t) {
        return s.add(mi(t.getCollectionPath()));
      });
      var i = [];
      return s.forEach(function (e) {
        var s = IDBKeyRange.bound([_this46.userId, e, n], [_this46.userId, e, n + 1], /*lowerOpen=*/!1, /*upperOpen=*/!0);
        i.push(fr(t).Y("collectionPathOverlayIndex", s));
      }), At.waitFor(i);
    }
  }, {
    key: "getOverlaysForCollection",
    value: function getOverlaysForCollection(t, e, n) {
      var _this47 = this;
      var s = gs(),
        i = mi(e),
        r = IDBKeyRange.bound([this.userId, i, n], [this.userId, i, Number.POSITIVE_INFINITY], /*lowerOpen=*/!0);
      return fr(t).W("collectionPathOverlayIndex", r).next(function (t) {
        var _iterator30 = _createForOfIteratorHelper(t),
          _step30;
        try {
          for (_iterator30.s(); !(_step30 = _iterator30.n()).done;) {
            var _e24 = _step30.value;
            var _t44 = rr(_this47.yt, _e24);
            s.set(_t44.getKey(), _t44);
          }
        } catch (err) {
          _iterator30.e(err);
        } finally {
          _iterator30.f();
        }
        return s;
      });
    }
  }, {
    key: "getOverlaysForCollectionGroup",
    value: function getOverlaysForCollectionGroup(t, e, n, s) {
      var _this48 = this;
      var i = gs();
      var r;
      // We want batch IDs larger than `sinceBatchId`, and so the lower bound
      // is not inclusive.
      var o = IDBKeyRange.bound([this.userId, e, n], [this.userId, e, Number.POSITIVE_INFINITY], /*lowerOpen=*/!0);
      return fr(t).Z({
        index: "collectionGroupOverlayIndex",
        range: o
      }, function (t, e, n) {
        // We do not want to return partial batch overlays, even if the size
        // of the result set exceeds the given `count` argument. Therefore, we
        // continue to aggregate results even after the result size exceeds
        // `count` if there are more overlays from the `currentBatchId`.
        var o = rr(_this48.yt, e);
        i.size() < s || o.largestBatchId === r ? (i.set(o.getKey(), o), r = o.largestBatchId) : n.done();
      }).next(function () {
        return i;
      });
    }
  }, {
    key: "oe",
    value: function oe(t, e) {
      return fr(t).put(function (t, e, n) {
        var _or = or(e, n.mutation.key),
          _or2 = _slicedToArray(_or, 3),
          s = _or2[0],
          i = _or2[1],
          r = _or2[2];
        return {
          userId: e,
          collectionPath: i,
          documentId: r,
          collectionGroup: n.mutation.key.getCollectionGroup(),
          largestBatchId: n.largestBatchId,
          overlayMutation: ti(t.ie, n.mutation)
        };
      }(this.yt, this.userId, e));
    }
  }], [{
    key: "re",
    value: function re(t, e) {
      var n = e.uid || "";
      return new lr(t, n);
    }
  }]);
  return lr;
}()));
/**
 * Helper to get a typed SimpleDbStore for the document overlay object store.
 */
function fr(t) {
  return Gi(t, "documentOverlays");
}

/**
 * @license
 * Copyright 2021 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
// Note: This code is copied from the backend. Code that is not used by
// Firestore was removed.
/** Firestore index value writer.  */
var dr = /*#__PURE__*/function () {
  function dr() {
    classCallCheck_classCallCheck(this, dr);
  }
  // The write methods below short-circuit writing terminators for values
  // containing a (terminating) truncated value.
  // As an example, consider the resulting encoding for:
  // ["bar", [2, "foo"]] -> (STRING, "bar", TERM, ARRAY, NUMBER, 2, STRING, "foo", TERM, TERM, TERM)
  // ["bar", [2, truncated("foo")]] -> (STRING, "bar", TERM, ARRAY, NUMBER, 2, STRING, "foo", TRUNC)
  // ["bar", truncated(["foo"])] -> (STRING, "bar", TERM, ARRAY. STRING, "foo", TERM, TRUNC)
  /** Writes an index value.  */
  createClass_createClass(dr, [{
    key: "ue",
    value: function ue(t, e) {
      this.ce(t, e),
      // Write separator to split index values
      // (see go/firestore-storage-format#encodings).
      e.ae();
    }
  }, {
    key: "ce",
    value: function ce(t, e) {
      if ("nullValue" in t) this.he(e, 5);else if ("booleanValue" in t) this.he(e, 10), e.le(t.booleanValue ? 1 : 0);else if ("integerValue" in t) this.he(e, 15), e.le(zt(t.integerValue));else if ("doubleValue" in t) {
        var n = zt(t.doubleValue);
        isNaN(n) ? this.he(e, 13) : (this.he(e, 15), Ut(n) ?
        // -0.0, 0 and 0.0 are all considered the same
        e.le(0) : e.le(n));
      } else if ("timestampValue" in t) {
        var _n16 = t.timestampValue;
        this.he(e, 20), "string" == typeof _n16 ? e.fe(_n16) : (e.fe("".concat(_n16.seconds || "")), e.le(_n16.nanos || 0));
      } else if ("stringValue" in t) this.de(t.stringValue, e), this._e(e);else if ("bytesValue" in t) this.he(e, 30), e.we(Ht(t.bytesValue)), this._e(e);else if ("referenceValue" in t) this.me(t.referenceValue, e);else if ("geoPointValue" in t) {
        var _n17 = t.geoPointValue;
        this.he(e, 45), e.le(_n17.latitude || 0), e.le(_n17.longitude || 0);
      } else "mapValue" in t ? we(t) ? this.he(e, Number.MAX_SAFE_INTEGER) : (this.ge(t.mapValue, e), this._e(e)) : "arrayValue" in t ? (this.ye(t.arrayValue, e), this._e(e)) : index_esm2017_O();
    }
  }, {
    key: "de",
    value: function de(t, e) {
      this.he(e, 25), this.pe(t, e);
    }
  }, {
    key: "pe",
    value: function pe(t, e) {
      e.fe(t);
    }
  }, {
    key: "ge",
    value: function ge(t, e) {
      var n = t.fields || {};
      this.he(e, 55);
      for (var _i9 = 0, _Object$keys = Object.keys(n); _i9 < _Object$keys.length; _i9++) {
        var _t45 = _Object$keys[_i9];
        this.de(_t45, e), this.ce(n[_t45], e);
      }
    }
  }, {
    key: "ye",
    value: function ye(t, e) {
      var n = t.values || [];
      this.he(e, 50);
      var _iterator31 = createForOfIteratorHelper_createForOfIteratorHelper(n),
        _step31;
      try {
        for (_iterator31.s(); !(_step31 = _iterator31.n()).done;) {
          var _t46 = _step31.value;
          this.ce(_t46, e);
        }
      } catch (err) {
        _iterator31.e(err);
      } finally {
        _iterator31.f();
      }
    }
  }, {
    key: "me",
    value: function me(t, e) {
      var _this49 = this;
      this.he(e, 37);
      ct.fromName(t).path.forEach(function (t) {
        _this49.he(e, 60), _this49.pe(t, e);
      });
    }
  }, {
    key: "he",
    value: function he(t, e) {
      t.le(e);
    }
  }, {
    key: "_e",
    value: function _e(t) {
      // While the SDK does not implement truncation, the truncation marker is
      // used to terminate all variable length values (which are strings, bytes,
      // references, arrays and maps).
      t.le(2);
    }
  }]);
  return dr;
}();
dr.Ie = new dr();

/**
 * Counts the number of zeros in a byte.
 *
 * Visible for testing.
 */
function _r(t) {
  if (0 === t) return 8;
  var e = 0;
  return t >> 4 == 0 && (
  // Test if the first four bits are zero.
  e += 4, t <<= 4), t >> 6 == 0 && (
  // Test if the first two (or next two) bits are zero.
  e += 2, t <<= 2), t >> 7 == 0 && (
  // Test if the remaining bit is zero.
  e += 1), e;
}

/** Counts the number of leading zeros in the given byte array. */
/**
 * Returns the number of bytes required to store "value". Leading zero bytes
 * are skipped.
 */
function wr(t) {
  // This is just the number of bytes for the unsigned representation of the number.
  var e = 64 - function (t) {
    var e = 0;
    for (var n = 0; n < 8; ++n) {
      var s = _r(255 & t[n]);
      if (e += s, 8 !== s) break;
    }
    return e;
  }(t);
  return Math.ceil(e / 8);
}

/**
 * OrderedCodeWriter is a minimal-allocation implementation of the writing
 * behavior defined by the backend.
 *
 * The code is ported from its Java counterpart.
 */
var mr = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  function mr() {
    _classCallCheck(this, mr);
    this.buffer = new Uint8Array(1024), this.position = 0;
  }
  _createClass(mr, [{
    key: "Te",
    value: function Te(t) {
      var e = t[Symbol.iterator]();
      var n = e.next();
      for (; !n.done;) {
        this.Ee(n.value), n = e.next();
      }
      this.Ae();
    }
  }, {
    key: "Re",
    value: function Re(t) {
      var e = t[Symbol.iterator]();
      var n = e.next();
      for (; !n.done;) {
        this.be(n.value), n = e.next();
      }
      this.Pe();
    }
    /** Writes utf8 bytes into this byte sequence, ascending. */
  }, {
    key: "ve",
    value: function ve(t) {
      var _iterator32 = _createForOfIteratorHelper(t),
        _step32;
      try {
        for (_iterator32.s(); !(_step32 = _iterator32.n()).done;) {
          var e = _step32.value;
          var _t47 = e.charCodeAt(0);
          if (_t47 < 128) this.Ee(_t47);else if (_t47 < 2048) this.Ee(960 | _t47 >>> 6), this.Ee(128 | 63 & _t47);else if (e < "\uD800" || "\uDBFF" < e) this.Ee(480 | _t47 >>> 12), this.Ee(128 | 63 & _t47 >>> 6), this.Ee(128 | 63 & _t47);else {
            var _t48 = e.codePointAt(0);
            this.Ee(240 | _t48 >>> 18), this.Ee(128 | 63 & _t48 >>> 12), this.Ee(128 | 63 & _t48 >>> 6), this.Ee(128 | 63 & _t48);
          }
        }
      } catch (err) {
        _iterator32.e(err);
      } finally {
        _iterator32.f();
      }
      this.Ae();
    }
    /** Writes utf8 bytes into this byte sequence, descending */
  }, {
    key: "Ve",
    value: function Ve(t) {
      var _iterator33 = _createForOfIteratorHelper(t),
        _step33;
      try {
        for (_iterator33.s(); !(_step33 = _iterator33.n()).done;) {
          var e = _step33.value;
          var _t49 = e.charCodeAt(0);
          if (_t49 < 128) this.be(_t49);else if (_t49 < 2048) this.be(960 | _t49 >>> 6), this.be(128 | 63 & _t49);else if (e < "\uD800" || "\uDBFF" < e) this.be(480 | _t49 >>> 12), this.be(128 | 63 & _t49 >>> 6), this.be(128 | 63 & _t49);else {
            var _t50 = e.codePointAt(0);
            this.be(240 | _t50 >>> 18), this.be(128 | 63 & _t50 >>> 12), this.be(128 | 63 & _t50 >>> 6), this.be(128 | 63 & _t50);
          }
        }
      } catch (err) {
        _iterator33.e(err);
      } finally {
        _iterator33.f();
      }
      this.Pe();
    }
  }, {
    key: "Se",
    value: function Se(t) {
      // Values are encoded with a single byte length prefix, followed by the
      // actual value in big-endian format with leading 0 bytes dropped.
      var e = this.De(t),
        n = wr(e);
      this.Ce(1 + n), this.buffer[this.position++] = 255 & n;
      // Write the length
      for (var _t51 = e.length - n; _t51 < e.length; ++_t51) {
        this.buffer[this.position++] = 255 & e[_t51];
      }
    }
  }, {
    key: "xe",
    value: function xe(t) {
      // Values are encoded with a single byte length prefix, followed by the
      // inverted value in big-endian format with leading 0 bytes dropped.
      var e = this.De(t),
        n = wr(e);
      this.Ce(1 + n), this.buffer[this.position++] = ~(255 & n);
      // Write the length
      for (var _t52 = e.length - n; _t52 < e.length; ++_t52) {
        this.buffer[this.position++] = ~(255 & e[_t52]);
      }
    }
    /**
     * Writes the "infinity" byte sequence that sorts after all other byte
     * sequences written in ascending order.
     */
  }, {
    key: "Ne",
    value: function Ne() {
      this.ke(255), this.ke(255);
    }
    /**
     * Writes the "infinity" byte sequence that sorts before all other byte
     * sequences written in descending order.
     */
  }, {
    key: "Oe",
    value: function Oe() {
      this.Me(255), this.Me(255);
    }
    /**
     * Resets the buffer such that it is the same as when it was newly
     * constructed.
     */
  }, {
    key: "reset",
    value: function reset() {
      this.position = 0;
    }
  }, {
    key: "seed",
    value: function seed(t) {
      this.Ce(t.length), this.buffer.set(t, this.position), this.position += t.length;
    }
    /** Makes a copy of the encoded bytes in this buffer.  */
  }, {
    key: "Fe",
    value: function Fe() {
      return this.buffer.slice(0, this.position);
    }
    /**
     * Encodes `val` into an encoding so that the order matches the IEEE 754
     * floating-point comparison results with the following exceptions:
     *   -0.0 < 0.0
     *   all non-NaN < NaN
     *   NaN = NaN
     */
  }, {
    key: "De",
    value: function De(t) {
      var e = /** Converts a JavaScript number to a byte array (using big endian encoding). */
        function (t) {
          var e = new DataView(new ArrayBuffer(8));
          return e.setFloat64(0, t, /* littleEndian= */!1), new Uint8Array(e.buffer);
        }(t),
        n = 0 != (128 & e[0]);
      // Check if the first bit is set. We use a bit mask since value[0] is
      // encoded as a number from 0 to 255.
      // Revert the two complement to get natural ordering
      e[0] ^= n ? 255 : 128;
      for (var _t53 = 1; _t53 < e.length; ++_t53) {
        e[_t53] ^= n ? 255 : 0;
      }
      return e;
    }
    /** Writes a single byte ascending to the buffer. */
  }, {
    key: "Ee",
    value: function Ee(t) {
      var e = 255 & t;
      0 === e ? (this.ke(0), this.ke(255)) : 255 === e ? (this.ke(255), this.ke(0)) : this.ke(e);
    }
    /** Writes a single byte descending to the buffer.  */
  }, {
    key: "be",
    value: function be(t) {
      var e = 255 & t;
      0 === e ? (this.Me(0), this.Me(255)) : 255 === e ? (this.Me(255), this.Me(0)) : this.Me(t);
    }
  }, {
    key: "Ae",
    value: function Ae() {
      this.ke(0), this.ke(1);
    }
  }, {
    key: "Pe",
    value: function Pe() {
      this.Me(0), this.Me(1);
    }
  }, {
    key: "ke",
    value: function ke(t) {
      this.Ce(1), this.buffer[this.position++] = t;
    }
  }, {
    key: "Me",
    value: function Me(t) {
      this.Ce(1), this.buffer[this.position++] = ~t;
    }
  }, {
    key: "Ce",
    value: function Ce(t) {
      var e = t + this.position;
      if (e <= this.buffer.length) return;
      // Try doubling.
      var n = 2 * this.buffer.length;
      // Still not big enough? Just allocate the right size.
      n < e && (n = e);
      // Create the new buffer.
      var s = new Uint8Array(n);
      s.set(this.buffer),
      // copy old data
      this.buffer = s;
    }
  }]);
  return mr;
}()));
var gr = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  function gr(t) {
    _classCallCheck(this, gr);
    this.$e = t;
  }
  _createClass(gr, [{
    key: "we",
    value: function we(t) {
      this.$e.Te(t);
    }
  }, {
    key: "fe",
    value: function fe(t) {
      this.$e.ve(t);
    }
  }, {
    key: "le",
    value: function le(t) {
      this.$e.Se(t);
    }
  }, {
    key: "ae",
    value: function ae() {
      this.$e.Ne();
    }
  }]);
  return gr;
}()));
var yr = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  function yr(t) {
    _classCallCheck(this, yr);
    this.$e = t;
  }
  _createClass(yr, [{
    key: "we",
    value: function we(t) {
      this.$e.Re(t);
    }
  }, {
    key: "fe",
    value: function fe(t) {
      this.$e.Ve(t);
    }
  }, {
    key: "le",
    value: function le(t) {
      this.$e.xe(t);
    }
  }, {
    key: "ae",
    value: function ae() {
      this.$e.Oe();
    }
  }]);
  return yr;
}()));
/**
 * Implements `DirectionalIndexByteEncoder` using `OrderedCodeWriter` for the
 * actual encoding.
 */
var pr = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  function pr() {
    _classCallCheck(this, pr);
    this.$e = new mr(), this.Be = new gr(this.$e), this.Le = new yr(this.$e);
  }
  _createClass(pr, [{
    key: "seed",
    value: function seed(t) {
      this.$e.seed(t);
    }
  }, {
    key: "qe",
    value: function qe(t) {
      return 0 /* IndexKind.ASCENDING */ === t ? this.Be : this.Le;
    }
  }, {
    key: "Fe",
    value: function Fe() {
      return this.$e.Fe();
    }
  }, {
    key: "reset",
    value: function reset() {
      this.$e.reset();
    }
  }]);
  return pr;
}()));
/**
 * @license
 * Copyright 2022 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/** Represents an index entry saved by the SDK in persisted storage. */
var Ir = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  function Ir(t, e, n, s) {
    _classCallCheck(this, Ir);
    this.indexId = t, this.documentKey = e, this.arrayValue = n, this.directionalValue = s;
  }
  /**
   * Returns an IndexEntry entry that sorts immediately after the current
   * directional value.
   */
  _createClass(Ir, [{
    key: "Ue",
    value: function Ue() {
      var t = this.directionalValue.length,
        e = 0 === t || 255 === this.directionalValue[t - 1] ? t + 1 : t,
        n = new Uint8Array(e);
      return n.set(this.directionalValue, 0), e !== t ? n.set([0], this.directionalValue.length) : ++n[n.length - 1], new Ir(this.indexId, this.documentKey, this.arrayValue, n);
    }
  }]);
  return Ir;
}()));
function Tr(t, e) {
  var n = t.indexId - e.indexId;
  return 0 !== n ? n : (n = Er(t.arrayValue, e.arrayValue), 0 !== n ? n : (n = Er(t.directionalValue, e.directionalValue), 0 !== n ? n : ct.comparator(t.documentKey, e.documentKey)));
}
function Er(t, e) {
  for (var n = 0; n < t.length && n < e.length; ++n) {
    var s = t[n] - e[n];
    if (0 !== s) return s;
  }
  return t.length - e.length;
}

/**
 * @license
 * Copyright 2022 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * A light query planner for Firestore.
 *
 * This class matches a `FieldIndex` against a Firestore Query `Target`. It
 * determines whether a given index can be used to serve the specified target.
 *
 * The following table showcases some possible index configurations:
 *
 * Query                                               | Index
 * -----------------------------------------------------------------------------
 * where('a', '==', 'a').where('b', '==', 'b')         | a ASC, b DESC
 * where('a', '==', 'a').where('b', '==', 'b')         | a ASC
 * where('a', '==', 'a').where('b', '==', 'b')         | b DESC
 * where('a', '>=', 'a').orderBy('a')                  | a ASC
 * where('a', '>=', 'a').orderBy('a', 'desc')          | a DESC
 * where('a', '>=', 'a').orderBy('a').orderBy('b')     | a ASC, b ASC
 * where('a', '>=', 'a').orderBy('a').orderBy('b')     | a ASC
 * where('a', 'array-contains', 'a').orderBy('b')      | a CONTAINS, b ASCENDING
 * where('a', 'array-contains', 'a').orderBy('b')      | a CONTAINS
 */
var Ar = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  function Ar(t) {
    _classCallCheck(this, Ar);
    this.collectionId = null != t.collectionGroup ? t.collectionGroup : t.path.lastSegment(), this.Ke = t.orderBy, this.Ge = [];
    var _iterator34 = _createForOfIteratorHelper(t.filters),
      _step34;
    try {
      for (_iterator34.s(); !(_step34 = _iterator34.n()).done;) {
        var e = _step34.value;
        var _t54 = e;
        _t54.isInequality() ? this.Qe = _t54 : this.Ge.push(_t54);
      }
    } catch (err) {
      _iterator34.e(err);
    } finally {
      _iterator34.f();
    }
  }
  /**
   * Returns whether the index can be used to serve the TargetIndexMatcher's
   * target.
   *
   * An index is considered capable of serving the target when:
   * - The target uses all index segments for its filters and orderBy clauses.
   *   The target can have additional filter and orderBy clauses, but not
   *   fewer.
   * - If an ArrayContains/ArrayContainsAnyfilter is used, the index must also
   *   have a corresponding `CONTAINS` segment.
   * - All directional index segments can be mapped to the target as a series of
   *   equality filters, a single inequality filter and a series of orderBy
   *   clauses.
   * - The segments that represent the equality filters may appear out of order.
   * - The optional segment for the inequality filter must appear after all
   *   equality segments.
   * - The segments that represent that orderBy clause of the target must appear
   *   in order after all equality and inequality segments. Single orderBy
   *   clauses cannot be skipped, but a continuous orderBy suffix may be
   *   omitted.
   */
  _createClass(Ar, [{
    key: "je",
    value: function je(t) {
      index_esm2017_M(t.collectionGroup === this.collectionId);
      // If there is an array element, find a matching filter.
      var e = ht(t);
      if (void 0 !== e && !this.We(e)) return !1;
      var n = lt(t);
      var s = 0,
        i = 0;
      // Process all equalities first. Equalities can appear out of order.
      for (; s < n.length && this.We(n[s]); ++s) {
        ;
      }
      // If we already have processed all segments, all segments are used to serve
      // the equality filters and we do not need to map any segments to the
      // target's inequality and orderBy clauses.
      if (s === n.length) return !0;
      // If there is an inequality filter, the next segment must match both the
      // filter and the first orderBy clause.
      if (void 0 !== this.Qe) {
        var _t55 = n[s];
        if (!this.ze(this.Qe, _t55) || !this.He(this.Ke[i++], _t55)) return !1;
        ++s;
      }
      // All remaining segments need to represent the prefix of the target's
      // orderBy.
      for (; s < n.length; ++s) {
        var _t56 = n[s];
        if (i >= this.Ke.length || !this.He(this.Ke[i++], _t56)) return !1;
      }
      return !0;
    }
  }, {
    key: "We",
    value: function We(t) {
      var _iterator35 = _createForOfIteratorHelper(this.Ge),
        _step35;
      try {
        for (_iterator35.s(); !(_step35 = _iterator35.n()).done;) {
          var e = _step35.value;
          if (this.ze(e, t)) return !0;
        }
      } catch (err) {
        _iterator35.e(err);
      } finally {
        _iterator35.f();
      }
      return !1;
    }
  }, {
    key: "ze",
    value: function ze(t, e) {
      if (void 0 === t || !t.field.isEqual(e.fieldPath)) return !1;
      var n = "array-contains" /* Operator.ARRAY_CONTAINS */ === t.op || "array-contains-any" /* Operator.ARRAY_CONTAINS_ANY */ === t.op;
      return 2 /* IndexKind.CONTAINS */ === e.kind === n;
    }
  }, {
    key: "He",
    value: function He(t, e) {
      return !!t.field.isEqual(e.fieldPath) && (0 /* IndexKind.ASCENDING */ === e.kind && "asc" /* Direction.ASCENDING */ === t.dir || 1 /* IndexKind.DESCENDING */ === e.kind && "desc" /* Direction.DESCENDING */ === t.dir);
    }
  }]);
  return Ar;
}()));
/**
 * @license
 * Copyright 2022 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * Provides utility functions that help with boolean logic transformations needed for handling
 * complex filters used in queries.
 */
/**
 * The `in` filter is only a syntactic sugar over a disjunction of equalities. For instance: `a in
 * [1,2,3]` is in fact `a==1 || a==2 || a==3`. This method expands any `in` filter in the given
 * input into a disjunction of equality filters and returns the expanded filter.
 */
function Rr(t) {
  var e, n;
  if (index_esm2017_M(t instanceof Re || t instanceof be), t instanceof Re) {
    if (t instanceof Be) {
      var _s11 = (null === (n = null === (e = t.value.arrayValue) || void 0 === e ? void 0 : e.values) || void 0 === n ? void 0 : n.map(function (e) {
        return Re.create(t.field, "==" /* Operator.EQUAL */, e);
      })) || [];
      return be.create(_s11, "or" /* CompositeOperator.OR */);
    }
    // We have reached other kinds of field filters.
    return t;
  }
  // We have a composite filter.
  var s = t.filters.map(function (t) {
    return Rr(t);
  });
  return be.create(s, t.op);
}

/**
 * Given a composite filter, returns the list of terms in its disjunctive normal form.
 *
 * <p>Each element in the return value is one term of the resulting DNF. For instance: For the
 * input: (A || B) && C, the DNF form is: (A && C) || (B && C), and the return value is a list
 * with two elements: a composite filter that performs (A && C), and a composite filter that
 * performs (B && C).
 *
 * @param filter the composite filter to calculate DNF transform for.
 * @return the terms in the DNF transform.
 */
function br(t) {
  if (0 === t.getFilters().length) return [];
  var e = Sr(Rr(t));
  return index_esm2017_M(Vr(e)), Pr(e) || vr(e) ? [e] : e.getFilters();
}

/** Returns true if the given filter is a single field filter. e.g. (a == 10). */
function Pr(t) {
  return t instanceof Re;
}

/**
 * Returns true if the given filter is the conjunction of one or more field filters. e.g. (a == 10
 * && b == 20)
 */
function vr(t) {
  return t instanceof be && Ve(t);
}

/**
 * Returns whether or not the given filter is in disjunctive normal form (DNF).
 *
 * <p>In boolean logic, a disjunctive normal form (DNF) is a canonical normal form of a logical
 * formula consisting of a disjunction of conjunctions; it can also be described as an OR of ANDs.
 *
 * <p>For more info, visit: https://en.wikipedia.org/wiki/Disjunctive_normal_form
 */
function Vr(t) {
  return Pr(t) || vr(t) ||
  /**
  * Returns true if the given filter is the disjunction of one or more "flat conjunctions" and
  * field filters. e.g. (a == 10) || (b==20 && c==30)
  */
  function (t) {
    if (t instanceof be && ve(t)) {
      var _iterator36 = _createForOfIteratorHelper(t.getFilters()),
        _step36;
      try {
        for (_iterator36.s(); !(_step36 = _iterator36.n()).done;) {
          var e = _step36.value;
          if (!Pr(e) && !vr(e)) return !1;
        }
      } catch (err) {
        _iterator36.e(err);
      } finally {
        _iterator36.f();
      }
      return !0;
    }
    return !1;
  }(t);
}
function Sr(t) {
  if (index_esm2017_M(t instanceof Re || t instanceof be), t instanceof Re) return t;
  if (1 === t.filters.length) return Sr(t.filters[0]);
  // Compute DNF for each of the subfilters first
  var e = t.filters.map(function (t) {
    return Sr(t);
  });
  var n = be.create(e, t.op);
  return n = xr(n), Vr(n) ? n : (index_esm2017_M(n instanceof be), index_esm2017_M(Pe(n)), index_esm2017_M(n.filters.length > 1), n.filters.reduce(function (t, e) {
    return Dr(t, e);
  }));
}
function Dr(t, e) {
  var n;
  return index_esm2017_M(t instanceof Re || t instanceof be), index_esm2017_M(e instanceof Re || e instanceof be),
  // FieldFilter FieldFilter
  n = t instanceof Re ? e instanceof Re ? function (t, e) {
    // Conjunction distribution for two field filters is the conjunction of them.
    return be.create([t, e], "and" /* CompositeOperator.AND */);
  }(t, e) : Cr(t, e) : e instanceof Re ? Cr(e, t) : function (t, e) {
    // There are four cases:
    // (A & B) & (C & D) --> (A & B & C & D)
    // (A & B) & (C | D) --> (A & B & C) | (A & B & D)
    // (A | B) & (C & D) --> (C & D & A) | (C & D & B)
    // (A | B) & (C | D) --> (A & C) | (A & D) | (B & C) | (B & D)
    // Case 1 is a merge.
    if (index_esm2017_M(t.filters.length > 0 && e.filters.length > 0), Pe(t) && Pe(e)) return xe(t, e.getFilters());
    // Case 2,3,4 all have at least one side (lhs or rhs) that is a disjunction. In all three cases
    // we should take each element of the disjunction and distribute it over the other side, and
    // return the disjunction of the distribution results.
    var n = ve(t) ? t : e,
      s = ve(t) ? e : t,
      i = n.filters.map(function (t) {
        return Dr(t, s);
      });
    return be.create(i, "or" /* CompositeOperator.OR */);
  }(t, e), xr(n);
}
function Cr(t, e) {
  // There are two cases:
  // A & (B & C) --> (A & B & C)
  // A & (B | C) --> (A & B) | (A & C)
  if (Pe(e))
    // Case 1
    return xe(e, t.getFilters());
  {
    // Case 2
    var n = e.filters.map(function (e) {
      return Dr(t, e);
    });
    return be.create(n, "or" /* CompositeOperator.OR */);
  }
}

/**
 * Applies the associativity property to the given filter and returns the resulting filter.
 *
 * <ul>
 *   <li>A | (B | C) == (A | B) | C == (A | B | C)
 *   <li>A & (B & C) == (A & B) & C == (A & B & C)
 * </ul>
 *
 * <p>For more info, visit: https://en.wikipedia.org/wiki/Associative_property#Propositional_logic
 */
function xr(t) {
  if (index_esm2017_M(t instanceof Re || t instanceof be), t instanceof Re) return t;
  var e = t.getFilters();
  // If the composite filter only contains 1 filter, apply associativity to it.
  if (1 === e.length) return xr(e[0]);
  // Associativity applied to a flat composite filter results is itself.
  if (Se(t)) return t;
  // First apply associativity to all subfilters. This will in turn recursively apply
  // associativity to all nested composite filters and field filters.
  var n = e.map(function (t) {
      return xr(t);
    }),
    s = [];
  // For composite subfilters that perform the same kind of logical operation as `compositeFilter`
  // take out their filters and add them to `compositeFilter`. For example:
  // compositeFilter = (A | (B | C | D))
  // compositeSubfilter = (B | C | D)
  // Result: (A | B | C | D)
  // Note that the `compositeSubfilter` has been eliminated, and its filters (B, C, D) have been
  // added to the top-level "compositeFilter".
  return n.forEach(function (e) {
    e instanceof Re ? s.push(e) : e instanceof be && (e.op === t.op ?
    // compositeFilter: (A | (B | C))
    // compositeSubfilter: (B | C)
    // Result: (A | B | C)
    s.push.apply(s, _toConsumableArray(e.filters)) :
    // compositeFilter: (A | (B & C))
    // compositeSubfilter: (B & C)
    // Result: (A | (B & C))
    s.push(e));
  }), 1 === s.length ? s[0] : be.create(s, t.op);
}

/**
 * @license
 * Copyright 2019 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * An in-memory implementation of IndexManager.
 */
var Nr = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  function Nr() {
    _classCallCheck(this, Nr);
    this.Je = new kr();
  }
  _createClass(Nr, [{
    key: "addToCollectionParentIndex",
    value: function addToCollectionParentIndex(t, e) {
      return this.Je.add(e), At.resolve();
    }
  }, {
    key: "getCollectionParents",
    value: function getCollectionParents(t, e) {
      return At.resolve(this.Je.getEntries(e));
    }
  }, {
    key: "addFieldIndex",
    value: function addFieldIndex(t, e) {
      // Field indices are not supported with memory persistence.
      return At.resolve();
    }
  }, {
    key: "deleteFieldIndex",
    value: function deleteFieldIndex(t, e) {
      // Field indices are not supported with memory persistence.
      return At.resolve();
    }
  }, {
    key: "getDocumentsMatchingTarget",
    value: function getDocumentsMatchingTarget(t, e) {
      // Field indices are not supported with memory persistence.
      return At.resolve(null);
    }
  }, {
    key: "getIndexType",
    value: function getIndexType(t, e) {
      // Field indices are not supported with memory persistence.
      return At.resolve(0 /* IndexType.NONE */);
    }
  }, {
    key: "getFieldIndexes",
    value: function getFieldIndexes(t, e) {
      // Field indices are not supported with memory persistence.
      return At.resolve([]);
    }
  }, {
    key: "getNextCollectionGroupToUpdate",
    value: function getNextCollectionGroupToUpdate(t) {
      // Field indices are not supported with memory persistence.
      return At.resolve(null);
    }
  }, {
    key: "getMinOffset",
    value: function getMinOffset(t, e) {
      return At.resolve(yt.min());
    }
  }, {
    key: "getMinOffsetFromCollectionGroup",
    value: function getMinOffsetFromCollectionGroup(t, e) {
      return At.resolve(yt.min());
    }
  }, {
    key: "updateCollectionGroup",
    value: function updateCollectionGroup(t, e, n) {
      // Field indices are not supported with memory persistence.
      return At.resolve();
    }
  }, {
    key: "updateIndexEntries",
    value: function updateIndexEntries(t, e) {
      // Field indices are not supported with memory persistence.
      return At.resolve();
    }
  }]);
  return Nr;
}()));
/**
 * Internal implementation of the collection-parent index exposed by MemoryIndexManager.
 * Also used for in-memory caching by IndexedDbIndexManager and initial index population
 * in indexeddb_schema.ts
 */
var kr = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  function kr() {
    _classCallCheck(this, kr);
    this.index = {};
  }
  // Returns false if the entry already existed.
  _createClass(kr, [{
    key: "add",
    value: function add(t) {
      var e = t.lastSegment(),
        n = t.popLast(),
        s = this.index[e] || new We(rt.comparator),
        i = !s.has(n);
      return this.index[e] = s.add(n), i;
    }
  }, {
    key: "has",
    value: function has(t) {
      var e = t.lastSegment(),
        n = t.popLast(),
        s = this.index[e];
      return s && s.has(n);
    }
  }, {
    key: "getEntries",
    value: function getEntries(t) {
      return (this.index[t] || new We(rt.comparator)).toArray();
    }
  }]);
  return kr;
}()));
/**
 * @license
 * Copyright 2019 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
var Or = new Uint8Array(0);

/**
 * A persisted implementation of IndexManager.
 *
 * PORTING NOTE: Unlike iOS and Android, the Web SDK does not memoize index
 * data as it supports multi-tab access.
 */
var Mr = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  function Mr(t, e) {
    _classCallCheck(this, Mr);
    this.user = t, this.databaseId = e,
    /**
     * An in-memory copy of the index entries we've already written since the SDK
     * launched. Used to avoid re-writing the same entry repeatedly.
     *
     * This is *NOT* a complete cache of what's in persistence and so can never be
     * used to satisfy reads.
     */
    this.Ye = new kr(),
    /**
     * Maps from a target to its equivalent list of sub-targets. Each sub-target
     * contains only one term from the target's disjunctive normal form (DNF).
     */
    this.Xe = new ls(function (t) {
      return nn(t);
    }, function (t, e) {
      return sn(t, e);
    }), this.uid = t.uid || "";
  }
  /**
   * Adds a new entry to the collection parent index.
   *
   * Repeated calls for the same collectionPath should be avoided within a
   * transaction as IndexedDbIndexManager only caches writes once a transaction
   * has been committed.
   */
  _createClass(Mr, [{
    key: "addToCollectionParentIndex",
    value: function addToCollectionParentIndex(t, e) {
      var _this50 = this;
      if (!this.Ye.has(e)) {
        var n = e.lastSegment(),
          s = e.popLast();
        t.addOnCommittedListener(function () {
          // Add the collection to the in memory cache only if the transaction was
          // successfully committed.
          _this50.Ye.add(e);
        });
        var i = {
          collectionId: n,
          parent: mi(s)
        };
        return Fr(t).put(i);
      }
      return At.resolve();
    }
  }, {
    key: "getCollectionParents",
    value: function getCollectionParents(t, e) {
      var n = [],
        s = IDBKeyRange.bound([e, ""], [et(e), ""], /*lowerOpen=*/!1, /*upperOpen=*/!0);
      return Fr(t).W(s).next(function (t) {
        var _iterator37 = _createForOfIteratorHelper(t),
          _step37;
        try {
          for (_iterator37.s(); !(_step37 = _iterator37.n()).done;) {
            var _s12 = _step37.value;
            // This collectionId guard shouldn't be necessary (and isn't as long
            // as we're running in a real browser), but there's a bug in
            // indexeddbshim that breaks our range in our tests running in node:
            // https://github.com/axemclion/IndexedDBShim/issues/334
            if (_s12.collectionId !== e) break;
            n.push(pi(_s12.parent));
          }
        } catch (err) {
          _iterator37.e(err);
        } finally {
          _iterator37.f();
        }
        return n;
      });
    }
  }, {
    key: "addFieldIndex",
    value: function addFieldIndex(t, e) {
      var _this51 = this;
      // TODO(indexing): Verify that the auto-incrementing index ID works in
      // Safari & Firefox.
      var n = Br(t),
        s = function (t) {
          return {
            indexId: t.indexId,
            collectionGroup: t.collectionGroup,
            fields: t.fields.map(function (t) {
              return [t.fieldPath.canonicalString(), t.kind];
            })
          };
        }(e);
      delete s.indexId;
      // `indexId` is auto-populated by IndexedDb
      var i = n.add(s);
      if (e.indexState) {
        var _n18 = Lr(t);
        return i.next(function (t) {
          _n18.put(ur(t, _this51.user, e.indexState.sequenceNumber, e.indexState.offset));
        });
      }
      return i.next();
    }
  }, {
    key: "deleteFieldIndex",
    value: function deleteFieldIndex(t, e) {
      var n = Br(t),
        s = Lr(t),
        i = $r(t);
      return n.delete(e.indexId).next(function () {
        return s.delete(IDBKeyRange.bound([e.indexId], [e.indexId + 1], /*lowerOpen=*/!1, /*upperOpen=*/!0));
      }).next(function () {
        return i.delete(IDBKeyRange.bound([e.indexId], [e.indexId + 1], /*lowerOpen=*/!1, /*upperOpen=*/!0));
      });
    }
  }, {
    key: "getDocumentsMatchingTarget",
    value: function getDocumentsMatchingTarget(t, e) {
      var _this52 = this;
      var n = $r(t);
      var s = !0;
      var i = new Map();
      return At.forEach(this.Ze(e), function (e) {
        return _this52.tn(t, e).next(function (t) {
          s && (s = !!t), i.set(e, t);
        });
      }).next(function () {
        if (s) {
          var _t57 = Es();
          var _s13 = [];
          return At.forEach(i, function (i, r) {
            var o;
            index_esm2017_C("IndexedDbIndexManager", "Using index ".concat((o = i, "id=".concat(o.indexId, "|cg=").concat(o.collectionGroup, "|f=").concat(o.fields.map(function (t) {
              return "".concat(t.fieldPath, ":").concat(t.kind);
            }).join(","))), " to execute ").concat(nn(e)));
            var u = function (t, e) {
                var n = ht(e);
                if (void 0 === n) return null;
                var _iterator38 = _createForOfIteratorHelper(on(t, n.fieldPath)),
                  _step38;
                try {
                  for (_iterator38.s(); !(_step38 = _iterator38.n()).done;) {
                    var _e25 = _step38.value;
                    switch (_e25.op) {
                      case "array-contains-any" /* Operator.ARRAY_CONTAINS_ANY */:
                        return _e25.value.arrayValue.values || [];
                      case "array-contains" /* Operator.ARRAY_CONTAINS */:
                        return [_e25.value];
                      // Remaining filters are not array filters.
                    }
                  }
                } catch (err) {
                  _iterator38.e(err);
                } finally {
                  _iterator38.f();
                }
                return null;
              }
              /**
              * Returns the list of values that are used in != or NOT_IN filters. Returns
              * `null` if there are no such filters.
              */(r, i),
              c = function (t, e) {
                var n = new Map();
                var _iterator39 = _createForOfIteratorHelper(lt(e)),
                  _step39;
                try {
                  for (_iterator39.s(); !(_step39 = _iterator39.n()).done;) {
                    var _s14 = _step39.value;
                    var _iterator40 = _createForOfIteratorHelper(on(t, _s14.fieldPath)),
                      _step40;
                    try {
                      for (_iterator40.s(); !(_step40 = _iterator40.n()).done;) {
                        var _e26 = _step40.value;
                        switch (_e26.op) {
                          case "==" /* Operator.EQUAL */:
                          case "in" /* Operator.IN */:
                            // Encode equality prefix, which is encoded in the index value before
                            // the inequality (e.g. `a == 'a' && b != 'b'` is encoded to
                            // `value != 'ab'`).
                            n.set(_s14.fieldPath.canonicalString(), _e26.value);
                            break;
                          case "not-in" /* Operator.NOT_IN */:
                          case "!=" /* Operator.NOT_EQUAL */:
                            // NotIn/NotEqual is always a suffix. There cannot be any remaining
                            // segments and hence we can return early here.
                            return n.set(_s14.fieldPath.canonicalString(), _e26.value), Array.from(n.values());
                          // Remaining filters cannot be used as notIn bounds.
                        }
                      }
                    } catch (err) {
                      _iterator40.e(err);
                    } finally {
                      _iterator40.f();
                    }
                  }
                } catch (err) {
                  _iterator39.e(err);
                } finally {
                  _iterator39.f();
                }
                return null;
              }
              /**
              * Returns a lower bound of field values that can be used as a starting point to
              * scan the index defined by `fieldIndex`. Returns `MIN_VALUE` if no lower bound
              * exists.
              */(r, i),
              a = function (t, e) {
                var n = [];
                var s = !0;
                // For each segment, retrieve a lower bound if there is a suitable filter or
                // startAt.
                var _iterator41 = _createForOfIteratorHelper(lt(e)),
                  _step41;
                try {
                  for (_iterator41.s(); !(_step41 = _iterator41.n()).done;) {
                    var _i10 = _step41.value;
                    var _e27 = 0 /* IndexKind.ASCENDING */ === _i10.kind ? un(t, _i10.fieldPath, t.startAt) : cn(t, _i10.fieldPath, t.startAt);
                    n.push(_e27.value), s && (s = _e27.inclusive);
                  }
                } catch (err) {
                  _iterator41.e(err);
                } finally {
                  _iterator41.f();
                }
                return new Ie(n, s);
              }
              /**
              * Returns an upper bound of field values that can be used as an ending point
              * when scanning the index defined by `fieldIndex`. Returns `MAX_VALUE` if no
              * upper bound exists.
              */(r, i),
              h = function (t, e) {
                var n = [];
                var s = !0;
                // For each segment, retrieve an upper bound if there is a suitable filter or
                // endAt.
                var _iterator42 = _createForOfIteratorHelper(lt(e)),
                  _step42;
                try {
                  for (_iterator42.s(); !(_step42 = _iterator42.n()).done;) {
                    var _i11 = _step42.value;
                    var _e28 = 0 /* IndexKind.ASCENDING */ === _i11.kind ? cn(t, _i11.fieldPath, t.endAt) : un(t, _i11.fieldPath, t.endAt);
                    n.push(_e28.value), s && (s = _e28.inclusive);
                  }
                } catch (err) {
                  _iterator42.e(err);
                } finally {
                  _iterator42.f();
                }
                return new Ie(n, s);
              }(r, i),
              l = _this52.en(i, r, a),
              f = _this52.en(i, r, h),
              d = _this52.nn(i, r, c),
              _ = _this52.sn(i.indexId, u, l, a.inclusive, f, h.inclusive, d);
            return At.forEach(_, function (i) {
              return n.J(i, e.limit).next(function (e) {
                e.forEach(function (e) {
                  var n = ct.fromSegments(e.documentKey);
                  _t57.has(n) || (_t57 = _t57.add(n), _s13.push(n));
                });
              });
            });
          }).next(function () {
            return _s13;
          });
        }
        return At.resolve(null);
      });
    }
  }, {
    key: "Ze",
    value: function Ze(t) {
      var e = this.Xe.get(t);
      if (e) return e;
      if (0 === t.filters.length) e = [t];else {
        e = br(be.create(t.filters, "and" /* CompositeOperator.AND */)).map(function (e) {
          return en(t.path, t.collectionGroup, t.orderBy, e.getFilters(), t.limit, t.startAt, t.endAt);
        });
      }
      return this.Xe.set(t, e), e;
    }
    /**
     * Constructs a key range query on `DbIndexEntryStore` that unions all
     * bounds.
     */
  }, {
    key: "sn",
    value: function sn(t, e, n, s, i, r, o) {
      var _this53 = this;
      // The number of total index scans we union together. This is similar to a
      // distributed normal form, but adapted for array values. We create a single
      // index range per value in an ARRAY_CONTAINS or ARRAY_CONTAINS_ANY filter
      // combined with the values from the query bounds.
      var u = (null != e ? e.length : 1) * Math.max(n.length, i.length),
        c = u / (null != e ? e.length : 1),
        a = [];
      var _loop5 = function _loop5(h) {
        var u = e ? _this53.rn(e[h / c]) : Or,
          l = _this53.on(t, u, n[h % c], s),
          f = _this53.un(t, u, i[h % c], r),
          d = o.map(function (e) {
            return _this53.on(t, u, e, /* inclusive= */!0);
          });
        a.push.apply(a, _toConsumableArray(_this53.createRange(l, f, d)));
      };
      for (var h = 0; h < u; ++h) {
        _loop5(h);
      }
      return a;
    }
    /** Generates the lower bound for `arrayValue` and `directionalValue`. */
  }, {
    key: "on",
    value: function on(t, e, n, s) {
      var i = new Ir(t, ct.empty(), e, n);
      return s ? i : i.Ue();
    }
    /** Generates the upper bound for `arrayValue` and `directionalValue`. */
  }, {
    key: "un",
    value: function un(t, e, n, s) {
      var i = new Ir(t, ct.empty(), e, n);
      return s ? i.Ue() : i;
    }
  }, {
    key: "tn",
    value: function tn(t, e) {
      var n = new Ar(e),
        s = null != e.collectionGroup ? e.collectionGroup : e.path.lastSegment();
      return this.getFieldIndexes(t, s).next(function (t) {
        // Return the index with the most number of segments.
        var e = null;
        var _iterator43 = _createForOfIteratorHelper(t),
          _step43;
        try {
          for (_iterator43.s(); !(_step43 = _iterator43.n()).done;) {
            var _s15 = _step43.value;
            n.je(_s15) && (!e || _s15.fields.length > e.fields.length) && (e = _s15);
          }
        } catch (err) {
          _iterator43.e(err);
        } finally {
          _iterator43.f();
        }
        return e;
      });
    }
  }, {
    key: "getIndexType",
    value: function getIndexType(t, e) {
      var _this54 = this;
      var n = 2 /* IndexType.FULL */;
      var s = this.Ze(e);
      return At.forEach(s, function (e) {
        return _this54.tn(t, e).next(function (t) {
          t ? 0 /* IndexType.NONE */ !== n && t.fields.length < function (t) {
            var e = new We(ut.comparator),
              n = !1;
            var _iterator44 = _createForOfIteratorHelper(t.filters),
              _step44;
            try {
              for (_iterator44.s(); !(_step44 = _iterator44.n()).done;) {
                var _s16 = _step44.value;
                var _iterator46 = _createForOfIteratorHelper(_s16.getFlattenedFilters()),
                  _step46;
                try {
                  for (_iterator46.s(); !(_step46 = _iterator46.n()).done;)
                  // __name__ is not an explicit segment of any index, so we don't need to
                  // count it.
                  {
                    var _t58 = _step46.value;
                    _t58.field.isKeyField() || (
                    // ARRAY_CONTAINS or ARRAY_CONTAINS_ANY filters must be counted separately.
                    // For instance, it is possible to have an index for "a ARRAY a ASC". Even
                    // though these are on the same field, they should be counted as two
                    // separate segments in an index.
                    "array-contains" /* Operator.ARRAY_CONTAINS */ === _t58.op || "array-contains-any" /* Operator.ARRAY_CONTAINS_ANY */ === _t58.op ? n = !0 : e = e.add(_t58.field));
                  }
                } catch (err) {
                  _iterator46.e(err);
                } finally {
                  _iterator46.f();
                }
              }
            } catch (err) {
              _iterator44.e(err);
            } finally {
              _iterator44.f();
            }
            var _iterator45 = _createForOfIteratorHelper(t.orderBy),
              _step45;
            try {
              for (_iterator45.s(); !(_step45 = _iterator45.n()).done;)
              // __name__ is not an explicit segment of any index, so we don't need to
              // count it.
              {
                var _n19 = _step45.value;
                _n19.field.isKeyField() || (e = e.add(_n19.field));
              }
            } catch (err) {
              _iterator45.e(err);
            } finally {
              _iterator45.f();
            }
            return e.size + (n ? 1 : 0);
          }(e) && (n = 1 /* IndexType.PARTIAL */) : n = 0 /* IndexType.NONE */;
        });
      }).next(function () {
        return (
          // OR queries have more than one sub-target (one sub-target per DNF term). We currently consider
          // OR queries that have a `limit` to have a partial index. For such queries we perform sorting
          // and apply the limit in memory as a post-processing step.
          function (t) {
            return null !== t.limit;
          }(e) && s.length > 1 && 2 /* IndexType.FULL */ === n ? 1 /* IndexType.PARTIAL */ : n
        );
      });
    }
    /**
     * Returns the byte encoded form of the directional values in the field index.
     * Returns `null` if the document does not have all fields specified in the
     * index.
     */
  }, {
    key: "cn",
    value: function cn(t, e) {
      var n = new pr();
      var _iterator47 = _createForOfIteratorHelper(lt(t)),
        _step47;
      try {
        for (_iterator47.s(); !(_step47 = _iterator47.n()).done;) {
          var s = _step47.value;
          var _t59 = e.data.field(s.fieldPath);
          if (null == _t59) return null;
          var i = n.qe(s.kind);
          dr.Ie.ue(_t59, i);
        }
      } catch (err) {
        _iterator47.e(err);
      } finally {
        _iterator47.f();
      }
      return n.Fe();
    }
    /** Encodes a single value to the ascending index format. */
  }, {
    key: "rn",
    value: function rn(t) {
      var e = new pr();
      return dr.Ie.ue(t, e.qe(0 /* IndexKind.ASCENDING */)), e.Fe();
    }
    /**
     * Returns an encoded form of the document key that sorts based on the key
     * ordering of the field index.
     */
  }, {
    key: "an",
    value: function an(t, e) {
      var n = new pr();
      return dr.Ie.ue(ce(this.databaseId, e), n.qe(function (t) {
        var e = lt(t);
        return 0 === e.length ? 0 /* IndexKind.ASCENDING */ : e[e.length - 1].kind;
      }(t))), n.Fe();
    }
    /**
     * Encodes the given field values according to the specification in `target`.
     * For IN queries, a list of possible values is returned.
     */
  }, {
    key: "nn",
    value: function nn(t, e, n) {
      if (null === n) return [];
      var s = [];
      s.push(new pr());
      var i = 0;
      var _iterator48 = _createForOfIteratorHelper(lt(t)),
        _step48;
      try {
        for (_iterator48.s(); !(_step48 = _iterator48.n()).done;) {
          var r = _step48.value;
          var _t60 = n[i++];
          var _iterator49 = _createForOfIteratorHelper(s),
            _step49;
          try {
            for (_iterator49.s(); !(_step49 = _iterator49.n()).done;) {
              var _n20 = _step49.value;
              if (this.hn(e, r.fieldPath) && he(_t60)) s = this.ln(s, r, _t60);else {
                var _e29 = _n20.qe(r.kind);
                dr.Ie.ue(_t60, _e29);
              }
            }
          } catch (err) {
            _iterator49.e(err);
          } finally {
            _iterator49.f();
          }
        }
      } catch (err) {
        _iterator48.e(err);
      } finally {
        _iterator48.f();
      }
      return this.fn(s);
    }
    /**
     * Encodes the given bounds according to the specification in `target`. For IN
     * queries, a list of possible values is returned.
     */
  }, {
    key: "en",
    value: function en(t, e, n) {
      return this.nn(t, e, n.position);
    }
    /** Returns the byte representation for the provided encoders. */
  }, {
    key: "fn",
    value: function fn(t) {
      var e = [];
      for (var n = 0; n < t.length; ++n) {
        e[n] = t[n].Fe();
      }
      return e;
    }
    /**
     * Creates a separate encoder for each element of an array.
     *
     * The method appends each value to all existing encoders (e.g. filter("a",
     * "==", "a1").filter("b", "in", ["b1", "b2"]) becomes ["a1,b1", "a1,b2"]). A
     * list of new encoders is returned.
     */
  }, {
    key: "ln",
    value: function ln(t, e, n) {
      var s = _toConsumableArray(t),
        i = [];
      var _iterator50 = _createForOfIteratorHelper(n.arrayValue.values || []),
        _step50;
      try {
        for (_iterator50.s(); !(_step50 = _iterator50.n()).done;) {
          var _t61 = _step50.value;
          var _iterator51 = _createForOfIteratorHelper(s),
            _step51;
          try {
            for (_iterator51.s(); !(_step51 = _iterator51.n()).done;) {
              var _n21 = _step51.value;
              var _s17 = new pr();
              _s17.seed(_n21.Fe()), dr.Ie.ue(_t61, _s17.qe(e.kind)), i.push(_s17);
            }
          } catch (err) {
            _iterator51.e(err);
          } finally {
            _iterator51.f();
          }
        }
      } catch (err) {
        _iterator50.e(err);
      } finally {
        _iterator50.f();
      }
      return i;
    }
  }, {
    key: "hn",
    value: function hn(t, e) {
      return !!t.filters.find(function (t) {
        return t instanceof Re && t.field.isEqual(e) && ("in" /* Operator.IN */ === t.op || "not-in" /* Operator.NOT_IN */ === t.op);
      });
    }
  }, {
    key: "getFieldIndexes",
    value: function getFieldIndexes(t, e) {
      var _this55 = this;
      var n = Br(t),
        s = Lr(t);
      return (e ? n.W("collectionGroupIndex", IDBKeyRange.bound(e, e)) : n.W()).next(function (t) {
        var e = [];
        return At.forEach(t, function (t) {
          return s.get([t.indexId, _this55.uid]).next(function (n) {
            e.push(function (t, e) {
              var n = e ? new wt(e.sequenceNumber, new yt(tr(e.readTime), new ct(pi(e.documentKey)), e.largestBatchId)) : wt.empty(),
                s = t.fields.map(function (_ref3) {
                  var _ref4 = _slicedToArray(_ref3, 2),
                    t = _ref4[0],
                    e = _ref4[1];
                  return new dt(ut.fromServerFormat(t), e);
                });
              return new at(t.indexId, t.collectionGroup, s, n);
            }(t, n));
          });
        }).next(function () {
          return e;
        });
      });
    }
  }, {
    key: "getNextCollectionGroupToUpdate",
    value: function getNextCollectionGroupToUpdate(t) {
      return this.getFieldIndexes(t).next(function (t) {
        return 0 === t.length ? null : (t.sort(function (t, e) {
          var n = t.indexState.sequenceNumber - e.indexState.sequenceNumber;
          return 0 !== n ? n : Z(t.collectionGroup, e.collectionGroup);
        }), t[0].collectionGroup);
      });
    }
  }, {
    key: "updateCollectionGroup",
    value: function updateCollectionGroup(t, e, n) {
      var _this56 = this;
      var s = Br(t),
        i = Lr(t);
      return this.dn(t).next(function (t) {
        return s.W("collectionGroupIndex", IDBKeyRange.bound(e, e)).next(function (e) {
          return At.forEach(e, function (e) {
            return i.put(ur(e.indexId, _this56.user, t, n));
          });
        });
      });
    }
  }, {
    key: "updateIndexEntries",
    value: function updateIndexEntries(t, e) {
      var _this57 = this;
      // Porting Note: `getFieldIndexes()` on Web does not cache index lookups as
      // it could be used across different IndexedDB transactions. As any cached
      // data might be invalidated by other multi-tab clients, we can only trust
      // data within a single IndexedDB transaction. We therefore add a cache
      // here.
      var n = new Map();
      return At.forEach(e, function (e, s) {
        var i = n.get(e.collectionGroup);
        return (i ? At.resolve(i) : _this57.getFieldIndexes(t, e.collectionGroup)).next(function (i) {
          return n.set(e.collectionGroup, i), At.forEach(i, function (n) {
            return _this57._n(t, e, n).next(function (e) {
              var i = _this57.wn(s, n);
              return e.isEqual(i) ? At.resolve() : _this57.mn(t, s, n, e, i);
            });
          });
        });
      });
    }
  }, {
    key: "gn",
    value: function gn(t, e, n, s) {
      return $r(t).put({
        indexId: s.indexId,
        uid: this.uid,
        arrayValue: s.arrayValue,
        directionalValue: s.directionalValue,
        orderedDocumentKey: this.an(n, e.key),
        documentKey: e.key.path.toArray()
      });
    }
  }, {
    key: "yn",
    value: function yn(t, e, n, s) {
      return $r(t).delete([s.indexId, this.uid, s.arrayValue, s.directionalValue, this.an(n, e.key), e.key.path.toArray()]);
    }
  }, {
    key: "_n",
    value: function _n(t, e, n) {
      var s = $r(t);
      var i = new We(Tr);
      return s.Z({
        index: "documentKeyIndex",
        range: IDBKeyRange.only([n.indexId, this.uid, this.an(n, e)])
      }, function (t, s) {
        i = i.add(new Ir(n.indexId, e, s.arrayValue, s.directionalValue));
      }).next(function () {
        return i;
      });
    }
    /** Creates the index entries for the given document. */
  }, {
    key: "wn",
    value: function wn(t, e) {
      var n = new We(Tr);
      var s = this.cn(e, t);
      if (null == s) return n;
      var i = ht(e);
      if (null != i) {
        var r = t.data.field(i.fieldPath);
        if (he(r)) {
          var _iterator52 = _createForOfIteratorHelper(r.arrayValue.values || []),
            _step52;
          try {
            for (_iterator52.s(); !(_step52 = _iterator52.n()).done;) {
              var _i12 = _step52.value;
              n = n.add(new Ir(e.indexId, t.key, this.rn(_i12), s));
            }
          } catch (err) {
            _iterator52.e(err);
          } finally {
            _iterator52.f();
          }
        }
      } else n = n.add(new Ir(e.indexId, t.key, Or, s));
      return n;
    }
    /**
     * Updates the index entries for the provided document by deleting entries
     * that are no longer referenced in `newEntries` and adding all newly added
     * entries.
     */
  }, {
    key: "mn",
    value: function mn(t, e, n, s, i) {
      var _this58 = this;
      index_esm2017_C("IndexedDbIndexManager", "Updating index entries for document '%s'", e.key);
      var r = [];
      return function (t, e, n, s, i) {
        var r = t.getIterator(),
          o = e.getIterator();
        var u = He(r),
          c = He(o);
        // Walk through the two sets at the same time, using the ordering defined by
        // `comparator`.
        for (; u || c;) {
          var _t62 = !1,
            _e30 = !1;
          if (u && c) {
            var _s18 = n(u, c);
            _s18 < 0 ?
            // The element was removed if the next element in our ordered
            // walkthrough is only in `before`.
            _e30 = !0 : _s18 > 0 && (
            // The element was added if the next element in our ordered walkthrough
            // is only in `after`.
            _t62 = !0);
          } else null != u ? _e30 = !0 : _t62 = !0;
          _t62 ? (s(c), c = He(o)) : _e30 ? (i(u), u = He(r)) : (u = He(r), c = He(o));
        }
      }(s, i, Tr, /* onAdd= */function (s) {
        r.push(_this58.gn(t, e, n, s));
      }, /* onRemove= */function (s) {
        r.push(_this58.yn(t, e, n, s));
      }), At.waitFor(r);
    }
  }, {
    key: "dn",
    value: function dn(t) {
      var e = 1;
      return Lr(t).Z({
        index: "sequenceNumberIndex",
        reverse: !0,
        range: IDBKeyRange.upperBound([this.uid, Number.MAX_SAFE_INTEGER])
      }, function (t, n, s) {
        s.done(), e = n.sequenceNumber + 1;
      }).next(function () {
        return e;
      });
    }
    /**
     * Returns a new set of IDB ranges that splits the existing range and excludes
     * any values that match the `notInValue` from these ranges. As an example,
     * '[foo > 2 && foo != 3]` becomes  `[foo > 2 && < 3, foo > 3]`.
     */
  }, {
    key: "createRange",
    value: function createRange(t, e, n) {
      // The notIn values need to be sorted and unique so that we can return a
      // sorted set of non-overlapping ranges.
      n = n.sort(function (t, e) {
        return Tr(t, e);
      }).filter(function (t, e, n) {
        return !e || 0 !== Tr(t, n[e - 1]);
      });
      var s = [];
      s.push(t);
      var _iterator53 = _createForOfIteratorHelper(n),
        _step53;
      try {
        for (_iterator53.s(); !(_step53 = _iterator53.n()).done;) {
          var _i13 = _step53.value;
          var _n23 = Tr(_i13, t),
            r = Tr(_i13, e);
          if (0 === _n23)
            // `notInValue` is the lower bound. We therefore need to raise the bound
            // to the next value.
            s[0] = t.Ue();else if (_n23 > 0 && r < 0)
            // `notInValue` is in the middle of the range
            s.push(_i13), s.push(_i13.Ue());else if (r > 0)
            // `notInValue` (and all following values) are out of the range
            break;
        }
      } catch (err) {
        _iterator53.e(err);
      } finally {
        _iterator53.f();
      }
      s.push(e);
      var i = [];
      for (var _t63 = 0; _t63 < s.length; _t63 += 2) {
        // If we encounter two bounds that will create an unmatchable key range,
        // then we return an empty set of key ranges.
        if (this.pn(s[_t63], s[_t63 + 1])) return [];
        var _e31 = [s[_t63].indexId, this.uid, s[_t63].arrayValue, s[_t63].directionalValue, Or, []],
          _n22 = [s[_t63 + 1].indexId, this.uid, s[_t63 + 1].arrayValue, s[_t63 + 1].directionalValue, Or, []];
        i.push(IDBKeyRange.bound(_e31, _n22));
      }
      return i;
    }
  }, {
    key: "pn",
    value: function pn(t, e) {
      // If lower bound is greater than the upper bound, then the key
      // range can never be matched.
      return Tr(t, e) > 0;
    }
  }, {
    key: "getMinOffsetFromCollectionGroup",
    value: function getMinOffsetFromCollectionGroup(t, e) {
      return this.getFieldIndexes(t, e).next(qr);
    }
  }, {
    key: "getMinOffset",
    value: function getMinOffset(t, e) {
      var _this59 = this;
      return At.mapArray(this.Ze(e), function (e) {
        return _this59.tn(t, e).next(function (t) {
          return t || index_esm2017_O();
        });
      }).next(qr);
    }
  }]);
  return Mr;
}()));
/**
 * Helper to get a typed SimpleDbStore for the collectionParents
 * document store.
 */
function Fr(t) {
  return Gi(t, "collectionParents");
}

/**
 * Helper to get a typed SimpleDbStore for the index entry object store.
 */
function $r(t) {
  return Gi(t, "indexEntries");
}

/**
 * Helper to get a typed SimpleDbStore for the index configuration object store.
 */
function Br(t) {
  return Gi(t, "indexConfiguration");
}

/**
 * Helper to get a typed SimpleDbStore for the index state object store.
 */
function Lr(t) {
  return Gi(t, "indexState");
}
function qr(t) {
  index_esm2017_M(0 !== t.length);
  var e = t[0].indexState.offset,
    n = e.largestBatchId;
  for (var s = 1; s < t.length; s++) {
    var i = t[s].indexState.offset;
    pt(i, e) < 0 && (e = i), n < i.largestBatchId && (n = i.largestBatchId);
  }
  return new yt(e.readTime, e.documentKey, n);
}

/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
var Ur = {
  didRun: !1,
  sequenceNumbersCollected: 0,
  targetsRemoved: 0,
  documentsRemoved: 0
};
var Kr = /*#__PURE__*/function () {
  function Kr(
  // When we attempt to collect, we will only do so if the cache size is greater than this
  // threshold. Passing `COLLECTION_DISABLED` here will cause collection to always be skipped.
  t,
  // The percentage of sequence numbers that we will attempt to collect
  e,
  // A cap on the total number of sequence numbers that will be collected. This prevents
  // us from collecting a huge number of sequence numbers if the cache has grown very large.
  n) {
    classCallCheck_classCallCheck(this, Kr);
    this.cacheSizeCollectionThreshold = t, this.percentileToCollect = e, this.maximumSequenceNumbersToCollect = n;
  }
  createClass_createClass(Kr, null, [{
    key: "withCacheSize",
    value: function withCacheSize(t) {
      return new Kr(t, Kr.DEFAULT_COLLECTION_PERCENTILE, Kr.DEFAULT_MAX_SEQUENCE_NUMBERS_TO_COLLECT);
    }
  }]);
  return Kr;
}();
/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * Delete a mutation batch and the associated document mutations.
 * @returns A PersistencePromise of the document mutations that were removed.
 */
function Gr(t, e, n) {
  var s = t.store("mutations"),
    i = t.store("documentMutations"),
    r = [],
    o = IDBKeyRange.only(n.batchId);
  var u = 0;
  var c = s.Z({
    range: o
  }, function (t, e, n) {
    return u++, n.delete();
  });
  r.push(c.next(function () {
    index_esm2017_M(1 === u);
  }));
  var a = [];
  var _iterator54 = _createForOfIteratorHelper(n.mutations),
    _step54;
  try {
    for (_iterator54.s(); !(_step54 = _iterator54.n()).done;) {
      var _t64 = _step54.value;
      var _s19 = Ei(e, _t64.key.path, n.batchId);
      r.push(i.delete(_s19)), a.push(_t64.key);
    }
  } catch (err) {
    _iterator54.e(err);
  } finally {
    _iterator54.f();
  }
  return At.waitFor(r).next(function () {
    return a;
  });
}

/**
 * Returns an approximate size for the given document.
 */
function Qr(t) {
  if (!t) return 0;
  var e;
  if (t.document) e = t.document;else if (t.unknownDocument) e = t.unknownDocument;else {
    if (!t.noDocument) throw index_esm2017_O();
    e = t.noDocument;
  }
  return JSON.stringify(e).length;
}

/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/** A mutation queue for a specific user, backed by IndexedDB. */
Kr.DEFAULT_COLLECTION_PERCENTILE = 10, Kr.DEFAULT_MAX_SEQUENCE_NUMBERS_TO_COLLECT = 1e3, Kr.DEFAULT = new Kr(41943040, Kr.DEFAULT_COLLECTION_PERCENTILE, Kr.DEFAULT_MAX_SEQUENCE_NUMBERS_TO_COLLECT), Kr.DISABLED = new Kr(-1, 0, 0);
var jr = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  function jr(
  /**
   * The normalized userId (e.g. null UID => "" userId) used to store /
   * retrieve mutations.
   */
  t, e, n, s) {
    _classCallCheck(this, jr);
    this.userId = t, this.yt = e, this.indexManager = n, this.referenceDelegate = s,
    /**
     * Caches the document keys for pending mutation batches. If the mutation
     * has been removed from IndexedDb, the cached value may continue to
     * be used to retrieve the batch's document keys. To remove a cached value
     * locally, `removeCachedMutationKeys()` should be invoked either directly
     * or through `removeMutationBatches()`.
     *
     * With multi-tab, when the primary client acknowledges or rejects a mutation,
     * this cache is used by secondary clients to invalidate the local
     * view of the documents that were previously affected by the mutation.
     */
    // PORTING NOTE: Multi-tab only.
    this.In = {};
  }
  /**
   * Creates a new mutation queue for the given user.
   * @param user - The user for which to create a mutation queue.
   * @param serializer - The serializer to use when persisting to IndexedDb.
   */
  _createClass(jr, [{
    key: "checkEmpty",
    value: function checkEmpty(t) {
      var e = !0;
      var n = IDBKeyRange.bound([this.userId, Number.NEGATIVE_INFINITY], [this.userId, Number.POSITIVE_INFINITY]);
      return zr(t).Z({
        index: "userMutationsIndex",
        range: n
      }, function (t, n, s) {
        e = !1, s.done();
      }).next(function () {
        return e;
      });
    }
  }, {
    key: "addMutationBatch",
    value: function addMutationBatch(t, e, n, s) {
      var _this60 = this;
      var i = Hr(t),
        r = zr(t);
      // The IndexedDb implementation in Chrome (and Firefox) does not handle
      // compound indices that include auto-generated keys correctly. To ensure
      // that the index entry is added correctly in all browsers, we perform two
      // writes: The first write is used to retrieve the next auto-generated Batch
      // ID, and the second write populates the index and stores the actual
      // mutation batch.
      // See: https://bugs.chromium.org/p/chromium/issues/detail?id=701972
      // We write an empty object to obtain key
      // eslint-disable-next-line @typescript-eslint/no-explicit-any
      return r.add({}).next(function (o) {
        index_esm2017_M("number" == typeof o);
        var u = new Qi(o, e, n, s),
          c = function (t, e, n) {
            var s = n.baseMutations.map(function (e) {
                return ti(t.ie, e);
              }),
              i = n.mutations.map(function (e) {
                return ti(t.ie, e);
              });
            return {
              userId: e,
              batchId: n.batchId,
              localWriteTimeMs: n.localWriteTime.toMillis(),
              baseMutations: s,
              mutations: i
            };
          }(_this60.yt, _this60.userId, u),
          a = [];
        var h = new We(function (t, e) {
          return Z(t.canonicalString(), e.canonicalString());
        });
        var _iterator55 = _createForOfIteratorHelper(s),
          _step55;
        try {
          for (_iterator55.s(); !(_step55 = _iterator55.n()).done;) {
            var _t65 = _step55.value;
            var _e32 = Ei(_this60.userId, _t65.key.path, o);
            h = h.add(_t65.key.path.popLast()), a.push(r.put(c)), a.push(i.put(_e32, Ai));
          }
        } catch (err) {
          _iterator55.e(err);
        } finally {
          _iterator55.f();
        }
        return h.forEach(function (e) {
          a.push(_this60.indexManager.addToCollectionParentIndex(t, e));
        }), t.addOnCommittedListener(function () {
          _this60.In[o] = u.keys();
        }), At.waitFor(a).next(function () {
          return u;
        });
      });
    }
  }, {
    key: "lookupMutationBatch",
    value: function lookupMutationBatch(t, e) {
      var _this61 = this;
      return zr(t).get(e).next(function (t) {
        return t ? (index_esm2017_M(t.userId === _this61.userId), er(_this61.yt, t)) : null;
      });
    }
    /**
     * Returns the document keys for the mutation batch with the given batchId.
     * For primary clients, this method returns `null` after
     * `removeMutationBatches()` has been called. Secondary clients return a
     * cached result until `removeCachedMutationKeys()` is invoked.
     */
    // PORTING NOTE: Multi-tab only.
  }, {
    key: "Tn",
    value: function Tn(t, e) {
      var _this62 = this;
      return this.In[e] ? At.resolve(this.In[e]) : this.lookupMutationBatch(t, e).next(function (t) {
        if (t) {
          var n = t.keys();
          return _this62.In[e] = n, n;
        }
        return null;
      });
    }
  }, {
    key: "getNextMutationBatchAfterBatchId",
    value: function getNextMutationBatchAfterBatchId(t, e) {
      var _this63 = this;
      var n = e + 1,
        s = IDBKeyRange.lowerBound([this.userId, n]);
      var i = null;
      return zr(t).Z({
        index: "userMutationsIndex",
        range: s
      }, function (t, e, s) {
        e.userId === _this63.userId && (index_esm2017_M(e.batchId >= n), i = er(_this63.yt, e)), s.done();
      }).next(function () {
        return i;
      });
    }
  }, {
    key: "getHighestUnacknowledgedBatchId",
    value: function getHighestUnacknowledgedBatchId(t) {
      var e = IDBKeyRange.upperBound([this.userId, Number.POSITIVE_INFINITY]);
      var n = -1;
      return zr(t).Z({
        index: "userMutationsIndex",
        range: e,
        reverse: !0
      }, function (t, e, s) {
        n = e.batchId, s.done();
      }).next(function () {
        return n;
      });
    }
  }, {
    key: "getAllMutationBatches",
    value: function getAllMutationBatches(t) {
      var _this64 = this;
      var e = IDBKeyRange.bound([this.userId, -1], [this.userId, Number.POSITIVE_INFINITY]);
      return zr(t).W("userMutationsIndex", e).next(function (t) {
        return t.map(function (t) {
          return er(_this64.yt, t);
        });
      });
    }
  }, {
    key: "getAllMutationBatchesAffectingDocumentKey",
    value: function getAllMutationBatchesAffectingDocumentKey(t, e) {
      var _this65 = this;
      // Scan the document-mutation index starting with a prefix starting with
      // the given documentKey.
      var n = Ti(this.userId, e.path),
        s = IDBKeyRange.lowerBound(n),
        i = [];
      return Hr(t).Z({
        range: s
      }, function (n, s, r) {
        var _n24 = _slicedToArray(n, 3),
          o = _n24[0],
          u = _n24[1],
          c = _n24[2],
          a = pi(u);
        // Only consider rows matching exactly the specific key of
        // interest. Note that because we order by path first, and we
        // order terminators before path separators, we'll encounter all
        // the index rows for documentKey contiguously. In particular, all
        // the rows for documentKey will occur before any rows for
        // documents nested in a subcollection beneath documentKey so we
        // can stop as soon as we hit any such row.
        if (o === _this65.userId && e.path.isEqual(a))
          // Look up the mutation batch in the store.
          return zr(t).get(c).next(function (t) {
            if (!t) throw index_esm2017_O();
            index_esm2017_M(t.userId === _this65.userId), i.push(er(_this65.yt, t));
          });
        r.done();
      }).next(function () {
        return i;
      });
    }
  }, {
    key: "getAllMutationBatchesAffectingDocumentKeys",
    value: function getAllMutationBatchesAffectingDocumentKeys(t, e) {
      var _this66 = this;
      var n = new We(Z);
      var s = [];
      return e.forEach(function (e) {
        var i = Ti(_this66.userId, e.path),
          r = IDBKeyRange.lowerBound(i),
          o = Hr(t).Z({
            range: r
          }, function (t, s, i) {
            var _t66 = _slicedToArray(t, 3),
              r = _t66[0],
              o = _t66[1],
              u = _t66[2],
              c = pi(o);
            // Only consider rows matching exactly the specific key of
            // interest. Note that because we order by path first, and we
            // order terminators before path separators, we'll encounter all
            // the index rows for documentKey contiguously. In particular, all
            // the rows for documentKey will occur before any rows for
            // documents nested in a subcollection beneath documentKey so we
            // can stop as soon as we hit any such row.
            r === _this66.userId && e.path.isEqual(c) ? n = n.add(u) : i.done();
          });
        s.push(o);
      }), At.waitFor(s).next(function () {
        return _this66.En(t, n);
      });
    }
  }, {
    key: "getAllMutationBatchesAffectingQuery",
    value: function getAllMutationBatchesAffectingQuery(t, e) {
      var _this67 = this;
      var n = e.path,
        s = n.length + 1,
        i = Ti(this.userId, n),
        r = IDBKeyRange.lowerBound(i);
      // Collect up unique batchIDs encountered during a scan of the index. Use a
      // SortedSet to accumulate batch IDs so they can be traversed in order in a
      // scan of the main table.
      var o = new We(Z);
      return Hr(t).Z({
        range: r
      }, function (t, e, i) {
        var _t67 = _slicedToArray(t, 3),
          r = _t67[0],
          u = _t67[1],
          c = _t67[2],
          a = pi(u);
        r === _this67.userId && n.isPrefixOf(a) ?
        // Rows with document keys more than one segment longer than the
        // query path can't be matches. For example, a query on 'rooms'
        // can't match the document /rooms/abc/messages/xyx.
        // TODO(mcg): we'll need a different scanner when we implement
        // ancestor queries.
        a.length === s && (o = o.add(c)) : i.done();
      }).next(function () {
        return _this67.En(t, o);
      });
    }
  }, {
    key: "En",
    value: function En(t, e) {
      var _this68 = this;
      var n = [],
        s = [];
      // TODO(rockwood): Implement this using iterate.
      return e.forEach(function (e) {
        s.push(zr(t).get(e).next(function (t) {
          if (null === t) throw index_esm2017_O();
          index_esm2017_M(t.userId === _this68.userId), n.push(er(_this68.yt, t));
        }));
      }), At.waitFor(s).next(function () {
        return n;
      });
    }
  }, {
    key: "removeMutationBatch",
    value: function removeMutationBatch(t, e) {
      var _this69 = this;
      return Gr(t.se, this.userId, e).next(function (n) {
        return t.addOnCommittedListener(function () {
          _this69.An(e.batchId);
        }), At.forEach(n, function (e) {
          return _this69.referenceDelegate.markPotentiallyOrphaned(t, e);
        });
      });
    }
    /**
     * Clears the cached keys for a mutation batch. This method should be
     * called by secondary clients after they process mutation updates.
     *
     * Note that this method does not have to be called from primary clients as
     * the corresponding cache entries are cleared when an acknowledged or
     * rejected batch is removed from the mutation queue.
     */
    // PORTING NOTE: Multi-tab only
  }, {
    key: "An",
    value: function An(t) {
      delete this.In[t];
    }
  }, {
    key: "performConsistencyCheck",
    value: function performConsistencyCheck(t) {
      var _this70 = this;
      return this.checkEmpty(t).next(function (e) {
        if (!e) return At.resolve();
        // Verify that there are no entries in the documentMutations index if
        // the queue is empty.
        var n = IDBKeyRange.lowerBound([_this70.userId]);
        var s = [];
        return Hr(t).Z({
          range: n
        }, function (t, e, n) {
          if (t[0] === _this70.userId) {
            var _e33 = pi(t[1]);
            s.push(_e33);
          } else n.done();
        }).next(function () {
          index_esm2017_M(0 === s.length);
        });
      });
    }
  }, {
    key: "containsKey",
    value: function containsKey(t, e) {
      return Wr(t, this.userId, e);
    }
    // PORTING NOTE: Multi-tab only (state is held in memory in other clients).
    /** Returns the mutation queue's metadata from IndexedDb. */
  }, {
    key: "Rn",
    value: function Rn(t) {
      var _this71 = this;
      return Jr(t).get(this.userId).next(function (t) {
        return t || {
          userId: _this71.userId,
          lastAcknowledgedBatchId: -1,
          lastStreamToken: ""
        };
      });
    }
  }], [{
    key: "re",
    value: function re(t, e, n, s) {
      // TODO(mcg): Figure out what constraints there are on userIDs
      // In particular, are there any reserved characters? are empty ids allowed?
      // For the moment store these together in the same mutations table assuming
      // that empty userIDs aren't allowed.
      index_esm2017_M("" !== t.uid);
      var i = t.isAuthenticated() ? t.uid : "";
      return new jr(i, e, n, s);
    }
  }]);
  return jr;
}()));
/**
 * @returns true if the mutation queue for the given user contains a pending
 *         mutation for the given key.
 */
function Wr(t, e, n) {
  var s = Ti(e, n.path),
    i = s[1],
    r = IDBKeyRange.lowerBound(s);
  var o = !1;
  return Hr(t).Z({
    range: r,
    X: !0
  }, function (t, n, s) {
    var _t68 = _slicedToArray(t, 3),
      r = _t68[0],
      u = _t68[1],
      /*batchID*/c = _t68[2];
    r === e && u === i && (o = !0), s.done();
  }).next(function () {
    return o;
  });
}

/** Returns true if any mutation queue contains the given document. */
/**
 * Helper to get a typed SimpleDbStore for the mutations object store.
 */
function zr(t) {
  return Gi(t, "mutations");
}

/**
 * Helper to get a typed SimpleDbStore for the mutationQueues object store.
 */
function Hr(t) {
  return Gi(t, "documentMutations");
}

/**
 * Helper to get a typed SimpleDbStore for the mutationQueues object store.
 */
function Jr(t) {
  return Gi(t, "mutationQueues");
}

/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/** Offset to ensure non-overlapping target ids. */
/**
 * Generates monotonically increasing target IDs for sending targets to the
 * watch stream.
 *
 * The client constructs two generators, one for the target cache, and one for
 * for the sync engine (to generate limbo documents targets). These
 * generators produce non-overlapping IDs (by using even and odd IDs
 * respectively).
 *
 * By separating the target ID space, the query cache can generate target IDs
 * that persist across client restarts, while sync engine can independently
 * generate in-memory target IDs that are transient and can be reused after a
 * restart.
 */
var Yr = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  function Yr(t) {
    _classCallCheck(this, Yr);
    this.bn = t;
  }
  _createClass(Yr, [{
    key: "next",
    value: function next() {
      return this.bn += 2, this.bn;
    }
  }], [{
    key: "Pn",
    value: function Pn() {
      // The target cache generator must return '2' in its first call to `next()`
      // as there is no differentiation in the protocol layer between an unset
      // number and the number '0'. If we were to sent a target with target ID
      // '0', the backend would consider it unset and replace it with its own ID.
      return new Yr(0);
    }
  }, {
    key: "vn",
    value: function vn() {
      // Sync engine assigns target IDs for limbo document detection.
      return new Yr(-1);
    }
  }]);
  return Yr;
}()));
/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
var Xr = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  function Xr(t, e) {
    _classCallCheck(this, Xr);
    this.referenceDelegate = t, this.yt = e;
  }
  // PORTING NOTE: We don't cache global metadata for the target cache, since
  // some of it (in particular `highestTargetId`) can be modified by secondary
  // tabs. We could perhaps be more granular (and e.g. still cache
  // `lastRemoteSnapshotVersion` in memory) but for simplicity we currently go
  // to IndexedDb whenever we need to read metadata. We can revisit if it turns
  // out to have a meaningful performance impact.
  _createClass(Xr, [{
    key: "allocateTargetId",
    value: function allocateTargetId(t) {
      var _this72 = this;
      return this.Vn(t).next(function (e) {
        var n = new Yr(e.highestTargetId);
        return e.highestTargetId = n.next(), _this72.Sn(t, e).next(function () {
          return e.highestTargetId;
        });
      });
    }
  }, {
    key: "getLastRemoteSnapshotVersion",
    value: function getLastRemoteSnapshotVersion(t) {
      return this.Vn(t).next(function (t) {
        return st.fromTimestamp(new nt(t.lastRemoteSnapshotVersion.seconds, t.lastRemoteSnapshotVersion.nanoseconds));
      });
    }
  }, {
    key: "getHighestSequenceNumber",
    value: function getHighestSequenceNumber(t) {
      return this.Vn(t).next(function (t) {
        return t.highestListenSequenceNumber;
      });
    }
  }, {
    key: "setTargetsMetadata",
    value: function setTargetsMetadata(t, e, n) {
      var _this73 = this;
      return this.Vn(t).next(function (s) {
        return s.highestListenSequenceNumber = e, n && (s.lastRemoteSnapshotVersion = n.toTimestamp()), e > s.highestListenSequenceNumber && (s.highestListenSequenceNumber = e), _this73.Sn(t, s);
      });
    }
  }, {
    key: "addTargetData",
    value: function addTargetData(t, e) {
      var _this74 = this;
      return this.Dn(t, e).next(function () {
        return _this74.Vn(t).next(function (n) {
          return n.targetCount += 1, _this74.Cn(e, n), _this74.Sn(t, n);
        });
      });
    }
  }, {
    key: "updateTargetData",
    value: function updateTargetData(t, e) {
      return this.Dn(t, e);
    }
  }, {
    key: "removeTargetData",
    value: function removeTargetData(t, e) {
      var _this75 = this;
      return this.removeMatchingKeysForTargetId(t, e.targetId).next(function () {
        return Zr(t).delete(e.targetId);
      }).next(function () {
        return _this75.Vn(t);
      }).next(function (e) {
        return index_esm2017_M(e.targetCount > 0), e.targetCount -= 1, _this75.Sn(t, e);
      });
    }
    /**
     * Drops any targets with sequence number less than or equal to the upper bound, excepting those
     * present in `activeTargetIds`. Document associations for the removed targets are also removed.
     * Returns the number of targets removed.
     */
  }, {
    key: "removeTargets",
    value: function removeTargets(t, e, n) {
      var _this76 = this;
      var s = 0;
      var i = [];
      return Zr(t).Z(function (r, o) {
        var u = nr(o);
        u.sequenceNumber <= e && null === n.get(u.targetId) && (s++, i.push(_this76.removeTargetData(t, u)));
      }).next(function () {
        return At.waitFor(i);
      }).next(function () {
        return s;
      });
    }
    /**
     * Call provided function with each `TargetData` that we have cached.
     */
  }, {
    key: "forEachTarget",
    value: function forEachTarget(t, e) {
      return Zr(t).Z(function (t, n) {
        var s = nr(n);
        e(s);
      });
    }
  }, {
    key: "Vn",
    value: function Vn(t) {
      return to(t).get("targetGlobalKey").next(function (t) {
        return index_esm2017_M(null !== t), t;
      });
    }
  }, {
    key: "Sn",
    value: function Sn(t, e) {
      return to(t).put("targetGlobalKey", e);
    }
  }, {
    key: "Dn",
    value: function Dn(t, e) {
      return Zr(t).put(sr(this.yt, e));
    }
    /**
     * In-place updates the provided metadata to account for values in the given
     * TargetData. Saving is done separately. Returns true if there were any
     * changes to the metadata.
     */
  }, {
    key: "Cn",
    value: function Cn(t, e) {
      var n = !1;
      return t.targetId > e.highestTargetId && (e.highestTargetId = t.targetId, n = !0), t.sequenceNumber > e.highestListenSequenceNumber && (e.highestListenSequenceNumber = t.sequenceNumber, n = !0), n;
    }
  }, {
    key: "getTargetCount",
    value: function getTargetCount(t) {
      return this.Vn(t).next(function (t) {
        return t.targetCount;
      });
    }
  }, {
    key: "getTargetData",
    value: function getTargetData(t, e) {
      // Iterating by the canonicalId may yield more than one result because
      // canonicalId values are not required to be unique per target. This query
      // depends on the queryTargets index to be efficient.
      var n = nn(e),
        s = IDBKeyRange.bound([n, Number.NEGATIVE_INFINITY], [n, Number.POSITIVE_INFINITY]);
      var i = null;
      return Zr(t).Z({
        range: s,
        index: "queryTargetsIndex"
      }, function (t, n, s) {
        var r = nr(n);
        // After finding a potential match, check that the target is
        // actually equal to the requested target.
        sn(e, r.target) && (i = r, s.done());
      }).next(function () {
        return i;
      });
    }
  }, {
    key: "addMatchingKeys",
    value: function addMatchingKeys(t, e, n) {
      var _this77 = this;
      // PORTING NOTE: The reverse index (documentsTargets) is maintained by
      // IndexedDb.
      var s = [],
        i = eo(t);
      return e.forEach(function (e) {
        var r = mi(e.path);
        s.push(i.put({
          targetId: n,
          path: r
        })), s.push(_this77.referenceDelegate.addReference(t, n, e));
      }), At.waitFor(s);
    }
  }, {
    key: "removeMatchingKeys",
    value: function removeMatchingKeys(t, e, n) {
      var _this78 = this;
      // PORTING NOTE: The reverse index (documentsTargets) is maintained by
      // IndexedDb.
      var s = eo(t);
      return At.forEach(e, function (e) {
        var i = mi(e.path);
        return At.waitFor([s.delete([n, i]), _this78.referenceDelegate.removeReference(t, n, e)]);
      });
    }
  }, {
    key: "removeMatchingKeysForTargetId",
    value: function removeMatchingKeysForTargetId(t, e) {
      var n = eo(t),
        s = IDBKeyRange.bound([e], [e + 1], /*lowerOpen=*/!1, /*upperOpen=*/!0);
      return n.delete(s);
    }
  }, {
    key: "getMatchingKeysForTargetId",
    value: function getMatchingKeysForTargetId(t, e) {
      var n = IDBKeyRange.bound([e], [e + 1], /*lowerOpen=*/!1, /*upperOpen=*/!0),
        s = eo(t);
      var i = Es();
      return s.Z({
        range: n,
        X: !0
      }, function (t, e, n) {
        var s = pi(t[1]),
          r = new ct(s);
        i = i.add(r);
      }).next(function () {
        return i;
      });
    }
  }, {
    key: "containsKey",
    value: function containsKey(t, e) {
      var n = mi(e.path),
        s = IDBKeyRange.bound([n], [et(n)], /*lowerOpen=*/!1, /*upperOpen=*/!0);
      var i = 0;
      return eo(t).Z({
        index: "documentTargetsIndex",
        X: !0,
        range: s
      }, function (_ref5, n, s) {
        var _ref6 = _slicedToArray(_ref5, 2),
          t = _ref6[0],
          e = _ref6[1];
        // Having a sentinel row for a document does not count as containing that document;
        // For the target cache, containing the document means the document is part of some
        // target.
        0 !== t && (i++, s.done());
      }).next(function () {
        return i > 0;
      });
    }
    /**
     * Looks up a TargetData entry by target ID.
     *
     * @param targetId - The target ID of the TargetData entry to look up.
     * @returns The cached TargetData entry, or null if the cache has no entry for
     * the target.
     */
    // PORTING NOTE: Multi-tab only.
  }, {
    key: "ne",
    value: function ne(t, e) {
      return Zr(t).get(e).next(function (t) {
        return t ? nr(t) : null;
      });
    }
  }]);
  return Xr;
}()));
/**
 * Helper to get a typed SimpleDbStore for the queries object store.
 */
function Zr(t) {
  return Gi(t, "targets");
}

/**
 * Helper to get a typed SimpleDbStore for the target globals object store.
 */
function to(t) {
  return Gi(t, "targetGlobal");
}

/**
 * Helper to get a typed SimpleDbStore for the document target object store.
 */
function eo(t) {
  return Gi(t, "targetDocuments");
}

/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
function no(_ref7, _ref8) {
  var _ref9 = _slicedToArray(_ref7, 2),
    t = _ref9[0],
    e = _ref9[1];
  var _ref10 = _slicedToArray(_ref8, 2),
    n = _ref10[0],
    s = _ref10[1];
  var i = Z(t, n);
  return 0 === i ? Z(e, s) : i;
}

/**
 * Used to calculate the nth sequence number. Keeps a rolling buffer of the
 * lowest n values passed to `addElement`, and finally reports the largest of
 * them in `maxValue`.
 */
var so = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  function so(t) {
    _classCallCheck(this, so);
    this.xn = t, this.buffer = new We(no), this.Nn = 0;
  }
  _createClass(so, [{
    key: "kn",
    value: function kn() {
      return ++this.Nn;
    }
  }, {
    key: "On",
    value: function On(t) {
      var e = [t, this.kn()];
      if (this.buffer.size < this.xn) this.buffer = this.buffer.add(e);else {
        var _t69 = this.buffer.last();
        no(e, _t69) < 0 && (this.buffer = this.buffer.delete(_t69).add(e));
      }
    }
  }, {
    key: "maxValue",
    get: function get() {
      // Guaranteed to be non-empty. If we decide we are not collecting any
      // sequence numbers, nthSequenceNumber below short-circuits. If we have
      // decided that we are collecting n sequence numbers, it's because n is some
      // percentage of the existing sequence numbers. That means we should never
      // be in a situation where we are collecting sequence numbers but don't
      // actually have any.
      return this.buffer.last()[0];
    }
  }]);
  return so;
}()));
/**
 * This class is responsible for the scheduling of LRU garbage collection. It handles checking
 * whether or not GC is enabled, as well as which delay to use before the next run.
 */
var io = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  function io(t, e, n) {
    _classCallCheck(this, io);
    this.garbageCollector = t, this.asyncQueue = e, this.localStore = n, this.Mn = null;
  }
  _createClass(io, [{
    key: "start",
    value: function start() {
      -1 !== this.garbageCollector.params.cacheSizeCollectionThreshold && this.Fn(6e4);
    }
  }, {
    key: "stop",
    value: function stop() {
      this.Mn && (this.Mn.cancel(), this.Mn = null);
    }
  }, {
    key: "started",
    get: function get() {
      return null !== this.Mn;
    }
  }, {
    key: "Fn",
    value: function Fn(t) {
      var _this79 = this;
      index_esm2017_C("LruGarbageCollector", "Garbage collection scheduled in ".concat(t, "ms")), this.Mn = this.asyncQueue.enqueueAfterDelay("lru_garbage_collection" /* TimerId.LruGarbageCollection */, t, /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee7() {
        return _regeneratorRuntime().wrap(function _callee7$(_context7) {
          while (1) {
            switch (_context7.prev = _context7.next) {
              case 0:
                _this79.Mn = null;
                _context7.prev = 1;
                _context7.next = 4;
                return _this79.localStore.collectGarbage(_this79.garbageCollector);
              case 4:
                _context7.next = 14;
                break;
              case 6:
                _context7.prev = 6;
                _context7.t0 = _context7["catch"](1);
                if (!Vt(_context7.t0)) {
                  _context7.next = 12;
                  break;
                }
                index_esm2017_C("LruGarbageCollector", "Ignoring IndexedDB error during garbage collection: ", _context7.t0);
                _context7.next = 14;
                break;
              case 12:
                _context7.next = 14;
                return Et(_context7.t0);
              case 14:
                _context7.next = 16;
                return _this79.Fn(3e5);
              case 16:
              case "end":
                return _context7.stop();
            }
          }
        }, _callee7, null, [[1, 6]]);
      })));
    }
  }]);
  return io;
}()));
/** Implements the steps for LRU garbage collection. */
var ro = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  function ro(t, e) {
    _classCallCheck(this, ro);
    this.$n = t, this.params = e;
  }
  _createClass(ro, [{
    key: "calculateTargetCount",
    value: function calculateTargetCount(t, e) {
      return this.$n.Bn(t).next(function (t) {
        return Math.floor(e / 100 * t);
      });
    }
  }, {
    key: "nthSequenceNumber",
    value: function nthSequenceNumber(t, e) {
      var _this80 = this;
      if (0 === e) return At.resolve(Ot.at);
      var n = new so(e);
      return this.$n.forEachTarget(t, function (t) {
        return n.On(t.sequenceNumber);
      }).next(function () {
        return _this80.$n.Ln(t, function (t) {
          return n.On(t);
        });
      }).next(function () {
        return n.maxValue;
      });
    }
  }, {
    key: "removeTargets",
    value: function removeTargets(t, e, n) {
      return this.$n.removeTargets(t, e, n);
    }
  }, {
    key: "removeOrphanedDocuments",
    value: function removeOrphanedDocuments(t, e) {
      return this.$n.removeOrphanedDocuments(t, e);
    }
  }, {
    key: "collect",
    value: function collect(t, e) {
      var _this81 = this;
      return -1 === this.params.cacheSizeCollectionThreshold ? (index_esm2017_C("LruGarbageCollector", "Garbage collection skipped; disabled"), At.resolve(Ur)) : this.getCacheSize(t).next(function (n) {
        return n < _this81.params.cacheSizeCollectionThreshold ? (index_esm2017_C("LruGarbageCollector", "Garbage collection skipped; Cache size ".concat(n, " is lower than threshold ").concat(_this81.params.cacheSizeCollectionThreshold)), Ur) : _this81.qn(t, e);
      });
    }
  }, {
    key: "getCacheSize",
    value: function getCacheSize(t) {
      return this.$n.getCacheSize(t);
    }
  }, {
    key: "qn",
    value: function qn(t, e) {
      var _this82 = this;
      var n, s, i, r, o, c, a;
      var h = Date.now();
      return this.calculateTargetCount(t, this.params.percentileToCollect).next(function (e) {
        return (
          // Cap at the configured max
          e > _this82.params.maximumSequenceNumbersToCollect ? (index_esm2017_C("LruGarbageCollector", "Capping sequence numbers to collect down to the maximum of ".concat(_this82.params.maximumSequenceNumbersToCollect, " from ").concat(e)), s = _this82.params.maximumSequenceNumbersToCollect) : s = e, r = Date.now(), _this82.nthSequenceNumber(t, s)
        );
      }).next(function (s) {
        return n = s, o = Date.now(), _this82.removeTargets(t, n, e);
      }).next(function (e) {
        return i = e, c = Date.now(), _this82.removeOrphanedDocuments(t, n);
      }).next(function (t) {
        if (a = Date.now(), index_esm2017_S() <= LogLevel.DEBUG) {
          index_esm2017_C("LruGarbageCollector", "LRU Garbage Collection\n\tCounted targets in ".concat(r - h, "ms\n\tDetermined least recently used ").concat(s, " in ") + (o - r) + "ms\n" + "\tRemoved ".concat(i, " targets in ") + (c - o) + "ms\n" + "\tRemoved ".concat(t, " documents in ") + (a - c) + "ms\n" + "Total Duration: ".concat(a - h, "ms"));
        }
        return At.resolve({
          didRun: !0,
          sequenceNumbersCollected: s,
          targetsRemoved: i,
          documentsRemoved: t
        });
      });
    }
  }]);
  return ro;
}()));
/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/** Provides LRU functionality for IndexedDB persistence. */
var oo = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  function oo(t, e) {
    _classCallCheck(this, oo);
    this.db = t, this.garbageCollector = function (t, e) {
      return new ro(t, e);
    }(this, e);
  }
  _createClass(oo, [{
    key: "Bn",
    value: function Bn(t) {
      var e = this.Un(t);
      return this.db.getTargetCache().getTargetCount(t).next(function (t) {
        return e.next(function (e) {
          return t + e;
        });
      });
    }
  }, {
    key: "Un",
    value: function Un(t) {
      var e = 0;
      return this.Ln(t, function (t) {
        e++;
      }).next(function () {
        return e;
      });
    }
  }, {
    key: "forEachTarget",
    value: function forEachTarget(t, e) {
      return this.db.getTargetCache().forEachTarget(t, e);
    }
  }, {
    key: "Ln",
    value: function Ln(t, e) {
      return this.Kn(t, function (t, n) {
        return e(n);
      });
    }
  }, {
    key: "addReference",
    value: function addReference(t, e, n) {
      return uo(t, n);
    }
  }, {
    key: "removeReference",
    value: function removeReference(t, e, n) {
      return uo(t, n);
    }
  }, {
    key: "removeTargets",
    value: function removeTargets(t, e, n) {
      return this.db.getTargetCache().removeTargets(t, e, n);
    }
  }, {
    key: "markPotentiallyOrphaned",
    value: function markPotentiallyOrphaned(t, e) {
      return uo(t, e);
    }
    /**
     * Returns true if anything would prevent this document from being garbage
     * collected, given that the document in question is not present in any
     * targets and has a sequence number less than or equal to the upper bound for
     * the collection run.
     */
  }, {
    key: "Gn",
    value: function Gn(t, e) {
      return function (t, e) {
        var n = !1;
        return Jr(t).tt(function (s) {
          return Wr(t, s, e).next(function (t) {
            return t && (n = !0), At.resolve(!t);
          });
        }).next(function () {
          return n;
        });
      }(t, e);
    }
  }, {
    key: "removeOrphanedDocuments",
    value: function removeOrphanedDocuments(t, e) {
      var _this83 = this;
      var n = this.db.getRemoteDocumentCache().newChangeBuffer(),
        s = [];
      var i = 0;
      return this.Kn(t, function (r, o) {
        if (o <= e) {
          var _e34 = _this83.Gn(t, r).next(function (e) {
            if (!e)
              // Our size accounting requires us to read all documents before
              // removing them.
              return i++, n.getEntry(t, r).next(function () {
                return n.removeEntry(r, st.min()), eo(t).delete([0, mi(r.path)]);
              });
          });
          s.push(_e34);
        }
      }).next(function () {
        return At.waitFor(s);
      }).next(function () {
        return n.apply(t);
      }).next(function () {
        return i;
      });
    }
  }, {
    key: "removeTarget",
    value: function removeTarget(t, e) {
      var n = e.withSequenceNumber(t.currentSequenceNumber);
      return this.db.getTargetCache().updateTargetData(t, n);
    }
  }, {
    key: "updateLimboDocument",
    value: function updateLimboDocument(t, e) {
      return uo(t, e);
    }
    /**
     * Call provided function for each document in the cache that is 'orphaned'. Orphaned
     * means not a part of any target, so the only entry in the target-document index for
     * that document will be the sentinel row (targetId 0), which will also have the sequence
     * number for the last time the document was accessed.
     */
  }, {
    key: "Kn",
    value: function Kn(t, e) {
      var n = eo(t);
      var s,
        i = Ot.at;
      return n.Z({
        index: "documentTargetsIndex"
      }, function (_ref12, _ref13) {
        var _ref14 = _slicedToArray(_ref12, 2),
          t = _ref14[0],
          n = _ref14[1];
        var r = _ref13.path,
          o = _ref13.sequenceNumber;
        0 === t ? (
        // if nextToReport is valid, report it, this is a new key so the
        // last one must not be a member of any targets.
        i !== Ot.at && e(new ct(pi(s)), i),
        // set nextToReport to be this sequence number. It's the next one we
        // might report, if we don't find any targets for this document.
        // Note that the sequence number must be defined when the targetId
        // is 0.
        i = o, s = r) :
        // set nextToReport to be invalid, we know we don't need to report
        // this one since we found a target for it.
        i = Ot.at;
      }).next(function () {
        // Since we report sequence numbers after getting to the next key, we
        // need to check if the last key we iterated over was an orphaned
        // document and report it.
        i !== Ot.at && e(new ct(pi(s)), i);
      });
    }
  }, {
    key: "getCacheSize",
    value: function getCacheSize(t) {
      return this.db.getRemoteDocumentCache().getSize(t);
    }
  }]);
  return oo;
}()));
function uo(t, e) {
  return eo(t).put(
  /**
  * @returns A value suitable for writing a sentinel row in the target-document
  * store.
  */
  function (t, e) {
    return {
      targetId: 0,
      path: mi(t.path),
      sequenceNumber: e
    };
  }(e, t.currentSequenceNumber));
}

/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * An in-memory buffer of entries to be written to a RemoteDocumentCache.
 * It can be used to batch up a set of changes to be written to the cache, but
 * additionally supports reading entries back with the `getEntry()` method,
 * falling back to the underlying RemoteDocumentCache if no entry is
 * buffered.
 *
 * Entries added to the cache *must* be read first. This is to facilitate
 * calculating the size delta of the pending changes.
 *
 * PORTING NOTE: This class was implemented then removed from other platforms.
 * If byte-counting ends up being needed on the other platforms, consider
 * porting this class as part of that implementation work.
 */
var co = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  function co() {
    _classCallCheck(this, co);
    // A mapping of document key to the new cache entry that should be written.
    this.changes = new ls(function (t) {
      return t.toString();
    }, function (t, e) {
      return t.isEqual(e);
    }), this.changesApplied = !1;
  }
  /**
   * Buffers a `RemoteDocumentCache.addEntry()` call.
   *
   * You can only modify documents that have already been retrieved via
   * `getEntry()/getEntries()` (enforced via IndexedDbs `apply()`).
   */
  _createClass(co, [{
    key: "addEntry",
    value: function addEntry(t) {
      this.assertNotApplied(), this.changes.set(t.key, t);
    }
    /**
     * Buffers a `RemoteDocumentCache.removeEntry()` call.
     *
     * You can only remove documents that have already been retrieved via
     * `getEntry()/getEntries()` (enforced via IndexedDbs `apply()`).
     */
  }, {
    key: "removeEntry",
    value: function removeEntry(t, e) {
      this.assertNotApplied(), this.changes.set(t, Ze.newInvalidDocument(t).setReadTime(e));
    }
    /**
     * Looks up an entry in the cache. The buffered changes will first be checked,
     * and if no buffered change applies, this will forward to
     * `RemoteDocumentCache.getEntry()`.
     *
     * @param transaction - The transaction in which to perform any persistence
     *     operations.
     * @param documentKey - The key of the entry to look up.
     * @returns The cached document or an invalid document if we have nothing
     * cached.
     */
  }, {
    key: "getEntry",
    value: function getEntry(t, e) {
      this.assertNotApplied();
      var n = this.changes.get(e);
      return void 0 !== n ? At.resolve(n) : this.getFromCache(t, e);
    }
    /**
     * Looks up several entries in the cache, forwarding to
     * `RemoteDocumentCache.getEntry()`.
     *
     * @param transaction - The transaction in which to perform any persistence
     *     operations.
     * @param documentKeys - The keys of the entries to look up.
     * @returns A map of cached documents, indexed by key. If an entry cannot be
     *     found, the corresponding key will be mapped to an invalid document.
     */
  }, {
    key: "getEntries",
    value: function getEntries(t, e) {
      return this.getAllFromCache(t, e);
    }
    /**
     * Applies buffered changes to the underlying RemoteDocumentCache, using
     * the provided transaction.
     */
  }, {
    key: "apply",
    value: function apply(t) {
      return this.assertNotApplied(), this.changesApplied = !0, this.applyChanges(t);
    }
    /** Helper to assert this.changes is not null  */
  }, {
    key: "assertNotApplied",
    value: function assertNotApplied() {}
  }]);
  return co;
}()));
/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * The RemoteDocumentCache for IndexedDb. To construct, invoke
 * `newIndexedDbRemoteDocumentCache()`.
 */
var ao = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  function ao(t) {
    _classCallCheck(this, ao);
    this.yt = t;
  }
  _createClass(ao, [{
    key: "setIndexManager",
    value: function setIndexManager(t) {
      this.indexManager = t;
    }
    /**
     * Adds the supplied entries to the cache.
     *
     * All calls of `addEntry` are required to go through the RemoteDocumentChangeBuffer
     * returned by `newChangeBuffer()` to ensure proper accounting of metadata.
     */
  }, {
    key: "addEntry",
    value: function addEntry(t, e, n) {
      return _o(t).put(n);
    }
    /**
     * Removes a document from the cache.
     *
     * All calls of `removeEntry`  are required to go through the RemoteDocumentChangeBuffer
     * returned by `newChangeBuffer()` to ensure proper accounting of metadata.
     */
  }, {
    key: "removeEntry",
    value: function removeEntry(t, e, n) {
      return _o(t).delete(
      /**
      * Returns a key that can be used for document lookups via the primary key of
      * the DbRemoteDocument object store.
      */
      function (t, e) {
        var n = t.path.toArray();
        return [/* prefix path */n.slice(0, n.length - 2), /* collection id */n[n.length - 2], Xi(e), /* document id */n[n.length - 1]];
      }
      /**
      * Returns a key that can be used for document lookups on the
      * `DbRemoteDocumentDocumentCollectionGroupIndex` index.
      */(e, n));
    }
    /**
     * Updates the current cache size.
     *
     * Callers to `addEntry()` and `removeEntry()` *must* call this afterwards to update the
     * cache's metadata.
     */
  }, {
    key: "updateMetadata",
    value: function updateMetadata(t, e) {
      var _this84 = this;
      return this.getMetadata(t).next(function (n) {
        return n.byteSize += e, _this84.Qn(t, n);
      });
    }
  }, {
    key: "getEntry",
    value: function getEntry(t, e) {
      var _this85 = this;
      var n = Ze.newInvalidDocument(e);
      return _o(t).Z({
        index: "documentKeyIndex",
        range: IDBKeyRange.only(wo(e))
      }, function (t, s) {
        n = _this85.jn(e, s);
      }).next(function () {
        return n;
      });
    }
    /**
     * Looks up an entry in the cache.
     *
     * @param documentKey - The key of the entry to look up.
     * @returns The cached document entry and its size.
     */
  }, {
    key: "Wn",
    value: function Wn(t, e) {
      var _this86 = this;
      var n = {
        size: 0,
        document: Ze.newInvalidDocument(e)
      };
      return _o(t).Z({
        index: "documentKeyIndex",
        range: IDBKeyRange.only(wo(e))
      }, function (t, s) {
        n = {
          document: _this86.jn(e, s),
          size: Qr(s)
        };
      }).next(function () {
        return n;
      });
    }
  }, {
    key: "getEntries",
    value: function getEntries(t, e) {
      var _this87 = this;
      var n = ds();
      return this.zn(t, e, function (t, e) {
        var s = _this87.jn(t, e);
        n = n.insert(t, s);
      }).next(function () {
        return n;
      });
    }
    /**
     * Looks up several entries in the cache.
     *
     * @param documentKeys - The set of keys entries to look up.
     * @returns A map of documents indexed by key and a map of sizes indexed by
     *     key (zero if the document does not exist).
     */
  }, {
    key: "Hn",
    value: function Hn(t, e) {
      var _this88 = this;
      var n = ds(),
        s = new Ge(ct.comparator);
      return this.zn(t, e, function (t, e) {
        var i = _this88.jn(t, e);
        n = n.insert(t, i), s = s.insert(t, Qr(e));
      }).next(function () {
        return {
          documents: n,
          Jn: s
        };
      });
    }
  }, {
    key: "zn",
    value: function zn(t, e, n) {
      if (e.isEmpty()) return At.resolve();
      var s = new We(go);
      e.forEach(function (t) {
        return s = s.add(t);
      });
      var i = IDBKeyRange.bound(wo(s.first()), wo(s.last())),
        r = s.getIterator();
      var o = r.getNext();
      return _o(t).Z({
        index: "documentKeyIndex",
        range: i
      }, function (t, e, s) {
        var i = ct.fromSegments([].concat(_toConsumableArray(e.prefixPath), [e.collectionGroup, e.documentId]));
        // Go through keys not found in cache.
        for (; o && go(o, i) < 0;) {
          n(o, null), o = r.getNext();
        }
        o && o.isEqual(i) && (
        // Key found in cache.
        n(o, e), o = r.hasNext() ? r.getNext() : null),
        // Skip to the next key (if there is one).
        o ? s.j(wo(o)) : s.done();
      }).next(function () {
        // The rest of the keys are not in the cache. One case where `iterate`
        // above won't go through them is when the cache is empty.
        for (; o;) {
          n(o, null), o = r.hasNext() ? r.getNext() : null;
        }
      });
    }
  }, {
    key: "getAllFromCollection",
    value: function getAllFromCollection(t, e, n) {
      var _this89 = this;
      var s = [e.popLast().toArray(), e.lastSegment(), Xi(n.readTime), n.documentKey.path.isEmpty() ? "" : n.documentKey.path.lastSegment()],
        i = [e.popLast().toArray(), e.lastSegment(), [Number.MAX_SAFE_INTEGER, Number.MAX_SAFE_INTEGER], ""];
      return _o(t).W(IDBKeyRange.bound(s, i, !0)).next(function (t) {
        var e = ds();
        var _iterator56 = _createForOfIteratorHelper(t),
          _step56;
        try {
          for (_iterator56.s(); !(_step56 = _iterator56.n()).done;) {
            var _n25 = _step56.value;
            var _t70 = _this89.jn(ct.fromSegments(_n25.prefixPath.concat(_n25.collectionGroup, _n25.documentId)), _n25);
            e = e.insert(_t70.key, _t70);
          }
        } catch (err) {
          _iterator56.e(err);
        } finally {
          _iterator56.f();
        }
        return e;
      });
    }
  }, {
    key: "getAllFromCollectionGroup",
    value: function getAllFromCollectionGroup(t, e, n, s) {
      var _this90 = this;
      var i = ds();
      var r = mo(e, n),
        o = mo(e, yt.max());
      return _o(t).Z({
        index: "collectionGroupIndex",
        range: IDBKeyRange.bound(r, o, !0)
      }, function (t, e, n) {
        var r = _this90.jn(ct.fromSegments(e.prefixPath.concat(e.collectionGroup, e.documentId)), e);
        i = i.insert(r.key, r), i.size === s && n.done();
      }).next(function () {
        return i;
      });
    }
  }, {
    key: "newChangeBuffer",
    value: function newChangeBuffer(t) {
      return new lo(this, !!t && t.trackRemovals);
    }
  }, {
    key: "getSize",
    value: function getSize(t) {
      return this.getMetadata(t).next(function (t) {
        return t.byteSize;
      });
    }
  }, {
    key: "getMetadata",
    value: function getMetadata(t) {
      return fo(t).get("remoteDocumentGlobalKey").next(function (t) {
        return index_esm2017_M(!!t), t;
      });
    }
  }, {
    key: "Qn",
    value: function Qn(t, e) {
      return fo(t).put("remoteDocumentGlobalKey", e);
    }
    /**
     * Decodes `dbRemoteDoc` and returns the document (or an invalid document if
     * the document corresponds to the format used for sentinel deletes).
     */
  }, {
    key: "jn",
    value: function jn(t, e) {
      if (e) {
        var _t71 = Ji(this.yt, e);
        // Whether the document is a sentinel removal and should only be used in the
        // `getNewDocumentChanges()`
        if (!(_t71.isNoDocument() && _t71.version.isEqual(st.min()))) return _t71;
      }
      return Ze.newInvalidDocument(t);
    }
  }]);
  return ao;
}()));
/** Creates a new IndexedDbRemoteDocumentCache. */
function ho(t) {
  return new ao(t);
}

/**
 * Handles the details of adding and updating documents in the IndexedDbRemoteDocumentCache.
 *
 * Unlike the MemoryRemoteDocumentChangeBuffer, the IndexedDb implementation computes the size
 * delta for all submitted changes. This avoids having to re-read all documents from IndexedDb
 * when we apply the changes.
 */
var lo = /*#__PURE__*/(/* unused pure expression or super */ null && (function (_co) {
  _inherits(lo, _co);
  var _super23 = _createSuper(lo);
  /**
   * @param documentCache - The IndexedDbRemoteDocumentCache to apply the changes to.
   * @param trackRemovals - Whether to create sentinel deletes that can be tracked by
   * `getNewDocumentChanges()`.
   */
  function lo(t, e) {
    var _this91;
    _classCallCheck(this, lo);
    _this91 = _super23.call(this), _this91.Yn = t, _this91.trackRemovals = e,
    // A map of document sizes and read times prior to applying the changes in
    // this buffer.
    _this91.Xn = new ls(function (t) {
      return t.toString();
    }, function (t, e) {
      return t.isEqual(e);
    });
    return _this91;
  }
  _createClass(lo, [{
    key: "applyChanges",
    value: function applyChanges(t) {
      var _this92 = this;
      var e = [];
      var n = 0,
        s = new We(function (t, e) {
          return Z(t.canonicalString(), e.canonicalString());
        });
      return this.changes.forEach(function (i, r) {
        var o = _this92.Xn.get(i);
        if (e.push(_this92.Yn.removeEntry(t, i, o.readTime)), r.isValidDocument()) {
          var u = Yi(_this92.Yn.yt, r);
          s = s.add(i.path.popLast());
          var c = Qr(u);
          n += c - o.size, e.push(_this92.Yn.addEntry(t, i, u));
        } else if (n -= o.size, _this92.trackRemovals) {
          // In order to track removals, we store a "sentinel delete" in the
          // RemoteDocumentCache. This entry is represented by a NoDocument
          // with a version of 0 and ignored by `maybeDecodeDocument()` but
          // preserved in `getNewDocumentChanges()`.
          var _n26 = Yi(_this92.Yn.yt, r.convertToNoDocument(st.min()));
          e.push(_this92.Yn.addEntry(t, i, _n26));
        }
      }), s.forEach(function (n) {
        e.push(_this92.Yn.indexManager.addToCollectionParentIndex(t, n));
      }), e.push(this.Yn.updateMetadata(t, n)), At.waitFor(e);
    }
  }, {
    key: "getFromCache",
    value: function getFromCache(t, e) {
      var _this93 = this;
      // Record the size of everything we load from the cache so we can compute a delta later.
      return this.Yn.Wn(t, e).next(function (t) {
        return _this93.Xn.set(e, {
          size: t.size,
          readTime: t.document.readTime
        }), t.document;
      });
    }
  }, {
    key: "getAllFromCache",
    value: function getAllFromCache(t, e) {
      var _this94 = this;
      // Record the size of everything we load from the cache so we can compute
      // a delta later.
      return this.Yn.Hn(t, e).next(function (_ref15) {
        var t = _ref15.documents,
          e = _ref15.Jn;
        return (
          // Note: `getAllFromCache` returns two maps instead of a single map from
          // keys to `DocumentSizeEntry`s. This is to allow returning the
          // `MutableDocumentMap` directly, without a conversion.
          e.forEach(function (e, n) {
            _this94.Xn.set(e, {
              size: n,
              readTime: t.get(e).readTime
            });
          }), t
        );
      });
    }
  }]);
  return lo;
}(co)));
function fo(t) {
  return Gi(t, "remoteDocumentGlobal");
}

/**
 * Helper to get a typed SimpleDbStore for the remoteDocuments object store.
 */
function _o(t) {
  return Gi(t, "remoteDocumentsV14");
}

/**
 * Returns a key that can be used for document lookups on the
 * `DbRemoteDocumentDocumentKeyIndex` index.
 */
function wo(t) {
  var e = t.path.toArray();
  return [/* prefix path */e.slice(0, e.length - 2), /* collection id */e[e.length - 2], /* document id */e[e.length - 1]];
}
function mo(t, e) {
  var n = e.documentKey.path.toArray();
  return [/* collection id */t, Xi(e.readTime), /* prefix path */n.slice(0, n.length - 2), /* document id */n.length > 0 ? n[n.length - 1] : ""];
}

/**
 * Comparator that compares document keys according to the primary key sorting
 * used by the `DbRemoteDocumentDocument` store (by prefix path, collection id
 * and then document ID).
 *
 * Visible for testing.
 */
function go(t, e) {
  var n = t.path.toArray(),
    s = e.path.toArray();
  // The ordering is based on https://chromium.googlesource.com/chromium/blink/+/fe5c21fef94dae71c1c3344775b8d8a7f7e6d9ec/Source/modules/indexeddb/IDBKey.cpp#74
  var i = 0;
  for (var _t72 = 0; _t72 < n.length - 2 && _t72 < s.length - 2; ++_t72) {
    if (i = Z(n[_t72], s[_t72]), i) return i;
  }
  return i = Z(n.length, s.length), i || (i = Z(n[n.length - 2], s[s.length - 2]), i || Z(n[n.length - 1], s[s.length - 1]));
}

/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * Schema Version for the Web client:
 * 1.  Initial version including Mutation Queue, Query Cache, and Remote
 *     Document Cache
 * 2.  Used to ensure a targetGlobal object exists and add targetCount to it. No
 *     longer required because migration 3 unconditionally clears it.
 * 3.  Dropped and re-created Query Cache to deal with cache corruption related
 *     to limbo resolution. Addresses
 *     https://github.com/firebase/firebase-ios-sdk/issues/1548
 * 4.  Multi-Tab Support.
 * 5.  Removal of held write acks.
 * 6.  Create document global for tracking document cache size.
 * 7.  Ensure every cached document has a sentinel row with a sequence number.
 * 8.  Add collection-parent index for Collection Group queries.
 * 9.  Change RemoteDocumentChanges store to be keyed by readTime rather than
 *     an auto-incrementing ID. This is required for Index-Free queries.
 * 10. Rewrite the canonical IDs to the explicit Protobuf-based format.
 * 11. Add bundles and named_queries for bundle support.
 * 12. Add document overlays.
 * 13. Rewrite the keys of the remote document cache to allow for efficient
 *     document lookup via `getAll()`.
 * 14. Add overlays.
 * 15. Add indexing support.
 */
/**
 * @license
 * Copyright 2022 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * Represents a local view (overlay) of a document, and the fields that are
 * locally mutated.
 */
var yo = /*#__PURE__*/(/* unused pure expression or super */ null && (_createClass(function yo(t,
/**
 * The fields that are locally mutated by patch mutations. If the overlayed
 * document is from set or delete mutations, this returns null.
 */
e) {
  _classCallCheck(this, yo);
  this.overlayedDocument = t, this.mutatedFields = e;
})));
/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * A readonly view of the local state of all documents we're tracking (i.e. we
 * have a cached version in remoteDocumentCache or local mutations for the
 * document). The view is computed by applying the mutations in the
 * MutationQueue to the RemoteDocumentCache.
 */
var po = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  function po(t, e, n, s) {
    _classCallCheck(this, po);
    this.remoteDocumentCache = t, this.mutationQueue = e, this.documentOverlayCache = n, this.indexManager = s;
  }
  /**
   * Get the local view of the document identified by `key`.
   *
   * @returns Local view of the document or null if we don't have any cached
   * state for it.
   */
  _createClass(po, [{
    key: "getDocument",
    value: function getDocument(t, e) {
      var _this95 = this;
      var n = null;
      return this.documentOverlayCache.getOverlay(t, e).next(function (s) {
        return n = s, _this95.remoteDocumentCache.getEntry(t, e);
      }).next(function (t) {
        return null !== n && Jn(n.mutation, t, Je.empty(), nt.now()), t;
      });
    }
    /**
     * Gets the local view of the documents identified by `keys`.
     *
     * If we don't have cached state for a document in `keys`, a NoDocument will
     * be stored for that key in the resulting set.
     */
  }, {
    key: "getDocuments",
    value: function getDocuments(t, e) {
      var _this96 = this;
      return this.remoteDocumentCache.getEntries(t, e).next(function (e) {
        return _this96.getLocalViewOfDocuments(t, e, Es()).next(function () {
          return e;
        });
      });
    }
    /**
     * Similar to `getDocuments`, but creates the local view from the given
     * `baseDocs` without retrieving documents from the local store.
     *
     * @param transaction - The transaction this operation is scoped to.
     * @param docs - The documents to apply local mutations to get the local views.
     * @param existenceStateChanged - The set of document keys whose existence state
     *   is changed. This is useful to determine if some documents overlay needs
     *   to be recalculated.
     */
  }, {
    key: "getLocalViewOfDocuments",
    value: function getLocalViewOfDocuments(t, e) {
      var _this97 = this;
      var n = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : Es();
      var s = gs();
      return this.populateOverlays(t, s, e).next(function () {
        return _this97.computeViews(t, e, s, n).next(function (t) {
          var e = ws();
          return t.forEach(function (t, n) {
            e = e.insert(t, n.overlayedDocument);
          }), e;
        });
      });
    }
    /**
     * Gets the overlayed documents for the given document map, which will include
     * the local view of those documents and a `FieldMask` indicating which fields
     * are mutated locally, `null` if overlay is a Set or Delete mutation.
     */
  }, {
    key: "getOverlayedDocuments",
    value: function getOverlayedDocuments(t, e) {
      var _this98 = this;
      var n = gs();
      return this.populateOverlays(t, n, e).next(function () {
        return _this98.computeViews(t, e, n, Es());
      });
    }
    /**
     * Fetches the overlays for {@code docs} and adds them to provided overlay map
     * if the map does not already contain an entry for the given document key.
     */
  }, {
    key: "populateOverlays",
    value: function populateOverlays(t, e, n) {
      var s = [];
      return n.forEach(function (t) {
        e.has(t) || s.push(t);
      }), this.documentOverlayCache.getOverlays(t, s).next(function (t) {
        t.forEach(function (t, n) {
          e.set(t, n);
        });
      });
    }
    /**
     * Computes the local view for the given documents.
     *
     * @param docs - The documents to compute views for. It also has the base
     *   version of the documents.
     * @param overlays - The overlays that need to be applied to the given base
     *   version of the documents.
     * @param existenceStateChanged - A set of documents whose existence states
     *   might have changed. This is used to determine if we need to re-calculate
     *   overlays from mutation queues.
     * @return A map represents the local documents view.
     */
  }, {
    key: "computeViews",
    value: function computeViews(t, e, n, s) {
      var i = ds();
      var r = ps(),
        o = ps();
      return e.forEach(function (t, e) {
        var o = n.get(e.key);
        // Recalculate an overlay if the document's existence state changed due to
        // a remote event *and* the overlay is a PatchMutation. This is because
        // document existence state can change if some patch mutation's
        // preconditions are met.
        // NOTE: we recalculate when `overlay` is undefined as well, because there
        // might be a patch mutation whose precondition does not match before the
        // change (hence overlay is undefined), but would now match.
        s.has(e.key) && (void 0 === o || o.mutation instanceof ts) ? i = i.insert(e.key, e) : void 0 !== o && (r.set(e.key, o.mutation.getFieldMask()), Jn(o.mutation, e, o.mutation.getFieldMask(), nt.now()));
      }), this.recalculateAndSaveOverlays(t, i).next(function (t) {
        return t.forEach(function (t, e) {
          return r.set(t, e);
        }), e.forEach(function (t, e) {
          var n;
          return o.set(t, new yo(e, null !== (n = r.get(t)) && void 0 !== n ? n : null));
        }), o;
      });
    }
  }, {
    key: "recalculateAndSaveOverlays",
    value: function recalculateAndSaveOverlays(t, e) {
      var _this99 = this;
      var n = ps();
      // A reverse lookup map from batch id to the documents within that batch.
      var s = new Ge(function (t, e) {
          return t - e;
        }),
        i = Es();
      return this.mutationQueue.getAllMutationBatchesAffectingDocumentKeys(t, e).next(function (t) {
        var _iterator57 = _createForOfIteratorHelper(t),
          _step57;
        try {
          var _loop6 = function _loop6() {
            var i = _step57.value;
            i.keys().forEach(function (t) {
              var r = e.get(t);
              if (null === r) return;
              var o = n.get(t) || Je.empty();
              o = i.applyToLocalView(r, o), n.set(t, o);
              var u = (s.get(i.batchId) || Es()).add(t);
              s = s.insert(i.batchId, u);
            });
          };
          for (_iterator57.s(); !(_step57 = _iterator57.n()).done;) {
            _loop6();
          }
        } catch (err) {
          _iterator57.e(err);
        } finally {
          _iterator57.f();
        }
      }).next(function () {
        var r = [],
          o = s.getReverseIterator();
        // Iterate in descending order of batch IDs, and skip documents that are
        // already saved.
        var _loop7 = function _loop7() {
          var s = o.getNext(),
            u = s.key,
            c = s.value,
            a = ys();
          c.forEach(function (t) {
            if (!i.has(t)) {
              var _s20 = zn(e.get(t), n.get(t));
              null !== _s20 && a.set(t, _s20), i = i.add(t);
            }
          }), r.push(_this99.documentOverlayCache.saveOverlays(t, u, a));
        };
        for (; o.hasNext();) {
          _loop7();
        }
        return At.waitFor(r);
      }).next(function () {
        return n;
      });
    }
    /**
     * Recalculates overlays by reading the documents from remote document cache
     * first, and saves them after they are calculated.
     */
  }, {
    key: "recalculateAndSaveOverlaysForDocumentKeys",
    value: function recalculateAndSaveOverlaysForDocumentKeys(t, e) {
      var _this100 = this;
      return this.remoteDocumentCache.getEntries(t, e).next(function (e) {
        return _this100.recalculateAndSaveOverlays(t, e);
      });
    }
    /**
     * Performs a query against the local view of all documents.
     *
     * @param transaction - The persistence transaction.
     * @param query - The query to match documents against.
     * @param offset - Read time and key to start scanning by (exclusive).
     */
  }, {
    key: "getDocumentsMatchingQuery",
    value: function getDocumentsMatchingQuery(t, e, n) {
      /**
      * Returns whether the query matches a single document by path (rather than a
      * collection).
      */
      return function (t) {
        return ct.isDocumentKey(t.path) && null === t.collectionGroup && 0 === t.filters.length;
      }(e) ? this.getDocumentsMatchingDocumentQuery(t, e.path) : wn(e) ? this.getDocumentsMatchingCollectionGroupQuery(t, e, n) : this.getDocumentsMatchingCollectionQuery(t, e, n);
    }
    /**
     * Given a collection group, returns the next documents that follow the provided offset, along
     * with an updated batch ID.
     *
     * <p>The documents returned by this method are ordered by remote version from the provided
     * offset. If there are no more remote documents after the provided offset, documents with
     * mutations in order of batch id from the offset are returned. Since all documents in a batch are
     * returned together, the total number of documents returned can exceed {@code count}.
     *
     * @param transaction
     * @param collectionGroup The collection group for the documents.
     * @param offset The offset to index into.
     * @param count The number of documents to return
     * @return A LocalWriteResult with the documents that follow the provided offset and the last processed batch id.
     */
  }, {
    key: "getNextDocuments",
    value: function getNextDocuments(t, e, n, s) {
      var _this101 = this;
      return this.remoteDocumentCache.getAllFromCollectionGroup(t, e, n, s).next(function (i) {
        var r = s - i.size > 0 ? _this101.documentOverlayCache.getOverlaysForCollectionGroup(t, e, n.largestBatchId, s - i.size) : At.resolve(gs());
        // The callsite will use the largest batch ID together with the latest read time to create
        // a new index offset. Since we only process batch IDs if all remote documents have been read,
        // no overlay will increase the overall read time. This is why we only need to special case
        // the batch id.
        var o = -1,
          u = i;
        return r.next(function (e) {
          return At.forEach(e, function (e, n) {
            return o < n.largestBatchId && (o = n.largestBatchId), i.get(e) ? At.resolve() : _this101.remoteDocumentCache.getEntry(t, e).next(function (t) {
              u = u.insert(e, t);
            });
          }).next(function () {
            return _this101.populateOverlays(t, e, i);
          }).next(function () {
            return _this101.computeViews(t, u, e, Es());
          }).next(function (t) {
            return {
              batchId: o,
              changes: ms(t)
            };
          });
        });
      });
    }
  }, {
    key: "getDocumentsMatchingDocumentQuery",
    value: function getDocumentsMatchingDocumentQuery(t, e) {
      // Just do a simple document lookup.
      return this.getDocument(t, new ct(e)).next(function (t) {
        var e = ws();
        return t.isFoundDocument() && (e = e.insert(t.key, t)), e;
      });
    }
  }, {
    key: "getDocumentsMatchingCollectionGroupQuery",
    value: function getDocumentsMatchingCollectionGroupQuery(t, e, n) {
      var _this102 = this;
      var s = e.collectionGroup;
      var i = ws();
      return this.indexManager.getCollectionParents(t, s).next(function (r) {
        return At.forEach(r, function (r) {
          var o = function (t, e) {
            return new an(e, /*collectionGroup=*/null, t.explicitOrderBy.slice(), t.filters.slice(), t.limit, t.limitType, t.startAt, t.endAt);
          }(e, r.child(s));
          return _this102.getDocumentsMatchingCollectionQuery(t, o, n).next(function (t) {
            t.forEach(function (t, e) {
              i = i.insert(t, e);
            });
          });
        }).next(function () {
          return i;
        });
      });
    }
  }, {
    key: "getDocumentsMatchingCollectionQuery",
    value: function getDocumentsMatchingCollectionQuery(t, e, n) {
      var _this103 = this;
      // Query the remote documents and overlay mutations.
      var s;
      return this.remoteDocumentCache.getAllFromCollection(t, e.path, n).next(function (i) {
        return s = i, _this103.documentOverlayCache.getOverlaysForCollection(t, e.path, n.largestBatchId);
      }).next(function (t) {
        // As documents might match the query because of their overlay we need to
        // include documents for all overlays in the initial document set.
        t.forEach(function (t, e) {
          var n = e.getKey();
          null === s.get(n) && (s = s.insert(n, Ze.newInvalidDocument(n)));
        });
        // Apply the overlays and match against the query.
        var n = ws();
        return s.forEach(function (s, i) {
          var r = t.get(s);
          void 0 !== r && Jn(r.mutation, i, Je.empty(), nt.now()),
          // Finally, insert the documents that still match the query
          An(e, i) && (n = n.insert(s, i));
        }), n;
      });
    }
  }]);
  return po;
}()));
/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
var Io = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  function Io(t) {
    _classCallCheck(this, Io);
    this.yt = t, this.Zn = new Map(), this.ts = new Map();
  }
  _createClass(Io, [{
    key: "getBundleMetadata",
    value: function getBundleMetadata(t, e) {
      return At.resolve(this.Zn.get(e));
    }
  }, {
    key: "saveBundleMetadata",
    value: function saveBundleMetadata(t, e) {
      /** Decodes a BundleMetadata proto into a BundleMetadata object. */
      var n;
      return this.Zn.set(e.id, {
        id: (n = e).id,
        version: n.version,
        createTime: qs(n.createTime)
      }), At.resolve();
    }
  }, {
    key: "getNamedQuery",
    value: function getNamedQuery(t, e) {
      return At.resolve(this.ts.get(e));
    }
  }, {
    key: "saveNamedQuery",
    value: function saveNamedQuery(t, e) {
      return this.ts.set(e.name, function (t) {
        return {
          name: t.name,
          query: ir(t.bundledQuery),
          readTime: qs(t.readTime)
        };
      }(e)), At.resolve();
    }
  }]);
  return Io;
}()));
/**
 * @license
 * Copyright 2022 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * An in-memory implementation of DocumentOverlayCache.
 */
var To = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  function To() {
    _classCallCheck(this, To);
    // A map sorted by DocumentKey, whose value is a pair of the largest batch id
    // for the overlay and the overlay itself.
    this.overlays = new Ge(ct.comparator), this.es = new Map();
  }
  _createClass(To, [{
    key: "getOverlay",
    value: function getOverlay(t, e) {
      return At.resolve(this.overlays.get(e));
    }
  }, {
    key: "getOverlays",
    value: function getOverlays(t, e) {
      var _this104 = this;
      var n = gs();
      return At.forEach(e, function (e) {
        return _this104.getOverlay(t, e).next(function (t) {
          null !== t && n.set(e, t);
        });
      }).next(function () {
        return n;
      });
    }
  }, {
    key: "saveOverlays",
    value: function saveOverlays(t, e, n) {
      var _this105 = this;
      return n.forEach(function (n, s) {
        _this105.oe(t, e, s);
      }), At.resolve();
    }
  }, {
    key: "removeOverlaysForBatchId",
    value: function removeOverlaysForBatchId(t, e, n) {
      var _this106 = this;
      var s = this.es.get(n);
      return void 0 !== s && (s.forEach(function (t) {
        return _this106.overlays = _this106.overlays.remove(t);
      }), this.es.delete(n)), At.resolve();
    }
  }, {
    key: "getOverlaysForCollection",
    value: function getOverlaysForCollection(t, e, n) {
      var s = gs(),
        i = e.length + 1,
        r = new ct(e.child("")),
        o = this.overlays.getIteratorFrom(r);
      for (; o.hasNext();) {
        var _t73 = o.getNext().value,
          _r6 = _t73.getKey();
        if (!e.isPrefixOf(_r6.path)) break;
        // Documents from sub-collections
        _r6.path.length === i && _t73.largestBatchId > n && s.set(_t73.getKey(), _t73);
      }
      return At.resolve(s);
    }
  }, {
    key: "getOverlaysForCollectionGroup",
    value: function getOverlaysForCollectionGroup(t, e, n, s) {
      var i = new Ge(function (t, e) {
        return t - e;
      });
      var r = this.overlays.getIterator();
      for (; r.hasNext();) {
        var _t74 = r.getNext().value;
        if (_t74.getKey().getCollectionGroup() === e && _t74.largestBatchId > n) {
          var _e35 = i.get(_t74.largestBatchId);
          null === _e35 && (_e35 = gs(), i = i.insert(_t74.largestBatchId, _e35)), _e35.set(_t74.getKey(), _t74);
        }
      }
      var o = gs(),
        u = i.getIterator();
      for (; u.hasNext();) {
        if (u.getNext().value.forEach(function (t, e) {
          return o.set(t, e);
        }), o.size() >= s) break;
      }
      return At.resolve(o);
    }
  }, {
    key: "oe",
    value: function oe(t, e, n) {
      // Remove the association of the overlay to its batch id.
      var s = this.overlays.get(n.key);
      if (null !== s) {
        var _t75 = this.es.get(s.largestBatchId).delete(n.key);
        this.es.set(s.largestBatchId, _t75);
      }
      this.overlays = this.overlays.insert(n.key, new Wi(e, n));
      // Create the association of this overlay to the given largestBatchId.
      var i = this.es.get(e);
      void 0 === i && (i = Es(), this.es.set(e, i)), this.es.set(e, i.add(n.key));
    }
  }]);
  return To;
}()));
/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * A collection of references to a document from some kind of numbered entity
 * (either a target ID or batch ID). As references are added to or removed from
 * the set corresponding events are emitted to a registered garbage collector.
 *
 * Each reference is represented by a DocumentReference object. Each of them
 * contains enough information to uniquely identify the reference. They are all
 * stored primarily in a set sorted by key. A document is considered garbage if
 * there's no references in that set (this can be efficiently checked thanks to
 * sorting by key).
 *
 * ReferenceSet also keeps a secondary set that contains references sorted by
 * IDs. This one is used to efficiently implement removal of all references by
 * some target ID.
 */
var Eo = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  function Eo() {
    _classCallCheck(this, Eo);
    // A set of outstanding references to a document sorted by key.
    this.ns = new We(Ao.ss),
    // A set of outstanding references to a document sorted by target id.
    this.rs = new We(Ao.os);
  }
  /** Returns true if the reference set contains no references. */
  _createClass(Eo, [{
    key: "isEmpty",
    value: function isEmpty() {
      return this.ns.isEmpty();
    }
    /** Adds a reference to the given document key for the given ID. */
  }, {
    key: "addReference",
    value: function addReference(t, e) {
      var n = new Ao(t, e);
      this.ns = this.ns.add(n), this.rs = this.rs.add(n);
    }
    /** Add references to the given document keys for the given ID. */
  }, {
    key: "us",
    value: function us(t, e) {
      var _this107 = this;
      t.forEach(function (t) {
        return _this107.addReference(t, e);
      });
    }
    /**
     * Removes a reference to the given document key for the given
     * ID.
     */
  }, {
    key: "removeReference",
    value: function removeReference(t, e) {
      this.cs(new Ao(t, e));
    }
  }, {
    key: "hs",
    value: function hs(t, e) {
      var _this108 = this;
      t.forEach(function (t) {
        return _this108.removeReference(t, e);
      });
    }
    /**
     * Clears all references with a given ID. Calls removeRef() for each key
     * removed.
     */
  }, {
    key: "ls",
    value: function ls(t) {
      var _this109 = this;
      var e = new ct(new rt([])),
        n = new Ao(e, t),
        s = new Ao(e, t + 1),
        i = [];
      return this.rs.forEachInRange([n, s], function (t) {
        _this109.cs(t), i.push(t.key);
      }), i;
    }
  }, {
    key: "fs",
    value: function fs() {
      var _this110 = this;
      this.ns.forEach(function (t) {
        return _this110.cs(t);
      });
    }
  }, {
    key: "cs",
    value: function cs(t) {
      this.ns = this.ns.delete(t), this.rs = this.rs.delete(t);
    }
  }, {
    key: "ds",
    value: function ds(t) {
      var e = new ct(new rt([])),
        n = new Ao(e, t),
        s = new Ao(e, t + 1);
      var i = Es();
      return this.rs.forEachInRange([n, s], function (t) {
        i = i.add(t.key);
      }), i;
    }
  }, {
    key: "containsKey",
    value: function containsKey(t) {
      var e = new Ao(t, 0),
        n = this.ns.firstAfterOrEqual(e);
      return null !== n && t.isEqual(n.key);
    }
  }]);
  return Eo;
}()));
var Ao = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  function Ao(t, e) {
    _classCallCheck(this, Ao);
    this.key = t, this._s = e;
  }
  /** Compare by key then by ID */
  _createClass(Ao, null, [{
    key: "ss",
    value: function ss(t, e) {
      return ct.comparator(t.key, e.key) || Z(t._s, e._s);
    }
    /** Compare by ID then by key */
  }, {
    key: "os",
    value: function os(t, e) {
      return Z(t._s, e._s) || ct.comparator(t.key, e.key);
    }
  }]);
  return Ao;
}()));
/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
var Ro = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  function Ro(t, e) {
    _classCallCheck(this, Ro);
    this.indexManager = t, this.referenceDelegate = e,
    /**
     * The set of all mutations that have been sent but not yet been applied to
     * the backend.
     */
    this.mutationQueue = [], /** Next value to use when assigning sequential IDs to each mutation batch. */
    this.ws = 1, /** An ordered mapping between documents and the mutations batch IDs. */
    this.gs = new We(Ao.ss);
  }
  _createClass(Ro, [{
    key: "checkEmpty",
    value: function checkEmpty(t) {
      return At.resolve(0 === this.mutationQueue.length);
    }
  }, {
    key: "addMutationBatch",
    value: function addMutationBatch(t, e, n, s) {
      var i = this.ws;
      this.ws++, this.mutationQueue.length > 0 && this.mutationQueue[this.mutationQueue.length - 1];
      var r = new Qi(i, e, n, s);
      this.mutationQueue.push(r);
      // Track references by document key and index collection parents.
      var _iterator58 = _createForOfIteratorHelper(s),
        _step58;
      try {
        for (_iterator58.s(); !(_step58 = _iterator58.n()).done;) {
          var _e36 = _step58.value;
          this.gs = this.gs.add(new Ao(_e36.key, i)), this.indexManager.addToCollectionParentIndex(t, _e36.key.path.popLast());
        }
      } catch (err) {
        _iterator58.e(err);
      } finally {
        _iterator58.f();
      }
      return At.resolve(r);
    }
  }, {
    key: "lookupMutationBatch",
    value: function lookupMutationBatch(t, e) {
      return At.resolve(this.ys(e));
    }
  }, {
    key: "getNextMutationBatchAfterBatchId",
    value: function getNextMutationBatchAfterBatchId(t, e) {
      var n = e + 1,
        s = this.ps(n),
        i = s < 0 ? 0 : s;
      // The requested batchId may still be out of range so normalize it to the
      // start of the queue.
      return At.resolve(this.mutationQueue.length > i ? this.mutationQueue[i] : null);
    }
  }, {
    key: "getHighestUnacknowledgedBatchId",
    value: function getHighestUnacknowledgedBatchId() {
      return At.resolve(0 === this.mutationQueue.length ? -1 : this.ws - 1);
    }
  }, {
    key: "getAllMutationBatches",
    value: function getAllMutationBatches(t) {
      return At.resolve(this.mutationQueue.slice());
    }
  }, {
    key: "getAllMutationBatchesAffectingDocumentKey",
    value: function getAllMutationBatchesAffectingDocumentKey(t, e) {
      var _this111 = this;
      var n = new Ao(e, 0),
        s = new Ao(e, Number.POSITIVE_INFINITY),
        i = [];
      return this.gs.forEachInRange([n, s], function (t) {
        var e = _this111.ys(t._s);
        i.push(e);
      }), At.resolve(i);
    }
  }, {
    key: "getAllMutationBatchesAffectingDocumentKeys",
    value: function getAllMutationBatchesAffectingDocumentKeys(t, e) {
      var _this112 = this;
      var n = new We(Z);
      return e.forEach(function (t) {
        var e = new Ao(t, 0),
          s = new Ao(t, Number.POSITIVE_INFINITY);
        _this112.gs.forEachInRange([e, s], function (t) {
          n = n.add(t._s);
        });
      }), At.resolve(this.Is(n));
    }
  }, {
    key: "getAllMutationBatchesAffectingQuery",
    value: function getAllMutationBatchesAffectingQuery(t, e) {
      // Use the query path as a prefix for testing if a document matches the
      // query.
      var n = e.path,
        s = n.length + 1;
      // Construct a document reference for actually scanning the index. Unlike
      // the prefix the document key in this reference must have an even number of
      // segments. The empty segment can be used a suffix of the query path
      // because it precedes all other segments in an ordered traversal.
      var i = n;
      ct.isDocumentKey(i) || (i = i.child(""));
      var r = new Ao(new ct(i), 0);
      // Find unique batchIDs referenced by all documents potentially matching the
      // query.
      var o = new We(Z);
      return this.gs.forEachWhile(function (t) {
        var e = t.key.path;
        return !!n.isPrefixOf(e) && (
        // Rows with document keys more than one segment longer than the query
        // path can't be matches. For example, a query on 'rooms' can't match
        // the document /rooms/abc/messages/xyx.
        // TODO(mcg): we'll need a different scanner when we implement
        // ancestor queries.
        e.length === s && (o = o.add(t._s)), !0);
      }, r), At.resolve(this.Is(o));
    }
  }, {
    key: "Is",
    value: function Is(t) {
      var _this113 = this;
      // Construct an array of matching batches, sorted by batchID to ensure that
      // multiple mutations affecting the same document key are applied in order.
      var e = [];
      return t.forEach(function (t) {
        var n = _this113.ys(t);
        null !== n && e.push(n);
      }), e;
    }
  }, {
    key: "removeMutationBatch",
    value: function removeMutationBatch(t, e) {
      var _this114 = this;
      index_esm2017_M(0 === this.Ts(e.batchId, "removed")), this.mutationQueue.shift();
      var n = this.gs;
      return At.forEach(e.mutations, function (s) {
        var i = new Ao(s.key, e.batchId);
        return n = n.delete(i), _this114.referenceDelegate.markPotentiallyOrphaned(t, s.key);
      }).next(function () {
        _this114.gs = n;
      });
    }
  }, {
    key: "An",
    value: function An(t) {
      // No-op since the memory mutation queue does not maintain a separate cache.
    }
  }, {
    key: "containsKey",
    value: function containsKey(t, e) {
      var n = new Ao(e, 0),
        s = this.gs.firstAfterOrEqual(n);
      return At.resolve(e.isEqual(s && s.key));
    }
  }, {
    key: "performConsistencyCheck",
    value: function performConsistencyCheck(t) {
      return this.mutationQueue.length, At.resolve();
    }
    /**
     * Finds the index of the given batchId in the mutation queue and asserts that
     * the resulting index is within the bounds of the queue.
     *
     * @param batchId - The batchId to search for
     * @param action - A description of what the caller is doing, phrased in passive
     * form (e.g. "acknowledged" in a routine that acknowledges batches).
     */
  }, {
    key: "Ts",
    value: function Ts(t, e) {
      return this.ps(t);
    }
    /**
     * Finds the index of the given batchId in the mutation queue. This operation
     * is O(1).
     *
     * @returns The computed index of the batch with the given batchId, based on
     * the state of the queue. Note this index can be negative if the requested
     * batchId has already been remvoed from the queue or past the end of the
     * queue if the batchId is larger than the last added batch.
     */
  }, {
    key: "ps",
    value: function ps(t) {
      if (0 === this.mutationQueue.length)
        // As an index this is past the end of the queue
        return 0;
      // Examine the front of the queue to figure out the difference between the
      // batchId and indexes in the array. Note that since the queue is ordered
      // by batchId, if the first batch has a larger batchId then the requested
      // batchId doesn't exist in the queue.
      return t - this.mutationQueue[0].batchId;
    }
    /**
     * A version of lookupMutationBatch that doesn't return a promise, this makes
     * other functions that uses this code easier to read and more efficent.
     */
  }, {
    key: "ys",
    value: function ys(t) {
      var e = this.ps(t);
      if (e < 0 || e >= this.mutationQueue.length) return null;
      return this.mutationQueue[e];
    }
  }]);
  return Ro;
}()));
/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * The memory-only RemoteDocumentCache for IndexedDb. To construct, invoke
 * `newMemoryRemoteDocumentCache()`.
 */
var bo = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  /**
   * @param sizer - Used to assess the size of a document. For eager GC, this is
   * expected to just return 0 to avoid unnecessarily doing the work of
   * calculating the size.
   */
  function bo(t) {
    _classCallCheck(this, bo);
    this.Es = t, /** Underlying cache of documents and their read times. */
    this.docs = new Ge(ct.comparator), /** Size of all cached documents. */
    this.size = 0;
  }
  _createClass(bo, [{
    key: "setIndexManager",
    value: function setIndexManager(t) {
      this.indexManager = t;
    }
    /**
     * Adds the supplied entry to the cache and updates the cache size as appropriate.
     *
     * All calls of `addEntry`  are required to go through the RemoteDocumentChangeBuffer
     * returned by `newChangeBuffer()`.
     */
  }, {
    key: "addEntry",
    value: function addEntry(t, e) {
      var n = e.key,
        s = this.docs.get(n),
        i = s ? s.size : 0,
        r = this.Es(e);
      return this.docs = this.docs.insert(n, {
        document: e.mutableCopy(),
        size: r
      }), this.size += r - i, this.indexManager.addToCollectionParentIndex(t, n.path.popLast());
    }
    /**
     * Removes the specified entry from the cache and updates the cache size as appropriate.
     *
     * All calls of `removeEntry` are required to go through the RemoteDocumentChangeBuffer
     * returned by `newChangeBuffer()`.
     */
  }, {
    key: "removeEntry",
    value: function removeEntry(t) {
      var e = this.docs.get(t);
      e && (this.docs = this.docs.remove(t), this.size -= e.size);
    }
  }, {
    key: "getEntry",
    value: function getEntry(t, e) {
      var n = this.docs.get(e);
      return At.resolve(n ? n.document.mutableCopy() : Ze.newInvalidDocument(e));
    }
  }, {
    key: "getEntries",
    value: function getEntries(t, e) {
      var _this115 = this;
      var n = ds();
      return e.forEach(function (t) {
        var e = _this115.docs.get(t);
        n = n.insert(t, e ? e.document.mutableCopy() : Ze.newInvalidDocument(t));
      }), At.resolve(n);
    }
  }, {
    key: "getAllFromCollection",
    value: function getAllFromCollection(t, e, n) {
      var s = ds();
      // Documents are ordered by key, so we can use a prefix scan to narrow down
      // the documents we need to match the query against.
      var i = new ct(e.child("")),
        r = this.docs.getIteratorFrom(i);
      for (; r.hasNext();) {
        var _r$getNext = r.getNext(),
          _t76 = _r$getNext.key,
          _i14 = _r$getNext.value.document;
        if (!e.isPrefixOf(_t76.path)) break;
        _t76.path.length > e.length + 1 || pt(gt(_i14), n) <= 0 || (s = s.insert(_i14.key, _i14.mutableCopy()));
      }
      return At.resolve(s);
    }
  }, {
    key: "getAllFromCollectionGroup",
    value: function getAllFromCollectionGroup(t, e, n, s) {
      // This method should only be called from the IndexBackfiller if persistence
      // is enabled.
      index_esm2017_O();
    }
  }, {
    key: "As",
    value: function As(t, e) {
      return At.forEach(this.docs, function (t) {
        return e(t);
      });
    }
  }, {
    key: "newChangeBuffer",
    value: function newChangeBuffer(t) {
      // `trackRemovals` is ignores since the MemoryRemoteDocumentCache keeps
      // a separate changelog and does not need special handling for removals.
      return new Po(this);
    }
  }, {
    key: "getSize",
    value: function getSize(t) {
      return At.resolve(this.size);
    }
  }]);
  return bo;
}()));
/**
 * Creates a new memory-only RemoteDocumentCache.
 *
 * @param sizer - Used to assess the size of a document. For eager GC, this is
 * expected to just return 0 to avoid unnecessarily doing the work of
 * calculating the size.
 */
/**
 * Handles the details of adding and updating documents in the MemoryRemoteDocumentCache.
 */
var Po = /*#__PURE__*/(/* unused pure expression or super */ null && (function (_co2) {
  _inherits(Po, _co2);
  var _super24 = _createSuper(Po);
  function Po(t) {
    var _this116;
    _classCallCheck(this, Po);
    _this116 = _super24.call(this), _this116.Yn = t;
    return _this116;
  }
  _createClass(Po, [{
    key: "applyChanges",
    value: function applyChanges(t) {
      var _this117 = this;
      var e = [];
      return this.changes.forEach(function (n, s) {
        s.isValidDocument() ? e.push(_this117.Yn.addEntry(t, s)) : _this117.Yn.removeEntry(n);
      }), At.waitFor(e);
    }
  }, {
    key: "getFromCache",
    value: function getFromCache(t, e) {
      return this.Yn.getEntry(t, e);
    }
  }, {
    key: "getAllFromCache",
    value: function getAllFromCache(t, e) {
      return this.Yn.getEntries(t, e);
    }
  }]);
  return Po;
}(co)));
/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
var vo = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  function vo(t) {
    _classCallCheck(this, vo);
    this.persistence = t,
    /**
     * Maps a target to the data about that target
     */
    this.Rs = new ls(function (t) {
      return nn(t);
    }, sn), /** The last received snapshot version. */
    this.lastRemoteSnapshotVersion = st.min(), /** The highest numbered target ID encountered. */
    this.highestTargetId = 0, /** The highest sequence number encountered. */
    this.bs = 0,
    /**
     * A ordered bidirectional mapping between documents and the remote target
     * IDs.
     */
    this.Ps = new Eo(), this.targetCount = 0, this.vs = Yr.Pn();
  }
  _createClass(vo, [{
    key: "forEachTarget",
    value: function forEachTarget(t, e) {
      return this.Rs.forEach(function (t, n) {
        return e(n);
      }), At.resolve();
    }
  }, {
    key: "getLastRemoteSnapshotVersion",
    value: function getLastRemoteSnapshotVersion(t) {
      return At.resolve(this.lastRemoteSnapshotVersion);
    }
  }, {
    key: "getHighestSequenceNumber",
    value: function getHighestSequenceNumber(t) {
      return At.resolve(this.bs);
    }
  }, {
    key: "allocateTargetId",
    value: function allocateTargetId(t) {
      return this.highestTargetId = this.vs.next(), At.resolve(this.highestTargetId);
    }
  }, {
    key: "setTargetsMetadata",
    value: function setTargetsMetadata(t, e, n) {
      return n && (this.lastRemoteSnapshotVersion = n), e > this.bs && (this.bs = e), At.resolve();
    }
  }, {
    key: "Dn",
    value: function Dn(t) {
      this.Rs.set(t.target, t);
      var e = t.targetId;
      e > this.highestTargetId && (this.vs = new Yr(e), this.highestTargetId = e), t.sequenceNumber > this.bs && (this.bs = t.sequenceNumber);
    }
  }, {
    key: "addTargetData",
    value: function addTargetData(t, e) {
      return this.Dn(e), this.targetCount += 1, At.resolve();
    }
  }, {
    key: "updateTargetData",
    value: function updateTargetData(t, e) {
      return this.Dn(e), At.resolve();
    }
  }, {
    key: "removeTargetData",
    value: function removeTargetData(t, e) {
      return this.Rs.delete(e.target), this.Ps.ls(e.targetId), this.targetCount -= 1, At.resolve();
    }
  }, {
    key: "removeTargets",
    value: function removeTargets(t, e, n) {
      var _this118 = this;
      var s = 0;
      var i = [];
      return this.Rs.forEach(function (r, o) {
        o.sequenceNumber <= e && null === n.get(o.targetId) && (_this118.Rs.delete(r), i.push(_this118.removeMatchingKeysForTargetId(t, o.targetId)), s++);
      }), At.waitFor(i).next(function () {
        return s;
      });
    }
  }, {
    key: "getTargetCount",
    value: function getTargetCount(t) {
      return At.resolve(this.targetCount);
    }
  }, {
    key: "getTargetData",
    value: function getTargetData(t, e) {
      var n = this.Rs.get(e) || null;
      return At.resolve(n);
    }
  }, {
    key: "addMatchingKeys",
    value: function addMatchingKeys(t, e, n) {
      return this.Ps.us(e, n), At.resolve();
    }
  }, {
    key: "removeMatchingKeys",
    value: function removeMatchingKeys(t, e, n) {
      this.Ps.hs(e, n);
      var s = this.persistence.referenceDelegate,
        i = [];
      return s && e.forEach(function (e) {
        i.push(s.markPotentiallyOrphaned(t, e));
      }), At.waitFor(i);
    }
  }, {
    key: "removeMatchingKeysForTargetId",
    value: function removeMatchingKeysForTargetId(t, e) {
      return this.Ps.ls(e), At.resolve();
    }
  }, {
    key: "getMatchingKeysForTargetId",
    value: function getMatchingKeysForTargetId(t, e) {
      var n = this.Ps.ds(e);
      return At.resolve(n);
    }
  }, {
    key: "containsKey",
    value: function containsKey(t, e) {
      return At.resolve(this.Ps.containsKey(e));
    }
  }]);
  return vo;
}()));
/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * A memory-backed instance of Persistence. Data is stored only in RAM and
 * not persisted across sessions.
 */
var Vo = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  /**
   * The constructor accepts a factory for creating a reference delegate. This
   * allows both the delegate and this instance to have strong references to
   * each other without having nullable fields that would then need to be
   * checked or asserted on every access.
   */
  function Vo(t, e) {
    var _this119 = this;
    _classCallCheck(this, Vo);
    this.Vs = {}, this.overlays = {}, this.Ss = new Ot(0), this.Ds = !1, this.Ds = !0, this.referenceDelegate = t(this), this.Cs = new vo(this);
    this.indexManager = new Nr(), this.remoteDocumentCache = function (t) {
      return new bo(t);
    }(function (t) {
      return _this119.referenceDelegate.xs(t);
    }), this.yt = new Hi(e), this.Ns = new Io(this.yt);
  }
  _createClass(Vo, [{
    key: "start",
    value: function start() {
      return Promise.resolve();
    }
  }, {
    key: "shutdown",
    value: function shutdown() {
      // No durable state to ensure is closed on shutdown.
      return this.Ds = !1, Promise.resolve();
    }
  }, {
    key: "started",
    get: function get() {
      return this.Ds;
    }
  }, {
    key: "setDatabaseDeletedListener",
    value: function setDatabaseDeletedListener() {
      // No op.
    }
  }, {
    key: "setNetworkEnabled",
    value: function setNetworkEnabled() {
      // No op.
    }
  }, {
    key: "getIndexManager",
    value: function getIndexManager(t) {
      // We do not currently support indices for memory persistence, so we can
      // return the same shared instance of the memory index manager.
      return this.indexManager;
    }
  }, {
    key: "getDocumentOverlayCache",
    value: function getDocumentOverlayCache(t) {
      var e = this.overlays[t.toKey()];
      return e || (e = new To(), this.overlays[t.toKey()] = e), e;
    }
  }, {
    key: "getMutationQueue",
    value: function getMutationQueue(t, e) {
      var n = this.Vs[t.toKey()];
      return n || (n = new Ro(e, this.referenceDelegate), this.Vs[t.toKey()] = n), n;
    }
  }, {
    key: "getTargetCache",
    value: function getTargetCache() {
      return this.Cs;
    }
  }, {
    key: "getRemoteDocumentCache",
    value: function getRemoteDocumentCache() {
      return this.remoteDocumentCache;
    }
  }, {
    key: "getBundleCache",
    value: function getBundleCache() {
      return this.Ns;
    }
  }, {
    key: "runTransaction",
    value: function runTransaction(t, e, n) {
      var _this120 = this;
      index_esm2017_C("MemoryPersistence", "Starting transaction:", t);
      var s = new So(this.Ss.next());
      return this.referenceDelegate.ks(), n(s).next(function (t) {
        return _this120.referenceDelegate.Os(s).next(function () {
          return t;
        });
      }).toPromise().then(function (t) {
        return s.raiseOnCommittedEvent(), t;
      });
    }
  }, {
    key: "Ms",
    value: function Ms(t, e) {
      return At.or(Object.values(this.Vs).map(function (n) {
        return function () {
          return n.containsKey(t, e);
        };
      }));
    }
  }]);
  return Vo;
}()));
/**
 * Memory persistence is not actually transactional, but future implementations
 * may have transaction-scoped state.
 */
var So = /*#__PURE__*/(/* unused pure expression or super */ null && (function (_Tt2) {
  _inherits(So, _Tt2);
  var _super25 = _createSuper(So);
  function So(t) {
    var _this121;
    _classCallCheck(this, So);
    _this121 = _super25.call(this), _this121.currentSequenceNumber = t;
    return _this121;
  }
  return _createClass(So);
}(Tt)));
var Do = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  function Do(t) {
    _classCallCheck(this, Do);
    this.persistence = t, /** Tracks all documents that are active in Query views. */
    this.Fs = new Eo(), /** The list of documents that are potentially GCed after each transaction. */
    this.$s = null;
  }
  _createClass(Do, [{
    key: "Ls",
    get: function get() {
      if (this.$s) return this.$s;
      throw index_esm2017_O();
    }
  }, {
    key: "addReference",
    value: function addReference(t, e, n) {
      return this.Fs.addReference(n, e), this.Ls.delete(n.toString()), At.resolve();
    }
  }, {
    key: "removeReference",
    value: function removeReference(t, e, n) {
      return this.Fs.removeReference(n, e), this.Ls.add(n.toString()), At.resolve();
    }
  }, {
    key: "markPotentiallyOrphaned",
    value: function markPotentiallyOrphaned(t, e) {
      return this.Ls.add(e.toString()), At.resolve();
    }
  }, {
    key: "removeTarget",
    value: function removeTarget(t, e) {
      var _this122 = this;
      this.Fs.ls(e.targetId).forEach(function (t) {
        return _this122.Ls.add(t.toString());
      });
      var n = this.persistence.getTargetCache();
      return n.getMatchingKeysForTargetId(t, e.targetId).next(function (t) {
        t.forEach(function (t) {
          return _this122.Ls.add(t.toString());
        });
      }).next(function () {
        return n.removeTargetData(t, e);
      });
    }
  }, {
    key: "ks",
    value: function ks() {
      this.$s = new Set();
    }
  }, {
    key: "Os",
    value: function Os(t) {
      var _this123 = this;
      // Remove newly orphaned documents.
      var e = this.persistence.getRemoteDocumentCache().newChangeBuffer();
      return At.forEach(this.Ls, function (n) {
        var s = ct.fromPath(n);
        return _this123.qs(t, s).next(function (t) {
          t || e.removeEntry(s, st.min());
        });
      }).next(function () {
        return _this123.$s = null, e.apply(t);
      });
    }
  }, {
    key: "updateLimboDocument",
    value: function updateLimboDocument(t, e) {
      var _this124 = this;
      return this.qs(t, e).next(function (t) {
        t ? _this124.Ls.delete(e.toString()) : _this124.Ls.add(e.toString());
      });
    }
  }, {
    key: "xs",
    value: function xs(t) {
      // For eager GC, we don't care about the document size, there are no size thresholds.
      return 0;
    }
  }, {
    key: "qs",
    value: function qs(t, e) {
      var _this125 = this;
      return At.or([function () {
        return At.resolve(_this125.Fs.containsKey(e));
      }, function () {
        return _this125.persistence.getTargetCache().containsKey(t, e);
      }, function () {
        return _this125.persistence.Ms(t, e);
      }]);
    }
  }], [{
    key: "Bs",
    value: function Bs(t) {
      return new Do(t);
    }
  }]);
  return Do;
}()));
/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/** Performs database creation and schema upgrades. */
var Co = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  function Co(t) {
    _classCallCheck(this, Co);
    this.yt = t;
  }
  /**
   * Performs database creation and schema upgrades.
   *
   * Note that in production, this method is only ever used to upgrade the schema
   * to SCHEMA_VERSION. Different values of toVersion are only used for testing
   * and local feature development.
   */
  _createClass(Co, [{
    key: "$",
    value: function $(t, e, n, s) {
      var _this126 = this;
      var i = new Rt("createOrUpgrade", e);
      n < 1 && s >= 1 && (function (t) {
        t.createObjectStore("owner");
      }(t), function (t) {
        t.createObjectStore("mutationQueues", {
          keyPath: "userId"
        });
        t.createObjectStore("mutations", {
          keyPath: "batchId",
          autoIncrement: !0
        }).createIndex("userMutationsIndex", Ii, {
          unique: !0
        }), t.createObjectStore("documentMutations");
      }
      /**
      * Upgrade function to migrate the 'mutations' store from V1 to V3. Loads
      * and rewrites all data.
      */(t), xo(t), function (t) {
        t.createObjectStore("remoteDocuments");
      }(t));
      // Migration 2 to populate the targetGlobal object no longer needed since
      // migration 3 unconditionally clears it.
      var r = At.resolve();
      return n < 3 && s >= 3 && (
      // Brand new clients don't need to drop and recreate--only clients that
      // potentially have corrupt data.
      0 !== n && (!function (t) {
        t.deleteObjectStore("targetDocuments"), t.deleteObjectStore("targets"), t.deleteObjectStore("targetGlobal");
      }(t), xo(t)), r = r.next(function () {
        return (
          /**
          * Creates the target global singleton row.
          *
          * @param txn - The version upgrade transaction for indexeddb
          */
          function (t) {
            var e = t.store("targetGlobal"),
              n = {
                highestTargetId: 0,
                highestListenSequenceNumber: 0,
                lastRemoteSnapshotVersion: st.min().toTimestamp(),
                targetCount: 0
              };
            return e.put("targetGlobalKey", n);
          }(i)
        );
      })), n < 4 && s >= 4 && (0 !== n && (
      // Schema version 3 uses auto-generated keys to generate globally unique
      // mutation batch IDs (this was previously ensured internally by the
      // client). To migrate to the new schema, we have to read all mutations
      // and write them back out. We preserve the existing batch IDs to guarantee
      // consistency with other object stores. Any further mutation batch IDs will
      // be auto-generated.
      r = r.next(function () {
        return function (t, e) {
          return e.store("mutations").W().next(function (n) {
            t.deleteObjectStore("mutations");
            t.createObjectStore("mutations", {
              keyPath: "batchId",
              autoIncrement: !0
            }).createIndex("userMutationsIndex", Ii, {
              unique: !0
            });
            var s = e.store("mutations"),
              i = n.map(function (t) {
                return s.put(t);
              });
            return At.waitFor(i);
          });
        }(t, i);
      })), r = r.next(function () {
        !function (t) {
          t.createObjectStore("clientMetadata", {
            keyPath: "clientId"
          });
        }(t);
      })), n < 5 && s >= 5 && (r = r.next(function () {
        return _this126.Us(i);
      })), n < 6 && s >= 6 && (r = r.next(function () {
        return function (t) {
          t.createObjectStore("remoteDocumentGlobal");
        }(t), _this126.Ks(i);
      })), n < 7 && s >= 7 && (r = r.next(function () {
        return _this126.Gs(i);
      })), n < 8 && s >= 8 && (r = r.next(function () {
        return _this126.Qs(t, i);
      })), n < 9 && s >= 9 && (r = r.next(function () {
        // Multi-Tab used to manage its own changelog, but this has been moved
        // to the DbRemoteDocument object store itself. Since the previous change
        // log only contained transient data, we can drop its object store.
        !function (t) {
          t.objectStoreNames.contains("remoteDocumentChanges") && t.deleteObjectStore("remoteDocumentChanges");
        }(t);
        // Note: Schema version 9 used to create a read time index for the
        // RemoteDocumentCache. This is now done with schema version 13.
      })), n < 10 && s >= 10 && (r = r.next(function () {
        return _this126.js(i);
      })), n < 11 && s >= 11 && (r = r.next(function () {
        !function (t) {
          t.createObjectStore("bundles", {
            keyPath: "bundleId"
          });
        }(t), function (t) {
          t.createObjectStore("namedQueries", {
            keyPath: "name"
          });
        }(t);
      })), n < 12 && s >= 12 && (r = r.next(function () {
        !function (t) {
          var e = t.createObjectStore("documentOverlays", {
            keyPath: Oi
          });
          e.createIndex("collectionPathOverlayIndex", Mi, {
            unique: !1
          }), e.createIndex("collectionGroupOverlayIndex", Fi, {
            unique: !1
          });
        }(t);
      })), n < 13 && s >= 13 && (r = r.next(function () {
        return function (t) {
          var e = t.createObjectStore("remoteDocumentsV14", {
            keyPath: Ri
          });
          e.createIndex("documentKeyIndex", bi), e.createIndex("collectionGroupIndex", Pi);
        }(t);
      }).next(function () {
        return _this126.Ws(t, i);
      }).next(function () {
        return t.deleteObjectStore("remoteDocuments");
      })), n < 14 && s >= 14 && (r = r.next(function () {
        return _this126.zs(t, i);
      })), n < 15 && s >= 15 && (r = r.next(function () {
        return function (t) {
          t.createObjectStore("indexConfiguration", {
            keyPath: "indexId",
            autoIncrement: !0
          }).createIndex("collectionGroupIndex", "collectionGroup", {
            unique: !1
          });
          t.createObjectStore("indexState", {
            keyPath: Ci
          }).createIndex("sequenceNumberIndex", xi, {
            unique: !1
          });
          t.createObjectStore("indexEntries", {
            keyPath: Ni
          }).createIndex("documentKeyIndex", ki, {
            unique: !1
          });
        }(t);
      })), r;
    }
  }, {
    key: "Ks",
    value: function Ks(t) {
      var e = 0;
      return t.store("remoteDocuments").Z(function (t, n) {
        e += Qr(n);
      }).next(function () {
        var n = {
          byteSize: e
        };
        return t.store("remoteDocumentGlobal").put("remoteDocumentGlobalKey", n);
      });
    }
  }, {
    key: "Us",
    value: function Us(t) {
      var _this127 = this;
      var e = t.store("mutationQueues"),
        n = t.store("mutations");
      return e.W().next(function (e) {
        return At.forEach(e, function (e) {
          var s = IDBKeyRange.bound([e.userId, -1], [e.userId, e.lastAcknowledgedBatchId]);
          return n.W("userMutationsIndex", s).next(function (n) {
            return At.forEach(n, function (n) {
              index_esm2017_M(n.userId === e.userId);
              var s = er(_this127.yt, n);
              return Gr(t, e.userId, s).next(function () {});
            });
          });
        });
      });
    }
    /**
     * Ensures that every document in the remote document cache has a corresponding sentinel row
     * with a sequence number. Missing rows are given the most recently used sequence number.
     */
  }, {
    key: "Gs",
    value: function Gs(t) {
      var e = t.store("targetDocuments"),
        n = t.store("remoteDocuments");
      return t.store("targetGlobal").get("targetGlobalKey").next(function (t) {
        var s = [];
        return n.Z(function (n, i) {
          var r = new rt(n),
            o = function (t) {
              return [0, mi(t)];
            }(r);
          s.push(e.get(o).next(function (n) {
            return n ? At.resolve() : function (n) {
              return e.put({
                targetId: 0,
                path: mi(n),
                sequenceNumber: t.highestListenSequenceNumber
              });
            }(r);
          }));
        }).next(function () {
          return At.waitFor(s);
        });
      });
    }
  }, {
    key: "Qs",
    value: function Qs(t, e) {
      // Create the index.
      t.createObjectStore("collectionParents", {
        keyPath: Di
      });
      var n = e.store("collectionParents"),
        s = new kr(),
        i = function i(t) {
          if (s.add(t)) {
            var _e37 = t.lastSegment(),
              _s21 = t.popLast();
            return n.put({
              collectionId: _e37,
              parent: mi(_s21)
            });
          }
        };
      // Helper to add an index entry iff we haven't already written it.
      // Index existing remote documents.
      return e.store("remoteDocuments").Z({
        X: !0
      }, function (t, e) {
        var n = new rt(t);
        return i(n.popLast());
      }).next(function () {
        return e.store("documentMutations").Z({
          X: !0
        }, function (_ref16, s) {
          var _ref17 = _slicedToArray(_ref16, 3),
            t = _ref17[0],
            e = _ref17[1],
            n = _ref17[2];
          var r = pi(e);
          return i(r.popLast());
        });
      });
    }
  }, {
    key: "js",
    value: function js(t) {
      var _this128 = this;
      var e = t.store("targets");
      return e.Z(function (t, n) {
        var s = nr(n),
          i = sr(_this128.yt, s);
        return e.put(i);
      });
    }
  }, {
    key: "Ws",
    value: function Ws(t, e) {
      var n = e.store("remoteDocuments"),
        s = [];
      return n.Z(function (t, n) {
        var i = e.store("remoteDocumentsV14"),
          r = (o = n, o.document ? new ct(rt.fromString(o.document.name).popFirst(5)) : o.noDocument ? ct.fromSegments(o.noDocument.path) : o.unknownDocument ? ct.fromSegments(o.unknownDocument.path) : index_esm2017_O()).path.toArray();
        var o;
        /**
        * @license
        * Copyright 2017 Google LLC
        *
        * Licensed under the Apache License, Version 2.0 (the "License");
        * you may not use this file except in compliance with the License.
        * You may obtain a copy of the License at
        *
        *   http://www.apache.org/licenses/LICENSE-2.0
        *
        * Unless required by applicable law or agreed to in writing, software
        * distributed under the License is distributed on an "AS IS" BASIS,
        * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
        * See the License for the specific language governing permissions and
        * limitations under the License.
        */
        var u = {
          prefixPath: r.slice(0, r.length - 2),
          collectionGroup: r[r.length - 2],
          documentId: r[r.length - 1],
          readTime: n.readTime || [0, 0],
          unknownDocument: n.unknownDocument,
          noDocument: n.noDocument,
          document: n.document,
          hasCommittedMutations: !!n.hasCommittedMutations
        };
        s.push(i.put(u));
      }).next(function () {
        return At.waitFor(s);
      });
    }
  }, {
    key: "zs",
    value: function zs(t, e) {
      var _this129 = this;
      var n = e.store("mutations"),
        s = ho(this.yt),
        i = new Vo(Do.Bs, this.yt.ie);
      return n.W().next(function (t) {
        var n = new Map();
        return t.forEach(function (t) {
          var e;
          var s = null !== (e = n.get(t.userId)) && void 0 !== e ? e : Es();
          er(_this129.yt, t).keys().forEach(function (t) {
            return s = s.add(t);
          }), n.set(t.userId, s);
        }), At.forEach(n, function (t, n) {
          var r = new index_esm2017_P(n),
            o = lr.re(_this129.yt, r),
            u = i.getIndexManager(r),
            c = jr.re(r, _this129.yt, u, i.referenceDelegate);
          return new po(s, c, o, u).recalculateAndSaveOverlaysForDocumentKeys(new Ki(e, Ot.at), t).next();
        });
      });
    }
  }]);
  return Co;
}()));
function xo(t) {
  t.createObjectStore("targetDocuments", {
    keyPath: Vi
  }).createIndex("documentTargetsIndex", Si, {
    unique: !0
  });
  // NOTE: This is unique only because the TargetId is the suffix.
  t.createObjectStore("targets", {
    keyPath: "targetId"
  }).createIndex("queryTargetsIndex", vi, {
    unique: !0
  }), t.createObjectStore("targetGlobal");
}
var No = "Failed to obtain exclusive access to the persistence layer. To allow shared access, multi-tab synchronization has to be enabled in all tabs. If you are using `experimentalForceOwningTab:true`, make sure that only one tab has persistence enabled at any given time.";

/**
 * Oldest acceptable age in milliseconds for client metadata before the client
 * is considered inactive and its associated data is garbage collected.
 */
/**
 * An IndexedDB-backed instance of Persistence. Data is stored persistently
 * across sessions.
 *
 * On Web only, the Firestore SDKs support shared access to its persistence
 * layer. This allows multiple browser tabs to read and write to IndexedDb and
 * to synchronize state even without network connectivity. Shared access is
 * currently optional and not enabled unless all clients invoke
 * `enablePersistence()` with `{synchronizeTabs:true}`.
 *
 * In multi-tab mode, if multiple clients are active at the same time, the SDK
 * will designate one client as the “primary client”. An effort is made to pick
 * a visible, network-connected and active client, and this client is
 * responsible for letting other clients know about its presence. The primary
 * client writes a unique client-generated identifier (the client ID) to
 * IndexedDb’s “owner” store every 4 seconds. If the primary client fails to
 * update this entry, another client can acquire the lease and take over as
 * primary.
 *
 * Some persistence operations in the SDK are designated as primary-client only
 * operations. This includes the acknowledgment of mutations and all updates of
 * remote documents. The effects of these operations are written to persistence
 * and then broadcast to other tabs via LocalStorage (see
 * `WebStorageSharedClientState`), which then refresh their state from
 * persistence.
 *
 * Similarly, the primary client listens to notifications sent by secondary
 * clients to discover persistence changes written by secondary clients, such as
 * the addition of new mutations and query targets.
 *
 * If multi-tab is not enabled and another tab already obtained the primary
 * lease, IndexedDbPersistence enters a failed state and all subsequent
 * operations will automatically fail.
 *
 * Additionally, there is an optimization so that when a tab is closed, the
 * primary lease is released immediately (this is especially important to make
 * sure that a refreshed tab is able to immediately re-acquire the primary
 * lease). Unfortunately, IndexedDB cannot be reliably used in window.unload
 * since it is an asynchronous API. So in addition to attempting to give up the
 * lease, the leaseholder writes its client ID to a "zombiedClient" entry in
 * LocalStorage which acts as an indicator that another tab should go ahead and
 * take the primary lease immediately regardless of the current lease timestamp.
 *
 * TODO(b/114226234): Remove `synchronizeTabs` section when multi-tab is no
 * longer optional.
 */
var ko = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  function ko(
  /**
   * Whether to synchronize the in-memory state of multiple tabs and share
   * access to local persistence.
   */
  t, e, n, s, i, r, o, u, c,
  /**
   * If set to true, forcefully obtains database access. Existing tabs will
   * no longer be able to access IndexedDB.
   */
  a) {
    var h = arguments.length > 10 && arguments[10] !== undefined ? arguments[10] : 15;
    _classCallCheck(this, ko);
    if (this.allowTabSynchronization = t, this.persistenceKey = e, this.clientId = n, this.Hs = i, this.window = r, this.document = o, this.Js = c, this.Ys = a, this.Xs = h, this.Ss = null, this.Ds = !1, this.isPrimary = !1, this.networkEnabled = !0, /** Our window.unload handler, if registered. */
    this.Zs = null, this.inForeground = !1, /** Our 'visibilitychange' listener if registered. */
    this.ti = null, /** The client metadata refresh task. */
    this.ei = null, /** The last time we garbage collected the client metadata object store. */
    this.ni = Number.NEGATIVE_INFINITY, /** A listener to notify on primary state changes. */
    this.si = function (t) {
      return Promise.resolve();
    }, !ko.C()) throw new index_esm2017_L(index_esm2017_B.UNIMPLEMENTED, "This platform is either missing IndexedDB or is known to have an incomplete implementation. Offline persistence has been disabled.");
    this.referenceDelegate = new oo(this, s), this.ii = e + "main", this.yt = new Hi(u), this.ri = new bt(this.ii, this.Xs, new Co(this.yt)), this.Cs = new Xr(this.referenceDelegate, this.yt), this.remoteDocumentCache = ho(this.yt), this.Ns = new cr(), this.window && this.window.localStorage ? this.oi = this.window.localStorage : (this.oi = null, !1 === a && index_esm2017_x("IndexedDbPersistence", "LocalStorage is unavailable. As a result, persistence may not work reliably. In particular enablePersistence() could fail immediately after refreshing the page."));
  }
  /**
   * Attempt to start IndexedDb persistence.
   *
   * @returns Whether persistence was enabled.
   */
  _createClass(ko, [{
    key: "start",
    value: function start() {
      var _this130 = this;
      // NOTE: This is expected to fail sometimes (in the case of another tab
      // already having the persistence lock), so it's the first thing we should
      // do.
      return this.ui().then(function () {
        if (!_this130.isPrimary && !_this130.allowTabSynchronization)
          // Fail `start()` if `synchronizeTabs` is disabled and we cannot
          // obtain the primary lease.
          throw new index_esm2017_L(index_esm2017_B.FAILED_PRECONDITION, No);
        return _this130.ci(), _this130.ai(), _this130.hi(), _this130.runTransaction("getHighestListenSequenceNumber", "readonly", function (t) {
          return _this130.Cs.getHighestSequenceNumber(t);
        });
      }).then(function (t) {
        _this130.Ss = new Ot(t, _this130.Js);
      }).then(function () {
        _this130.Ds = !0;
      }).catch(function (t) {
        return _this130.ri && _this130.ri.close(), Promise.reject(t);
      });
    }
    /**
     * Registers a listener that gets called when the primary state of the
     * instance changes. Upon registering, this listener is invoked immediately
     * with the current primary state.
     *
     * PORTING NOTE: This is only used for Web multi-tab.
     */
  }, {
    key: "li",
    value: function li(t) {
      var _this131 = this;
      return this.si = /*#__PURE__*/function () {
        var _ref18 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee8(e) {
          return _regeneratorRuntime().wrap(function _callee8$(_context8) {
            while (1) {
              switch (_context8.prev = _context8.next) {
                case 0:
                  if (!_this131.started) {
                    _context8.next = 2;
                    break;
                  }
                  return _context8.abrupt("return", t(e));
                case 2:
                case "end":
                  return _context8.stop();
              }
            }
          }, _callee8);
        }));
        return function (_x7) {
          return _ref18.apply(this, arguments);
        };
      }(), t(this.isPrimary);
    }
    /**
     * Registers a listener that gets called when the database receives a
     * version change event indicating that it has deleted.
     *
     * PORTING NOTE: This is only used for Web multi-tab.
     */
  }, {
    key: "setDatabaseDeletedListener",
    value: function setDatabaseDeletedListener(t) {
      this.ri.L( /*#__PURE__*/function () {
        var _ref19 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee9(e) {
          return _regeneratorRuntime().wrap(function _callee9$(_context9) {
            while (1) {
              switch (_context9.prev = _context9.next) {
                case 0:
                  _context9.t0 = null === e.newVersion;
                  if (!_context9.t0) {
                    _context9.next = 4;
                    break;
                  }
                  _context9.next = 4;
                  return t();
                case 4:
                case "end":
                  return _context9.stop();
              }
            }
          }, _callee9);
        }));
        return function (_x8) {
          return _ref19.apply(this, arguments);
        };
      }());
    }
    /**
     * Adjusts the current network state in the client's metadata, potentially
     * affecting the primary lease.
     *
     * PORTING NOTE: This is only used for Web multi-tab.
     */
  }, {
    key: "setNetworkEnabled",
    value: function setNetworkEnabled(t) {
      var _this132 = this;
      this.networkEnabled !== t && (this.networkEnabled = t,
      // Schedule a primary lease refresh for immediate execution. The eventual
      // lease update will be propagated via `primaryStateListener`.
      this.Hs.enqueueAndForget( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee10() {
        return _regeneratorRuntime().wrap(function _callee10$(_context10) {
          while (1) {
            switch (_context10.prev = _context10.next) {
              case 0:
                _context10.t0 = _this132.started;
                if (!_context10.t0) {
                  _context10.next = 4;
                  break;
                }
                _context10.next = 4;
                return _this132.ui();
              case 4:
              case "end":
                return _context10.stop();
            }
          }
        }, _callee10);
      }))));
    }
    /**
     * Updates the client metadata in IndexedDb and attempts to either obtain or
     * extend the primary lease for the local client. Asynchronously notifies the
     * primary state listener if the client either newly obtained or released its
     * primary lease.
     */
  }, {
    key: "ui",
    value: function ui() {
      var _this133 = this;
      return this.runTransaction("updateClientMetadataAndTryBecomePrimary", "readwrite", function (t) {
        return Mo(t).put({
          clientId: _this133.clientId,
          updateTimeMs: Date.now(),
          networkEnabled: _this133.networkEnabled,
          inForeground: _this133.inForeground
        }).next(function () {
          if (_this133.isPrimary) return _this133.fi(t).next(function (t) {
            t || (_this133.isPrimary = !1, _this133.Hs.enqueueRetryable(function () {
              return _this133.si(!1);
            }));
          });
        }).next(function () {
          return _this133.di(t);
        }).next(function (e) {
          return _this133.isPrimary && !e ? _this133._i(t).next(function () {
            return !1;
          }) : !!e && _this133.wi(t).next(function () {
            return !0;
          });
        });
      }).catch(function (t) {
        if (Vt(t))
          // Proceed with the existing state. Any subsequent access to
          // IndexedDB will verify the lease.
          return index_esm2017_C("IndexedDbPersistence", "Failed to extend owner lease: ", t), _this133.isPrimary;
        if (!_this133.allowTabSynchronization) throw t;
        return index_esm2017_C("IndexedDbPersistence", "Releasing owner lease after error during lease refresh", t), /* isPrimary= */!1;
      }).then(function (t) {
        _this133.isPrimary !== t && _this133.Hs.enqueueRetryable(function () {
          return _this133.si(t);
        }), _this133.isPrimary = t;
      });
    }
  }, {
    key: "fi",
    value: function fi(t) {
      var _this134 = this;
      return Oo(t).get("owner").next(function (t) {
        return At.resolve(_this134.mi(t));
      });
    }
  }, {
    key: "gi",
    value: function gi(t) {
      return Mo(t).delete(this.clientId);
    }
    /**
     * If the garbage collection threshold has passed, prunes the
     * RemoteDocumentChanges and the ClientMetadata store based on the last update
     * time of all clients.
     */
  }, {
    key: "yi",
    value: function () {
      var _yi = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee11() {
        var _this135 = this;
        var t, _iterator59, _step59, e;
        return _regeneratorRuntime().wrap(function _callee11$(_context11) {
          while (1) {
            switch (_context11.prev = _context11.next) {
              case 0:
                if (!(this.isPrimary && !this.pi(this.ni, 18e5))) {
                  _context11.next = 6;
                  break;
                }
                this.ni = Date.now();
                _context11.next = 4;
                return this.runTransaction("maybeGarbageCollectMultiClientState", "readwrite-primary", function (t) {
                  var e = Gi(t, "clientMetadata");
                  return e.W().next(function (t) {
                    var n = _this135.Ii(t, 18e5),
                      s = t.filter(function (t) {
                        return -1 === n.indexOf(t);
                      });
                    // Delete metadata for clients that are no longer considered active.
                    return At.forEach(s, function (t) {
                      return e.delete(t.clientId);
                    }).next(function () {
                      return s;
                    });
                  });
                }).catch(function () {
                  return [];
                });
              case 4:
                t = _context11.sent;
                // Delete potential leftover entries that may continue to mark the
                // inactive clients as zombied in LocalStorage.
                // Ideally we'd delete the IndexedDb and LocalStorage zombie entries for
                // the client atomically, but we can't. So we opt to delete the IndexedDb
                // entries first to avoid potentially reviving a zombied client.
                if (this.oi) {
                  _iterator59 = _createForOfIteratorHelper(t);
                  try {
                    for (_iterator59.s(); !(_step59 = _iterator59.n()).done;) {
                      e = _step59.value;
                      this.oi.removeItem(this.Ti(e.clientId));
                    }
                  } catch (err) {
                    _iterator59.e(err);
                  } finally {
                    _iterator59.f();
                  }
                }
              case 6:
              case "end":
                return _context11.stop();
            }
          }
        }, _callee11, this);
      }));
      function yi() {
        return _yi.apply(this, arguments);
      }
      return yi;
    }()
    /**
     * Schedules a recurring timer to update the client metadata and to either
     * extend or acquire the primary lease if the client is eligible.
     */
  }, {
    key: "hi",
    value: function hi() {
      var _this136 = this;
      this.ei = this.Hs.enqueueAfterDelay("client_metadata_refresh" /* TimerId.ClientMetadataRefresh */, 4e3, function () {
        return _this136.ui().then(function () {
          return _this136.yi();
        }).then(function () {
          return _this136.hi();
        });
      });
    }
    /** Checks whether `client` is the local client. */
  }, {
    key: "mi",
    value: function mi(t) {
      return !!t && t.ownerId === this.clientId;
    }
    /**
     * Evaluate the state of all active clients and determine whether the local
     * client is or can act as the holder of the primary lease. Returns whether
     * the client is eligible for the lease, but does not actually acquire it.
     * May return 'false' even if there is no active leaseholder and another
     * (foreground) client should become leaseholder instead.
     */
  }, {
    key: "di",
    value: function di(t) {
      var _this137 = this;
      if (this.Ys) return At.resolve(!0);
      return Oo(t).get("owner").next(function (e) {
        // A client is eligible for the primary lease if:
        // - its network is enabled and the client's tab is in the foreground.
        // - its network is enabled and no other client's tab is in the
        //   foreground.
        // - every clients network is disabled and the client's tab is in the
        //   foreground.
        // - every clients network is disabled and no other client's tab is in
        //   the foreground.
        // - the `forceOwningTab` setting was passed in.
        if (null !== e && _this137.pi(e.leaseTimestampMs, 5e3) && !_this137.Ei(e.ownerId)) {
          if (_this137.mi(e) && _this137.networkEnabled) return !0;
          if (!_this137.mi(e)) {
            if (!e.allowTabSynchronization)
              // Fail the `canActAsPrimary` check if the current leaseholder has
              // not opted into multi-tab synchronization. If this happens at
              // client startup, we reject the Promise returned by
              // `enablePersistence()` and the user can continue to use Firestore
              // with in-memory persistence.
              // If this fails during a lease refresh, we will instead block the
              // AsyncQueue from executing further operations. Note that this is
              // acceptable since mixing & matching different `synchronizeTabs`
              // settings is not supported.
              // TODO(b/114226234): Remove this check when `synchronizeTabs` can
              // no longer be turned off.
              throw new index_esm2017_L(index_esm2017_B.FAILED_PRECONDITION, No);
            return !1;
          }
        }
        return !(!_this137.networkEnabled || !_this137.inForeground) || Mo(t).W().next(function (t) {
          return void 0 === _this137.Ii(t, 5e3).find(function (t) {
            if (_this137.clientId !== t.clientId) {
              var _e38 = !_this137.networkEnabled && t.networkEnabled,
                n = !_this137.inForeground && t.inForeground,
                s = _this137.networkEnabled === t.networkEnabled;
              if (_e38 || n && s) return !0;
            }
            return !1;
          });
        });
      }).next(function (t) {
        return _this137.isPrimary !== t && index_esm2017_C("IndexedDbPersistence", "Client ".concat(t ? "is" : "is not", " eligible for a primary lease.")), t;
      });
    }
  }, {
    key: "shutdown",
    value: function () {
      var _shutdown = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee12() {
        var _this138 = this;
        return _regeneratorRuntime().wrap(function _callee12$(_context12) {
          while (1) {
            switch (_context12.prev = _context12.next) {
              case 0:
                this.Ds = !1;
                this.Ai();
                this.ei && (this.ei.cancel(), this.ei = null);
                this.Ri();
                this.bi();
                _context12.next = 7;
                return this.ri.runTransaction("shutdown", "readwrite", ["owner", "clientMetadata"], function (t) {
                  var e = new Ki(t, Ot.at);
                  return _this138._i(e).next(function () {
                    return _this138.gi(e);
                  });
                });
              case 7:
                this.ri.close();
                // Remove the entry marking the client as zombied from LocalStorage since
                // we successfully deleted its metadata from IndexedDb.
                this.Pi();
              case 9:
              case "end":
                return _context12.stop();
            }
          }
        }, _callee12, this);
      }));
      function shutdown() {
        return _shutdown.apply(this, arguments);
      }
      return shutdown;
    }()
    /**
     * Returns clients that are not zombied and have an updateTime within the
     * provided threshold.
     */
  }, {
    key: "Ii",
    value: function Ii(t, e) {
      var _this139 = this;
      return t.filter(function (t) {
        return _this139.pi(t.updateTimeMs, e) && !_this139.Ei(t.clientId);
      });
    }
    /**
     * Returns the IDs of the clients that are currently active. If multi-tab
     * is not supported, returns an array that only contains the local client's
     * ID.
     *
     * PORTING NOTE: This is only used for Web multi-tab.
     */
  }, {
    key: "vi",
    value: function vi() {
      var _this140 = this;
      return this.runTransaction("getActiveClients", "readonly", function (t) {
        return Mo(t).W().next(function (t) {
          return _this140.Ii(t, 18e5).map(function (t) {
            return t.clientId;
          });
        });
      });
    }
  }, {
    key: "started",
    get: function get() {
      return this.Ds;
    }
  }, {
    key: "getMutationQueue",
    value: function getMutationQueue(t, e) {
      return jr.re(t, this.yt, e, this.referenceDelegate);
    }
  }, {
    key: "getTargetCache",
    value: function getTargetCache() {
      return this.Cs;
    }
  }, {
    key: "getRemoteDocumentCache",
    value: function getRemoteDocumentCache() {
      return this.remoteDocumentCache;
    }
  }, {
    key: "getIndexManager",
    value: function getIndexManager(t) {
      return new Mr(t, this.yt.ie.databaseId);
    }
  }, {
    key: "getDocumentOverlayCache",
    value: function getDocumentOverlayCache(t) {
      return lr.re(this.yt, t);
    }
  }, {
    key: "getBundleCache",
    value: function getBundleCache() {
      return this.Ns;
    }
  }, {
    key: "runTransaction",
    value: function runTransaction(t, e, n) {
      var _this141 = this;
      index_esm2017_C("IndexedDbPersistence", "Starting transaction:", t);
      var s = "readonly" === e ? "readonly" : "readwrite",
        i = 15 === (r = this.Xs) ? Ui : 14 === r ? qi : 13 === r ? Li : 12 === r ? Bi : 11 === r ? $i : void index_esm2017_O();
      /** Returns the object stores for the provided schema. */
      var r;
      var o;
      // Do all transactions as readwrite against all object stores, since we
      // are the only reader/writer.
      return this.ri.runTransaction(t, s, i, function (s) {
        return o = new Ki(s, _this141.Ss ? _this141.Ss.next() : Ot.at), "readwrite-primary" === e ? _this141.fi(o).next(function (t) {
          return !!t || _this141.di(o);
        }).next(function (e) {
          if (!e) throw index_esm2017_x("Failed to obtain primary lease for action '".concat(t, "'.")), _this141.isPrimary = !1, _this141.Hs.enqueueRetryable(function () {
            return _this141.si(!1);
          }), new index_esm2017_L(index_esm2017_B.FAILED_PRECONDITION, It);
          return n(o);
        }).next(function (t) {
          return _this141.wi(o).next(function () {
            return t;
          });
        }) : _this141.Vi(o).next(function () {
          return n(o);
        });
      }).then(function (t) {
        return o.raiseOnCommittedEvent(), t;
      });
    }
    /**
     * Verifies that the current tab is the primary leaseholder or alternatively
     * that the leaseholder has opted into multi-tab synchronization.
     */
    // TODO(b/114226234): Remove this check when `synchronizeTabs` can no longer
    // be turned off.
  }, {
    key: "Vi",
    value: function Vi(t) {
      var _this142 = this;
      return Oo(t).get("owner").next(function (t) {
        if (null !== t && _this142.pi(t.leaseTimestampMs, 5e3) && !_this142.Ei(t.ownerId) && !_this142.mi(t) && !(_this142.Ys || _this142.allowTabSynchronization && t.allowTabSynchronization)) throw new index_esm2017_L(index_esm2017_B.FAILED_PRECONDITION, No);
      });
    }
    /**
     * Obtains or extends the new primary lease for the local client. This
     * method does not verify that the client is eligible for this lease.
     */
  }, {
    key: "wi",
    value: function wi(t) {
      var e = {
        ownerId: this.clientId,
        allowTabSynchronization: this.allowTabSynchronization,
        leaseTimestampMs: Date.now()
      };
      return Oo(t).put("owner", e);
    }
  }, {
    key: "_i",
    value: /** Checks the primary lease and removes it if we are the current primary. */function _i(t) {
      var _this143 = this;
      var e = Oo(t);
      return e.get("owner").next(function (t) {
        return _this143.mi(t) ? (index_esm2017_C("IndexedDbPersistence", "Releasing primary lease."), e.delete("owner")) : At.resolve();
      });
    }
    /** Verifies that `updateTimeMs` is within `maxAgeMs`. */
  }, {
    key: "pi",
    value: function pi(t, e) {
      var n = Date.now();
      return !(t < n - e) && (!(t > n) || (index_esm2017_x("Detected an update time that is in the future: ".concat(t, " > ").concat(n)), !1));
    }
  }, {
    key: "ci",
    value: function ci() {
      var _this144 = this;
      null !== this.document && "function" == typeof this.document.addEventListener && (this.ti = function () {
        _this144.Hs.enqueueAndForget(function () {
          return _this144.inForeground = "visible" === _this144.document.visibilityState, _this144.ui();
        });
      }, this.document.addEventListener("visibilitychange", this.ti), this.inForeground = "visible" === this.document.visibilityState);
    }
  }, {
    key: "Ri",
    value: function Ri() {
      this.ti && (this.document.removeEventListener("visibilitychange", this.ti), this.ti = null);
    }
    /**
     * Attaches a window.unload handler that will synchronously write our
     * clientId to a "zombie client id" location in LocalStorage. This can be used
     * by tabs trying to acquire the primary lease to determine that the lease
     * is no longer valid even if the timestamp is recent. This is particularly
     * important for the refresh case (so the tab correctly re-acquires the
     * primary lease). LocalStorage is used for this rather than IndexedDb because
     * it is a synchronous API and so can be used reliably from  an unload
     * handler.
     */
  }, {
    key: "ai",
    value: function ai() {
      var _this145 = this;
      var t;
      "function" == typeof (null === (t = this.window) || void 0 === t ? void 0 : t.addEventListener) && (this.Zs = function () {
        // Note: In theory, this should be scheduled on the AsyncQueue since it
        // accesses internal state. We execute this code directly during shutdown
        // to make sure it gets a chance to run.
        _this145.Ai(), isSafari() && navigator.appVersion.match(/Version\/1[45]/) &&
        // On Safari 14 and 15, we do not run any cleanup actions as it might
        // trigger a bug that prevents Safari from re-opening IndexedDB during
        // the next page load.
        // See https://bugs.webkit.org/show_bug.cgi?id=226547
        _this145.Hs.enterRestrictedMode( /* purgeExistingTasks= */!0), _this145.Hs.enqueueAndForget(function () {
          return _this145.shutdown();
        });
      }, this.window.addEventListener("pagehide", this.Zs));
    }
  }, {
    key: "bi",
    value: function bi() {
      this.Zs && (this.window.removeEventListener("pagehide", this.Zs), this.Zs = null);
    }
    /**
     * Returns whether a client is "zombied" based on its LocalStorage entry.
     * Clients become zombied when their tab closes without running all of the
     * cleanup logic in `shutdown()`.
     */
  }, {
    key: "Ei",
    value: function Ei(t) {
      var e;
      try {
        var n = null !== (null === (e = this.oi) || void 0 === e ? void 0 : e.getItem(this.Ti(t)));
        return index_esm2017_C("IndexedDbPersistence", "Client '".concat(t, "' ").concat(n ? "is" : "is not", " zombied in LocalStorage")), n;
      } catch (t) {
        // Gracefully handle if LocalStorage isn't working.
        return index_esm2017_x("IndexedDbPersistence", "Failed to get zombied client id.", t), !1;
      }
    }
    /**
     * Record client as zombied (a client that had its tab closed). Zombied
     * clients are ignored during primary tab selection.
     */
  }, {
    key: "Ai",
    value: function Ai() {
      if (this.oi) try {
        this.oi.setItem(this.Ti(this.clientId), String(Date.now()));
      } catch (t) {
        // Gracefully handle if LocalStorage isn't available / working.
        index_esm2017_x("Failed to set zombie client id.", t);
      }
    }
    /** Removes the zombied client entry if it exists. */
  }, {
    key: "Pi",
    value: function Pi() {
      if (this.oi) try {
        this.oi.removeItem(this.Ti(this.clientId));
      } catch (t) {
        // Ignore
      }
    }
  }, {
    key: "Ti",
    value: function Ti(t) {
      return "firestore_zombie_".concat(this.persistenceKey, "_").concat(t);
    }
  }], [{
    key: "C",
    value: function C() {
      return bt.C();
    }
  }]);
  return ko;
}()));
/**
 * Helper to get a typed SimpleDbStore for the primary client object store.
 */
function Oo(t) {
  return Gi(t, "owner");
}

/**
 * Helper to get a typed SimpleDbStore for the client metadata object store.
 */
function Mo(t) {
  return Gi(t, "clientMetadata");
}

/**
 * Generates a string used as a prefix when storing data in IndexedDB and
 * LocalStorage.
 */
function Fo(t, e) {
  // Use two different prefix formats:
  //   * firestore / persistenceKey / projectID . databaseID / ...
  //   * firestore / persistenceKey / projectID / ...
  // projectIDs are DNS-compatible names and cannot contain dots
  // so there's no danger of collisions.
  var n = t.projectId;
  return t.isDefaultDatabase || (n += "." + t.database), "firestore/" + e + "/" + n + "/";
}

/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * A set of changes to what documents are currently in view and out of view for
 * a given query. These changes are sent to the LocalStore by the View (via
 * the SyncEngine) and are used to pin / unpin documents as appropriate.
 */
var $o = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  function $o(t, e, n, s) {
    _classCallCheck(this, $o);
    this.targetId = t, this.fromCache = e, this.Si = n, this.Di = s;
  }
  _createClass($o, null, [{
    key: "Ci",
    value: function Ci(t, e) {
      var n = Es(),
        s = Es();
      var _iterator60 = _createForOfIteratorHelper(e.docChanges),
        _step60;
      try {
        for (_iterator60.s(); !(_step60 = _iterator60.n()).done;) {
          var _t77 = _step60.value;
          switch (_t77.type) {
            case 0 /* ChangeType.Added */:
              n = n.add(_t77.doc.key);
              break;
            case 1 /* ChangeType.Removed */:
              s = s.add(_t77.doc.key);
            // do nothing
          }
        }
      } catch (err) {
        _iterator60.e(err);
      } finally {
        _iterator60.f();
      }
      return new $o(t, e.fromCache, n, s);
    }
  }]);
  return $o;
}()));
/**
 * @license
 * Copyright 2019 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * The Firestore query engine.
 *
 * Firestore queries can be executed in three modes. The Query Engine determines
 * what mode to use based on what data is persisted. The mode only determines
 * the runtime complexity of the query - the result set is equivalent across all
 * implementations.
 *
 * The Query engine will use indexed-based execution if a user has configured
 * any index that can be used to execute query (via `setIndexConfiguration()`).
 * Otherwise, the engine will try to optimize the query by re-using a previously
 * persisted query result. If that is not possible, the query will be executed
 * via a full collection scan.
 *
 * Index-based execution is the default when available. The query engine
 * supports partial indexed execution and merges the result from the index
 * lookup with documents that have not yet been indexed. The index evaluation
 * matches the backend's format and as such, the SDK can use indexing for all
 * queries that the backend supports.
 *
 * If no index exists, the query engine tries to take advantage of the target
 * document mapping in the TargetCache. These mappings exists for all queries
 * that have been synced with the backend at least once and allow the query
 * engine to only read documents that previously matched a query plus any
 * documents that were edited after the query was last listened to.
 *
 * There are some cases when this optimization is not guaranteed to produce
 * the same results as full collection scans. In these cases, query
 * processing falls back to full scans. These cases are:
 *
 * - Limit queries where a document that matched the query previously no longer
 *   matches the query.
 *
 * - Limit queries where a document edit may cause the document to sort below
 *   another document that is in the local cache.
 *
 * - Queries that have never been CURRENT or free of limbo documents.
 */
var Bo = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  function Bo() {
    _classCallCheck(this, Bo);
    this.xi = !1;
  }
  /** Sets the document view to query against. */
  _createClass(Bo, [{
    key: "initialize",
    value: function initialize(t, e) {
      this.Ni = t, this.indexManager = e, this.xi = !0;
    }
    /** Returns all local documents matching the specified query. */
  }, {
    key: "getDocumentsMatchingQuery",
    value: function getDocumentsMatchingQuery(t, e, n, s) {
      var _this146 = this;
      return this.ki(t, e).next(function (i) {
        return i || _this146.Oi(t, e, s, n);
      }).next(function (n) {
        return n || _this146.Mi(t, e);
      });
    }
    /**
     * Performs an indexed query that evaluates the query based on a collection's
     * persisted index values. Returns `null` if an index is not available.
     */
  }, {
    key: "ki",
    value: function ki(t, e) {
      var _this147 = this;
      if (fn(e))
        // Queries that match all documents don't benefit from using
        // key-based lookups. It is more efficient to scan all documents in a
        // collection, rather than to perform individual lookups.
        return At.resolve(null);
      var n = gn(e);
      return this.indexManager.getIndexType(t, n).next(function (s) {
        return 0 /* IndexType.NONE */ === s ? null : (null !== e.limit && 1 /* IndexType.PARTIAL */ === s && (
        // We cannot apply a limit for targets that are served using a partial
        // index. If a partial index will be used to serve the target, the
        // query may return a superset of documents that match the target
        // (e.g. if the index doesn't include all the target's filters), or
        // may return the correct set of documents in the wrong order (e.g. if
        // the index doesn't include a segment for one of the orderBys).
        // Therefore, a limit should not be applied in such cases.
        e = pn(e, null, "F" /* LimitType.First */), n = gn(e)), _this147.indexManager.getDocumentsMatchingTarget(t, n).next(function (s) {
          var i = Es.apply(void 0, _toConsumableArray(s));
          return _this147.Ni.getDocuments(t, i).next(function (s) {
            return _this147.indexManager.getMinOffset(t, n).next(function (n) {
              var r = _this147.Fi(e, s);
              return _this147.$i(e, r, i, n.readTime) ? _this147.ki(t, pn(e, null, "F" /* LimitType.First */)) : _this147.Bi(t, r, e, n);
            });
          });
        }));
      });
    }
    /**
     * Performs a query based on the target's persisted query mapping. Returns
     * `null` if the mapping is not available or cannot be used.
     */
  }, {
    key: "Oi",
    value: function Oi(t, e, n, s) {
      var _this148 = this;
      return fn(e) || s.isEqual(st.min()) ? this.Mi(t, e) : this.Ni.getDocuments(t, n).next(function (i) {
        var r = _this148.Fi(e, i);
        return _this148.$i(e, r, n, s) ? _this148.Mi(t, e) : (index_esm2017_S() <= LogLevel.DEBUG && index_esm2017_C("QueryEngine", "Re-using previous result from %s to execute query: %s", s.toString(), En(e)), _this148.Bi(t, r, e, mt(s, -1)));
      });
      // Queries that have never seen a snapshot without limbo free documents
      // should also be run as a full collection scan.
    }
    /** Applies the query filter and sorting to the provided documents.  */
  }, {
    key: "Fi",
    value: function Fi(t, e) {
      // Sort the documents and re-apply the query filter since previously
      // matching documents do not necessarily still match the query.
      var n = new We(bn(t));
      return e.forEach(function (e, s) {
        An(t, s) && (n = n.add(s));
      }), n;
    }
    /**
     * Determines if a limit query needs to be refilled from cache, making it
     * ineligible for index-free execution.
     *
     * @param query - The query.
     * @param sortedPreviousResults - The documents that matched the query when it
     * was last synchronized, sorted by the query's comparator.
     * @param remoteKeys - The document keys that matched the query at the last
     * snapshot.
     * @param limboFreeSnapshotVersion - The version of the snapshot when the
     * query was last synchronized.
     */
  }, {
    key: "$i",
    value: function $i(t, e, n, s) {
      if (null === t.limit)
        // Queries without limits do not need to be refilled.
        return !1;
      if (n.size !== e.size)
        // The query needs to be refilled if a previously matching document no
        // longer matches.
        return !0;
      // Limit queries are not eligible for index-free query execution if there is
      // a potential that an older document from cache now sorts before a document
      // that was previously part of the limit. This, however, can only happen if
      // the document at the edge of the limit goes out of limit.
      // If a document that is not the limit boundary sorts differently,
      // the boundary of the limit itself did not change and documents from cache
      // will continue to be "rejected" by this boundary. Therefore, we can ignore
      // any modifications that don't affect the last document.
      var i = "F" /* LimitType.First */ === t.limitType ? e.last() : e.first();
      return !!i && (i.hasPendingWrites || i.version.compareTo(s) > 0);
    }
  }, {
    key: "Mi",
    value: function Mi(t, e) {
      return index_esm2017_S() <= LogLevel.DEBUG && index_esm2017_C("QueryEngine", "Using full collection scan to execute query:", En(e)), this.Ni.getDocumentsMatchingQuery(t, e, yt.min());
    }
    /**
     * Combines the results from an indexed execution with the remaining documents
     * that have not yet been indexed.
     */
  }, {
    key: "Bi",
    value: function Bi(t, e, n, s) {
      // Retrieve all results for documents that were updated since the offset.
      return this.Ni.getDocumentsMatchingQuery(t, n, s).next(function (t) {
        return (
          // Merge with existing results
          e.forEach(function (e) {
            t = t.insert(e.key, e);
          }), t
        );
      });
    }
  }]);
  return Bo;
}()));
/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * Implements `LocalStore` interface.
 *
 * Note: some field defined in this class might have public access level, but
 * the class is not exported so they are only accessible from this module.
 * This is useful to implement optional features (like bundles) in free
 * functions, such that they are tree-shakeable.
 */
var Lo = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  function Lo( /** Manages our in-memory or durable persistence. */
  t, e, n, s) {
    _classCallCheck(this, Lo);
    this.persistence = t, this.Li = e, this.yt = s,
    /**
     * Maps a targetID to data about its target.
     *
     * PORTING NOTE: We are using an immutable data structure on Web to make re-runs
     * of `applyRemoteEvent()` idempotent.
     */
    this.qi = new Ge(Z), /** Maps a target to its targetID. */
    // TODO(wuandy): Evaluate if TargetId can be part of Target.
    this.Ui = new ls(function (t) {
      return nn(t);
    }, sn),
    /**
     * A per collection group index of the last read time processed by
     * `getNewDocumentChanges()`.
     *
     * PORTING NOTE: This is only used for multi-tab synchronization.
     */
    this.Ki = new Map(), this.Gi = t.getRemoteDocumentCache(), this.Cs = t.getTargetCache(), this.Ns = t.getBundleCache(), this.Qi(n);
  }
  _createClass(Lo, [{
    key: "Qi",
    value: function Qi(t) {
      // TODO(indexing): Add spec tests that test these components change after a
      // user change
      this.documentOverlayCache = this.persistence.getDocumentOverlayCache(t), this.indexManager = this.persistence.getIndexManager(t), this.mutationQueue = this.persistence.getMutationQueue(t, this.indexManager), this.localDocuments = new po(this.Gi, this.mutationQueue, this.documentOverlayCache, this.indexManager), this.Gi.setIndexManager(this.indexManager), this.Li.initialize(this.localDocuments, this.indexManager);
    }
  }, {
    key: "collectGarbage",
    value: function collectGarbage(t) {
      var _this149 = this;
      return this.persistence.runTransaction("Collect garbage", "readwrite-primary", function (e) {
        return t.collect(e, _this149.qi);
      });
    }
  }]);
  return Lo;
}()));
function qo( /** Manages our in-memory or durable persistence. */
t, e, n, s) {
  return new Lo(t, e, n, s);
}

/**
 * Tells the LocalStore that the currently authenticated user has changed.
 *
 * In response the local store switches the mutation queue to the new user and
 * returns any resulting document changes.
 */
// PORTING NOTE: Android and iOS only return the documents affected by the
// change.
function Uo(_x9, _x10) {
  return _Uo.apply(this, arguments);
}
/* Accepts locally generated Mutations and commit them to storage. */
/**
 * Acknowledges the given batch.
 *
 * On the happy path when a batch is acknowledged, the local store will
 *
 *  + remove the batch from the mutation queue;
 *  + apply the changes to the remote document cache;
 *  + recalculate the latency compensated view implied by those changes (there
 *    may be mutations in the queue that affect the documents but haven't been
 *    acknowledged yet); and
 *  + give the changed documents back the sync engine
 *
 * @returns The resulting (modified) documents.
 */
function _Uo() {
  _Uo = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee75(t, e) {
    var n;
    return _regeneratorRuntime().wrap(function _callee75$(_context75) {
      while (1) {
        switch (_context75.prev = _context75.next) {
          case 0:
            n = $(t);
            _context75.next = 3;
            return n.persistence.runTransaction("Handle user change", "readonly", function (t) {
              // Swap out the mutation queue, grabbing the pending mutation batches
              // before and after.
              var s;
              return n.mutationQueue.getAllMutationBatches(t).next(function (i) {
                return s = i, n.Qi(e), n.mutationQueue.getAllMutationBatches(t);
              }).next(function (e) {
                var i = [],
                  r = [];
                // Union the old/new changed keys.
                var o = Es();
                var _iterator89 = _createForOfIteratorHelper(s),
                  _step89;
                try {
                  for (_iterator89.s(); !(_step89 = _iterator89.n()).done;) {
                    var _t120 = _step89.value;
                    i.push(_t120.batchId);
                    var _iterator91 = _createForOfIteratorHelper(_t120.mutations),
                      _step91;
                    try {
                      for (_iterator91.s(); !(_step91 = _iterator91.n()).done;) {
                        var _e56 = _step91.value;
                        o = o.add(_e56.key);
                      }
                    } catch (err) {
                      _iterator91.e(err);
                    } finally {
                      _iterator91.f();
                    }
                  }
                } catch (err) {
                  _iterator89.e(err);
                } finally {
                  _iterator89.f();
                }
                var _iterator90 = _createForOfIteratorHelper(e),
                  _step90;
                try {
                  for (_iterator90.s(); !(_step90 = _iterator90.n()).done;) {
                    var _t121 = _step90.value;
                    r.push(_t121.batchId);
                    var _iterator92 = _createForOfIteratorHelper(_t121.mutations),
                      _step92;
                    try {
                      for (_iterator92.s(); !(_step92 = _iterator92.n()).done;) {
                        var _e57 = _step92.value;
                        o = o.add(_e57.key);
                      }
                    } catch (err) {
                      _iterator92.e(err);
                    } finally {
                      _iterator92.f();
                    }
                  }
                  // Return the set of all (potentially) changed documents and the list
                  // of mutation batch IDs that were affected by change.
                } catch (err) {
                  _iterator90.e(err);
                } finally {
                  _iterator90.f();
                }
                return n.localDocuments.getDocuments(t, o).next(function (t) {
                  return {
                    ji: t,
                    removedBatchIds: i,
                    addedBatchIds: r
                  };
                });
              });
            });
          case 3:
            return _context75.abrupt("return", _context75.sent);
          case 4:
          case "end":
            return _context75.stop();
        }
      }
    }, _callee75);
  }));
  return _Uo.apply(this, arguments);
}
function Ko(t, e) {
  var n = $(t);
  return n.persistence.runTransaction("Acknowledge batch", "readwrite-primary", function (t) {
    var s = e.batch.keys(),
      i = n.Gi.newChangeBuffer({
        trackRemovals: !0
      });
    return function (t, e, n, s) {
      var i = n.batch,
        r = i.keys();
      var o = At.resolve();
      return r.forEach(function (t) {
        o = o.next(function () {
          return s.getEntry(e, t);
        }).next(function (e) {
          var r = n.docVersions.get(t);
          index_esm2017_M(null !== r), e.version.compareTo(r) < 0 && (i.applyToRemoteDocument(e, n), e.isValidDocument() && (
          // We use the commitVersion as the readTime rather than the
          // document's updateTime since the updateTime is not advanced
          // for updates that do not modify the underlying document.
          e.setReadTime(n.commitVersion), s.addEntry(e)));
        });
      }), o.next(function () {
        return t.mutationQueue.removeMutationBatch(e, i);
      });
    }
    /** Returns the local view of the documents affected by a mutation batch. */
    // PORTING NOTE: Multi-Tab only.
    (n, t, e, i).next(function () {
      return i.apply(t);
    }).next(function () {
      return n.mutationQueue.performConsistencyCheck(t);
    }).next(function () {
      return n.documentOverlayCache.removeOverlaysForBatchId(t, s, e.batch.batchId);
    }).next(function () {
      return n.localDocuments.recalculateAndSaveOverlaysForDocumentKeys(t, function (t) {
        var e = Es();
        for (var _n27 = 0; _n27 < t.mutationResults.length; ++_n27) {
          t.mutationResults[_n27].transformResults.length > 0 && (e = e.add(t.batch.mutations[_n27].key));
        }
        return e;
      }
      /**
      * Removes mutations from the MutationQueue for the specified batch;
      * LocalDocuments will be recalculated.
      *
      * @returns The resulting modified documents.
      */(e));
    }).next(function () {
      return n.localDocuments.getDocuments(t, s);
    });
  });
}

/**
 * Returns the last consistent snapshot processed (used by the RemoteStore to
 * determine whether to buffer incoming snapshots from the backend).
 */
function Go(t) {
  var e = $(t);
  return e.persistence.runTransaction("Get last remote snapshot version", "readonly", function (t) {
    return e.Cs.getLastRemoteSnapshotVersion(t);
  });
}

/**
 * Updates the "ground-state" (remote) documents. We assume that the remote
 * event reflects any write batches that have been acknowledged or rejected
 * (i.e. we do not re-apply local mutations to updates from this event).
 *
 * LocalDocuments are re-calculated if there are remaining mutations in the
 * queue.
 */
function Qo(t, e) {
  var n = $(t),
    s = e.snapshotVersion;
  var i = n.qi;
  return n.persistence.runTransaction("Apply remote event", "readwrite-primary", function (t) {
    var r = n.Gi.newChangeBuffer({
      trackRemovals: !0
    });
    // Reset newTargetDataByTargetMap in case this transaction gets re-run.
    i = n.qi;
    var o = [];
    e.targetChanges.forEach(function (r, u) {
      var c = i.get(u);
      if (!c) return;
      // Only update the remote keys if the target is still active. This
      // ensures that we can persist the updated target data along with
      // the updated assignment.
      o.push(n.Cs.removeMatchingKeys(t, r.removedDocuments, u).next(function () {
        return n.Cs.addMatchingKeys(t, r.addedDocuments, u);
      }));
      var a = c.withSequenceNumber(t.currentSequenceNumber);
      e.targetMismatches.has(u) ? a = a.withResumeToken(Qt.EMPTY_BYTE_STRING, st.min()).withLastLimboFreeSnapshotVersion(st.min()) : r.resumeToken.approximateByteSize() > 0 && (a = a.withResumeToken(r.resumeToken, s)), i = i.insert(u, a),
      // Update the target data if there are target changes (or if
      // sufficient time has passed since the last update).
      /**
      * Returns true if the newTargetData should be persisted during an update of
      * an active target. TargetData should always be persisted when a target is
      * being released and should not call this function.
      *
      * While the target is active, TargetData updates can be omitted when nothing
      * about the target has changed except metadata like the resume token or
      * snapshot version. Occasionally it's worth the extra write to prevent these
      * values from getting too stale after a crash, but this doesn't have to be
      * too frequent.
      */
      function (t, e, n) {
        // Always persist target data if we don't already have a resume token.
        if (0 === t.resumeToken.approximateByteSize()) return !0;
        // Don't allow resume token changes to be buffered indefinitely. This
        // allows us to be reasonably up-to-date after a crash and avoids needing
        // to loop over all active queries on shutdown. Especially in the browser
        // we may not get time to do anything interesting while the current tab is
        // closing.
        if (e.snapshotVersion.toMicroseconds() - t.snapshotVersion.toMicroseconds() >= 3e8) return !0;
        // Otherwise if the only thing that has changed about a target is its resume
        // token it's not worth persisting. Note that the RemoteStore keeps an
        // in-memory view of the currently active targets which includes the current
        // resume token, so stream failure or user changes will still use an
        // up-to-date resume token regardless of what we do here.
        return n.addedDocuments.size + n.modifiedDocuments.size + n.removedDocuments.size > 0;
      }
      /**
      * Notifies local store of the changed views to locally pin documents.
      */(c, a, r) && o.push(n.Cs.updateTargetData(t, a));
    });
    var u = ds(),
      c = Es();
    // HACK: The only reason we allow a null snapshot version is so that we
    // can synthesize remote events when we get permission denied errors while
    // trying to resolve the state of a locally cached document that is in
    // limbo.
    if (e.documentUpdates.forEach(function (s) {
      e.resolvedLimboDocuments.has(s) && o.push(n.persistence.referenceDelegate.updateLimboDocument(t, s));
    }),
    // Each loop iteration only affects its "own" doc, so it's safe to get all
    // the remote documents in advance in a single call.
    o.push(jo(t, r, e.documentUpdates).next(function (t) {
      u = t.Wi, c = t.zi;
    })), !s.isEqual(st.min())) {
      var _e39 = n.Cs.getLastRemoteSnapshotVersion(t).next(function (e) {
        return n.Cs.setTargetsMetadata(t, t.currentSequenceNumber, s);
      });
      o.push(_e39);
    }
    return At.waitFor(o).next(function () {
      return r.apply(t);
    }).next(function () {
      return n.localDocuments.getLocalViewOfDocuments(t, u, c);
    }).next(function () {
      return u;
    });
  }).then(function (t) {
    return n.qi = i, t;
  });
}

/**
 * Populates document change buffer with documents from backend or a bundle.
 * Returns the document changes resulting from applying those documents, and
 * also a set of documents whose existence state are changed as a result.
 *
 * @param txn - Transaction to use to read existing documents from storage.
 * @param documentBuffer - Document buffer to collect the resulted changes to be
 *        applied to storage.
 * @param documents - Documents to be applied.
 */
function jo(t, e, n) {
  var s = Es(),
    i = Es();
  return n.forEach(function (t) {
    return s = s.add(t);
  }), e.getEntries(t, s).next(function (t) {
    var s = ds();
    return n.forEach(function (n, r) {
      var o = t.get(n);
      // Check if see if there is a existence state change for this document.
      r.isFoundDocument() !== o.isFoundDocument() && (i = i.add(n)),
      // Note: The order of the steps below is important, since we want
      // to ensure that rejected limbo resolutions (which fabricate
      // NoDocuments with SnapshotVersion.min()) never add documents to
      // cache.
      r.isNoDocument() && r.version.isEqual(st.min()) ? (
      // NoDocuments with SnapshotVersion.min() are used in manufactured
      // events. We remove these documents from cache since we lost
      // access.
      e.removeEntry(n, r.readTime), s = s.insert(n, r)) : !o.isValidDocument() || r.version.compareTo(o.version) > 0 || 0 === r.version.compareTo(o.version) && o.hasPendingWrites ? (e.addEntry(r), s = s.insert(n, r)) : index_esm2017_C("LocalStore", "Ignoring outdated watch update for ", n, ". Current version:", o.version, " Watch version:", r.version);
    }), {
      Wi: s,
      zi: i
    };
  });
}

/**
 * Gets the mutation batch after the passed in batchId in the mutation queue
 * or null if empty.
 * @param afterBatchId - If provided, the batch to search after.
 * @returns The next mutation or null if there wasn't one.
 */
function Wo(t, e) {
  var n = $(t);
  return n.persistence.runTransaction("Get next mutation batch", "readonly", function (t) {
    return void 0 === e && (e = -1), n.mutationQueue.getNextMutationBatchAfterBatchId(t, e);
  });
}

/**
 * Reads the current value of a Document with a given key or null if not
 * found - used for testing.
 */
/**
 * Assigns the given target an internal ID so that its results can be pinned so
 * they don't get GC'd. A target must be allocated in the local store before
 * the store can be used to manage its view.
 *
 * Allocating an already allocated `Target` will return the existing `TargetData`
 * for that `Target`.
 */
function zo(t, e) {
  var n = $(t);
  return n.persistence.runTransaction("Allocate target", "readwrite", function (t) {
    var s;
    return n.Cs.getTargetData(t, e).next(function (i) {
      return i ? (
      // This target has been listened to previously, so reuse the
      // previous targetID.
      // TODO(mcg): freshen last accessed date?
      s = i, At.resolve(s)) : n.Cs.allocateTargetId(t).next(function (i) {
        return s = new zi(e, i, 0 /* TargetPurpose.Listen */, t.currentSequenceNumber), n.Cs.addTargetData(t, s).next(function () {
          return s;
        });
      });
    });
  }).then(function (t) {
    // If Multi-Tab is enabled, the existing target data may be newer than
    // the in-memory data
    var s = n.qi.get(t.targetId);
    return (null === s || t.snapshotVersion.compareTo(s.snapshotVersion) > 0) && (n.qi = n.qi.insert(t.targetId, t), n.Ui.set(e, t.targetId)), t;
  });
}

/**
 * Returns the TargetData as seen by the LocalStore, including updates that may
 * have not yet been persisted to the TargetCache.
 */
// Visible for testing.
/**
 * Unpins all the documents associated with the given target. If
 * `keepPersistedTargetData` is set to false and Eager GC enabled, the method
 * directly removes the associated target data from the target cache.
 *
 * Releasing a non-existing `Target` is a no-op.
 */
// PORTING NOTE: `keepPersistedTargetData` is multi-tab only.
function Ho(_x11, _x12, _x13) {
  return _Ho.apply(this, arguments);
}
/**
 * Runs the specified query against the local store and returns the results,
 * potentially taking advantage of query data from previous executions (such
 * as the set of remote keys).
 *
 * @param usePreviousResults - Whether results from previous executions can
 * be used to optimize this query execution.
 */
function _Ho() {
  _Ho = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee76(t, e, n) {
    var s, i, r;
    return _regeneratorRuntime().wrap(function _callee76$(_context76) {
      while (1) {
        switch (_context76.prev = _context76.next) {
          case 0:
            s = $(t), i = s.qi.get(e), r = n ? "readwrite" : "readwrite-primary";
            _context76.prev = 1;
            _context76.t0 = n;
            if (_context76.t0) {
              _context76.next = 6;
              break;
            }
            _context76.next = 6;
            return s.persistence.runTransaction("Release target", r, function (t) {
              return s.persistence.referenceDelegate.removeTarget(t, i);
            });
          case 6:
            _context76.next = 13;
            break;
          case 8:
            _context76.prev = 8;
            _context76.t1 = _context76["catch"](1);
            if (Vt(_context76.t1)) {
              _context76.next = 12;
              break;
            }
            throw _context76.t1;
          case 12:
            // All `releaseTarget` does is record the final metadata state for the
            // target, but we've been recording this periodically during target
            // activity. If we lose this write this could cause a very slight
            // difference in the order of target deletion during GC, but we
            // don't define exact LRU semantics so this is acceptable.
            index_esm2017_C("LocalStore", "Failed to update sequence numbers for target ".concat(e, ": ").concat(_context76.t1));
          case 13:
            s.qi = s.qi.remove(e), s.Ui.delete(i.target);
          case 14:
          case "end":
            return _context76.stop();
        }
      }
    }, _callee76, null, [[1, 8]]);
  }));
  return _Ho.apply(this, arguments);
}
function Jo(t, e, n) {
  var s = $(t);
  var i = st.min(),
    r = Es();
  return s.persistence.runTransaction("Execute query", "readonly", function (t) {
    return function (t, e, n) {
      var s = $(t),
        i = s.Ui.get(n);
      return void 0 !== i ? At.resolve(s.qi.get(i)) : s.Cs.getTargetData(e, n);
    }(s, t, gn(e)).next(function (e) {
      if (e) return i = e.lastLimboFreeSnapshotVersion, s.Cs.getMatchingKeysForTargetId(t, e.targetId).next(function (t) {
        r = t;
      });
    }).next(function () {
      return s.Li.getDocumentsMatchingQuery(t, e, n ? i : st.min(), n ? r : Es());
    }).next(function (t) {
      return Zo(s, Rn(e), t), {
        documents: t,
        Hi: r
      };
    });
  });
}

// PORTING NOTE: Multi-Tab only.
function Yo(t, e) {
  var n = $(t),
    s = $(n.Cs),
    i = n.qi.get(e);
  return i ? Promise.resolve(i.target) : n.persistence.runTransaction("Get target data", "readonly", function (t) {
    return s.ne(t, e).next(function (t) {
      return t ? t.target : null;
    });
  });
}

/**
 * Returns the set of documents that have been updated since the last call.
 * If this is the first call, returns the set of changes since client
 * initialization. Further invocations will return document that have changed
 * since the prior call.
 */
// PORTING NOTE: Multi-Tab only.
function Xo(t, e) {
  var n = $(t),
    s = n.Ki.get(e) || st.min();
  // Get the current maximum read time for the collection. This should always
  // exist, but to reduce the chance for regressions we default to
  // SnapshotVersion.Min()
  // TODO(indexing): Consider removing the default value.
  return n.persistence.runTransaction("Get new document changes", "readonly", function (t) {
    return n.Gi.getAllFromCollectionGroup(t, e, mt(s, -1), /* limit= */Number.MAX_SAFE_INTEGER);
  }).then(function (t) {
    return Zo(n, e, t), t;
  });
}

/** Sets the collection group's maximum read time from the given documents. */
// PORTING NOTE: Multi-Tab only.
function Zo(t, e, n) {
  var s = t.Ki.get(e) || st.min();
  n.forEach(function (t, e) {
    e.readTime.compareTo(s) > 0 && (s = e.readTime);
  }), t.Ki.set(e, s);
}

/**
 * Creates a new target using the given bundle name, which will be used to
 * hold the keys of all documents from the bundle in query-document mappings.
 * This ensures that the loaded documents do not get garbage collected
 * right away.
 */
/**
 * Applies the documents from a bundle to the "ground-state" (remote)
 * documents.
 *
 * LocalDocuments are re-calculated if there are remaining mutations in the
 * queue.
 */
function tu(_x14, _x15, _x16, _x17) {
  return _tu.apply(this, arguments);
}
/**
 * Returns a promise of a boolean to indicate if the given bundle has already
 * been loaded and the create time is newer than the current loading bundle.
 */
/**
 * Saves the given `NamedQuery` to local persistence.
 */
function _tu() {
  _tu = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee77(t, e, n, s) {
    var i, r, o, _iterator93, _step93, _t122, _n43, _s35, u, c;
    return _regeneratorRuntime().wrap(function _callee77$(_context77) {
      while (1) {
        switch (_context77.prev = _context77.next) {
          case 0:
            i = $(t);
            r = Es(), o = ds();
            _iterator93 = _createForOfIteratorHelper(n);
            try {
              for (_iterator93.s(); !(_step93 = _iterator93.n()).done;) {
                _t122 = _step93.value;
                _n43 = e.Ji(_t122.metadata.name);
                _t122.document && (r = r.add(_n43));
                _s35 = e.Yi(_t122);
                _s35.setReadTime(e.Xi(_t122.metadata.readTime)), o = o.insert(_n43, _s35);
              }
            } catch (err) {
              _iterator93.e(err);
            } finally {
              _iterator93.f();
            }
            u = i.Gi.newChangeBuffer({
              trackRemovals: !0
            });
            _context77.next = 7;
            return zo(i, function (t) {
              // It is OK that the path used for the query is not valid, because this will
              // not be read and queried.
              return gn(ln(rt.fromString("__bundle__/docs/".concat(t))));
            }(s));
          case 7:
            c = _context77.sent;
            return _context77.abrupt("return", i.persistence.runTransaction("Apply bundle documents", "readwrite", function (t) {
              return jo(t, u, o).next(function (e) {
                return u.apply(t), e;
              }).next(function (e) {
                return i.Cs.removeMatchingKeysForTargetId(t, c.targetId).next(function () {
                  return i.Cs.addMatchingKeys(t, r, c.targetId);
                }).next(function () {
                  return i.localDocuments.getLocalViewOfDocuments(t, e.Wi, e.zi);
                }).next(function () {
                  return e.Wi;
                });
              });
            }));
          case 9:
          case "end":
            return _context77.stop();
        }
      }
    }, _callee77);
  }));
  return _tu.apply(this, arguments);
}
function eu(_x18, _x19) {
  return _eu.apply(this, arguments);
}
/** Assembles the key for a client state in WebStorage */
function _eu() {
  _eu = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee78(t, e) {
    var n,
      s,
      i,
      _args78 = arguments;
    return _regeneratorRuntime().wrap(function _callee78$(_context78) {
      while (1) {
        switch (_context78.prev = _context78.next) {
          case 0:
            n = _args78.length > 2 && _args78[2] !== undefined ? _args78[2] : Es();
            _context78.next = 3;
            return zo(t, gn(ir(e.bundledQuery)));
          case 3:
            s = _context78.sent;
            i = $(t);
            return _context78.abrupt("return", i.persistence.runTransaction("Save named query", "readwrite", function (t) {
              var r = qs(e.readTime);
              // Simply save the query itself if it is older than what the SDK already
              // has.
              if (s.snapshotVersion.compareTo(r) >= 0) return i.Ns.saveNamedQuery(t, e);
              // Update existing target data because the query from the bundle is newer.
              var o = s.withResumeToken(Qt.EMPTY_BYTE_STRING, r);
              return i.qi = i.qi.insert(o.targetId, o), i.Cs.updateTargetData(t, o).next(function () {
                return i.Cs.removeMatchingKeysForTargetId(t, s.targetId);
              }).next(function () {
                return i.Cs.addMatchingKeys(t, n, s.targetId);
              }).next(function () {
                return i.Ns.saveNamedQuery(t, e);
              });
            }));
          case 6:
          case "end":
            return _context78.stop();
        }
      }
    }, _callee78);
  }));
  return _eu.apply(this, arguments);
}
function nu(t, e) {
  return "firestore_clients_".concat(t, "_").concat(e);
}

// The format of the WebStorage key that stores the mutation state is:
//     firestore_mutations_<persistence_prefix>_<batch_id>
//     (for unauthenticated users)
// or: firestore_mutations_<persistence_prefix>_<batch_id>_<user_uid>

// 'user_uid' is last to avoid needing to escape '_' characters that it might
// contain.
/** Assembles the key for a mutation batch in WebStorage */
function su(t, e, n) {
  var s = "firestore_mutations_".concat(t, "_").concat(n);
  return e.isAuthenticated() && (s += "_".concat(e.uid)), s;
}

// The format of the WebStorage key that stores a query target's metadata is:
//     firestore_targets_<persistence_prefix>_<target_id>
/** Assembles the key for a query state in WebStorage */
function iu(t, e) {
  return "firestore_targets_".concat(t, "_").concat(e);
}

// The WebStorage prefix that stores the primary tab's online state. The
// format of the key is:
//     firestore_online_state_<persistence_prefix>
/**
 * Holds the state of a mutation batch, including its user ID, batch ID and
 * whether the batch is 'pending', 'acknowledged' or 'rejected'.
 */
// Visible for testing
var ru = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  function ru(t, e, n, s) {
    _classCallCheck(this, ru);
    this.user = t, this.batchId = e, this.state = n, this.error = s;
  }
  /**
   * Parses a MutationMetadata from its JSON representation in WebStorage.
   * Logs a warning and returns null if the format of the data is not valid.
   */
  _createClass(ru, [{
    key: "tr",
    value: function tr() {
      var t = {
        state: this.state,
        updateTimeMs: Date.now()
      };
      return this.error && (t.error = {
        code: this.error.code,
        message: this.error.message
      }), JSON.stringify(t);
    }
  }], [{
    key: "Zi",
    value: function Zi(t, e, n) {
      var s = JSON.parse(n);
      var i,
        r = "object" == typeof s && -1 !== ["pending", "acknowledged", "rejected"].indexOf(s.state) && (void 0 === s.error || "object" == typeof s.error);
      return r && s.error && (r = "string" == typeof s.error.message && "string" == typeof s.error.code, r && (i = new index_esm2017_L(s.error.code, s.error.message))), r ? new ru(t, e, s.state, i) : (index_esm2017_x("SharedClientState", "Failed to parse mutation state for ID '".concat(e, "': ").concat(n)), null);
    }
  }]);
  return ru;
}()));
/**
 * Holds the state of a query target, including its target ID and whether the
 * target is 'not-current', 'current' or 'rejected'.
 */
// Visible for testing
var ou = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  function ou(t, e, n) {
    _classCallCheck(this, ou);
    this.targetId = t, this.state = e, this.error = n;
  }
  /**
   * Parses a QueryTargetMetadata from its JSON representation in WebStorage.
   * Logs a warning and returns null if the format of the data is not valid.
   */
  _createClass(ou, [{
    key: "tr",
    value: function tr() {
      var t = {
        state: this.state,
        updateTimeMs: Date.now()
      };
      return this.error && (t.error = {
        code: this.error.code,
        message: this.error.message
      }), JSON.stringify(t);
    }
  }], [{
    key: "Zi",
    value: function Zi(t, e) {
      var n = JSON.parse(e);
      var s,
        i = "object" == typeof n && -1 !== ["not-current", "current", "rejected"].indexOf(n.state) && (void 0 === n.error || "object" == typeof n.error);
      return i && n.error && (i = "string" == typeof n.error.message && "string" == typeof n.error.code, i && (s = new index_esm2017_L(n.error.code, n.error.message))), i ? new ou(t, n.state, s) : (index_esm2017_x("SharedClientState", "Failed to parse target state for ID '".concat(t, "': ").concat(e)), null);
    }
  }]);
  return ou;
}()));
/**
 * This class represents the immutable ClientState for a client read from
 * WebStorage, containing the list of active query targets.
 */
var uu = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  function uu(t, e) {
    _classCallCheck(this, uu);
    this.clientId = t, this.activeTargetIds = e;
  }
  /**
   * Parses a RemoteClientState from the JSON representation in WebStorage.
   * Logs a warning and returns null if the format of the data is not valid.
   */
  _createClass(uu, null, [{
    key: "Zi",
    value: function Zi(t, e) {
      var n = JSON.parse(e);
      var s = "object" == typeof n && n.activeTargetIds instanceof Array,
        i = Rs();
      for (var _t78 = 0; s && _t78 < n.activeTargetIds.length; ++_t78) {
        s = Kt(n.activeTargetIds[_t78]), i = i.add(n.activeTargetIds[_t78]);
      }
      return s ? new uu(t, i) : (index_esm2017_x("SharedClientState", "Failed to parse client data for instance '".concat(t, "': ").concat(e)), null);
    }
  }]);
  return uu;
}()));
/**
 * This class represents the online state for all clients participating in
 * multi-tab. The online state is only written to by the primary client, and
 * used in secondary clients to update their query views.
 */
var cu = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  function cu(t, e) {
    _classCallCheck(this, cu);
    this.clientId = t, this.onlineState = e;
  }
  /**
   * Parses a SharedOnlineState from its JSON representation in WebStorage.
   * Logs a warning and returns null if the format of the data is not valid.
   */
  _createClass(cu, null, [{
    key: "Zi",
    value: function Zi(t) {
      var e = JSON.parse(t);
      return "object" == typeof e && -1 !== ["Unknown", "Online", "Offline"].indexOf(e.onlineState) && "string" == typeof e.clientId ? new cu(e.clientId, e.onlineState) : (index_esm2017_x("SharedClientState", "Failed to parse online state: ".concat(t)), null);
    }
  }]);
  return cu;
}()));
/**
 * Metadata state of the local client. Unlike `RemoteClientState`, this class is
 * mutable and keeps track of all pending mutations, which allows us to
 * update the range of pending mutation batch IDs as new mutations are added or
 * removed.
 *
 * The data in `LocalClientState` is not read from WebStorage and instead
 * updated via its instance methods. The updated state can be serialized via
 * `toWebStorageJSON()`.
 */
// Visible for testing.
var au = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  function au() {
    _classCallCheck(this, au);
    this.activeTargetIds = Rs();
  }
  _createClass(au, [{
    key: "er",
    value: function er(t) {
      this.activeTargetIds = this.activeTargetIds.add(t);
    }
  }, {
    key: "nr",
    value: function nr(t) {
      this.activeTargetIds = this.activeTargetIds.delete(t);
    }
    /**
     * Converts this entry into a JSON-encoded format we can use for WebStorage.
     * Does not encode `clientId` as it is part of the key in WebStorage.
     */
  }, {
    key: "tr",
    value: function tr() {
      var t = {
        activeTargetIds: this.activeTargetIds.toArray(),
        updateTimeMs: Date.now()
      };
      return JSON.stringify(t);
    }
  }]);
  return au;
}()));
/**
 * `WebStorageSharedClientState` uses WebStorage (window.localStorage) as the
 * backing store for the SharedClientState. It keeps track of all active
 * clients and supports modifications of the local client's data.
 */
var hu = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  function hu(t, e, n, s, i) {
    _classCallCheck(this, hu);
    this.window = t, this.Hs = e, this.persistenceKey = n, this.sr = s, this.syncEngine = null, this.onlineStateHandler = null, this.sequenceNumberHandler = null, this.ir = this.rr.bind(this), this.ur = new Ge(Z), this.started = !1,
    /**
     * Captures WebStorage events that occur before `start()` is called. These
     * events are replayed once `WebStorageSharedClientState` is started.
     */
    this.cr = [];
    // Escape the special characters mentioned here:
    // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Regular_Expressions
    var r = n.replace(/[.*+?^${}()|[\]\\]/g, "\\$&");
    this.storage = this.window.localStorage, this.currentUser = i, this.ar = nu(this.persistenceKey, this.sr), this.hr = /** Assembles the key for the current sequence number. */
    function (t) {
      return "firestore_sequence_number_".concat(t);
    }
    /**
    * @license
    * Copyright 2018 Google LLC
    *
    * Licensed under the Apache License, Version 2.0 (the "License");
    * you may not use this file except in compliance with the License.
    * You may obtain a copy of the License at
    *
    *   http://www.apache.org/licenses/LICENSE-2.0
    *
    * Unless required by applicable law or agreed to in writing, software
    * distributed under the License is distributed on an "AS IS" BASIS,
    * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    * See the License for the specific language governing permissions and
    * limitations under the License.
    */(this.persistenceKey), this.ur = this.ur.insert(this.sr, new au()), this.lr = new RegExp("^firestore_clients_".concat(r, "_([^_]*)$")), this.dr = new RegExp("^firestore_mutations_".concat(r, "_(\\d+)(?:_(.*))?$")), this._r = new RegExp("^firestore_targets_".concat(r, "_(\\d+)$")), this.wr = /** Assembles the key for the online state of the primary tab. */
    function (t) {
      return "firestore_online_state_".concat(t);
    }
    // The WebStorage prefix that plays as a event to indicate the remote documents
    // might have changed due to some secondary tabs loading a bundle.
    // format of the key is:
    //     firestore_bundle_loaded_v2_<persistenceKey>
    // The version ending with "v2" stores the list of modified collection groups.
    (this.persistenceKey), this.mr = function (t) {
      return "firestore_bundle_loaded_v2_".concat(t);
    }
    // The WebStorage key prefix for the key that stores the last sequence number allocated. The key
    // looks like 'firestore_sequence_number_<persistence_prefix>'.
    (this.persistenceKey),
    // Rather than adding the storage observer during start(), we add the
    // storage observer during initialization. This ensures that we collect
    // events before other components populate their initial state (during their
    // respective start() calls). Otherwise, we might for example miss a
    // mutation that is added after LocalStore's start() processed the existing
    // mutations but before we observe WebStorage events.
    this.window.addEventListener("storage", this.ir);
  }
  /** Returns 'true' if WebStorage is available in the current environment. */
  _createClass(hu, [{
    key: "start",
    value: function () {
      var _start = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee13() {
        var _this150 = this;
        var t, _iterator61, _step61, _e40, _t80, n, e, _t79, _iterator62, _step62, _t81;
        return _regeneratorRuntime().wrap(function _callee13$(_context13) {
          while (1) {
            switch (_context13.prev = _context13.next) {
              case 0:
                _context13.next = 2;
                return this.syncEngine.vi();
              case 2:
                t = _context13.sent;
                _iterator61 = _createForOfIteratorHelper(t);
                _context13.prev = 4;
                _iterator61.s();
              case 6:
                if ((_step61 = _iterator61.n()).done) {
                  _context13.next = 14;
                  break;
                }
                _e40 = _step61.value;
                if (!(_e40 === this.sr)) {
                  _context13.next = 10;
                  break;
                }
                return _context13.abrupt("continue", 12);
              case 10:
                _t80 = this.getItem(nu(this.persistenceKey, _e40));
                if (_t80) {
                  n = uu.Zi(_e40, _t80);
                  n && (this.ur = this.ur.insert(n.clientId, n));
                }
              case 12:
                _context13.next = 6;
                break;
              case 14:
                _context13.next = 19;
                break;
              case 16:
                _context13.prev = 16;
                _context13.t0 = _context13["catch"](4);
                _iterator61.e(_context13.t0);
              case 19:
                _context13.prev = 19;
                _iterator61.f();
                return _context13.finish(19);
              case 22:
                this.gr();
                // Check if there is an existing online state and call the callback handler
                // if applicable.
                e = this.storage.getItem(this.wr);
                if (e) {
                  _t79 = this.yr(e);
                  _t79 && this.pr(_t79);
                }
                _iterator62 = _createForOfIteratorHelper(this.cr);
                try {
                  for (_iterator62.s(); !(_step62 = _iterator62.n()).done;) {
                    _t81 = _step62.value;
                    this.rr(_t81);
                  }
                } catch (err) {
                  _iterator62.e(err);
                } finally {
                  _iterator62.f();
                }
                this.cr = [],
                // Register a window unload hook to remove the client metadata entry from
                // WebStorage even if `shutdown()` was not called.
                this.window.addEventListener("pagehide", function () {
                  return _this150.shutdown();
                }), this.started = !0;
              case 28:
              case "end":
                return _context13.stop();
            }
          }
        }, _callee13, this, [[4, 16, 19, 22]]);
      }));
      function start() {
        return _start.apply(this, arguments);
      }
      return start;
    }()
  }, {
    key: "writeSequenceNumber",
    value: function writeSequenceNumber(t) {
      this.setItem(this.hr, JSON.stringify(t));
    }
  }, {
    key: "getAllActiveQueryTargets",
    value: function getAllActiveQueryTargets() {
      return this.Ir(this.ur);
    }
  }, {
    key: "isActiveQueryTarget",
    value: function isActiveQueryTarget(t) {
      var e = !1;
      return this.ur.forEach(function (n, s) {
        s.activeTargetIds.has(t) && (e = !0);
      }), e;
    }
  }, {
    key: "addPendingMutation",
    value: function addPendingMutation(t) {
      this.Tr(t, "pending");
    }
  }, {
    key: "updateMutationState",
    value: function updateMutationState(t, e, n) {
      this.Tr(t, e, n),
      // Once a final mutation result is observed by other clients, they no longer
      // access the mutation's metadata entry. Since WebStorage replays events
      // in order, it is safe to delete the entry right after updating it.
      this.Er(t);
    }
  }, {
    key: "addLocalQueryTarget",
    value: function addLocalQueryTarget(t) {
      var e = "not-current";
      // Lookup an existing query state if the target ID was already registered
      // by another tab
      if (this.isActiveQueryTarget(t)) {
        var n = this.storage.getItem(iu(this.persistenceKey, t));
        if (n) {
          var s = ou.Zi(t, n);
          s && (e = s.state);
        }
      }
      return this.Ar.er(t), this.gr(), e;
    }
  }, {
    key: "removeLocalQueryTarget",
    value: function removeLocalQueryTarget(t) {
      this.Ar.nr(t), this.gr();
    }
  }, {
    key: "isLocalQueryTarget",
    value: function isLocalQueryTarget(t) {
      return this.Ar.activeTargetIds.has(t);
    }
  }, {
    key: "clearQueryState",
    value: function clearQueryState(t) {
      this.removeItem(iu(this.persistenceKey, t));
    }
  }, {
    key: "updateQueryState",
    value: function updateQueryState(t, e, n) {
      this.Rr(t, e, n);
    }
  }, {
    key: "handleUserChange",
    value: function handleUserChange(t, e, n) {
      var _this151 = this;
      e.forEach(function (t) {
        _this151.Er(t);
      }), this.currentUser = t, n.forEach(function (t) {
        _this151.addPendingMutation(t);
      });
    }
  }, {
    key: "setOnlineState",
    value: function setOnlineState(t) {
      this.br(t);
    }
  }, {
    key: "notifyBundleLoaded",
    value: function notifyBundleLoaded(t) {
      this.Pr(t);
    }
  }, {
    key: "shutdown",
    value: function shutdown() {
      this.started && (this.window.removeEventListener("storage", this.ir), this.removeItem(this.ar), this.started = !1);
    }
  }, {
    key: "getItem",
    value: function getItem(t) {
      var e = this.storage.getItem(t);
      return index_esm2017_C("SharedClientState", "READ", t, e), e;
    }
  }, {
    key: "setItem",
    value: function setItem(t, e) {
      index_esm2017_C("SharedClientState", "SET", t, e), this.storage.setItem(t, e);
    }
  }, {
    key: "removeItem",
    value: function removeItem(t) {
      index_esm2017_C("SharedClientState", "REMOVE", t), this.storage.removeItem(t);
    }
  }, {
    key: "rr",
    value: function rr(t) {
      var _this152 = this;
      // Note: The function is typed to take Event to be interface-compatible with
      // `Window.addEventListener`.
      var e = t;
      if (e.storageArea === this.storage) {
        if (index_esm2017_C("SharedClientState", "EVENT", e.key, e.newValue), e.key === this.ar) return void index_esm2017_x("Received WebStorage notification for local change. Another client might have garbage-collected our state");
        this.Hs.enqueueRetryable( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee14() {
          var _t82, _t83, _t84, _t85, _t86, _t87, _t88;
          return _regeneratorRuntime().wrap(function _callee14$(_context14) {
            while (1) {
              switch (_context14.prev = _context14.next) {
                case 0:
                  if (!_this152.started) {
                    _context14.next = 43;
                    break;
                  }
                  if (!(null !== e.key)) {
                    _context14.next = 41;
                    break;
                  }
                  if (!_this152.lr.test(e.key)) {
                    _context14.next = 11;
                    break;
                  }
                  if (!(null == e.newValue)) {
                    _context14.next = 6;
                    break;
                  }
                  _t82 = _this152.vr(e.key);
                  return _context14.abrupt("return", _this152.Vr(_t82, null));
                case 6:
                  _t83 = _this152.Sr(e.key, e.newValue);
                  if (!_t83) {
                    _context14.next = 9;
                    break;
                  }
                  return _context14.abrupt("return", _this152.Vr(_t83.clientId, _t83));
                case 9:
                  _context14.next = 41;
                  break;
                case 11:
                  if (!_this152.dr.test(e.key)) {
                    _context14.next = 18;
                    break;
                  }
                  if (!(null !== e.newValue)) {
                    _context14.next = 16;
                    break;
                  }
                  _t84 = _this152.Dr(e.key, e.newValue);
                  if (!_t84) {
                    _context14.next = 16;
                    break;
                  }
                  return _context14.abrupt("return", _this152.Cr(_t84));
                case 16:
                  _context14.next = 41;
                  break;
                case 18:
                  if (!_this152._r.test(e.key)) {
                    _context14.next = 25;
                    break;
                  }
                  if (!(null !== e.newValue)) {
                    _context14.next = 23;
                    break;
                  }
                  _t85 = _this152.Nr(e.key, e.newValue);
                  if (!_t85) {
                    _context14.next = 23;
                    break;
                  }
                  return _context14.abrupt("return", _this152.kr(_t85));
                case 23:
                  _context14.next = 41;
                  break;
                case 25:
                  if (!(e.key === _this152.wr)) {
                    _context14.next = 32;
                    break;
                  }
                  if (!(null !== e.newValue)) {
                    _context14.next = 30;
                    break;
                  }
                  _t86 = _this152.yr(e.newValue);
                  if (!_t86) {
                    _context14.next = 30;
                    break;
                  }
                  return _context14.abrupt("return", _this152.pr(_t86));
                case 30:
                  _context14.next = 41;
                  break;
                case 32:
                  if (!(e.key === _this152.hr)) {
                    _context14.next = 37;
                    break;
                  }
                  _t87 = function (t) {
                    var e = Ot.at;
                    if (null != t) try {
                      var n = JSON.parse(t);
                      index_esm2017_M("number" == typeof n), e = n;
                    } catch (t) {
                      index_esm2017_x("SharedClientState", "Failed to read sequence number from WebStorage", t);
                    }
                    return e;
                  }
                  /**
                  * `MemorySharedClientState` is a simple implementation of SharedClientState for
                  * clients using memory persistence. The state in this class remains fully
                  * isolated and no synchronization is performed.
                  */(e.newValue);
                  _t87 !== Ot.at && _this152.sequenceNumberHandler(_t87);
                  _context14.next = 41;
                  break;
                case 37:
                  if (!(e.key === _this152.mr)) {
                    _context14.next = 41;
                    break;
                  }
                  _t88 = _this152.Or(e.newValue);
                  _context14.next = 41;
                  return Promise.all(_t88.map(function (t) {
                    return _this152.syncEngine.Mr(t);
                  }));
                case 41:
                  _context14.next = 44;
                  break;
                case 43:
                  _this152.cr.push(e);
                case 44:
                case "end":
                  return _context14.stop();
              }
            }
          }, _callee14);
        })));
      }
    }
  }, {
    key: "Ar",
    get: function get() {
      return this.ur.get(this.sr);
    }
  }, {
    key: "gr",
    value: function gr() {
      this.setItem(this.ar, this.Ar.tr());
    }
  }, {
    key: "Tr",
    value: function Tr(t, e, n) {
      var s = new ru(this.currentUser, t, e, n),
        i = su(this.persistenceKey, this.currentUser, t);
      this.setItem(i, s.tr());
    }
  }, {
    key: "Er",
    value: function Er(t) {
      var e = su(this.persistenceKey, this.currentUser, t);
      this.removeItem(e);
    }
  }, {
    key: "br",
    value: function br(t) {
      var e = {
        clientId: this.sr,
        onlineState: t
      };
      this.storage.setItem(this.wr, JSON.stringify(e));
    }
  }, {
    key: "Rr",
    value: function Rr(t, e, n) {
      var s = iu(this.persistenceKey, t),
        i = new ou(t, e, n);
      this.setItem(s, i.tr());
    }
  }, {
    key: "Pr",
    value: function Pr(t) {
      var e = JSON.stringify(Array.from(t));
      this.setItem(this.mr, e);
    }
    /**
     * Parses a client state key in WebStorage. Returns null if the key does not
     * match the expected key format.
     */
  }, {
    key: "vr",
    value: function vr(t) {
      var e = this.lr.exec(t);
      return e ? e[1] : null;
    }
    /**
     * Parses a client state in WebStorage. Returns 'null' if the value could not
     * be parsed.
     */
  }, {
    key: "Sr",
    value: function Sr(t, e) {
      var n = this.vr(t);
      return uu.Zi(n, e);
    }
    /**
     * Parses a mutation batch state in WebStorage. Returns 'null' if the value
     * could not be parsed.
     */
  }, {
    key: "Dr",
    value: function Dr(t, e) {
      var n = this.dr.exec(t),
        s = Number(n[1]),
        i = void 0 !== n[2] ? n[2] : null;
      return ru.Zi(new index_esm2017_P(i), s, e);
    }
    /**
     * Parses a query target state from WebStorage. Returns 'null' if the value
     * could not be parsed.
     */
  }, {
    key: "Nr",
    value: function Nr(t, e) {
      var n = this._r.exec(t),
        s = Number(n[1]);
      return ou.Zi(s, e);
    }
    /**
     * Parses an online state from WebStorage. Returns 'null' if the value
     * could not be parsed.
     */
  }, {
    key: "yr",
    value: function yr(t) {
      return cu.Zi(t);
    }
  }, {
    key: "Or",
    value: function Or(t) {
      return JSON.parse(t);
    }
  }, {
    key: "Cr",
    value: function () {
      var _Cr = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee15(t) {
        return _regeneratorRuntime().wrap(function _callee15$(_context15) {
          while (1) {
            switch (_context15.prev = _context15.next) {
              case 0:
                if (!(t.user.uid === this.currentUser.uid)) {
                  _context15.next = 2;
                  break;
                }
                return _context15.abrupt("return", this.syncEngine.Fr(t.batchId, t.state, t.error));
              case 2:
                index_esm2017_C("SharedClientState", "Ignoring mutation for non-active user ".concat(t.user.uid));
              case 3:
              case "end":
                return _context15.stop();
            }
          }
        }, _callee15, this);
      }));
      function Cr(_x20) {
        return _Cr.apply(this, arguments);
      }
      return Cr;
    }()
  }, {
    key: "kr",
    value: function kr(t) {
      return this.syncEngine.$r(t.targetId, t.state, t.error);
    }
  }, {
    key: "Vr",
    value: function Vr(t, e) {
      var _this153 = this;
      var n = e ? this.ur.insert(t, e) : this.ur.remove(t),
        s = this.Ir(this.ur),
        i = this.Ir(n),
        r = [],
        o = [];
      return i.forEach(function (t) {
        s.has(t) || r.push(t);
      }), s.forEach(function (t) {
        i.has(t) || o.push(t);
      }), this.syncEngine.Br(r, o).then(function () {
        _this153.ur = n;
      });
    }
  }, {
    key: "pr",
    value: function pr(t) {
      // We check whether the client that wrote this online state is still active
      // by comparing its client ID to the list of clients kept active in
      // IndexedDb. If a client does not update their IndexedDb client state
      // within 5 seconds, it is considered inactive and we don't emit an online
      // state event.
      this.ur.get(t.clientId) && this.onlineStateHandler(t.onlineState);
    }
  }, {
    key: "Ir",
    value: function Ir(t) {
      var e = Rs();
      return t.forEach(function (t, n) {
        e = e.unionWith(n.activeTargetIds);
      }), e;
    }
  }], [{
    key: "C",
    value: function C(t) {
      return !(!t || !t.localStorage);
    }
  }]);
  return hu;
}()));
var lu = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  function lu() {
    _classCallCheck(this, lu);
    this.Lr = new au(), this.qr = {}, this.onlineStateHandler = null, this.sequenceNumberHandler = null;
  }
  _createClass(lu, [{
    key: "addPendingMutation",
    value: function addPendingMutation(t) {
      // No op.
    }
  }, {
    key: "updateMutationState",
    value: function updateMutationState(t, e, n) {
      // No op.
    }
  }, {
    key: "addLocalQueryTarget",
    value: function addLocalQueryTarget(t) {
      return this.Lr.er(t), this.qr[t] || "not-current";
    }
  }, {
    key: "updateQueryState",
    value: function updateQueryState(t, e, n) {
      this.qr[t] = e;
    }
  }, {
    key: "removeLocalQueryTarget",
    value: function removeLocalQueryTarget(t) {
      this.Lr.nr(t);
    }
  }, {
    key: "isLocalQueryTarget",
    value: function isLocalQueryTarget(t) {
      return this.Lr.activeTargetIds.has(t);
    }
  }, {
    key: "clearQueryState",
    value: function clearQueryState(t) {
      delete this.qr[t];
    }
  }, {
    key: "getAllActiveQueryTargets",
    value: function getAllActiveQueryTargets() {
      return this.Lr.activeTargetIds;
    }
  }, {
    key: "isActiveQueryTarget",
    value: function isActiveQueryTarget(t) {
      return this.Lr.activeTargetIds.has(t);
    }
  }, {
    key: "start",
    value: function start() {
      return this.Lr = new au(), Promise.resolve();
    }
  }, {
    key: "handleUserChange",
    value: function handleUserChange(t, e, n) {
      // No op.
    }
  }, {
    key: "setOnlineState",
    value: function setOnlineState(t) {
      // No op.
    }
  }, {
    key: "shutdown",
    value: function shutdown() {}
  }, {
    key: "writeSequenceNumber",
    value: function writeSequenceNumber(t) {}
  }, {
    key: "notifyBundleLoaded",
    value: function notifyBundleLoaded(t) {
      // No op.
    }
  }]);
  return lu;
}()));
/**
 * @license
 * Copyright 2019 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
var fu = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  function fu() {
    _classCallCheck(this, fu);
  }
  _createClass(fu, [{
    key: "Ur",
    value: function Ur(t) {
      // No-op.
    }
  }, {
    key: "shutdown",
    value: function shutdown() {
      // No-op.
    }
  }]);
  return fu;
}()));
/**
 * @license
 * Copyright 2019 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
// References to `window` are guarded by BrowserConnectivityMonitor.isAvailable()
/* eslint-disable no-restricted-globals */
/**
 * Browser implementation of ConnectivityMonitor.
 */
var du = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  function du() {
    var _this154 = this;
    _classCallCheck(this, du);
    this.Kr = function () {
      return _this154.Gr();
    }, this.Qr = function () {
      return _this154.jr();
    }, this.Wr = [], this.zr();
  }
  _createClass(du, [{
    key: "Ur",
    value: function Ur(t) {
      this.Wr.push(t);
    }
  }, {
    key: "shutdown",
    value: function shutdown() {
      window.removeEventListener("online", this.Kr), window.removeEventListener("offline", this.Qr);
    }
  }, {
    key: "zr",
    value: function zr() {
      window.addEventListener("online", this.Kr), window.addEventListener("offline", this.Qr);
    }
  }, {
    key: "Gr",
    value: function Gr() {
      index_esm2017_C("ConnectivityMonitor", "Network connectivity changed: AVAILABLE");
      var _iterator63 = _createForOfIteratorHelper(this.Wr),
        _step63;
      try {
        for (_iterator63.s(); !(_step63 = _iterator63.n()).done;) {
          var t = _step63.value;
          t(0 /* NetworkStatus.AVAILABLE */);
        }
      } catch (err) {
        _iterator63.e(err);
      } finally {
        _iterator63.f();
      }
    }
  }, {
    key: "jr",
    value: function jr() {
      index_esm2017_C("ConnectivityMonitor", "Network connectivity changed: UNAVAILABLE");
      var _iterator64 = _createForOfIteratorHelper(this.Wr),
        _step64;
      try {
        for (_iterator64.s(); !(_step64 = _iterator64.n()).done;) {
          var t = _step64.value;
          t(1 /* NetworkStatus.UNAVAILABLE */);
        }
      } catch (err) {
        _iterator64.e(err);
      } finally {
        _iterator64.f();
      }
    }
    // TODO(chenbrian): Consider passing in window either into this component or
    // here for testing via FakeWindow.
    /** Checks that all used attributes of window are available. */
  }], [{
    key: "C",
    value: function C() {
      return "undefined" != typeof window && void 0 !== window.addEventListener && void 0 !== window.removeEventListener;
    }
  }]);
  return du;
}()));
/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
var _u = {
  BatchGetDocuments: "batchGet",
  Commit: "commit",
  RunQuery: "runQuery",
  RunAggregationQuery: "runAggregationQuery"
};

/**
 * Maps RPC names to the corresponding REST endpoint name.
 *
 * We use array notation to avoid mangling.
 */
/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * Provides a simple helper class that implements the Stream interface to
 * bridge to other implementations that are streams but do not implement the
 * interface. The stream callbacks are invoked with the callOn... methods.
 */
var wu = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  function wu(t) {
    _classCallCheck(this, wu);
    this.Hr = t.Hr, this.Jr = t.Jr;
  }
  _createClass(wu, [{
    key: "Yr",
    value: function Yr(t) {
      this.Xr = t;
    }
  }, {
    key: "Zr",
    value: function Zr(t) {
      this.eo = t;
    }
  }, {
    key: "onMessage",
    value: function onMessage(t) {
      this.no = t;
    }
  }, {
    key: "close",
    value: function close() {
      this.Jr();
    }
  }, {
    key: "send",
    value: function send(t) {
      this.Hr(t);
    }
  }, {
    key: "so",
    value: function so() {
      this.Xr();
    }
  }, {
    key: "io",
    value: function io(t) {
      this.eo(t);
    }
  }, {
    key: "ro",
    value: function ro(t) {
      this.no(t);
    }
  }]);
  return wu;
}()));
/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
var mu = /*#__PURE__*/(/* unused pure expression or super */ null && (function (_ref22) {
  _inherits(mu, _ref22);
  var _super26 = _createSuper(mu);
  function mu(t) {
    var _this155;
    _classCallCheck(this, mu);
    _this155 = _super26.call(this, t), _this155.forceLongPolling = t.forceLongPolling, _this155.autoDetectLongPolling = t.autoDetectLongPolling, _this155.useFetchStreams = t.useFetchStreams;
    return _this155;
  }
  _createClass(mu, [{
    key: "fo",
    value: function fo(t, e, n, s) {
      return new Promise(function (i, r) {
        var o = new XhrIo();
        o.setWithCredentials(!0), o.listenOnce(EventType.COMPLETE, function () {
          try {
            switch (o.getLastErrorCode()) {
              case ErrorCode.NO_ERROR:
                var _e41 = o.getResponseJson();
                index_esm2017_C("Connection", "XHR received:", JSON.stringify(_e41)), i(_e41);
                break;
              case ErrorCode.TIMEOUT:
                index_esm2017_C("Connection", 'RPC "' + t + '" timed out'), r(new index_esm2017_L(index_esm2017_B.DEADLINE_EXCEEDED, "Request time out"));
                break;
              case ErrorCode.HTTP_ERROR:
                var _n28 = o.getStatus();
                if (index_esm2017_C("Connection", 'RPC "' + t + '" failed with status:', _n28, "response text:", o.getResponseText()), _n28 > 0) {
                  var _t89 = o.getResponseJson();
                  Array.isArray(_t89) && (_t89 = _t89[0]);
                  var _e42 = null == _t89 ? void 0 : _t89.error;
                  if (_e42 && _e42.status && _e42.message) {
                    var _t90 = function (t) {
                      var e = t.toLowerCase().replace(/_/g, "-");
                      return Object.values(index_esm2017_B).indexOf(e) >= 0 ? e : index_esm2017_B.UNKNOWN;
                    }(_e42.status);
                    r(new index_esm2017_L(_t90, _e42.message));
                  } else r(new index_esm2017_L(index_esm2017_B.UNKNOWN, "Server responded with status " + o.getStatus()));
                } else
                  // If we received an HTTP_ERROR but there's no status code,
                  // it's most probably a connection issue
                  r(new index_esm2017_L(index_esm2017_B.UNAVAILABLE, "Connection failed."));
                break;
              default:
                index_esm2017_O();
            }
          } finally {
            index_esm2017_C("Connection", 'RPC "' + t + '" completed.');
          }
        });
        var u = JSON.stringify(s);
        o.send(e, "POST", u, n, 15);
      });
    }
  }, {
    key: "wo",
    value: function wo(t, e, n) {
      var s = [this.oo, "/", "google.firestore.v1.Firestore", "/", t, "/channel"],
        i = createWebChannelTransport(),
        r = getStatEventTarget(),
        o = {
          // Required for backend stickiness, routing behavior is based on this
          // parameter.
          httpSessionIdParam: "gsessionid",
          initMessageHeaders: {},
          messageUrlParams: {
            // This param is used to improve routing and project isolation by the
            // backend and must be included in every request.
            database: "projects/".concat(this.databaseId.projectId, "/databases/").concat(this.databaseId.database)
          },
          sendRawJson: !0,
          supportsCrossDomainXhr: !0,
          internalChannelParams: {
            // Override the default timeout (randomized between 10-20 seconds) since
            // a large write batch on a slow internet connection may take a long
            // time to send to the backend. Rather than have WebChannel impose a
            // tight timeout which could lead to infinite timeouts and retries, we
            // set it very large (5-10 minutes) and rely on the browser's builtin
            // timeouts to kick in if the request isn't working.
            forwardChannelRequestTimeoutMs: 6e5
          },
          forceLongPolling: this.forceLongPolling,
          detectBufferingProxy: this.autoDetectLongPolling
        };
      this.useFetchStreams && (o.xmlHttpFactory = new FetchXmlHttpFactory({})), this.lo(o.initMessageHeaders, e, n),
      // Sending the custom headers we just added to request.initMessageHeaders
      // (Authorization, etc.) will trigger the browser to make a CORS preflight
      // request because the XHR will no longer meet the criteria for a "simple"
      // CORS request:
      // https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS#Simple_requests
      // Therefore to avoid the CORS preflight request (an extra network
      // roundtrip), we use the encodeInitMessageHeaders option to specify that
      // the headers should instead be encoded in the request's POST payload,
      // which is recognized by the webchannel backend.
      o.encodeInitMessageHeaders = !0;
      var u = s.join("");
      index_esm2017_C("Connection", "Creating WebChannel: " + u, o);
      var c = i.createWebChannel(u, o);
      // WebChannel supports sending the first message with the handshake - saving
      // a network round trip. However, it will have to call send in the same
      // JS event loop as open. In order to enforce this, we delay actually
      // opening the WebChannel until send is called. Whether we have called
      // open is tracked with this variable.
      var a = !1,
        h = !1;
      // A flag to determine whether the stream was closed (by us or through an
      // error/close event) to avoid delivering multiple close events or sending
      // on a closed stream
      var l = new wu({
          Hr: function Hr(t) {
            h ? index_esm2017_C("Connection", "Not sending because WebChannel is closed:", t) : (a || (index_esm2017_C("Connection", "Opening WebChannel transport."), c.open(), a = !0), index_esm2017_C("Connection", "WebChannel sending:", t), c.send(t));
          },
          Jr: function Jr() {
            return c.close();
          }
        }),
        f = function f(t, e, n) {
          // TODO(dimond): closure typing seems broken because WebChannel does
          // not implement goog.events.Listenable
          t.listen(e, function (t) {
            try {
              n(t);
            } catch (t) {
              setTimeout(function () {
                throw t;
              }, 0);
            }
          });
        };
      // Closure events are guarded and exceptions are swallowed, so catch any
      // exception and rethrow using a setTimeout so they become visible again.
      // Note that eventually this function could go away if we are confident
      // enough the code is exception free.
      return f(c, WebChannel.EventType.OPEN, function () {
        h || index_esm2017_C("Connection", "WebChannel transport opened.");
      }), f(c, WebChannel.EventType.CLOSE, function () {
        h || (h = !0, index_esm2017_C("Connection", "WebChannel transport closed"), l.io());
      }), f(c, WebChannel.EventType.ERROR, function (t) {
        h || (h = !0, index_esm2017_N("Connection", "WebChannel transport errored:", t), l.io(new index_esm2017_L(index_esm2017_B.UNAVAILABLE, "The operation could not be completed")));
      }), f(c, WebChannel.EventType.MESSAGE, function (t) {
        var e;
        if (!h) {
          var _n29 = t.data[0];
          index_esm2017_M(!!_n29);
          // TODO(b/35143891): There is a bug in One Platform that caused errors
          // (and only errors) to be wrapped in an extra array. To be forward
          // compatible with the bug we need to check either condition. The latter
          // can be removed once the fix has been rolled out.
          // Use any because msgData.error is not typed.
          var _s22 = _n29,
            _i15 = _s22.error || (null === (e = _s22[0]) || void 0 === e ? void 0 : e.error);
          if (_i15) {
            index_esm2017_C("Connection", "WebChannel received error:", _i15);
            // error.status will be a string like 'OK' or 'NOT_FOUND'.
            var _t91 = _i15.status;
            var _e43 =
              /**
              * Maps an error Code from a GRPC status identifier like 'NOT_FOUND'.
              *
              * @returns The Code equivalent to the given status string or undefined if
              *     there is no match.
              */
              function (t) {
                // lookup by string
                // eslint-disable-next-line @typescript-eslint/no-explicit-any
                var e = us[t];
                if (void 0 !== e) return hs(e);
              }(_t91),
              _n30 = _i15.message;
            void 0 === _e43 && (_e43 = index_esm2017_B.INTERNAL, _n30 = "Unknown error status: " + _t91 + " with message " + _i15.message),
            // Mark closed so no further events are propagated
            h = !0, l.io(new index_esm2017_L(_e43, _n30)), c.close();
          } else index_esm2017_C("Connection", "WebChannel received:", _n29), l.ro(_n29);
        }
      }), f(r, Event.STAT_EVENT, function (t) {
        t.stat === Stat.PROXY ? index_esm2017_C("Connection", "Detected buffering proxy") : t.stat === Stat.NOPROXY && index_esm2017_C("Connection", "Detected no buffering proxy");
      }), setTimeout(function () {
        // Technically we could/should wait for the WebChannel opened event,
        // but because we want to send the first message with the WebChannel
        // handshake we pretend the channel opened here (asynchronously), and
        // then delay the actual open until the first message is sent.
        l.so();
      }, 0), l;
    }
  }]);
  return mu;
}(
/*#__PURE__*/
/**
 * Base class for all Rest-based connections to the backend (WebChannel and
 * HTTP).
 */
function () {
  function _class2(t) {
    _classCallCheck(this, _class2);
    this.databaseInfo = t, this.databaseId = t.databaseId;
    var e = t.ssl ? "https" : "http";
    this.oo = e + "://" + t.host, this.uo = "projects/" + this.databaseId.projectId + "/databases/" + this.databaseId.database + "/documents";
  }
  _createClass(_class2, [{
    key: "co",
    get: function get() {
      // Both `invokeRPC()` and `invokeStreamingRPC()` use their `path` arguments to determine
      // where to run the query, and expect the `request` to NOT specify the "path".
      return !1;
    }
  }, {
    key: "ao",
    value: function ao(t, e, n, s, i) {
      var r = this.ho(t, e);
      index_esm2017_C("RestConnection", "Sending: ", r, n);
      var o = {};
      return this.lo(o, s, i), this.fo(t, r, o, n).then(function (t) {
        return index_esm2017_C("RestConnection", "Received: ", t), t;
      }, function (e) {
        throw index_esm2017_N("RestConnection", "".concat(t, " failed with error: "), e, "url: ", r, "request:", n), e;
      });
    }
  }, {
    key: "_o",
    value: function _o(t, e, n, s, i, r) {
      // The REST API automatically aggregates all of the streamed results, so we
      // can just use the normal invoke() method.
      return this.ao(t, e, n, s, i);
    }
    /**
     * Modifies the headers for a request, adding any authorization token if
     * present and any additional headers for the request.
     */
  }, {
    key: "lo",
    value: function lo(t, e, n) {
      t["X-Goog-Api-Client"] = "gl-js/ fire/" + index_esm2017_v,
      // Content-Type: text/plain will avoid preflight requests which might
      // mess with CORS and redirects by proxies. If we add custom headers
      // we will need to change this code to potentially use the $httpOverwrite
      // parameter supported by ESF to avoid triggering preflight requests.
      t["Content-Type"] = "text/plain", this.databaseInfo.appId && (t["X-Firebase-GMPID"] = this.databaseInfo.appId), e && e.headers.forEach(function (e, n) {
        return t[n] = e;
      }), n && n.headers.forEach(function (e, n) {
        return t[n] = e;
      });
    }
  }, {
    key: "ho",
    value: function ho(t, e) {
      var n = _u[t];
      return "".concat(this.oo, "/v1/").concat(e, ":").concat(n);
    }
  }]);
  return _class2;
}())));
/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/** Initializes the WebChannelConnection for the browser. */
/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/** The Platform's 'window' implementation or null if not available. */
function gu() {
  // `window` is not always available, e.g. in ReactNative and WebWorkers.
  // eslint-disable-next-line no-restricted-globals
  return "undefined" != typeof window ? window : null;
}

/** The Platform's 'document' implementation or null if not available. */
function yu() {
  // `document` is not always available, e.g. in ReactNative and WebWorkers.
  // eslint-disable-next-line no-restricted-globals
  return "undefined" != typeof document ? document : null;
}

/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
function pu(t) {
  return new Fs(t, /* useProto3Json= */!0);
}

/**
 * An instance of the Platform's 'TextEncoder' implementation.
 */
/**
 * A helper for running delayed tasks following an exponential backoff curve
 * between attempts.
 *
 * Each delay is made up of a "base" delay which follows the exponential
 * backoff curve, and a +/- 50% "jitter" that is calculated and added to the
 * base delay. This prevents clients from accidentally synchronizing their
 * delays causing spikes of load to the backend.
 */
var Iu = /*#__PURE__*/function () {
  function Iu(
  /**
   * The AsyncQueue to run backoff operations on.
   */
  t,
  /**
   * The ID to use when scheduling backoff operations on the AsyncQueue.
   */
  e) {
    var n = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1e3;
    var s = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 1.5;
    var i = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 6e4;
    classCallCheck_classCallCheck(this, Iu);
    this.Hs = t, this.timerId = e, this.mo = n, this.yo = s, this.po = i, this.Io = 0, this.To = null, /** The last backoff attempt, as epoch milliseconds. */
    this.Eo = Date.now(), this.reset();
  }
  /**
   * Resets the backoff delay.
   *
   * The very next backoffAndWait() will have no delay. If it is called again
   * (i.e. due to an error), initialDelayMs (plus jitter) will be used, and
   * subsequent ones will increase according to the backoffFactor.
   */
  createClass_createClass(Iu, [{
    key: "reset",
    value: function reset() {
      this.Io = 0;
    }
    /**
     * Resets the backoff delay to the maximum delay (e.g. for use after a
     * RESOURCE_EXHAUSTED error).
     */
  }, {
    key: "Ao",
    value: function Ao() {
      this.Io = this.po;
    }
    /**
     * Returns a promise that resolves after currentDelayMs, and increases the
     * delay for any subsequent attempts. If there was a pending backoff operation
     * already, it will be canceled.
     */
  }, {
    key: "Ro",
    value: function Ro(t) {
      var _this156 = this;
      // Cancel any pending backoff operation.
      this.cancel();
      // First schedule using the current base (which may be 0 and should be
      // honored as such).
      var e = Math.floor(this.Io + this.bo()),
        n = Math.max(0, Date.now() - this.Eo),
        s = Math.max(0, e - n);
      // Guard against lastAttemptTime being in the future due to a clock change.
      s > 0 && index_esm2017_C("ExponentialBackoff", "Backing off for ".concat(s, " ms (base delay: ").concat(this.Io, " ms, delay with jitter: ").concat(e, " ms, last attempt: ").concat(n, " ms ago)")), this.To = this.Hs.enqueueAfterDelay(this.timerId, s, function () {
        return _this156.Eo = Date.now(), t();
      }),
      // Apply backoff factor to determine next delay and ensure it is within
      // bounds.
      this.Io *= this.yo, this.Io < this.mo && (this.Io = this.mo), this.Io > this.po && (this.Io = this.po);
    }
  }, {
    key: "Po",
    value: function Po() {
      null !== this.To && (this.To.skipDelay(), this.To = null);
    }
  }, {
    key: "cancel",
    value: function cancel() {
      null !== this.To && (this.To.cancel(), this.To = null);
    }
    /** Returns a random value in the range [-currentBaseMs/2, currentBaseMs/2] */
  }, {
    key: "bo",
    value: function bo() {
      return (Math.random() - .5) * this.Io;
    }
  }]);
  return Iu;
}();
/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * A PersistentStream is an abstract base class that represents a streaming RPC
 * to the Firestore backend. It's built on top of the connections own support
 * for streaming RPCs, and adds several critical features for our clients:
 *
 *   - Exponential backoff on failure
 *   - Authentication via CredentialsProvider
 *   - Dispatching all callbacks into the shared worker queue
 *   - Closing idle streams after 60 seconds of inactivity
 *
 * Subclasses of PersistentStream implement serialization of models to and
 * from the JSON representation of the protocol buffers for a specific
 * streaming RPC.
 *
 * ## Starting and Stopping
 *
 * Streaming RPCs are stateful and need to be start()ed before messages can
 * be sent and received. The PersistentStream will call the onOpen() function
 * of the listener once the stream is ready to accept requests.
 *
 * Should a start() fail, PersistentStream will call the registered onClose()
 * listener with a FirestoreError indicating what went wrong.
 *
 * A PersistentStream can be started and stopped repeatedly.
 *
 * Generic types:
 *  SendType: The type of the outgoing message of the underlying
 *    connection stream
 *  ReceiveType: The type of the incoming message of the underlying
 *    connection stream
 *  ListenerType: The type of the listener that will be used for callbacks
 */
var Tu = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  function Tu(t, e, n, s, i, r, o, u) {
    _classCallCheck(this, Tu);
    this.Hs = t, this.vo = n, this.Vo = s, this.connection = i, this.authCredentialsProvider = r, this.appCheckCredentialsProvider = o, this.listener = u, this.state = 0 /* PersistentStreamState.Initial */,
    /**
     * A close count that's incremented every time the stream is closed; used by
     * getCloseGuardedDispatcher() to invalidate callbacks that happen after
     * close.
     */
    this.So = 0, this.Do = null, this.Co = null, this.stream = null, this.xo = new Iu(t, e);
  }
  /**
   * Returns true if start() has been called and no error has occurred. True
   * indicates the stream is open or in the process of opening (which
   * encompasses respecting backoff, getting auth tokens, and starting the
   * actual RPC). Use isOpen() to determine if the stream is open and ready for
   * outbound requests.
   */
  _createClass(Tu, [{
    key: "No",
    value: function No() {
      return 1 /* PersistentStreamState.Starting */ === this.state || 5 /* PersistentStreamState.Backoff */ === this.state || this.ko();
    }
    /**
     * Returns true if the underlying RPC is open (the onOpen() listener has been
     * called) and the stream is ready for outbound requests.
     */
  }, {
    key: "ko",
    value: function ko() {
      return 2 /* PersistentStreamState.Open */ === this.state || 3 /* PersistentStreamState.Healthy */ === this.state;
    }
    /**
     * Starts the RPC. Only allowed if isStarted() returns false. The stream is
     * not immediately ready for use: onOpen() will be invoked when the RPC is
     * ready for outbound requests, at which point isOpen() will return true.
     *
     * When start returns, isStarted() will return true.
     */
  }, {
    key: "start",
    value: function start() {
      4 /* PersistentStreamState.Error */ !== this.state ? this.auth() : this.Oo();
    }
    /**
     * Stops the RPC. This call is idempotent and allowed regardless of the
     * current isStarted() state.
     *
     * When stop returns, isStarted() and isOpen() will both return false.
     */
  }, {
    key: "stop",
    value: function () {
      var _stop = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee16() {
        return _regeneratorRuntime().wrap(function _callee16$(_context16) {
          while (1) {
            switch (_context16.prev = _context16.next) {
              case 0:
                _context16.t0 = this.No();
                if (!_context16.t0) {
                  _context16.next = 4;
                  break;
                }
                _context16.next = 4;
                return this.close(0 /* PersistentStreamState.Initial */);
              case 4:
              case "end":
                return _context16.stop();
            }
          }
        }, _callee16, this);
      }));
      function stop() {
        return _stop.apply(this, arguments);
      }
      return stop;
    }()
    /**
     * After an error the stream will usually back off on the next attempt to
     * start it. If the error warrants an immediate restart of the stream, the
     * sender can use this to indicate that the receiver should not back off.
     *
     * Each error will call the onClose() listener. That function can decide to
     * inhibit backoff if required.
     */
  }, {
    key: "Mo",
    value: function Mo() {
      this.state = 0 /* PersistentStreamState.Initial */, this.xo.reset();
    }
    /**
     * Marks this stream as idle. If no further actions are performed on the
     * stream for one minute, the stream will automatically close itself and
     * notify the stream's onClose() handler with Status.OK. The stream will then
     * be in a !isStarted() state, requiring the caller to start the stream again
     * before further use.
     *
     * Only streams that are in state 'Open' can be marked idle, as all other
     * states imply pending network operations.
     */
  }, {
    key: "Fo",
    value: function Fo() {
      var _this157 = this;
      // Starts the idle time if we are in state 'Open' and are not yet already
      // running a timer (in which case the previous idle timeout still applies).
      this.ko() && null === this.Do && (this.Do = this.Hs.enqueueAfterDelay(this.vo, 6e4, function () {
        return _this157.$o();
      }));
    }
    /** Sends a message to the underlying stream. */
  }, {
    key: "Bo",
    value: function Bo(t) {
      this.Lo(), this.stream.send(t);
    }
    /** Called by the idle timer when the stream should close due to inactivity. */
  }, {
    key: "$o",
    value: function () {
      var _$o = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee17() {
        return _regeneratorRuntime().wrap(function _callee17$(_context17) {
          while (1) {
            switch (_context17.prev = _context17.next) {
              case 0:
                if (!this.ko()) {
                  _context17.next = 2;
                  break;
                }
                return _context17.abrupt("return", this.close(0 /* PersistentStreamState.Initial */));
              case 2:
              case "end":
                return _context17.stop();
            }
          }
        }, _callee17, this);
      }));
      function $o() {
        return _$o.apply(this, arguments);
      }
      return $o;
    }() /** Marks the stream as active again. */
  }, {
    key: "Lo",
    value: function Lo() {
      this.Do && (this.Do.cancel(), this.Do = null);
    }
    /** Cancels the health check delayed operation. */
  }, {
    key: "qo",
    value: function qo() {
      this.Co && (this.Co.cancel(), this.Co = null);
    }
    /**
     * Closes the stream and cleans up as necessary:
     *
     * * closes the underlying GRPC stream;
     * * calls the onClose handler with the given 'error';
     * * sets internal stream state to 'finalState';
     * * adjusts the backoff timer based on the error
     *
     * A new stream can be opened by calling start().
     *
     * @param finalState - the intended state of the stream after closing.
     * @param error - the error the connection was closed with.
     */
  }, {
    key: "close",
    value: function () {
      var _close = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee18(t, e) {
        return _regeneratorRuntime().wrap(function _callee18$(_context18) {
          while (1) {
            switch (_context18.prev = _context18.next) {
              case 0:
                this.Lo();
                this.qo();
                this.xo.cancel();
                // Invalidates any stream-related callbacks (e.g. from auth or the
                // underlying stream), guaranteeing they won't execute.
                this.So++;
                4 /* PersistentStreamState.Error */ !== t ?
                // If this is an intentional close ensure we don't delay our next connection attempt.
                this.xo.reset() : e && e.code === index_esm2017_B.RESOURCE_EXHAUSTED ? (
                // Log the error. (Probably either 'quota exceeded' or 'max queue length reached'.)
                index_esm2017_x(e.toString()), index_esm2017_x("Using maximum backoff delay to prevent overloading the backend."), this.xo.Ao()) : e && e.code === index_esm2017_B.UNAUTHENTICATED && 3 /* PersistentStreamState.Healthy */ !== this.state && (
                // "unauthenticated" error means the token was rejected. This should rarely
                // happen since both Auth and AppCheck ensure a sufficient TTL when we
                // request a token. If a user manually resets their system clock this can
                // fail, however. In this case, we should get a Code.UNAUTHENTICATED error
                // before we received the first message and we need to invalidate the token
                // to ensure that we fetch a new token.
                this.authCredentialsProvider.invalidateToken(), this.appCheckCredentialsProvider.invalidateToken());
                // Clean up the underlying stream because we are no longer interested in events.
                null !== this.stream && (this.Uo(), this.stream.close(), this.stream = null);
                // This state must be assigned before calling onClose() to allow the callback to
                // inhibit backoff or otherwise manipulate the state in its non-started state.
                this.state = t;
                _context18.next = 9;
                return this.listener.Zr(e);
              case 9:
              case "end":
                return _context18.stop();
            }
          }
        }, _callee18, this);
      }));
      function close(_x21, _x22) {
        return _close.apply(this, arguments);
      }
      return close;
    }()
    /**
     * Can be overridden to perform additional cleanup before the stream is closed.
     * Calling super.tearDown() is not required.
     */
  }, {
    key: "Uo",
    value: function Uo() {}
  }, {
    key: "auth",
    value: function auth() {
      var _this158 = this;
      this.state = 1 /* PersistentStreamState.Starting */;
      var t = this.Ko(this.So),
        e = this.So;
      // TODO(mikelehen): Just use dispatchIfNotClosed, but see TODO below.
      Promise.all([this.authCredentialsProvider.getToken(), this.appCheckCredentialsProvider.getToken()]).then(function (_ref23) {
        var _ref24 = _slicedToArray(_ref23, 2),
          t = _ref24[0],
          n = _ref24[1];
        // Stream can be stopped while waiting for authentication.
        // TODO(mikelehen): We really should just use dispatchIfNotClosed
        // and let this dispatch onto the queue, but that opened a spec test can
        // of worms that I don't want to deal with in this PR.
        _this158.So === e &&
        // Normally we'd have to schedule the callback on the AsyncQueue.
        // However, the following calls are safe to be called outside the
        // AsyncQueue since they don't chain asynchronous calls
        _this158.Go(t, n);
      }, function (e) {
        t(function () {
          var t = new index_esm2017_L(index_esm2017_B.UNKNOWN, "Fetching auth token failed: " + e.message);
          return _this158.Qo(t);
        });
      });
    }
  }, {
    key: "Go",
    value: function Go(t, e) {
      var _this159 = this;
      var n = this.Ko(this.So);
      this.stream = this.jo(t, e), this.stream.Yr(function () {
        n(function () {
          return _this159.state = 2 /* PersistentStreamState.Open */, _this159.Co = _this159.Hs.enqueueAfterDelay(_this159.Vo, 1e4, function () {
            return _this159.ko() && (_this159.state = 3 /* PersistentStreamState.Healthy */), Promise.resolve();
          }), _this159.listener.Yr();
        });
      }), this.stream.Zr(function (t) {
        n(function () {
          return _this159.Qo(t);
        });
      }), this.stream.onMessage(function (t) {
        n(function () {
          return _this159.onMessage(t);
        });
      });
    }
  }, {
    key: "Oo",
    value: function Oo() {
      var _this160 = this;
      this.state = 5 /* PersistentStreamState.Backoff */, this.xo.Ro( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee19() {
        return _regeneratorRuntime().wrap(function _callee19$(_context19) {
          while (1) {
            switch (_context19.prev = _context19.next) {
              case 0:
                _this160.state = 0 /* PersistentStreamState.Initial */, _this160.start();
              case 1:
              case "end":
                return _context19.stop();
            }
          }
        }, _callee19);
      })));
    }
    // Visible for tests
  }, {
    key: "Qo",
    value: function Qo(t) {
      // In theory the stream could close cleanly, however, in our current model
      // we never expect this to happen because if we stop a stream ourselves,
      // this callback will never be called. To prevent cases where we retry
      // without a backoff accidentally, we set the stream to error in all cases.
      return index_esm2017_C("PersistentStream", "close with error: ".concat(t)), this.stream = null, this.close(4 /* PersistentStreamState.Error */, t);
    }
    /**
     * Returns a "dispatcher" function that dispatches operations onto the
     * AsyncQueue but only runs them if closeCount remains unchanged. This allows
     * us to turn auth / stream callbacks into no-ops if the stream is closed /
     * re-opened, etc.
     */
  }, {
    key: "Ko",
    value: function Ko(t) {
      var _this161 = this;
      return function (e) {
        _this161.Hs.enqueueAndForget(function () {
          return _this161.So === t ? e() : (index_esm2017_C("PersistentStream", "stream callback skipped by getCloseGuardedDispatcher."), Promise.resolve());
        });
      };
    }
  }]);
  return Tu;
}()));
/**
 * A PersistentStream that implements the Listen RPC.
 *
 * Once the Listen stream has called the onOpen() listener, any number of
 * listen() and unlisten() calls can be made to control what changes will be
 * sent from the server for ListenResponses.
 */
var Eu = /*#__PURE__*/(/* unused pure expression or super */ null && (function (_Tu) {
  _inherits(Eu, _Tu);
  var _super27 = _createSuper(Eu);
  function Eu(t, e, n, s, i, r) {
    var _this162;
    _classCallCheck(this, Eu);
    _this162 = _super27.call(this, t, "listen_stream_connection_backoff" /* TimerId.ListenStreamConnectionBackoff */, "listen_stream_idle" /* TimerId.ListenStreamIdle */, "health_check_timeout" /* TimerId.HealthCheckTimeout */, e, n, s, r), _this162.yt = i;
    return _this162;
  }
  _createClass(Eu, [{
    key: "jo",
    value: function jo(t, e) {
      return this.connection.wo("Listen", t, e);
    }
  }, {
    key: "onMessage",
    value: function onMessage(t) {
      // A successful response means the stream is healthy
      this.xo.reset();
      var e = Zs(this.yt, t),
        n = function (t) {
          // We have only reached a consistent snapshot for the entire stream if there
          // is a read_time set and it applies to all targets (i.e. the list of
          // targets is empty). The backend is guaranteed to send such responses.
          if (!("targetChange" in t)) return st.min();
          var e = t.targetChange;
          return e.targetIds && e.targetIds.length ? st.min() : e.readTime ? qs(e.readTime) : st.min();
        }(t);
      return this.listener.Wo(e, n);
    }
    /**
     * Registers interest in the results of the given target. If the target
     * includes a resumeToken it will be included in the request. Results that
     * affect the target will be streamed back as WatchChange messages that
     * reference the targetId.
     */
  }, {
    key: "zo",
    value: function zo(t) {
      var e = {};
      e.database = zs(this.yt), e.addTarget = function (t, e) {
        var n;
        var s = e.target;
        return n = rn(s) ? {
          documents: si(t, s)
        } : {
          query: ii(t, s)
        }, n.targetId = e.targetId, e.resumeToken.approximateByteSize() > 0 ? n.resumeToken = Bs(t, e.resumeToken) : e.snapshotVersion.compareTo(st.min()) > 0 && (
        // TODO(wuandy): Consider removing above check because it is most likely true.
        // Right now, many tests depend on this behaviour though (leaving min() out
        // of serialization).
        n.readTime = $s(t, e.snapshotVersion.toTimestamp())), n;
      }(this.yt, t);
      var n = oi(this.yt, t);
      n && (e.labels = n), this.Bo(e);
    }
    /**
     * Unregisters interest in the results of the target associated with the
     * given targetId.
     */
  }, {
    key: "Ho",
    value: function Ho(t) {
      var e = {};
      e.database = zs(this.yt), e.removeTarget = t, this.Bo(e);
    }
  }]);
  return Eu;
}(Tu)));
/**
 * A Stream that implements the Write RPC.
 *
 * The Write RPC requires the caller to maintain special streamToken
 * state in between calls, to help the server understand which responses the
 * client has processed by the time the next request is made. Every response
 * will contain a streamToken; this value must be passed to the next
 * request.
 *
 * After calling start() on this stream, the next request must be a handshake,
 * containing whatever streamToken is on hand. Once a response to this
 * request is received, all pending mutations may be submitted. When
 * submitting multiple batches of mutations at the same time, it's
 * okay to use the same streamToken for the calls to writeMutations.
 *
 * TODO(b/33271235): Use proto types
 */
var Au = /*#__PURE__*/(/* unused pure expression or super */ null && (function (_Tu2) {
  _inherits(Au, _Tu2);
  var _super28 = _createSuper(Au);
  function Au(t, e, n, s, i, r) {
    var _this163;
    _classCallCheck(this, Au);
    _this163 = _super28.call(this, t, "write_stream_connection_backoff" /* TimerId.WriteStreamConnectionBackoff */, "write_stream_idle" /* TimerId.WriteStreamIdle */, "health_check_timeout" /* TimerId.HealthCheckTimeout */, e, n, s, r), _this163.yt = i, _this163.Jo = !1;
    return _this163;
  }
  /**
   * Tracks whether or not a handshake has been successfully exchanged and
   * the stream is ready to accept mutations.
   */
  _createClass(Au, [{
    key: "Yo",
    get: function get() {
      return this.Jo;
    }
    // Override of PersistentStream.start
  }, {
    key: "start",
    value: function start() {
      this.Jo = !1, this.lastStreamToken = void 0, _get(_getPrototypeOf(Au.prototype), "start", this).call(this);
    }
  }, {
    key: "Uo",
    value: function Uo() {
      this.Jo && this.Xo([]);
    }
  }, {
    key: "jo",
    value: function jo(t, e) {
      return this.connection.wo("Write", t, e);
    }
  }, {
    key: "onMessage",
    value: function onMessage(t) {
      if (
      // Always capture the last stream token.
      index_esm2017_M(!!t.streamToken), this.lastStreamToken = t.streamToken, this.Jo) {
        // A successful first write response means the stream is healthy,
        // Note, that we could consider a successful handshake healthy, however,
        // the write itself might be causing an error we want to back off from.
        this.xo.reset();
        var e = ni(t.writeResults, t.commitTime),
          n = qs(t.commitTime);
        return this.listener.Zo(n, e);
      }
      // The first response is always the handshake response
      return index_esm2017_M(!t.writeResults || 0 === t.writeResults.length), this.Jo = !0, this.listener.tu();
    }
    /**
     * Sends an initial streamToken to the server, performing the handshake
     * required to make the StreamingWrite RPC work. Subsequent
     * calls should wait until onHandshakeComplete was called.
     */
  }, {
    key: "eu",
    value: function eu() {
      // TODO(dimond): Support stream resumption. We intentionally do not set the
      // stream token on the handshake, ignoring any stream token we might have.
      var t = {};
      t.database = zs(this.yt), this.Bo(t);
    }
    /** Sends a group of mutations to the Firestore backend to apply. */
  }, {
    key: "Xo",
    value: function Xo(t) {
      var _this164 = this;
      var e = {
        streamToken: this.lastStreamToken,
        writes: t.map(function (t) {
          return ti(_this164.yt, t);
        })
      };
      this.Bo(e);
    }
  }]);
  return Au;
}(Tu)));
/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * Datastore and its related methods are a wrapper around the external Google
 * Cloud Datastore grpc API, which provides an interface that is more convenient
 * for the rest of the client SDK architecture to consume.
 */
/**
 * An implementation of Datastore that exposes additional state for internal
 * consumption.
 */
var Ru = /*#__PURE__*/(/* unused pure expression or super */ null && (function (_ref26) {
  _inherits(Ru, _ref26);
  var _super29 = _createSuper(Ru);
  function Ru(t, e, n, s) {
    var _this165;
    _classCallCheck(this, Ru);
    _this165 = _super29.call(this), _this165.authCredentials = t, _this165.appCheckCredentials = e, _this165.connection = n, _this165.yt = s, _this165.nu = !1;
    return _this165;
  }
  _createClass(Ru, [{
    key: "su",
    value: function su() {
      if (this.nu) throw new index_esm2017_L(index_esm2017_B.FAILED_PRECONDITION, "The client has already been terminated.");
    }
    /** Invokes the provided RPC with auth and AppCheck tokens. */
  }, {
    key: "ao",
    value: function ao(t, e, n) {
      var _this166 = this;
      return this.su(), Promise.all([this.authCredentials.getToken(), this.appCheckCredentials.getToken()]).then(function (_ref27) {
        var _ref28 = _slicedToArray(_ref27, 2),
          s = _ref28[0],
          i = _ref28[1];
        return _this166.connection.ao(t, e, n, s, i);
      }).catch(function (t) {
        throw "FirebaseError" === t.name ? (t.code === index_esm2017_B.UNAUTHENTICATED && (_this166.authCredentials.invalidateToken(), _this166.appCheckCredentials.invalidateToken()), t) : new index_esm2017_L(index_esm2017_B.UNKNOWN, t.toString());
      });
    }
    /** Invokes the provided RPC with streamed results with auth and AppCheck tokens. */
  }, {
    key: "_o",
    value: function _o(t, e, n, s) {
      var _this167 = this;
      return this.su(), Promise.all([this.authCredentials.getToken(), this.appCheckCredentials.getToken()]).then(function (_ref29) {
        var _ref30 = _slicedToArray(_ref29, 2),
          i = _ref30[0],
          r = _ref30[1];
        return _this167.connection._o(t, e, n, i, r, s);
      }).catch(function (t) {
        throw "FirebaseError" === t.name ? (t.code === index_esm2017_B.UNAUTHENTICATED && (_this167.authCredentials.invalidateToken(), _this167.appCheckCredentials.invalidateToken()), t) : new index_esm2017_L(index_esm2017_B.UNKNOWN, t.toString());
      });
    }
  }, {
    key: "terminate",
    value: function terminate() {
      this.nu = !0;
    }
  }]);
  return Ru;
}( /*#__PURE__*/function () {
  function _class3() {
    _classCallCheck(this, _class3);
  }
  return _createClass(_class3);
}()))); // TODO(firestorexp): Make sure there is only one Datastore instance per
// firestore-exp client.
function bu(_x23, _x24) {
  return _bu.apply(this, arguments);
}
/**
 * A component used by the RemoteStore to track the OnlineState (that is,
 * whether or not the client as a whole should be considered to be online or
 * offline), implementing the appropriate heuristics.
 *
 * In particular, when the client is trying to connect to the backend, we
 * allow up to MAX_WATCH_STREAM_FAILURES within ONLINE_STATE_TIMEOUT_MS for
 * a connection to succeed. If we have too many failures or the timeout elapses,
 * then we set the OnlineState to Offline, and the client will behave as if
 * it is offline (get()s will return cached data, etc.).
 */
function _bu() {
  _bu = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee79(t, e) {
    var n, s, i;
    return _regeneratorRuntime().wrap(function _callee79$(_context79) {
      while (1) {
        switch (_context79.prev = _context79.next) {
          case 0:
            n = $(t), s = function (t, e) {
              var n = ii(t, e);
              return {
                structuredAggregationQuery: {
                  aggregations: [{
                    count: {},
                    alias: "count_alias"
                  }],
                  structuredQuery: n.structuredQuery
                },
                parent: n.parent
              };
            }(n.yt, gn(e)), i = s.parent;
            n.connection.co || delete s.parent;
            _context79.next = 4;
            return n._o("RunAggregationQuery", i, s, /*expectedResponseCount=*/1);
          case 4:
            return _context79.abrupt("return", _context79.sent.filter(function (t) {
              return !!t.result;
            }).map(function (t) {
              return t.result.aggregateFields;
            }));
          case 5:
          case "end":
            return _context79.stop();
        }
      }
    }, _callee79);
  }));
  return _bu.apply(this, arguments);
}
var Pu = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  function Pu(t, e) {
    _classCallCheck(this, Pu);
    this.asyncQueue = t, this.onlineStateHandler = e, /** The current OnlineState. */
    this.state = "Unknown" /* OnlineState.Unknown */,
    /**
     * A count of consecutive failures to open the stream. If it reaches the
     * maximum defined by MAX_WATCH_STREAM_FAILURES, we'll set the OnlineState to
     * Offline.
     */
    this.iu = 0,
    /**
     * A timer that elapses after ONLINE_STATE_TIMEOUT_MS, at which point we
     * transition from OnlineState.Unknown to OnlineState.Offline without waiting
     * for the stream to actually fail (MAX_WATCH_STREAM_FAILURES times).
     */
    this.ru = null,
    /**
     * Whether the client should log a warning message if it fails to connect to
     * the backend (initially true, cleared after a successful stream, or if we've
     * logged the message already).
     */
    this.ou = !0;
  }
  /**
   * Called by RemoteStore when a watch stream is started (including on each
   * backoff attempt).
   *
   * If this is the first attempt, it sets the OnlineState to Unknown and starts
   * the onlineStateTimer.
   */
  _createClass(Pu, [{
    key: "uu",
    value: function uu() {
      var _this168 = this;
      0 === this.iu && (this.cu("Unknown" /* OnlineState.Unknown */), this.ru = this.asyncQueue.enqueueAfterDelay("online_state_timeout" /* TimerId.OnlineStateTimeout */, 1e4, function () {
        return _this168.ru = null, _this168.au("Backend didn't respond within 10 seconds."), _this168.cu("Offline" /* OnlineState.Offline */), Promise.resolve();
      }));
    }
    /**
     * Updates our OnlineState as appropriate after the watch stream reports a
     * failure. The first failure moves us to the 'Unknown' state. We then may
     * allow multiple failures (based on MAX_WATCH_STREAM_FAILURES) before we
     * actually transition to the 'Offline' state.
     */
  }, {
    key: "hu",
    value: function hu(t) {
      "Online" /* OnlineState.Online */ === this.state ? this.cu("Unknown" /* OnlineState.Unknown */) : (this.iu++, this.iu >= 1 && (this.lu(), this.au("Connection failed 1 times. Most recent error: ".concat(t.toString())), this.cu("Offline" /* OnlineState.Offline */)));
    }
    /**
     * Explicitly sets the OnlineState to the specified state.
     *
     * Note that this resets our timers / failure counters, etc. used by our
     * Offline heuristics, so must not be used in place of
     * handleWatchStreamStart() and handleWatchStreamFailure().
     */
  }, {
    key: "set",
    value: function set(t) {
      this.lu(), this.iu = 0, "Online" /* OnlineState.Online */ === t && (
      // We've connected to watch at least once. Don't warn the developer
      // about being offline going forward.
      this.ou = !1), this.cu(t);
    }
  }, {
    key: "cu",
    value: function cu(t) {
      t !== this.state && (this.state = t, this.onlineStateHandler(t));
    }
  }, {
    key: "au",
    value: function au(t) {
      var e = "Could not reach Cloud Firestore backend. ".concat(t, "\nThis typically indicates that your device does not have a healthy Internet connection at the moment. The client will operate in offline mode until it is able to successfully connect to the backend.");
      this.ou ? (index_esm2017_x(e), this.ou = !1) : index_esm2017_C("OnlineStateTracker", e);
    }
  }, {
    key: "lu",
    value: function lu() {
      null !== this.ru && (this.ru.cancel(), this.ru = null);
    }
  }]);
  return Pu;
}()));
/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
var vu = /*#__PURE__*/(/* unused pure expression or super */ null && (_createClass(function vu(
/**
 * The local store, used to fill the write pipeline with outbound mutations.
 */
t, /** The client-side proxy for interacting with the backend. */
e, n, s, i) {
  var _this169 = this;
  _classCallCheck(this, vu);
  this.localStore = t, this.datastore = e, this.asyncQueue = n, this.remoteSyncer = {},
  /**
   * A list of up to MAX_PENDING_WRITES writes that we have fetched from the
   * LocalStore via fillWritePipeline() and have or will send to the write
   * stream.
   *
   * Whenever writePipeline.length > 0 the RemoteStore will attempt to start or
   * restart the write stream. When the stream is established the writes in the
   * pipeline will be sent in order.
   *
   * Writes remain in writePipeline until they are acknowledged by the backend
   * and thus will automatically be re-sent if the stream is interrupted /
   * restarted before they're acknowledged.
   *
   * Write responses from the backend are linked to their originating request
   * purely based on order, and so we can just shift() writes from the front of
   * the writePipeline as we receive responses.
   */
  this.fu = [],
  /**
   * A mapping of watched targets that the client cares about tracking and the
   * user has explicitly called a 'listen' for this target.
   *
   * These targets may or may not have been sent to or acknowledged by the
   * server. On re-establishing the listen stream, these targets should be sent
   * to the server. The targets removed with unlistens are removed eagerly
   * without waiting for confirmation from the listen stream.
   */
  this.du = new Map(),
  /**
   * A set of reasons for why the RemoteStore may be offline. If empty, the
   * RemoteStore may start its network connections.
   */
  this._u = new Set(),
  /**
   * Event handlers that get called when the network is disabled or enabled.
   *
   * PORTING NOTE: These functions are used on the Web client to create the
   * underlying streams (to support tree-shakeable streams). On Android and iOS,
   * the streams are created during construction of RemoteStore.
   */
  this.wu = [], this.mu = i, this.mu.Ur(function (t) {
    n.enqueueAndForget( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee21() {
      return _regeneratorRuntime().wrap(function _callee21$(_context21) {
        while (1) {
          switch (_context21.prev = _context21.next) {
            case 0:
              _context21.t0 = Mu(_this169);
              if (!_context21.t0) {
                _context21.next = 5;
                break;
              }
              index_esm2017_C("RemoteStore", "Restarting streams for network reachability change.");
              _context21.next = 5;
              return function () {
                var _ref32 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee20(t) {
                  var e;
                  return _regeneratorRuntime().wrap(function _callee20$(_context20) {
                    while (1) {
                      switch (_context20.prev = _context20.next) {
                        case 0:
                          e = $(t);
                          e._u.add(4 /* OfflineCause.ConnectivityChange */);
                          _context20.next = 4;
                          return Su(e);
                        case 4:
                          e.gu.set("Unknown" /* OnlineState.Unknown */);
                          e._u.delete(4 /* OfflineCause.ConnectivityChange */);
                          _context20.next = 8;
                          return Vu(e);
                        case 8:
                        case "end":
                          return _context20.stop();
                      }
                    }
                  }, _callee20);
                }));
                return function (_x25) {
                  return _ref32.apply(this, arguments);
                };
              }()(_this169);
            case 5:
            case "end":
              return _context21.stop();
          }
        }
      }, _callee21);
    })));
  }), this.gu = new Pu(n, s);
})));
function Vu(_x26) {
  return _Vu.apply(this, arguments);
}
/**
 * Temporarily disables the network. The network can be re-enabled using
 * enableNetwork().
 */
function _Vu() {
  _Vu = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee80(t) {
    var _iterator94, _step94, e;
    return _regeneratorRuntime().wrap(function _callee80$(_context80) {
      while (1) {
        switch (_context80.prev = _context80.next) {
          case 0:
            if (!Mu(t)) {
              _context80.next = 18;
              break;
            }
            _iterator94 = _createForOfIteratorHelper(t.wu);
            _context80.prev = 2;
            _iterator94.s();
          case 4:
            if ((_step94 = _iterator94.n()).done) {
              _context80.next = 10;
              break;
            }
            e = _step94.value;
            _context80.next = 8;
            return e( /* enabled= */!0);
          case 8:
            _context80.next = 4;
            break;
          case 10:
            _context80.next = 15;
            break;
          case 12:
            _context80.prev = 12;
            _context80.t0 = _context80["catch"](2);
            _iterator94.e(_context80.t0);
          case 15:
            _context80.prev = 15;
            _iterator94.f();
            return _context80.finish(15);
          case 18:
          case "end":
            return _context80.stop();
        }
      }
    }, _callee80, null, [[2, 12, 15, 18]]);
  }));
  return _Vu.apply(this, arguments);
}
function Su(_x27) {
  return _Su.apply(this, arguments);
}
/**
 * Starts new listen for the given target. Uses resume token if provided. It
 * is a no-op if the target of given `TargetData` is already being listened to.
 */
function _Su() {
  _Su = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee81(t) {
    var _iterator95, _step95, e;
    return _regeneratorRuntime().wrap(function _callee81$(_context81) {
      while (1) {
        switch (_context81.prev = _context81.next) {
          case 0:
            _iterator95 = _createForOfIteratorHelper(t.wu);
            _context81.prev = 1;
            _iterator95.s();
          case 3:
            if ((_step95 = _iterator95.n()).done) {
              _context81.next = 9;
              break;
            }
            e = _step95.value;
            _context81.next = 7;
            return e( /* enabled= */!1);
          case 7:
            _context81.next = 3;
            break;
          case 9:
            _context81.next = 14;
            break;
          case 11:
            _context81.prev = 11;
            _context81.t0 = _context81["catch"](1);
            _iterator95.e(_context81.t0);
          case 14:
            _context81.prev = 14;
            _iterator95.f();
            return _context81.finish(14);
          case 17:
          case "end":
            return _context81.stop();
        }
      }
    }, _callee81, null, [[1, 11, 14, 17]]);
  }));
  return _Su.apply(this, arguments);
}
function Du(t, e) {
  var n = $(t);
  n.du.has(e.targetId) || (
  // Mark this as something the client is currently listening for.
  n.du.set(e.targetId, e), Ou(n) ?
  // The listen will be sent in onWatchStreamOpen
  ku(n) : index_esm2017_tc(n).ko() && xu(n, e));
}

/**
 * Removes the listen from server. It is a no-op if the given target id is
 * not being listened to.
 */
function Cu(t, e) {
  var n = $(t),
    s = index_esm2017_tc(n);
  n.du.delete(e), s.ko() && Nu(n, e), 0 === n.du.size && (s.ko() ? s.Fo() : Mu(n) &&
  // Revert to OnlineState.Unknown if the watch stream is not open and we
  // have no listeners, since without any listens to send we cannot
  // confirm if the stream is healthy and upgrade to OnlineState.Online.
  n.gu.set("Unknown" /* OnlineState.Unknown */));
}

/**
 * We need to increment the the expected number of pending responses we're due
 * from watch so we wait for the ack to process any messages from this target.
 */
function xu(t, e) {
  t.yu.Ot(e.targetId), index_esm2017_tc(t).zo(e);
}

/**
 * We need to increment the expected number of pending responses we're due
 * from watch so we wait for the removal on the server before we process any
 * messages from this target.
 */
function Nu(t, e) {
  t.yu.Ot(e), index_esm2017_tc(t).Ho(e);
}
function ku(t) {
  t.yu = new Cs({
    getRemoteKeysForTarget: function getRemoteKeysForTarget(e) {
      return t.remoteSyncer.getRemoteKeysForTarget(e);
    },
    ne: function ne(e) {
      return t.du.get(e) || null;
    }
  }), index_esm2017_tc(t).start(), t.gu.uu();
}

/**
 * Returns whether the watch stream should be started because it's necessary
 * and has not yet been started.
 */
function Ou(t) {
  return Mu(t) && !index_esm2017_tc(t).No() && t.du.size > 0;
}
function Mu(t) {
  return 0 === $(t)._u.size;
}
function Fu(t) {
  t.yu = void 0;
}
function $u(_x28) {
  return _$u.apply(this, arguments);
}
function _$u() {
  _$u = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee82(t) {
    return _regeneratorRuntime().wrap(function _callee82$(_context82) {
      while (1) {
        switch (_context82.prev = _context82.next) {
          case 0:
            t.du.forEach(function (e, n) {
              xu(t, e);
            });
          case 1:
          case "end":
            return _context82.stop();
        }
      }
    }, _callee82);
  }));
  return _$u.apply(this, arguments);
}
function Bu(_x29, _x30) {
  return _Bu.apply(this, arguments);
}
function _Bu() {
  _Bu = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee83(t, e) {
    return _regeneratorRuntime().wrap(function _callee83$(_context83) {
      while (1) {
        switch (_context83.prev = _context83.next) {
          case 0:
            Fu(t),
            // If we still need the watch stream, retry the connection.
            Ou(t) ? (t.gu.hu(e), ku(t)) :
            // No need to restart watch stream because there are no active targets.
            // The online state is set to unknown because there is no active attempt
            // at establishing a connection
            t.gu.set("Unknown" /* OnlineState.Unknown */);
          case 1:
          case "end":
            return _context83.stop();
        }
      }
    }, _callee83);
  }));
  return _Bu.apply(this, arguments);
}
function Lu(_x31, _x32, _x33) {
  return _Lu.apply(this, arguments);
}
/**
 * Recovery logic for IndexedDB errors that takes the network offline until
 * `op` succeeds. Retries are scheduled with backoff using
 * `enqueueRetryable()`. If `op()` is not provided, IndexedDB access is
 * validated via a generic operation.
 *
 * The returned Promise is resolved once the network is disabled and before
 * any retry attempt.
 */
function _Lu() {
  _Lu = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee85(t, e, n) {
    var _e58;
    return _regeneratorRuntime().wrap(function _callee85$(_context85) {
      while (1) {
        switch (_context85.prev = _context85.next) {
          case 0:
            if (!(
            // Mark the client as online since we got a message from the server
            t.gu.set("Online" /* OnlineState.Online */), e instanceof Ss && 2 /* WatchTargetChangeState.Removed */ === e.state && e.cause)) {
              _context85.next = 13;
              break;
            }
            _context85.prev = 1;
            _context85.next = 4;
            return (/** Handles an error on a target */
              function () {
                var _ref72 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee84(t, e) {
                  var n, _iterator96, _step96, s;
                  return _regeneratorRuntime().wrap(function _callee84$(_context84) {
                    while (1) {
                      switch (_context84.prev = _context84.next) {
                        case 0:
                          n = e.cause;
                          _iterator96 = _createForOfIteratorHelper(e.targetIds);
                          _context84.prev = 2;
                          _iterator96.s();
                        case 4:
                          if ((_step96 = _iterator96.n()).done) {
                            _context84.next = 14;
                            break;
                          }
                          s = _step96.value;
                          _context84.t0 = t.du.has(s);
                          if (!_context84.t0) {
                            _context84.next = 12;
                            break;
                          }
                          _context84.next = 10;
                          return t.remoteSyncer.rejectListen(s, n);
                        case 10:
                          t.du.delete(s);
                          t.yu.removeTarget(s);
                        case 12:
                          _context84.next = 4;
                          break;
                        case 14:
                          _context84.next = 19;
                          break;
                        case 16:
                          _context84.prev = 16;
                          _context84.t1 = _context84["catch"](2);
                          _iterator96.e(_context84.t1);
                        case 19:
                          _context84.prev = 19;
                          _iterator96.f();
                          return _context84.finish(19);
                        case 22:
                        case "end":
                          return _context84.stop();
                      }
                    }
                  }, _callee84, null, [[2, 16, 19, 22]]);
                }));
                return function (_x138, _x139) {
                  return _ref72.apply(this, arguments);
                };
              }()
              /**
              * Attempts to fill our write pipeline with writes from the LocalStore.
              *
              * Called internally to bootstrap or refill the write pipeline and by
              * SyncEngine whenever there are new mutations to process.
              *
              * Starts the write stream if necessary.
              */
              (t, e)
            );
          case 4:
            _context85.next = 11;
            break;
          case 6:
            _context85.prev = 6;
            _context85.t0 = _context85["catch"](1);
            index_esm2017_C("RemoteStore", "Failed to remove targets %s: %s ", e.targetIds.join(","), _context85.t0);
            _context85.next = 11;
            return qu(t, _context85.t0);
          case 11:
            _context85.next = 29;
            break;
          case 13:
            if (!(e instanceof vs ? t.yu.Kt(e) : e instanceof Vs ? t.yu.Jt(e) : t.yu.jt(e), !n.isEqual(st.min()))) {
              _context85.next = 29;
              break;
            }
            _context85.prev = 14;
            _context85.next = 17;
            return Go(t.localStore);
          case 17:
            _e58 = _context85.sent;
            _context85.t1 = n.compareTo(_e58) >= 0;
            if (!_context85.t1) {
              _context85.next = 22;
              break;
            }
            _context85.next = 22;
            return (
              /**
              * Takes a batch of changes from the Datastore, repackages them as a
              * RemoteEvent, and passes that on to the listener, which is typically the
              * SyncEngine.
              */
              function (t, e) {
                var n = t.yu.Zt(e);
                // Update in-memory resume tokens. LocalStore will update the
                // persistent view of these when applying the completed RemoteEvent.
                return n.targetChanges.forEach(function (n, s) {
                  if (n.resumeToken.approximateByteSize() > 0) {
                    var i = t.du.get(s);
                    // A watched target might have been removed already.
                    i && t.du.set(s, i.withResumeToken(n.resumeToken, e));
                  }
                }),
                // Re-establish listens for the targets that have been invalidated by
                // existence filter mismatches.
                n.targetMismatches.forEach(function (e) {
                  var n = t.du.get(e);
                  if (!n)
                    // A watched target might have been removed already.
                    return;
                  // Clear the resume token for the target, since we're in a known mismatch
                  // state.
                  t.du.set(e, n.withResumeToken(Qt.EMPTY_BYTE_STRING, n.snapshotVersion)),
                  // Cause a hard reset by unwatching and rewatching immediately, but
                  // deliberately don't send a resume token so that we get a full update.
                  Nu(t, e);
                  // Mark the target we send as being on behalf of an existence filter
                  // mismatch, but don't actually retain that in listenTargets. This ensures
                  // that we flag the first re-listen this way without impacting future
                  // listens of this target (that might happen e.g. on reconnect).
                  var s = new zi(n.target, e, 1 /* TargetPurpose.ExistenceFilterMismatch */, n.sequenceNumber);
                  xu(t, s);
                }), t.remoteSyncer.applyRemoteEvent(n);
              }(t, n)
            );
          case 22:
            _context85.next = 29;
            break;
          case 24:
            _context85.prev = 24;
            _context85.t2 = _context85["catch"](14);
            index_esm2017_C("RemoteStore", "Failed to raise snapshot:", _context85.t2);
            _context85.next = 29;
            return qu(t, _context85.t2);
          case 29:
          case "end":
            return _context85.stop();
        }
      }
    }, _callee85, null, [[1, 6], [14, 24]]);
  }));
  return _Lu.apply(this, arguments);
}
function qu(_x34, _x35, _x36) {
  return _qu.apply(this, arguments);
}
/**
 * Executes `op`. If `op` fails, takes the network offline until `op`
 * succeeds. Returns after the first attempt.
 */
function _qu() {
  _qu = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee87(t, e, n) {
    return _regeneratorRuntime().wrap(function _callee87$(_context87) {
      while (1) {
        switch (_context87.prev = _context87.next) {
          case 0:
            if (Vt(e)) {
              _context87.next = 2;
              break;
            }
            throw e;
          case 2:
            t._u.add(1 /* OfflineCause.IndexedDbFailed */);
            _context87.next = 5;
            return Su(t);
          case 5:
            t.gu.set("Offline" /* OnlineState.Offline */);
            n || (
            // Use a simple read operation to determine if IndexedDB recovered.
            // Ideally, we would expose a health check directly on SimpleDb, but
            // RemoteStore only has access to persistence through LocalStore.
            n = function n() {
              return Go(t.localStore);
            });
            // Probe IndexedDB periodically and re-enable network
            t.asyncQueue.enqueueRetryable( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee86() {
              return _regeneratorRuntime().wrap(function _callee86$(_context86) {
                while (1) {
                  switch (_context86.prev = _context86.next) {
                    case 0:
                      index_esm2017_C("RemoteStore", "Retrying IndexedDB access");
                      _context86.next = 3;
                      return n();
                    case 3:
                      t._u.delete(1 /* OfflineCause.IndexedDbFailed */);
                      _context86.next = 6;
                      return Vu(t);
                    case 6:
                    case "end":
                      return _context86.stop();
                  }
                }
              }, _callee86);
            })));
          case 8:
          case "end":
            return _context87.stop();
        }
      }
    }, _callee87);
  }));
  return _qu.apply(this, arguments);
}
function Uu(t, e) {
  return e().catch(function (n) {
    return qu(t, n, e);
  });
}
function Ku(_x37) {
  return _Ku.apply(this, arguments);
}
/**
 * Returns true if we can add to the write pipeline (i.e. the network is
 * enabled and the write pipeline is not full).
 */
function _Ku() {
  _Ku = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee88(t) {
    var e, n, s, _t123;
    return _regeneratorRuntime().wrap(function _callee88$(_context88) {
      while (1) {
        switch (_context88.prev = _context88.next) {
          case 0:
            e = $(t), n = index_esm2017_ec(e);
            s = e.fu.length > 0 ? e.fu[e.fu.length - 1].batchId : -1;
          case 2:
            if (!Gu(e)) {
              _context88.next = 19;
              break;
            }
            _context88.prev = 3;
            _context88.next = 6;
            return Wo(e.localStore, s);
          case 6:
            _t123 = _context88.sent;
            if (!(null === _t123)) {
              _context88.next = 10;
              break;
            }
            0 === e.fu.length && n.Fo();
            return _context88.abrupt("break", 19);
          case 10:
            s = _t123.batchId, Qu(e, _t123);
            _context88.next = 17;
            break;
          case 13:
            _context88.prev = 13;
            _context88.t0 = _context88["catch"](3);
            _context88.next = 17;
            return qu(e, _context88.t0);
          case 17:
            _context88.next = 2;
            break;
          case 19:
            ju(e) && Wu(e);
          case 20:
          case "end":
            return _context88.stop();
        }
      }
    }, _callee88, null, [[3, 13]]);
  }));
  return _Ku.apply(this, arguments);
}
function Gu(t) {
  return Mu(t) && t.fu.length < 10;
}

/**
 * Queues additional writes to be sent to the write stream, sending them
 * immediately if the write stream is established.
 */
function Qu(t, e) {
  t.fu.push(e);
  var n = index_esm2017_ec(t);
  n.ko() && n.Yo && n.Xo(e.mutations);
}
function ju(t) {
  return Mu(t) && !index_esm2017_ec(t).No() && t.fu.length > 0;
}
function Wu(t) {
  index_esm2017_ec(t).start();
}
function zu(_x38) {
  return _zu.apply(this, arguments);
}
function _zu() {
  _zu = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee89(t) {
    return _regeneratorRuntime().wrap(function _callee89$(_context89) {
      while (1) {
        switch (_context89.prev = _context89.next) {
          case 0:
            index_esm2017_ec(t).eu();
          case 1:
          case "end":
            return _context89.stop();
        }
      }
    }, _callee89);
  }));
  return _zu.apply(this, arguments);
}
function Hu(_x39) {
  return _Hu.apply(this, arguments);
}
function _Hu() {
  _Hu = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee90(t) {
    var e, _iterator97, _step97, n;
    return _regeneratorRuntime().wrap(function _callee90$(_context90) {
      while (1) {
        switch (_context90.prev = _context90.next) {
          case 0:
            e = index_esm2017_ec(t); // Send the write pipeline now that the stream is established.
            _iterator97 = _createForOfIteratorHelper(t.fu);
            try {
              for (_iterator97.s(); !(_step97 = _iterator97.n()).done;) {
                n = _step97.value;
                e.Xo(n.mutations);
              }
            } catch (err) {
              _iterator97.e(err);
            } finally {
              _iterator97.f();
            }
          case 3:
          case "end":
            return _context90.stop();
        }
      }
    }, _callee90);
  }));
  return _Hu.apply(this, arguments);
}
function Ju(_x40, _x41, _x42) {
  return _Ju.apply(this, arguments);
}
function _Ju() {
  _Ju = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee91(t, e, n) {
    var s, i;
    return _regeneratorRuntime().wrap(function _callee91$(_context91) {
      while (1) {
        switch (_context91.prev = _context91.next) {
          case 0:
            s = t.fu.shift(), i = ji.from(s, e, n);
            _context91.next = 3;
            return Uu(t, function () {
              return t.remoteSyncer.applySuccessfulWrite(i);
            });
          case 3:
            _context91.next = 5;
            return Ku(t);
          case 5:
          case "end":
            return _context91.stop();
        }
      }
    }, _callee91);
  }));
  return _Ju.apply(this, arguments);
}
function Yu(_x43, _x44) {
  return _Yu.apply(this, arguments);
}
function _Yu() {
  _Yu = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee93(t, e) {
    return _regeneratorRuntime().wrap(function _callee93$(_context93) {
      while (1) {
        switch (_context93.prev = _context93.next) {
          case 0:
            _context93.t0 = e && index_esm2017_ec(t).Yo;
            if (!_context93.t0) {
              _context93.next = 4;
              break;
            }
            _context93.next = 4;
            return function () {
              var _ref74 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee92(t, e) {
                var _n44, n;
                return _regeneratorRuntime().wrap(function _callee92$(_context92) {
                  while (1) {
                    switch (_context92.prev = _context92.next) {
                      case 0:
                        if (!(n = e.code, as(n) && n !== index_esm2017_B.ABORTED)) {
                          _context92.next = 7;
                          break;
                        }
                        // This was a permanent error, the request itself was the problem
                        // so it's not going to succeed if we resend it.
                        _n44 = t.fu.shift(); // In this case it's also unlikely that the server itself is melting
                        // down -- this was just a bad request so inhibit backoff on the next
                        // restart.
                        index_esm2017_ec(t).Mo();
                        _context92.next = 5;
                        return Uu(t, function () {
                          return t.remoteSyncer.rejectFailedWrite(_n44.batchId, e);
                        });
                      case 5:
                        _context92.next = 7;
                        return Ku(t);
                      case 7:
                      case "end":
                        return _context92.stop();
                    }
                  }
                }, _callee92);
              }));
              return function (_x140, _x141) {
                return _ref74.apply(this, arguments);
              };
            }()(t, e);
          case 4:
            // The write stream might have been started by refilling the write
            // pipeline for failed writes
            ju(t) && Wu(t);
          case 5:
          case "end":
            return _context93.stop();
        }
      }
    }, _callee93);
  }));
  return _Yu.apply(this, arguments);
}
function Xu(_x45, _x46) {
  return _Xu.apply(this, arguments);
}
/**
 * Toggles the network state when the client gains or loses its primary lease.
 */
function _Xu() {
  _Xu = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee94(t, e) {
    var n, s;
    return _regeneratorRuntime().wrap(function _callee94$(_context94) {
      while (1) {
        switch (_context94.prev = _context94.next) {
          case 0:
            n = $(t);
            n.asyncQueue.verifyOperationInProgress(), index_esm2017_C("RemoteStore", "RemoteStore received new credentials");
            s = Mu(n); // Tear down and re-create our network streams. This will ensure we get a
            // fresh auth token for the new user and re-fill the write pipeline with
            // new mutations from the LocalStore (since mutations are per-user).
            n._u.add(3 /* OfflineCause.CredentialChange */);
            _context94.next = 6;
            return Su(n);
          case 6:
            s &&
            // Don't set the network status to Unknown if we are offline.
            n.gu.set("Unknown" /* OnlineState.Unknown */);
            _context94.next = 9;
            return n.remoteSyncer.handleCredentialChange(e);
          case 9:
            n._u.delete(3 /* OfflineCause.CredentialChange */);
            _context94.next = 12;
            return Vu(n);
          case 12:
          case "end":
            return _context94.stop();
        }
      }
    }, _callee94);
  }));
  return _Xu.apply(this, arguments);
}
function Zu(_x47, _x48) {
  return _Zu.apply(this, arguments);
}
/**
 * If not yet initialized, registers the WatchStream and its network state
 * callback with `remoteStoreImpl`. Returns the existing stream if one is
 * already available.
 *
 * PORTING NOTE: On iOS and Android, the WatchStream gets registered on startup.
 * This is not done on Web to allow it to be tree-shaken.
 */
function _Zu() {
  _Zu = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee95(t, e) {
    var n;
    return _regeneratorRuntime().wrap(function _callee95$(_context95) {
      while (1) {
        switch (_context95.prev = _context95.next) {
          case 0:
            n = $(t);
            if (!e) {
              _context95.next = 7;
              break;
            }
            n._u.delete(2 /* OfflineCause.IsSecondary */);
            _context95.next = 5;
            return Vu(n);
          case 5:
            _context95.next = 13;
            break;
          case 7:
            _context95.t0 = e;
            if (_context95.t0) {
              _context95.next = 13;
              break;
            }
            n._u.add(2 /* OfflineCause.IsSecondary */);
            _context95.next = 12;
            return Su(n);
          case 12:
            n.gu.set("Unknown" /* OnlineState.Unknown */);
          case 13:
          case "end":
            return _context95.stop();
        }
      }
    }, _callee95);
  }));
  return _Zu.apply(this, arguments);
}
function index_esm2017_tc(t) {
  return t.pu || (
  // Create stream (but note that it is not started yet).
  t.pu = function (t, e, n) {
    var s = $(t);
    return s.su(), new Eu(e, s.connection, s.authCredentials, s.appCheckCredentials, s.yt, n);
  }
  /**
  * @license
  * Copyright 2018 Google LLC
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
  * you may not use this file except in compliance with the License.
  * You may obtain a copy of the License at
  *
  *   http://www.apache.org/licenses/LICENSE-2.0
  *
  * Unless required by applicable law or agreed to in writing, software
  * distributed under the License is distributed on an "AS IS" BASIS,
  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  * See the License for the specific language governing permissions and
  * limitations under the License.
  */(t.datastore, t.asyncQueue, {
    Yr: $u.bind(null, t),
    Zr: Bu.bind(null, t),
    Wo: Lu.bind(null, t)
  }), t.wu.push( /*#__PURE__*/function () {
    var _ref33 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee22(e) {
      return _regeneratorRuntime().wrap(function _callee22$(_context22) {
        while (1) {
          switch (_context22.prev = _context22.next) {
            case 0:
              if (!e) {
                _context22.next = 4;
                break;
              }
              t.pu.Mo(), Ou(t) ? ku(t) : t.gu.set("Unknown" /* OnlineState.Unknown */);
              _context22.next = 7;
              break;
            case 4:
              _context22.next = 6;
              return t.pu.stop();
            case 6:
              Fu(t);
            case 7:
            case "end":
              return _context22.stop();
          }
        }
      }, _callee22);
    }));
    return function (_x49) {
      return _ref33.apply(this, arguments);
    };
  }())), t.pu;
}

/**
 * If not yet initialized, registers the WriteStream and its network state
 * callback with `remoteStoreImpl`. Returns the existing stream if one is
 * already available.
 *
 * PORTING NOTE: On iOS and Android, the WriteStream gets registered on startup.
 * This is not done on Web to allow it to be tree-shaken.
 */
function index_esm2017_ec(t) {
  return t.Iu || (
  // Create stream (but note that it is not started yet).
  t.Iu = function (t, e, n) {
    var s = $(t);
    return s.su(), new Au(e, s.connection, s.authCredentials, s.appCheckCredentials, s.yt, n);
  }(t.datastore, t.asyncQueue, {
    Yr: zu.bind(null, t),
    Zr: Yu.bind(null, t),
    tu: Hu.bind(null, t),
    Zo: Ju.bind(null, t)
  }), t.wu.push( /*#__PURE__*/function () {
    var _ref34 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee23(e) {
      return _regeneratorRuntime().wrap(function _callee23$(_context23) {
        while (1) {
          switch (_context23.prev = _context23.next) {
            case 0:
              if (!e) {
                _context23.next = 6;
                break;
              }
              t.Iu.Mo();
              _context23.next = 4;
              return Ku(t);
            case 4:
              _context23.next = 9;
              break;
            case 6:
              _context23.next = 8;
              return t.Iu.stop();
            case 8:
              t.fu.length > 0 && (index_esm2017_C("RemoteStore", "Stopping write stream with ".concat(t.fu.length, " pending writes")), t.fu = []);
            case 9:
            case "end":
              return _context23.stop();
          }
        }
      }, _callee23);
    }));
    return function (_x50) {
      return _ref34.apply(this, arguments);
    };
  }())), t.Iu;
}

/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * Represents an operation scheduled to be run in the future on an AsyncQueue.
 *
 * It is created via DelayedOperation.createAndSchedule().
 *
 * Supports cancellation (via cancel()) and early execution (via skipDelay()).
 *
 * Note: We implement `PromiseLike` instead of `Promise`, as the `Promise` type
 * in newer versions of TypeScript defines `finally`, which is not available in
 * IE.
 */
var index_esm2017_nc = /*#__PURE__*/function () {
  function nc(t, e, n, s, i) {
    classCallCheck_classCallCheck(this, nc);
    this.asyncQueue = t, this.timerId = e, this.targetTimeMs = n, this.op = s, this.removalCallback = i, this.deferred = new index_esm2017_q(), this.then = this.deferred.promise.then.bind(this.deferred.promise),
    // It's normal for the deferred promise to be canceled (due to cancellation)
    // and so we attach a dummy catch callback to avoid
    // 'UnhandledPromiseRejectionWarning' log spam.
    this.deferred.promise.catch(function (t) {});
  }
  /**
   * Creates and returns a DelayedOperation that has been scheduled to be
   * executed on the provided asyncQueue after the provided delayMs.
   *
   * @param asyncQueue - The queue to schedule the operation on.
   * @param id - A Timer ID identifying the type of operation this is.
   * @param delayMs - The delay (ms) before the operation should be scheduled.
   * @param op - The operation to run.
   * @param removalCallback - A callback to be called synchronously once the
   *   operation is executed or canceled, notifying the AsyncQueue to remove it
   *   from its delayedOperations list.
   *   PORTING NOTE: This exists to prevent making removeDelayedOperation() and
   *   the DelayedOperation class public.
   */
  createClass_createClass(nc, [{
    key: "start",
    value:
    /**
     * Starts the timer. This is called immediately after construction by
     * createAndSchedule().
     */
    function start(t) {
      var _this170 = this;
      this.timerHandle = setTimeout(function () {
        return _this170.handleDelayElapsed();
      }, t);
    }
    /**
     * Queues the operation to run immediately (if it hasn't already been run or
     * canceled).
     */
  }, {
    key: "skipDelay",
    value: function skipDelay() {
      return this.handleDelayElapsed();
    }
    /**
     * Cancels the operation if it hasn't already been executed or canceled. The
     * promise will be rejected.
     *
     * As long as the operation has not yet been run, calling cancel() provides a
     * guarantee that the operation will not be run.
     */
  }, {
    key: "cancel",
    value: function cancel(t) {
      null !== this.timerHandle && (this.clearTimeout(), this.deferred.reject(new index_esm2017_L(index_esm2017_B.CANCELLED, "Operation cancelled" + (t ? ": " + t : ""))));
    }
  }, {
    key: "handleDelayElapsed",
    value: function handleDelayElapsed() {
      var _this171 = this;
      this.asyncQueue.enqueueAndForget(function () {
        return null !== _this171.timerHandle ? (_this171.clearTimeout(), _this171.op().then(function (t) {
          return _this171.deferred.resolve(t);
        })) : Promise.resolve();
      });
    }
  }, {
    key: "clearTimeout",
    value: function (_clearTimeout) {
      function clearTimeout() {
        return _clearTimeout.apply(this, arguments);
      }
      clearTimeout.toString = function () {
        return _clearTimeout.toString();
      };
      return clearTimeout;
    }(function () {
      null !== this.timerHandle && (this.removalCallback(this), clearTimeout(this.timerHandle), this.timerHandle = null);
    })
  }], [{
    key: "createAndSchedule",
    value: function createAndSchedule(t, e, n, s, i) {
      var r = Date.now() + n,
        o = new nc(t, e, r, s, i);
      return o.start(n), o;
    }
  }]);
  return nc;
}();
/**
 * Returns a FirestoreError that can be surfaced to the user if the provided
 * error is an IndexedDbTransactionError. Re-throws the error otherwise.
 */
function index_esm2017_sc(t, e) {
  if (index_esm2017_x("AsyncQueue", "".concat(e, ": ").concat(t)), Vt(t)) return new index_esm2017_L(index_esm2017_B.UNAVAILABLE, "".concat(e, ": ").concat(t));
  throw t;
}

/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * DocumentSet is an immutable (copy-on-write) collection that holds documents
 * in order specified by the provided comparator. We always add a document key
 * comparator on top of what is provided to guarantee document equality based on
 * the key.
 */
var index_esm2017_ic = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  /** The default ordering is by key if the comparator is omitted */
  function ic(t) {
    _classCallCheck(this, ic);
    // We are adding document key comparator to the end as it's the only
    // guaranteed unique property of a document.
    this.comparator = t ? function (e, n) {
      return t(e, n) || ct.comparator(e.key, n.key);
    } : function (t, e) {
      return ct.comparator(t.key, e.key);
    }, this.keyedMap = ws(), this.sortedSet = new Ge(this.comparator);
  }
  /**
   * Returns an empty copy of the existing DocumentSet, using the same
   * comparator.
   */
  _createClass(ic, [{
    key: "has",
    value: function has(t) {
      return null != this.keyedMap.get(t);
    }
  }, {
    key: "get",
    value: function get(t) {
      return this.keyedMap.get(t);
    }
  }, {
    key: "first",
    value: function first() {
      return this.sortedSet.minKey();
    }
  }, {
    key: "last",
    value: function last() {
      return this.sortedSet.maxKey();
    }
  }, {
    key: "isEmpty",
    value: function isEmpty() {
      return this.sortedSet.isEmpty();
    }
    /**
     * Returns the index of the provided key in the document set, or -1 if the
     * document key is not present in the set;
     */
  }, {
    key: "indexOf",
    value: function indexOf(t) {
      var e = this.keyedMap.get(t);
      return e ? this.sortedSet.indexOf(e) : -1;
    }
  }, {
    key: "size",
    get: function get() {
      return this.sortedSet.size;
    }
    /** Iterates documents in order defined by "comparator" */
  }, {
    key: "forEach",
    value: function forEach(t) {
      this.sortedSet.inorderTraversal(function (e, n) {
        return t(e), !1;
      });
    }
    /** Inserts or updates a document with the same key */
  }, {
    key: "add",
    value: function add(t) {
      // First remove the element if we have it.
      var e = this.delete(t.key);
      return e.copy(e.keyedMap.insert(t.key, t), e.sortedSet.insert(t, null));
    }
    /** Deletes a document with a given key */
  }, {
    key: "delete",
    value: function _delete(t) {
      var e = this.get(t);
      return e ? this.copy(this.keyedMap.remove(t), this.sortedSet.remove(e)) : this;
    }
  }, {
    key: "isEqual",
    value: function isEqual(t) {
      if (!(t instanceof ic)) return !1;
      if (this.size !== t.size) return !1;
      var e = this.sortedSet.getIterator(),
        n = t.sortedSet.getIterator();
      for (; e.hasNext();) {
        var _t92 = e.getNext().key,
          s = n.getNext().key;
        if (!_t92.isEqual(s)) return !1;
      }
      return !0;
    }
  }, {
    key: "toString",
    value: function toString() {
      var t = [];
      return this.forEach(function (e) {
        t.push(e.toString());
      }), 0 === t.length ? "DocumentSet ()" : "DocumentSet (\n  " + t.join("  \n") + "\n)";
    }
  }, {
    key: "copy",
    value: function copy(t, e) {
      var n = new ic();
      return n.comparator = this.comparator, n.keyedMap = t, n.sortedSet = e, n;
    }
  }], [{
    key: "emptySet",
    value: function emptySet(t) {
      return new ic(t.comparator);
    }
  }]);
  return ic;
}()));
/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * DocumentChangeSet keeps track of a set of changes to docs in a query, merging
 * duplicate events for the same doc.
 */
var index_esm2017_rc = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  function rc() {
    _classCallCheck(this, rc);
    this.Tu = new Ge(ct.comparator);
  }
  _createClass(rc, [{
    key: "track",
    value: function track(t) {
      var e = t.doc.key,
        n = this.Tu.get(e);
      n ?
      // Merge the new change with the existing change.
      0 /* ChangeType.Added */ !== t.type && 3 /* ChangeType.Metadata */ === n.type ? this.Tu = this.Tu.insert(e, t) : 3 /* ChangeType.Metadata */ === t.type && 1 /* ChangeType.Removed */ !== n.type ? this.Tu = this.Tu.insert(e, {
        type: n.type,
        doc: t.doc
      }) : 2 /* ChangeType.Modified */ === t.type && 2 /* ChangeType.Modified */ === n.type ? this.Tu = this.Tu.insert(e, {
        type: 2 /* ChangeType.Modified */,
        doc: t.doc
      }) : 2 /* ChangeType.Modified */ === t.type && 0 /* ChangeType.Added */ === n.type ? this.Tu = this.Tu.insert(e, {
        type: 0 /* ChangeType.Added */,
        doc: t.doc
      }) : 1 /* ChangeType.Removed */ === t.type && 0 /* ChangeType.Added */ === n.type ? this.Tu = this.Tu.remove(e) : 1 /* ChangeType.Removed */ === t.type && 2 /* ChangeType.Modified */ === n.type ? this.Tu = this.Tu.insert(e, {
        type: 1 /* ChangeType.Removed */,
        doc: n.doc
      }) : 0 /* ChangeType.Added */ === t.type && 1 /* ChangeType.Removed */ === n.type ? this.Tu = this.Tu.insert(e, {
        type: 2 /* ChangeType.Modified */,
        doc: t.doc
      }) :
      // This includes these cases, which don't make sense:
      // Added->Added
      // Removed->Removed
      // Modified->Added
      // Removed->Modified
      // Metadata->Added
      // Removed->Metadata
      index_esm2017_O() : this.Tu = this.Tu.insert(e, t);
    }
  }, {
    key: "Eu",
    value: function Eu() {
      var t = [];
      return this.Tu.inorderTraversal(function (e, n) {
        t.push(n);
      }), t;
    }
  }]);
  return rc;
}()));
var index_esm2017_oc = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  function oc(t, e, n, s, i, r, o, u, c) {
    _classCallCheck(this, oc);
    this.query = t, this.docs = e, this.oldDocs = n, this.docChanges = s, this.mutatedKeys = i, this.fromCache = r, this.syncStateChanged = o, this.excludesMetadataChanges = u, this.hasCachedResults = c;
  }
  /** Returns a view snapshot as if all documents in the snapshot were added. */
  _createClass(oc, [{
    key: "hasPendingWrites",
    get: function get() {
      return !this.mutatedKeys.isEmpty();
    }
  }, {
    key: "isEqual",
    value: function isEqual(t) {
      if (!(this.fromCache === t.fromCache && this.hasCachedResults === t.hasCachedResults && this.syncStateChanged === t.syncStateChanged && this.mutatedKeys.isEqual(t.mutatedKeys) && In(this.query, t.query) && this.docs.isEqual(t.docs) && this.oldDocs.isEqual(t.oldDocs))) return !1;
      var e = this.docChanges,
        n = t.docChanges;
      if (e.length !== n.length) return !1;
      for (var _t93 = 0; _t93 < e.length; _t93++) {
        if (e[_t93].type !== n[_t93].type || !e[_t93].doc.isEqual(n[_t93].doc)) return !1;
      }
      return !0;
    }
  }], [{
    key: "fromInitialDocuments",
    value: function fromInitialDocuments(t, e, n, s, i) {
      var r = [];
      return e.forEach(function (t) {
        r.push({
          type: 0 /* ChangeType.Added */,
          doc: t
        });
      }), new oc(t, e, index_esm2017_ic.emptySet(e), r, n, s, /* syncStateChanged= */!0, /* excludesMetadataChanges= */!1, i);
    }
  }]);
  return oc;
}()));
/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * Holds the listeners and the last received ViewSnapshot for a query being
 * tracked by EventManager.
 */
var index_esm2017_uc = /*#__PURE__*/(/* unused pure expression or super */ null && (_createClass(function uc() {
  _classCallCheck(this, uc);
  this.Au = void 0, this.listeners = [];
})));
var index_esm2017_cc = /*#__PURE__*/(/* unused pure expression or super */ null && (_createClass(function cc() {
  _classCallCheck(this, cc);
  this.queries = new ls(function (t) {
    return Tn(t);
  }, In), this.onlineState = "Unknown" /* OnlineState.Unknown */, this.Ru = new Set();
})));
function index_esm2017_ac(_x51, _x52) {
  return _ac.apply(this, arguments);
}
function _ac() {
  _ac = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee96(t, e) {
    var n, s, i, r, _n45;
    return _regeneratorRuntime().wrap(function _callee96$(_context96) {
      while (1) {
        switch (_context96.prev = _context96.next) {
          case 0:
            n = $(t), s = e.query;
            i = !1, r = n.queries.get(s);
            if (!(r || (i = !0, r = new index_esm2017_uc()), i)) {
              _context96.next = 13;
              break;
            }
            _context96.prev = 3;
            _context96.next = 6;
            return n.onListen(s);
          case 6:
            r.Au = _context96.sent;
            _context96.next = 13;
            break;
          case 9:
            _context96.prev = 9;
            _context96.t0 = _context96["catch"](3);
            _n45 = index_esm2017_sc(_context96.t0, "Initialization of query '".concat(En(e.query), "' failed"));
            return _context96.abrupt("return", void e.onError(_n45));
          case 13:
            if (n.queries.set(s, r), r.listeners.push(e),
            // Run global snapshot listeners if a consistent snapshot has been emitted.
            e.bu(n.onlineState), r.Au) {
              e.Pu(r.Au) && index_esm2017_dc(n);
            }
          case 14:
          case "end":
            return _context96.stop();
        }
      }
    }, _callee96, null, [[3, 9]]);
  }));
  return _ac.apply(this, arguments);
}
function index_esm2017_hc(_x53, _x54) {
  return _hc.apply(this, arguments);
}
function _hc() {
  _hc = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee97(t, e) {
    var n, s, i, r, _t124;
    return _regeneratorRuntime().wrap(function _callee97$(_context97) {
      while (1) {
        switch (_context97.prev = _context97.next) {
          case 0:
            n = $(t), s = e.query;
            i = !1;
            r = n.queries.get(s);
            if (r) {
              _t124 = r.listeners.indexOf(e);
              _t124 >= 0 && (r.listeners.splice(_t124, 1), i = 0 === r.listeners.length);
            }
            if (!i) {
              _context97.next = 6;
              break;
            }
            return _context97.abrupt("return", (n.queries.delete(s), n.onUnlisten(s)));
          case 6:
          case "end":
            return _context97.stop();
        }
      }
    }, _callee97);
  }));
  return _hc.apply(this, arguments);
}
function index_esm2017_lc(t, e) {
  var n = $(t);
  var s = !1;
  var _iterator65 = _createForOfIteratorHelper(e),
    _step65;
  try {
    for (_iterator65.s(); !(_step65 = _iterator65.n()).done;) {
      var _t94 = _step65.value;
      var _e44 = _t94.query,
        i = n.queries.get(_e44);
      if (i) {
        var _iterator66 = _createForOfIteratorHelper(i.listeners),
          _step66;
        try {
          for (_iterator66.s(); !(_step66 = _iterator66.n()).done;) {
            var _e45 = _step66.value;
            _e45.Pu(_t94) && (s = !0);
          }
        } catch (err) {
          _iterator66.e(err);
        } finally {
          _iterator66.f();
        }
        i.Au = _t94;
      }
    }
  } catch (err) {
    _iterator65.e(err);
  } finally {
    _iterator65.f();
  }
  s && index_esm2017_dc(n);
}
function index_esm2017_fc(t, e, n) {
  var s = $(t),
    i = s.queries.get(e);
  if (i) {
    var _iterator67 = _createForOfIteratorHelper(i.listeners),
      _step67;
    try {
      for (_iterator67.s(); !(_step67 = _iterator67.n()).done;) {
        var _t95 = _step67.value;
        _t95.onError(n);
      }
    } catch (err) {
      _iterator67.e(err);
    } finally {
      _iterator67.f();
    }
  }
  // Remove all listeners. NOTE: We don't need to call syncEngine.unlisten()
  // after an error.
  s.queries.delete(e);
}

// Call all global snapshot listeners that have been set.
function index_esm2017_dc(t) {
  t.Ru.forEach(function (t) {
    t.next();
  });
}

/**
 * QueryListener takes a series of internal view snapshots and determines
 * when to raise the event.
 *
 * It uses an Observer to dispatch events.
 */
var _c = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  function _c(t, e, n) {
    _classCallCheck(this, _c);
    this.query = t, this.vu = e,
    /**
     * Initial snapshots (e.g. from cache) may not be propagated to the wrapped
     * observer. This flag is set to true once we've actually raised an event.
     */
    this.Vu = !1, this.Su = null, this.onlineState = "Unknown" /* OnlineState.Unknown */, this.options = n || {};
  }
  /**
   * Applies the new ViewSnapshot to this listener, raising a user-facing event
   * if applicable (depending on what changed, whether the user has opted into
   * metadata-only changes, etc.). Returns true if a user-facing event was
   * indeed raised.
   */
  _createClass(_c, [{
    key: "Pu",
    value: function Pu(t) {
      if (!this.options.includeMetadataChanges) {
        // Remove the metadata only changes.
        var _e46 = [];
        var _iterator68 = _createForOfIteratorHelper(t.docChanges),
          _step68;
        try {
          for (_iterator68.s(); !(_step68 = _iterator68.n()).done;) {
            var n = _step68.value;
            3 /* ChangeType.Metadata */ !== n.type && _e46.push(n);
          }
        } catch (err) {
          _iterator68.e(err);
        } finally {
          _iterator68.f();
        }
        t = new index_esm2017_oc(t.query, t.docs, t.oldDocs, _e46, t.mutatedKeys, t.fromCache, t.syncStateChanged, /* excludesMetadataChanges= */!0, t.hasCachedResults);
      }
      var e = !1;
      return this.Vu ? this.Du(t) && (this.vu.next(t), e = !0) : this.Cu(t, this.onlineState) && (this.xu(t), e = !0), this.Su = t, e;
    }
  }, {
    key: "onError",
    value: function onError(t) {
      this.vu.error(t);
    }
    /** Returns whether a snapshot was raised. */
  }, {
    key: "bu",
    value: function bu(t) {
      this.onlineState = t;
      var e = !1;
      return this.Su && !this.Vu && this.Cu(this.Su, t) && (this.xu(this.Su), e = !0), e;
    }
  }, {
    key: "Cu",
    value: function Cu(t, e) {
      // Always raise the first event when we're synced
      if (!t.fromCache) return !0;
      // NOTE: We consider OnlineState.Unknown as online (it should become Offline
      // or Online if we wait long enough).
      var n = "Offline" /* OnlineState.Offline */ !== e;
      // Don't raise the event if we're online, aren't synced yet (checked
      // above) and are waiting for a sync.
      return (!this.options.Nu || !n) && (!t.docs.isEmpty() || t.hasCachedResults || "Offline" /* OnlineState.Offline */ === e);
      // Raise data from cache if we have any documents, have cached results before,
      // or we are offline.
    }
  }, {
    key: "Du",
    value: function Du(t) {
      // We don't need to handle includeDocumentMetadataChanges here because
      // the Metadata only changes have already been stripped out if needed.
      // At this point the only changes we will see are the ones we should
      // propagate.
      if (t.docChanges.length > 0) return !0;
      var e = this.Su && this.Su.hasPendingWrites !== t.hasPendingWrites;
      return !(!t.syncStateChanged && !e) && !0 === this.options.includeMetadataChanges;
      // Generally we should have hit one of the cases above, but it's possible
      // to get here if there were only metadata docChanges and they got
      // stripped out.
    }
  }, {
    key: "xu",
    value: function xu(t) {
      t = index_esm2017_oc.fromInitialDocuments(t.query, t.docs, t.mutatedKeys, t.fromCache, t.hasCachedResults), this.Vu = !0, this.vu.next(t);
    }
  }]);
  return _c;
}()));
/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * A complete element in the bundle stream, together with the byte length it
 * occupies in the stream.
 */
var index_esm2017_wc = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  function wc(t,
  // How many bytes this element takes to store in the bundle.
  e) {
    _classCallCheck(this, wc);
    this.ku = t, this.byteLength = e;
  }
  _createClass(wc, [{
    key: "Ou",
    value: function Ou() {
      return "metadata" in this.ku;
    }
  }]);
  return wc;
}()));
/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * Helper to convert objects from bundles to model objects in the SDK.
 */
var index_esm2017_mc = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  function mc(t) {
    _classCallCheck(this, mc);
    this.yt = t;
  }
  _createClass(mc, [{
    key: "Ji",
    value: function Ji(t) {
      return Qs(this.yt, t);
    }
    /**
     * Converts a BundleDocument to a MutableDocument.
     */
  }, {
    key: "Yi",
    value: function Yi(t) {
      return t.metadata.exists ? Ys(this.yt, t.document, !1) : Ze.newNoDocument(this.Ji(t.metadata.name), this.Xi(t.metadata.readTime));
    }
  }, {
    key: "Xi",
    value: function Xi(t) {
      return qs(t);
    }
  }]);
  return mc;
}()));
/**
 * A class to process the elements from a bundle, load them into local
 * storage and provide progress update while loading.
 */
var index_esm2017_gc = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  function gc(t, e, n) {
    _classCallCheck(this, gc);
    this.Mu = t, this.localStore = e, this.yt = n, /** Batched queries to be saved into storage */
    this.queries = [], /** Batched documents to be saved into storage */
    this.documents = [], /** The collection groups affected by this bundle. */
    this.collectionGroups = new Set(), this.progress = index_esm2017_yc(t);
  }
  /**
   * Adds an element from the bundle to the loader.
   *
   * Returns a new progress if adding the element leads to a new progress,
   * otherwise returns null.
   */
  _createClass(gc, [{
    key: "Fu",
    value: function Fu(t) {
      this.progress.bytesLoaded += t.byteLength;
      var e = this.progress.documentsLoaded;
      if (t.ku.namedQuery) this.queries.push(t.ku.namedQuery);else if (t.ku.documentMetadata) {
        this.documents.push({
          metadata: t.ku.documentMetadata
        }), t.ku.documentMetadata.exists || ++e;
        var n = rt.fromString(t.ku.documentMetadata.name);
        this.collectionGroups.add(n.get(n.length - 2));
      } else t.ku.document && (this.documents[this.documents.length - 1].document = t.ku.document, ++e);
      return e !== this.progress.documentsLoaded ? (this.progress.documentsLoaded = e, Object.assign({}, this.progress)) : null;
    }
  }, {
    key: "$u",
    value: function $u(t) {
      var e = new Map(),
        n = new index_esm2017_mc(this.yt);
      var _iterator69 = _createForOfIteratorHelper(t),
        _step69;
      try {
        for (_iterator69.s(); !(_step69 = _iterator69.n()).done;) {
          var s = _step69.value;
          if (s.metadata.queries) {
            var _t96 = n.Ji(s.metadata.name);
            var _iterator70 = _createForOfIteratorHelper(s.metadata.queries),
              _step70;
            try {
              for (_iterator70.s(); !(_step70 = _iterator70.n()).done;) {
                var _n31 = _step70.value;
                var _s23 = (e.get(_n31) || Es()).add(_t96);
                e.set(_n31, _s23);
              }
            } catch (err) {
              _iterator70.e(err);
            } finally {
              _iterator70.f();
            }
          }
        }
      } catch (err) {
        _iterator69.e(err);
      } finally {
        _iterator69.f();
      }
      return e;
    }
    /**
     * Update the progress to 'Success' and return the updated progress.
     */
  }, {
    key: "complete",
    value: function () {
      var _complete = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee24() {
        var t, e, _iterator71, _step71, _t97;
        return _regeneratorRuntime().wrap(function _callee24$(_context24) {
          while (1) {
            switch (_context24.prev = _context24.next) {
              case 0:
                _context24.next = 2;
                return tu(this.localStore, new index_esm2017_mc(this.yt), this.documents, this.Mu.id);
              case 2:
                t = _context24.sent;
                e = this.$u(this.documents);
                _iterator71 = _createForOfIteratorHelper(this.queries);
                _context24.prev = 5;
                _iterator71.s();
              case 7:
                if ((_step71 = _iterator71.n()).done) {
                  _context24.next = 13;
                  break;
                }
                _t97 = _step71.value;
                _context24.next = 11;
                return eu(this.localStore, _t97, e.get(_t97.name));
              case 11:
                _context24.next = 7;
                break;
              case 13:
                _context24.next = 18;
                break;
              case 15:
                _context24.prev = 15;
                _context24.t0 = _context24["catch"](5);
                _iterator71.e(_context24.t0);
              case 18:
                _context24.prev = 18;
                _iterator71.f();
                return _context24.finish(18);
              case 21:
                return _context24.abrupt("return", (this.progress.taskState = "Success", {
                  progress: this.progress,
                  Bu: this.collectionGroups,
                  Lu: t
                }));
              case 22:
              case "end":
                return _context24.stop();
            }
          }
        }, _callee24, this, [[5, 15, 18, 21]]);
      }));
      function complete() {
        return _complete.apply(this, arguments);
      }
      return complete;
    }()
  }]);
  return gc;
}()));
/**
 * Returns a `LoadBundleTaskProgress` representing the initial progress of
 * loading a bundle.
 */
function index_esm2017_yc(t) {
  return {
    taskState: "Running",
    documentsLoaded: 0,
    bytesLoaded: 0,
    totalDocuments: t.totalDocuments,
    totalBytes: t.totalBytes
  };
}

/**
 * Returns a `LoadBundleTaskProgress` representing the progress that the loading
 * has succeeded.
 */
/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
var index_esm2017_pc = /*#__PURE__*/(/* unused pure expression or super */ null && (_createClass(function pc(t) {
  _classCallCheck(this, pc);
  this.key = t;
})));
var index_esm2017_Ic = /*#__PURE__*/(/* unused pure expression or super */ null && (_createClass(function Ic(t) {
  _classCallCheck(this, Ic);
  this.key = t;
})));
/**
 * View is responsible for computing the final merged truth of what docs are in
 * a query. It gets notified of local and remote changes to docs, and applies
 * the query filters and limits to determine the most correct possible results.
 */
var index_esm2017_Tc = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  function Tc(t, /** Documents included in the remote target */
  e) {
    _classCallCheck(this, Tc);
    this.query = t, this.qu = e, this.Uu = null, this.hasCachedResults = !1,
    /**
     * A flag whether the view is current with the backend. A view is considered
     * current after it has seen the current flag from the backend and did not
     * lose consistency within the watch stream (e.g. because of an existence
     * filter mismatch).
     */
    this.current = !1, /** Documents in the view but not in the remote target */
    this.Ku = Es(), /** Document Keys that have local changes */
    this.mutatedKeys = Es(), this.Gu = bn(t), this.Qu = new index_esm2017_ic(this.Gu);
  }
  /**
   * The set of remote documents that the server has told us belongs to the target associated with
   * this view.
   */
  _createClass(Tc, [{
    key: "ju",
    get: function get() {
      return this.qu;
    }
    /**
     * Iterates over a set of doc changes, applies the query limit, and computes
     * what the new results should be, what the changes were, and whether we may
     * need to go back to the local cache for more results. Does not make any
     * changes to the view.
     * @param docChanges - The doc changes to apply to this view.
     * @param previousChanges - If this is being called with a refill, then start
     *        with this set of docs and changes instead of the current view.
     * @returns a new set of docs, changes, and refill flag.
     */
  }, {
    key: "Wu",
    value: function Wu(t, e) {
      var _this172 = this;
      var n = e ? e.zu : new index_esm2017_rc(),
        s = e ? e.Qu : this.Qu;
      var i = e ? e.mutatedKeys : this.mutatedKeys,
        r = s,
        o = !1;
      // Track the last doc in a (full) limit. This is necessary, because some
      // update (a delete, or an update moving a doc past the old limit) might
      // mean there is some other document in the local cache that either should
      // come (1) between the old last limit doc and the new last document, in the
      // case of updates, or (2) after the new last document, in the case of
      // deletes. So we keep this doc at the old limit to compare the updates to.
      // Note that this should never get used in a refill (when previousChanges is
      // set), because there will only be adds -- no deletes or updates.
      var u = "F" /* LimitType.First */ === this.query.limitType && s.size === this.query.limit ? s.last() : null,
        c = "L" /* LimitType.Last */ === this.query.limitType && s.size === this.query.limit ? s.first() : null;
      // Drop documents out to meet limit/limitToLast requirement.
      if (t.inorderTraversal(function (t, e) {
        var a = s.get(t),
          h = An(_this172.query, e) ? e : null,
          l = !!a && _this172.mutatedKeys.has(a.key),
          f = !!h && (h.hasLocalMutations ||
          // We only consider committed mutations for documents that were
          // mutated during the lifetime of the view.
          _this172.mutatedKeys.has(h.key) && h.hasCommittedMutations);
        var d = !1;
        // Calculate change
        if (a && h) {
          a.data.isEqual(h.data) ? l !== f && (n.track({
            type: 3 /* ChangeType.Metadata */,
            doc: h
          }), d = !0) : _this172.Hu(a, h) || (n.track({
            type: 2 /* ChangeType.Modified */,
            doc: h
          }), d = !0, (u && _this172.Gu(h, u) > 0 || c && _this172.Gu(h, c) < 0) && (
          // This doc moved from inside the limit to outside the limit.
          // That means there may be some other doc in the local cache
          // that should be included instead.
          o = !0));
        } else !a && h ? (n.track({
          type: 0 /* ChangeType.Added */,
          doc: h
        }), d = !0) : a && !h && (n.track({
          type: 1 /* ChangeType.Removed */,
          doc: a
        }), d = !0, (u || c) && (
        // A doc was removed from a full limit query. We'll need to
        // requery from the local cache to see if we know about some other
        // doc that should be in the results.
        o = !0));
        d && (h ? (r = r.add(h), i = f ? i.add(t) : i.delete(t)) : (r = r.delete(t), i = i.delete(t)));
      }), null !== this.query.limit) for (; r.size > this.query.limit;) {
        var _t98 = "F" /* LimitType.First */ === this.query.limitType ? r.last() : r.first();
        r = r.delete(_t98.key), i = i.delete(_t98.key), n.track({
          type: 1 /* ChangeType.Removed */,
          doc: _t98
        });
      }
      return {
        Qu: r,
        zu: n,
        $i: o,
        mutatedKeys: i
      };
    }
  }, {
    key: "Hu",
    value: function Hu(t, e) {
      // We suppress the initial change event for documents that were modified as
      // part of a write acknowledgment (e.g. when the value of a server transform
      // is applied) as Watch will send us the same document again.
      // By suppressing the event, we only raise two user visible events (one with
      // `hasPendingWrites` and the final state of the document) instead of three
      // (one with `hasPendingWrites`, the modified document with
      // `hasPendingWrites` and the final state of the document).
      return t.hasLocalMutations && e.hasCommittedMutations && !e.hasLocalMutations;
    }
    /**
     * Updates the view with the given ViewDocumentChanges and optionally updates
     * limbo docs and sync state from the provided target change.
     * @param docChanges - The set of changes to make to the view's docs.
     * @param updateLimboDocuments - Whether to update limbo documents based on
     *        this change.
     * @param targetChange - A target change to apply for computing limbo docs and
     *        sync state.
     * @returns A new ViewChange with the given docs, changes, and sync state.
     */
    // PORTING NOTE: The iOS/Android clients always compute limbo document changes.
  }, {
    key: "applyChanges",
    value: function applyChanges(t, e, n) {
      var _this173 = this;
      var s = this.Qu;
      this.Qu = t.Qu, this.mutatedKeys = t.mutatedKeys;
      // Sort changes based on type and query comparator
      var i = t.zu.Eu();
      i.sort(function (t, e) {
        return function (t, e) {
          var n = function n(t) {
            switch (t) {
              case 0 /* ChangeType.Added */:
                return 1;
              case 2 /* ChangeType.Modified */:
              case 3 /* ChangeType.Metadata */:
                // A metadata change is converted to a modified change at the public
                // api layer.  Since we sort by document key and then change type,
                // metadata and modified changes must be sorted equivalently.
                return 2;
              case 1 /* ChangeType.Removed */:
                return 0;
              default:
                return index_esm2017_O();
            }
          };
          return n(t) - n(e);
        }
        /**
        * @license
        * Copyright 2020 Google LLC
        *
        * Licensed under the Apache License, Version 2.0 (the "License");
        * you may not use this file except in compliance with the License.
        * You may obtain a copy of the License at
        *
        *   http://www.apache.org/licenses/LICENSE-2.0
        *
        * Unless required by applicable law or agreed to in writing, software
        * distributed under the License is distributed on an "AS IS" BASIS,
        * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
        * See the License for the specific language governing permissions and
        * limitations under the License.
        */(t.type, e.type) || _this173.Gu(t.doc, e.doc);
      }), this.Ju(n);
      var r = e ? this.Yu() : [],
        o = 0 === this.Ku.size && this.current ? 1 /* SyncState.Synced */ : 0 /* SyncState.Local */,
        u = o !== this.Uu;
      if (this.Uu = o, 0 !== i.length || u) {
        return {
          snapshot: new index_esm2017_oc(this.query, t.Qu, s, i, t.mutatedKeys, 0 /* SyncState.Local */ === o, u, /* excludesMetadataChanges= */!1, !!n && n.resumeToken.approximateByteSize() > 0),
          Xu: r
        };
      }
      // no changes
      return {
        Xu: r
      };
    }
    /**
     * Applies an OnlineState change to the view, potentially generating a
     * ViewChange if the view's syncState changes as a result.
     */
  }, {
    key: "bu",
    value: function bu(t) {
      return this.current && "Offline" /* OnlineState.Offline */ === t ? (
      // If we're offline, set `current` to false and then call applyChanges()
      // to refresh our syncState and generate a ViewChange as appropriate. We
      // are guaranteed to get a new TargetChange that sets `current` back to
      // true once the client is back online.
      this.current = !1, this.applyChanges({
        Qu: this.Qu,
        zu: new index_esm2017_rc(),
        mutatedKeys: this.mutatedKeys,
        $i: !1
      }, /* updateLimboDocuments= */!1)) : {
        Xu: []
      };
    }
    /**
     * Returns whether the doc for the given key should be in limbo.
     */
  }, {
    key: "Zu",
    value: function Zu(t) {
      // If the remote end says it's part of this query, it's not in limbo.
      return !this.qu.has(t) &&
      // The local store doesn't think it's a result, so it shouldn't be in limbo.
      !!this.Qu.has(t) && !this.Qu.get(t).hasLocalMutations;
    }
    /**
     * Updates syncedDocuments, current, and limbo docs based on the given change.
     * Returns the list of changes to which docs are in limbo.
     */
  }, {
    key: "Ju",
    value: function Ju(t) {
      var _this174 = this;
      t && (t.addedDocuments.forEach(function (t) {
        return _this174.qu = _this174.qu.add(t);
      }), t.modifiedDocuments.forEach(function (t) {}), t.removedDocuments.forEach(function (t) {
        return _this174.qu = _this174.qu.delete(t);
      }), this.current = t.current);
    }
  }, {
    key: "Yu",
    value: function Yu() {
      var _this175 = this;
      // We can only determine limbo documents when we're in-sync with the server.
      if (!this.current) return [];
      // TODO(klimt): Do this incrementally so that it's not quadratic when
      // updating many documents.
      var t = this.Ku;
      this.Ku = Es(), this.Qu.forEach(function (t) {
        _this175.Zu(t.key) && (_this175.Ku = _this175.Ku.add(t.key));
      });
      // Diff the new limbo docs with the old limbo docs.
      var e = [];
      return t.forEach(function (t) {
        _this175.Ku.has(t) || e.push(new index_esm2017_Ic(t));
      }), this.Ku.forEach(function (n) {
        t.has(n) || e.push(new index_esm2017_pc(n));
      }), e;
    }
    /**
     * Update the in-memory state of the current view with the state read from
     * persistence.
     *
     * We update the query view whenever a client's primary status changes:
     * - When a client transitions from primary to secondary, it can miss
     *   LocalStorage updates and its query views may temporarily not be
     *   synchronized with the state on disk.
     * - For secondary to primary transitions, the client needs to update the list
     *   of `syncedDocuments` since secondary clients update their query views
     *   based purely on synthesized RemoteEvents.
     *
     * @param queryResult.documents - The documents that match the query according
     * to the LocalStore.
     * @param queryResult.remoteKeys - The keys of the documents that match the
     * query according to the backend.
     *
     * @returns The ViewChange that resulted from this synchronization.
     */
    // PORTING NOTE: Multi-tab only.
  }, {
    key: "tc",
    value: function tc(t) {
      this.qu = t.Hi, this.Ku = Es();
      var e = this.Wu(t.documents);
      return this.applyChanges(e, /*updateLimboDocuments=*/!0);
    }
    /**
     * Returns a view snapshot as if this query was just listened to. Contains
     * a document add for every existing document and the `fromCache` and
     * `hasPendingWrites` status of the already established view.
     */
    // PORTING NOTE: Multi-tab only.
  }, {
    key: "ec",
    value: function ec() {
      return index_esm2017_oc.fromInitialDocuments(this.query, this.Qu, this.mutatedKeys, 0 /* SyncState.Local */ === this.Uu, this.hasCachedResults);
    }
  }]);
  return Tc;
}()));
/**
 * QueryView contains all of the data that SyncEngine needs to keep track of for
 * a particular query.
 */
var index_esm2017_Ec = /*#__PURE__*/(/* unused pure expression or super */ null && (_createClass(function Ec(
/**
 * The query itself.
 */
t,
/**
 * The target number created by the client that is used in the watch
 * stream to identify this query.
 */
e,
/**
 * The view is responsible for computing the final merged truth of what
 * docs are in the query. It gets notified of local and remote changes,
 * and applies the query filters and limits to determine the most correct
 * possible results.
 */
n) {
  _classCallCheck(this, Ec);
  this.query = t, this.targetId = e, this.view = n;
})));
/** Tracks a limbo resolution. */
var index_esm2017_Ac = /*#__PURE__*/(/* unused pure expression or super */ null && (_createClass(function Ac(t) {
  _classCallCheck(this, Ac);
  this.key = t,
  /**
   * Set to true once we've received a document. This is used in
   * getRemoteKeysForTarget() and ultimately used by WatchChangeAggregator to
   * decide whether it needs to manufacture a delete event for the target once
   * the target is CURRENT.
   */
  this.nc = !1;
})));
/**
 * An implementation of `SyncEngine` coordinating with other parts of SDK.
 *
 * The parts of SyncEngine that act as a callback to RemoteStore need to be
 * registered individually. This is done in `syncEngineWrite()` and
 * `syncEngineListen()` (as well as `applyPrimaryState()`) as these methods
 * serve as entry points to RemoteStore's functionality.
 *
 * Note: some field defined in this class might have public access level, but
 * the class is not exported so they are only accessible from this module.
 * This is useful to implement optional features (like bundles) in free
 * functions, such that they are tree-shakeable.
 */
var index_esm2017_Rc = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  function Rc(t, e, n,
  // PORTING NOTE: Manages state synchronization in multi-tab environments.
  s, i, r) {
    _classCallCheck(this, Rc);
    this.localStore = t, this.remoteStore = e, this.eventManager = n, this.sharedClientState = s, this.currentUser = i, this.maxConcurrentLimboResolutions = r, this.sc = {}, this.ic = new ls(function (t) {
      return Tn(t);
    }, In), this.rc = new Map(),
    /**
     * The keys of documents that are in limbo for which we haven't yet started a
     * limbo resolution query. The strings in this set are the result of calling
     * `key.path.canonicalString()` where `key` is a `DocumentKey` object.
     *
     * The `Set` type was chosen because it provides efficient lookup and removal
     * of arbitrary elements and it also maintains insertion order, providing the
     * desired queue-like FIFO semantics.
     */
    this.oc = new Set(),
    /**
     * Keeps track of the target ID for each document that is in limbo with an
     * active target.
     */
    this.uc = new Ge(ct.comparator),
    /**
     * Keeps track of the information about an active limbo resolution for each
     * active target ID that was started for the purpose of limbo resolution.
     */
    this.cc = new Map(), this.ac = new Eo(), /** Stores user completion handlers, indexed by User and BatchId. */
    this.hc = {}, /** Stores user callbacks waiting for all pending writes to be acknowledged. */
    this.lc = new Map(), this.fc = Yr.vn(), this.onlineState = "Unknown" /* OnlineState.Unknown */,
    // The primary state is set to `true` or `false` immediately after Firestore
    // startup. In the interim, a client should only be considered primary if
    // `isPrimary` is true.
    this.dc = void 0;
  }
  _createClass(Rc, [{
    key: "isPrimaryClient",
    get: function get() {
      return !0 === this.dc;
    }
  }]);
  return Rc;
}()));
/**
 * Initiates the new listen, resolves promise when listen enqueued to the
 * server. All the subsequent view snapshots or errors are sent to the
 * subscribed handlers. Returns the initial snapshot.
 */
function index_esm2017_bc(_x55, _x56) {
  return _bc.apply(this, arguments);
}
/**
 * Registers a view for a previously unknown query and computes its initial
 * snapshot.
 */
function _bc() {
  _bc = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee98(t, e) {
    var n, s, i, r, _t125, _r10;
    return _regeneratorRuntime().wrap(function _callee98$(_context98) {
      while (1) {
        switch (_context98.prev = _context98.next) {
          case 0:
            n = index_esm2017_ta(t);
            r = n.ic.get(e);
            if (!r) {
              _context98.next = 6;
              break;
            }
            // PORTING NOTE: With Multi-Tab Web, it is possible that a query view
            // already exists when EventManager calls us for the first time. This
            // happens when the primary tab is already listening to this query on
            // behalf of another tab and the user of the primary also starts listening
            // to the query. EventManager will not have an assigned target ID in this
            // case and calls `listen` to obtain this ID.
            s = r.targetId, n.sharedClientState.addLocalQueryTarget(s), i = r.view.ec();
            _context98.next = 15;
            break;
          case 6:
            _context98.next = 8;
            return zo(n.localStore, gn(e));
          case 8:
            _t125 = _context98.sent;
            n.isPrimaryClient && Du(n.remoteStore, _t125);
            _r10 = n.sharedClientState.addLocalQueryTarget(_t125.targetId);
            s = _t125.targetId;
            _context98.next = 14;
            return index_esm2017_Pc(n, e, s, "current" === _r10, _t125.resumeToken);
          case 14:
            i = _context98.sent;
          case 15:
            return _context98.abrupt("return", i);
          case 16:
          case "end":
            return _context98.stop();
        }
      }
    }, _callee98);
  }));
  return _bc.apply(this, arguments);
}
function index_esm2017_Pc(_x57, _x58, _x59, _x60, _x61) {
  return _Pc.apply(this, arguments);
}
/** Stops listening to the query. */
function _Pc() {
  _Pc = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee100(t, e, n, s, i) {
    var r, o, u, c, a, h;
    return _regeneratorRuntime().wrap(function _callee100$(_context100) {
      while (1) {
        switch (_context100.prev = _context100.next) {
          case 0:
            // PORTING NOTE: On Web only, we inject the code that registers new Limbo
            // targets based on view changes. This allows us to only depend on Limbo
            // changes when user code includes queries.
            t._c = function (e, n, s) {
              return function () {
                var _ref75 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee99(t, e, n, s) {
                  var i, r, o;
                  return _regeneratorRuntime().wrap(function _callee99$(_context99) {
                    while (1) {
                      switch (_context99.prev = _context99.next) {
                        case 0:
                          i = e.view.Wu(n);
                          _context99.t0 = i.$i;
                          if (!_context99.t0) {
                            _context99.next = 6;
                            break;
                          }
                          _context99.next = 5;
                          return Jo(t.localStore, e.query, /* usePreviousResults= */!1).then(function (_ref76) {
                            var t = _ref76.documents;
                            return e.view.Wu(t, i);
                          });
                        case 5:
                          i = _context99.sent;
                        case 6:
                          r = s && s.targetChanges.get(e.targetId), o = e.view.applyChanges(i, /* updateLimboDocuments= */t.isPrimaryClient, r);
                          return _context99.abrupt("return", (index_esm2017_Bc(t, e.targetId, o.Xu), o.snapshot));
                        case 8:
                        case "end":
                          return _context99.stop();
                      }
                    }
                  }, _callee99);
                }));
                return function (_x142, _x143, _x144, _x145) {
                  return _ref75.apply(this, arguments);
                };
              }()(t, e, n, s);
            };
            _context100.next = 3;
            return Jo(t.localStore, e, /* usePreviousResults= */!0);
          case 3:
            r = _context100.sent;
            o = new index_esm2017_Tc(e, r.Hi);
            u = o.Wu(r.documents);
            c = Ps.createSynthesizedTargetChangeForCurrentChange(n, s && "Offline" /* OnlineState.Offline */ !== t.onlineState, i);
            a = o.applyChanges(u, /* updateLimboDocuments= */t.isPrimaryClient, c);
            index_esm2017_Bc(t, n, a.Xu);
            h = new index_esm2017_Ec(e, n, o);
            return _context100.abrupt("return", (t.ic.set(e, h), t.rc.has(n) ? t.rc.get(n).push(e) : t.rc.set(n, [e]), a.snapshot));
          case 11:
          case "end":
            return _context100.stop();
        }
      }
    }, _callee100);
  }));
  return _Pc.apply(this, arguments);
}
function index_esm2017_vc(_x62, _x63) {
  return _vc.apply(this, arguments);
}
/**
 * Initiates the write of local mutation batch which involves adding the
 * writes to the mutation queue, notifying the remote store about new
 * mutations and raising events for any changes this write caused.
 *
 * The promise returned by this call is resolved when the above steps
 * have completed, *not* when the write was acked by the backend. The
 * userCallback is resolved once the write was acked/rejected by the
 * backend (or failed locally for any other reason).
 */
function _vc() {
  _vc = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee101(t, e) {
    var n, s, i;
    return _regeneratorRuntime().wrap(function _callee101$(_context101) {
      while (1) {
        switch (_context101.prev = _context101.next) {
          case 0:
            n = $(t), s = n.ic.get(e), i = n.rc.get(s.targetId);
            if (!(i.length > 1)) {
              _context101.next = 3;
              break;
            }
            return _context101.abrupt("return", (n.rc.set(s.targetId, i.filter(function (t) {
              return !In(t, e);
            })), void n.ic.delete(e)));
          case 3:
            if (!n.isPrimaryClient) {
              _context101.next = 11;
              break;
            }
            // We need to remove the local query target first to allow us to verify
            // whether any other client is still interested in this target.
            n.sharedClientState.removeLocalQueryTarget(s.targetId);
            _context101.t0 = n.sharedClientState.isActiveQueryTarget(s.targetId);
            if (_context101.t0) {
              _context101.next = 9;
              break;
            }
            _context101.next = 9;
            return Ho(n.localStore, s.targetId, /*keepPersistedTargetData=*/!1).then(function () {
              n.sharedClientState.clearQueryState(s.targetId), Cu(n.remoteStore, s.targetId), index_esm2017_Fc(n, s.targetId);
            }).catch(Et);
          case 9:
            _context101.next = 14;
            break;
          case 11:
            index_esm2017_Fc(n, s.targetId);
            _context101.next = 14;
            return Ho(n.localStore, s.targetId, /*keepPersistedTargetData=*/!0);
          case 14:
          case "end":
            return _context101.stop();
        }
      }
    }, _callee101);
  }));
  return _vc.apply(this, arguments);
}
function index_esm2017_Vc(_x64, _x65, _x66) {
  return _Vc.apply(this, arguments);
}
/**
 * Applies one remote event to the sync engine, notifying any views of the
 * changes, and releasing any pending mutation batches that would become
 * visible because of the snapshot version the remote event contains.
 */
function _Vc() {
  _Vc = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee102(t, e, n) {
    var s, _t126, _e60;
    return _regeneratorRuntime().wrap(function _callee102$(_context102) {
      while (1) {
        switch (_context102.prev = _context102.next) {
          case 0:
            s = index_esm2017_ea(t);
            _context102.prev = 1;
            _context102.next = 4;
            return function (t, e) {
              var n = $(t),
                s = nt.now(),
                i = e.reduce(function (t, e) {
                  return t.add(e.key);
                }, Es());
              var r, o;
              return n.persistence.runTransaction("Locally write mutations", "readwrite", function (t) {
                // Figure out which keys do not have a remote version in the cache, this
                // is needed to create the right overlay mutation: if no remote version
                // presents, we do not need to create overlays as patch mutations.
                // TODO(Overlay): Is there a better way to determine this? Using the
                //  document version does not work because local mutations set them back
                //  to 0.
                var u = ds(),
                  c = Es();
                return n.Gi.getEntries(t, i).next(function (t) {
                  u = t, u.forEach(function (t, e) {
                    e.isValidDocument() || (c = c.add(t));
                  });
                }).next(function () {
                  return n.localDocuments.getOverlayedDocuments(t, u);
                }).next(function (i) {
                  r = i;
                  // For non-idempotent mutations (such as `FieldValue.increment()`),
                  // we record the base state in a separate patch mutation. This is
                  // later used to guarantee consistent values and prevents flicker
                  // even if the backend sends us an update that already includes our
                  // transform.
                  var o = [];
                  var _iterator98 = _createForOfIteratorHelper(e),
                    _step98;
                  try {
                    for (_iterator98.s(); !(_step98 = _iterator98.n()).done;) {
                      var _t127 = _step98.value;
                      var _e59 = Yn(_t127, r.get(_t127.key).overlayedDocument);
                      null != _e59 &&
                      // NOTE: The base state should only be applied if there's some
                      // existing document to override, so use a Precondition of
                      // exists=true
                      o.push(new ts(_t127.key, _e59, Xe(_e59.value.mapValue), Qn.exists(!0)));
                    }
                  } catch (err) {
                    _iterator98.e(err);
                  } finally {
                    _iterator98.f();
                  }
                  return n.mutationQueue.addMutationBatch(t, s, o, e);
                }).next(function (e) {
                  o = e;
                  var s = e.applyToLocalDocumentSet(r, c);
                  return n.documentOverlayCache.saveOverlays(t, e.batchId, s);
                });
              }).then(function () {
                return {
                  batchId: o.batchId,
                  changes: ms(r)
                };
              });
            }(s.localStore, e);
          case 4:
            _t126 = _context102.sent;
            s.sharedClientState.addPendingMutation(_t126.batchId);
            (function (t, e, n) {
              var s = t.hc[t.currentUser.toKey()];
              s || (s = new Ge(Z));
              s = s.insert(e, n), t.hc[t.currentUser.toKey()] = s;
            }
            /**
            * Resolves or rejects the user callback for the given batch and then discards
            * it.
            */)(s, _t126.batchId, n);
            _context102.next = 9;
            return index_esm2017_Uc(s, _t126.changes);
          case 9:
            _context102.next = 11;
            return Ku(s.remoteStore);
          case 11:
            _context102.next = 17;
            break;
          case 13:
            _context102.prev = 13;
            _context102.t0 = _context102["catch"](1);
            // If we can't persist the mutation, we reject the user callback and
            // don't send the mutation. The user can then retry the write.
            _e60 = index_esm2017_sc(_context102.t0, "Failed to persist write");
            n.reject(_e60);
          case 17:
          case "end":
            return _context102.stop();
        }
      }
    }, _callee102, null, [[1, 13]]);
  }));
  return _Vc.apply(this, arguments);
}
function index_esm2017_Sc(_x67, _x68) {
  return _Sc.apply(this, arguments);
}
/**
 * Applies an OnlineState change to the sync engine and notifies any views of
 * the change.
 */
function _Sc() {
  _Sc = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee103(t, e) {
    var n, _t128;
    return _regeneratorRuntime().wrap(function _callee103$(_context103) {
      while (1) {
        switch (_context103.prev = _context103.next) {
          case 0:
            n = $(t);
            _context103.prev = 1;
            _context103.next = 4;
            return Qo(n.localStore, e);
          case 4:
            _t128 = _context103.sent;
            e.targetChanges.forEach(function (t, e) {
              var s = n.cc.get(e);
              s && (
              // Since this is a limbo resolution lookup, it's for a single document
              // and it could be added, modified, or removed, but not a combination.
              index_esm2017_M(t.addedDocuments.size + t.modifiedDocuments.size + t.removedDocuments.size <= 1), t.addedDocuments.size > 0 ? s.nc = !0 : t.modifiedDocuments.size > 0 ? index_esm2017_M(s.nc) : t.removedDocuments.size > 0 && (index_esm2017_M(s.nc), s.nc = !1));
            });
            _context103.next = 8;
            return index_esm2017_Uc(n, _t128, e);
          case 8:
            _context103.next = 14;
            break;
          case 10:
            _context103.prev = 10;
            _context103.t0 = _context103["catch"](1);
            _context103.next = 14;
            return Et(_context103.t0);
          case 14:
          case "end":
            return _context103.stop();
        }
      }
    }, _callee103, null, [[1, 10]]);
  }));
  return _Sc.apply(this, arguments);
}
function index_esm2017_Dc(t, e, n) {
  var s = $(t);
  // If we are the secondary client, we explicitly ignore the remote store's
  // online state (the local client may go offline, even though the primary
  // tab remains online) and only apply the primary tab's online state from
  // SharedClientState.
  if (s.isPrimaryClient && 0 /* OnlineStateSource.RemoteStore */ === n || !s.isPrimaryClient && 1 /* OnlineStateSource.SharedClientState */ === n) {
    var _t99 = [];
    s.ic.forEach(function (n, s) {
      var i = s.view.bu(e);
      i.snapshot && _t99.push(i.snapshot);
    }), function (t, e) {
      var n = $(t);
      n.onlineState = e;
      var s = !1;
      n.queries.forEach(function (t, n) {
        var _iterator72 = _createForOfIteratorHelper(n.listeners),
          _step72;
        try {
          for (_iterator72.s(); !(_step72 = _iterator72.n()).done;)
          // Run global snapshot listeners if a consistent snapshot has been emitted.
          {
            var _t100 = _step72.value;
            _t100.bu(e) && (s = !0);
          }
        } catch (err) {
          _iterator72.e(err);
        } finally {
          _iterator72.f();
        }
      }), s && index_esm2017_dc(n);
    }(s.eventManager, e), _t99.length && s.sc.Wo(_t99), s.onlineState = e, s.isPrimaryClient && s.sharedClientState.setOnlineState(e);
  }
}

/**
 * Rejects the listen for the given targetID. This can be triggered by the
 * backend for any active target.
 *
 * @param syncEngine - The sync engine implementation.
 * @param targetId - The targetID corresponds to one previously initiated by the
 * user as part of TargetData passed to listen() on RemoteStore.
 * @param err - A description of the condition that has forced the rejection.
 * Nearly always this will be an indication that the user is no longer
 * authorized to see the data matching the target.
 */
function index_esm2017_Cc(_x69, _x70, _x71) {
  return _Cc.apply(this, arguments);
}
function _Cc() {
  _Cc = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee104(t, e, n) {
    var s, i, r, _t129, _n46, _i18;
    return _regeneratorRuntime().wrap(function _callee104$(_context104) {
      while (1) {
        switch (_context104.prev = _context104.next) {
          case 0:
            s = $(t); // PORTING NOTE: Multi-tab only.
            s.sharedClientState.updateQueryState(e, "rejected", n);
            i = s.cc.get(e), r = i && i.key;
            if (!r) {
              _context104.next = 14;
              break;
            }
            // TODO(klimt): We really only should do the following on permission
            // denied errors, but we don't have the cause code here.
            // It's a limbo doc. Create a synthetic event saying it was deleted.
            // This is kind of a hack. Ideally, we would have a method in the local
            // store to purge a document. However, it would be tricky to keep all of
            // the local store's invariants with another method.
            _t129 = new Ge(ct.comparator); // TODO(b/217189216): This limbo document should ideally have a read time,
            // so that it is picked up by any read-time based scans. The backend,
            // however, does not send a read time for target removals.
            _t129 = _t129.insert(r, Ze.newNoDocument(r, st.min()));
            _n46 = Es().add(r), _i18 = new bs(st.min(), /* targetChanges= */new Map(), /* targetMismatches= */new We(Z), _t129, _n46);
            _context104.next = 9;
            return index_esm2017_Sc(s, _i18);
          case 9:
            // Since this query failed, we won't want to manually unlisten to it.
            // We only remove it from bookkeeping after we successfully applied the
            // RemoteEvent. If `applyRemoteEvent()` throws, we want to re-listen to
            // this query when the RemoteStore restarts the Watch stream, which should
            // re-trigger the target failure.
            s.uc = s.uc.remove(r);
            s.cc.delete(e);
            index_esm2017_qc(s);
            _context104.next = 16;
            break;
          case 14:
            _context104.next = 16;
            return Ho(s.localStore, e, /* keepPersistedTargetData */!1).then(function () {
              return index_esm2017_Fc(s, e, n);
            }).catch(Et);
          case 16:
          case "end":
            return _context104.stop();
        }
      }
    }, _callee104);
  }));
  return _Cc.apply(this, arguments);
}
function index_esm2017_xc(_x72, _x73) {
  return _xc.apply(this, arguments);
}
function _xc() {
  _xc = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee105(t, e) {
    var n, s, _t130;
    return _regeneratorRuntime().wrap(function _callee105$(_context105) {
      while (1) {
        switch (_context105.prev = _context105.next) {
          case 0:
            n = $(t), s = e.batch.batchId;
            _context105.prev = 1;
            _context105.next = 4;
            return Ko(n.localStore, e);
          case 4:
            _t130 = _context105.sent;
            index_esm2017_Mc(n, s, /*error=*/null);
            index_esm2017_Oc(n, s);
            n.sharedClientState.updateMutationState(s, "acknowledged");
            _context105.next = 10;
            return index_esm2017_Uc(n, _t130);
          case 10:
            _context105.next = 16;
            break;
          case 12:
            _context105.prev = 12;
            _context105.t0 = _context105["catch"](1);
            _context105.next = 16;
            return Et(_context105.t0);
          case 16:
          case "end":
            return _context105.stop();
        }
      }
    }, _callee105, null, [[1, 12]]);
  }));
  return _xc.apply(this, arguments);
}
function index_esm2017_Nc(_x74, _x75, _x76) {
  return _Nc.apply(this, arguments);
}
/**
 * Registers a user callback that resolves when all pending mutations at the moment of calling
 * are acknowledged .
 */
function _Nc() {
  _Nc = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee106(t, e, n) {
    var s, _t131;
    return _regeneratorRuntime().wrap(function _callee106$(_context106) {
      while (1) {
        switch (_context106.prev = _context106.next) {
          case 0:
            s = $(t);
            _context106.prev = 1;
            _context106.next = 4;
            return function (t, e) {
              var n = $(t);
              return n.persistence.runTransaction("Reject batch", "readwrite-primary", function (t) {
                var s;
                return n.mutationQueue.lookupMutationBatch(t, e).next(function (e) {
                  return index_esm2017_M(null !== e), s = e.keys(), n.mutationQueue.removeMutationBatch(t, e);
                }).next(function () {
                  return n.mutationQueue.performConsistencyCheck(t);
                }).next(function () {
                  return n.documentOverlayCache.removeOverlaysForBatchId(t, s, e);
                }).next(function () {
                  return n.localDocuments.recalculateAndSaveOverlaysForDocumentKeys(t, s);
                }).next(function () {
                  return n.localDocuments.getDocuments(t, s);
                });
              });
            }
            /**
            * Returns the largest (latest) batch id in mutation queue that is pending
            * server response.
            *
            * Returns `BATCHID_UNKNOWN` if the queue is empty.
            */(s.localStore, e);
          case 4:
            _t131 = _context106.sent;
            index_esm2017_Mc(s, e, n);
            index_esm2017_Oc(s, e);
            s.sharedClientState.updateMutationState(e, "rejected", n);
            _context106.next = 10;
            return index_esm2017_Uc(s, _t131);
          case 10:
            _context106.next = 16;
            break;
          case 12:
            _context106.prev = 12;
            _context106.t0 = _context106["catch"](1);
            _context106.next = 16;
            return Et(_context106.t0);
          case 16:
          case "end":
            return _context106.stop();
        }
      }
    }, _callee106, null, [[1, 12]]);
  }));
  return _Nc.apply(this, arguments);
}
function index_esm2017_kc(_x77, _x78) {
  return _kc.apply(this, arguments);
}
/**
 * Triggers the callbacks that are waiting for this batch id to get acknowledged by server,
 * if there are any.
 */
function _kc() {
  _kc = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee107(t, e) {
    var n, _t132, s, _n47;
    return _regeneratorRuntime().wrap(function _callee107$(_context107) {
      while (1) {
        switch (_context107.prev = _context107.next) {
          case 0:
            n = $(t);
            Mu(n.remoteStore) || index_esm2017_C("SyncEngine", "The network is disabled. The task returned by 'awaitPendingWrites()' will not complete until the network is enabled.");
            _context107.prev = 2;
            _context107.next = 5;
            return function (t) {
              var e = $(t);
              return e.persistence.runTransaction("Get highest unacknowledged batch id", "readonly", function (t) {
                return e.mutationQueue.getHighestUnacknowledgedBatchId(t);
              });
            }(n.localStore);
          case 5:
            _t132 = _context107.sent;
            if (!(-1 === _t132)) {
              _context107.next = 8;
              break;
            }
            return _context107.abrupt("return", void e.resolve());
          case 8:
            s = n.lc.get(_t132) || [];
            s.push(e), n.lc.set(_t132, s);
            _context107.next = 16;
            break;
          case 12:
            _context107.prev = 12;
            _context107.t0 = _context107["catch"](2);
            _n47 = index_esm2017_sc(_context107.t0, "Initialization of waitForPendingWrites() operation failed");
            e.reject(_n47);
          case 16:
          case "end":
            return _context107.stop();
        }
      }
    }, _callee107, null, [[2, 12]]);
  }));
  return _kc.apply(this, arguments);
}
function index_esm2017_Oc(t, e) {
  (t.lc.get(e) || []).forEach(function (t) {
    t.resolve();
  }), t.lc.delete(e);
}

/** Reject all outstanding callbacks waiting for pending writes to complete. */
function index_esm2017_Mc(t, e, n) {
  var s = $(t);
  var i = s.hc[s.currentUser.toKey()];
  // NOTE: Mutations restored from persistence won't have callbacks, so it's
  // okay for there to be no callback for this ID.
  if (i) {
    var _t101 = i.get(e);
    _t101 && (n ? _t101.reject(n) : _t101.resolve(), i = i.remove(e)), s.hc[s.currentUser.toKey()] = i;
  }
}
function index_esm2017_Fc(t, e) {
  var n = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;
  t.sharedClientState.removeLocalQueryTarget(e);
  var _iterator73 = _createForOfIteratorHelper(t.rc.get(e)),
    _step73;
  try {
    for (_iterator73.s(); !(_step73 = _iterator73.n()).done;) {
      var s = _step73.value;
      t.ic.delete(s), n && t.sc.wc(s, n);
    }
  } catch (err) {
    _iterator73.e(err);
  } finally {
    _iterator73.f();
  }
  if (t.rc.delete(e), t.isPrimaryClient) {
    t.ac.ls(e).forEach(function (e) {
      t.ac.containsKey(e) ||
      // We removed the last reference for this key
      index_esm2017_$c(t, e);
    });
  }
}
function index_esm2017_$c(t, e) {
  t.oc.delete(e.path.canonicalString());
  // It's possible that the target already got removed because the query failed. In that case,
  // the key won't exist in `limboTargetsByKey`. Only do the cleanup if we still have the target.
  var n = t.uc.get(e);
  null !== n && (Cu(t.remoteStore, n), t.uc = t.uc.remove(e), t.cc.delete(n), index_esm2017_qc(t));
}
function index_esm2017_Bc(t, e, n) {
  var _iterator74 = _createForOfIteratorHelper(n),
    _step74;
  try {
    for (_iterator74.s(); !(_step74 = _iterator74.n()).done;) {
      var s = _step74.value;
      if (s instanceof index_esm2017_pc) t.ac.addReference(s.key, e), index_esm2017_Lc(t, s);else if (s instanceof index_esm2017_Ic) {
        index_esm2017_C("SyncEngine", "Document no longer in limbo: " + s.key), t.ac.removeReference(s.key, e);
        t.ac.containsKey(s.key) ||
        // We removed the last reference for this key
        index_esm2017_$c(t, s.key);
      } else index_esm2017_O();
    }
  } catch (err) {
    _iterator74.e(err);
  } finally {
    _iterator74.f();
  }
}
function index_esm2017_Lc(t, e) {
  var n = e.key,
    s = n.path.canonicalString();
  t.uc.get(n) || t.oc.has(s) || (index_esm2017_C("SyncEngine", "New document in limbo: " + n), t.oc.add(s), index_esm2017_qc(t));
}

/**
 * Starts listens for documents in limbo that are enqueued for resolution,
 * subject to a maximum number of concurrent resolutions.
 *
 * Without bounding the number of concurrent resolutions, the server can fail
 * with "resource exhausted" errors which can lead to pathological client
 * behavior as seen in https://github.com/firebase/firebase-js-sdk/issues/2683.
 */
function index_esm2017_qc(t) {
  for (; t.oc.size > 0 && t.uc.size < t.maxConcurrentLimboResolutions;) {
    var e = t.oc.values().next().value;
    t.oc.delete(e);
    var n = new ct(rt.fromString(e)),
      s = t.fc.next();
    t.cc.set(s, new index_esm2017_Ac(n)), t.uc = t.uc.insert(n, s), Du(t.remoteStore, new zi(gn(ln(n.path)), s, 2 /* TargetPurpose.LimboResolution */, Ot.at));
  }
}
function index_esm2017_Uc(_x79, _x80, _x81) {
  return _Uc.apply(this, arguments);
}
function _Uc() {
  _Uc = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee109(t, e, n) {
    var s, i, r, o;
    return _regeneratorRuntime().wrap(function _callee109$(_context109) {
      while (1) {
        switch (_context109.prev = _context109.next) {
          case 0:
            s = $(t), i = [], r = [], o = [];
            _context109.t0 = s.ic.isEmpty();
            if (_context109.t0) {
              _context109.next = 9;
              break;
            }
            s.ic.forEach(function (t, u) {
              o.push(s._c(u, e, n).then(function (t) {
                // Update views if there are actual changes.
                if (
                // If there are changes, or we are handling a global snapshot, notify
                // secondary clients to update query state.
                (t || n) && s.isPrimaryClient && s.sharedClientState.updateQueryState(u.targetId, (null == t ? void 0 : t.fromCache) ? "not-current" : "current"), t) {
                  i.push(t);
                  var _e61 = $o.Ci(u.targetId, t);
                  r.push(_e61);
                }
              }));
            });
            _context109.next = 6;
            return Promise.all(o);
          case 6:
            s.sc.Wo(i);
            _context109.next = 9;
            return function () {
              var _ref77 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee108(t, e) {
                var n, _iterator99, _step99, _t133, _e62, _t134, _s36, _i19;
                return _regeneratorRuntime().wrap(function _callee108$(_context108) {
                  while (1) {
                    switch (_context108.prev = _context108.next) {
                      case 0:
                        n = $(t);
                        _context108.prev = 1;
                        _context108.next = 4;
                        return n.persistence.runTransaction("notifyLocalViewChanges", "readwrite", function (t) {
                          return At.forEach(e, function (e) {
                            return At.forEach(e.Si, function (s) {
                              return n.persistence.referenceDelegate.addReference(t, e.targetId, s);
                            }).next(function () {
                              return At.forEach(e.Di, function (s) {
                                return n.persistence.referenceDelegate.removeReference(t, e.targetId, s);
                              });
                            });
                          });
                        });
                      case 4:
                        _context108.next = 11;
                        break;
                      case 6:
                        _context108.prev = 6;
                        _context108.t0 = _context108["catch"](1);
                        if (Vt(_context108.t0)) {
                          _context108.next = 10;
                          break;
                        }
                        throw _context108.t0;
                      case 10:
                        // If `notifyLocalViewChanges` fails, we did not advance the sequence
                        // number for the documents that were included in this transaction.
                        // This might trigger them to be deleted earlier than they otherwise
                        // would have, but it should not invalidate the integrity of the data.
                        index_esm2017_C("LocalStore", "Failed to update sequence numbers: " + _context108.t0);
                      case 11:
                        _iterator99 = _createForOfIteratorHelper(e);
                        try {
                          for (_iterator99.s(); !(_step99 = _iterator99.n()).done;) {
                            _t133 = _step99.value;
                            _e62 = _t133.targetId;
                            if (!_t133.fromCache) {
                              _t134 = n.qi.get(_e62), _s36 = _t134.snapshotVersion, _i19 = _t134.withLastLimboFreeSnapshotVersion(_s36); // Advance the last limbo free snapshot version
                              n.qi = n.qi.insert(_e62, _i19);
                            }
                          }
                        } catch (err) {
                          _iterator99.e(err);
                        } finally {
                          _iterator99.f();
                        }
                      case 13:
                      case "end":
                        return _context108.stop();
                    }
                  }
                }, _callee108, null, [[1, 6]]);
              }));
              return function (_x146, _x147) {
                return _ref77.apply(this, arguments);
              };
            }()(s.localStore, r);
          case 9:
          case "end":
            return _context109.stop();
        }
      }
    }, _callee109);
  }));
  return _Uc.apply(this, arguments);
}
function index_esm2017_Kc(_x82, _x83) {
  return _Kc.apply(this, arguments);
}
function _Kc() {
  _Kc = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee110(t, e) {
    var n, _t135;
    return _regeneratorRuntime().wrap(function _callee110$(_context110) {
      while (1) {
        switch (_context110.prev = _context110.next) {
          case 0:
            n = $(t);
            if (n.currentUser.isEqual(e)) {
              _context110.next = 11;
              break;
            }
            index_esm2017_C("SyncEngine", "User change. New user:", e.toKey());
            _context110.next = 5;
            return Uo(n.localStore, e);
          case 5:
            _t135 = _context110.sent;
            n.currentUser = e;
            // Fails tasks waiting for pending writes requested by previous user.
            (function (t, e) {
              t.lc.forEach(function (t) {
                t.forEach(function (t) {
                  t.reject(new index_esm2017_L(index_esm2017_B.CANCELLED, e));
                });
              }), t.lc.clear();
            })(n, "'waitForPendingWrites' promise is rejected due to a user change.");
            // TODO(b/114226417): Consider calling this only in the primary tab.
            n.sharedClientState.handleUserChange(e, _t135.removedBatchIds, _t135.addedBatchIds);
            _context110.next = 11;
            return index_esm2017_Uc(n, _t135.ji);
          case 11:
          case "end":
            return _context110.stop();
        }
      }
    }, _callee110);
  }));
  return _Kc.apply(this, arguments);
}
function index_esm2017_Gc(t, e) {
  var n = $(t),
    s = n.cc.get(e);
  if (s && s.nc) return Es().add(s.key);
  {
    var _t102 = Es();
    var _s24 = n.rc.get(e);
    if (!_s24) return _t102;
    var _iterator75 = _createForOfIteratorHelper(_s24),
      _step75;
    try {
      for (_iterator75.s(); !(_step75 = _iterator75.n()).done;) {
        var _e47 = _step75.value;
        var _s25 = n.ic.get(_e47);
        _t102 = _t102.unionWith(_s25.view.ju);
      }
    } catch (err) {
      _iterator75.e(err);
    } finally {
      _iterator75.f();
    }
    return _t102;
  }
}

/**
 * Reconcile the list of synced documents in an existing view with those
 * from persistence.
 */
function index_esm2017_Qc(_x84, _x85) {
  return _Qc.apply(this, arguments);
}
/**
 * Retrieves newly changed documents from remote document cache and raises
 * snapshots if needed.
 */
// PORTING NOTE: Multi-Tab only.
function _Qc() {
  _Qc = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee111(t, e) {
    var n, s, i;
    return _regeneratorRuntime().wrap(function _callee111$(_context111) {
      while (1) {
        switch (_context111.prev = _context111.next) {
          case 0:
            n = $(t);
            _context111.next = 3;
            return Jo(n.localStore, e.query, /* usePreviousResults= */!0);
          case 3:
            s = _context111.sent;
            i = e.view.tc(s);
            return _context111.abrupt("return", (n.isPrimaryClient && index_esm2017_Bc(n, e.targetId, i.Xu), i));
          case 6:
          case "end":
            return _context111.stop();
        }
      }
    }, _callee111);
  }));
  return _Qc.apply(this, arguments);
}
function index_esm2017_jc(_x86, _x87) {
  return _jc.apply(this, arguments);
}
/** Applies a mutation state to an existing batch.  */
// PORTING NOTE: Multi-Tab only.
function _jc() {
  _jc = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee112(t, e) {
    var n;
    return _regeneratorRuntime().wrap(function _callee112$(_context112) {
      while (1) {
        switch (_context112.prev = _context112.next) {
          case 0:
            n = $(t);
            return _context112.abrupt("return", Xo(n.localStore, e).then(function (t) {
              return index_esm2017_Uc(n, t);
            }));
          case 2:
          case "end":
            return _context112.stop();
        }
      }
    }, _callee112);
  }));
  return _jc.apply(this, arguments);
}
function index_esm2017_Wc(_x88, _x89, _x90, _x91) {
  return _Wc.apply(this, arguments);
}
/** Applies a query target change from a different tab. */
// PORTING NOTE: Multi-Tab only.
function _Wc() {
  _Wc = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee113(t, e, n, s) {
    var i, r;
    return _regeneratorRuntime().wrap(function _callee113$(_context113) {
      while (1) {
        switch (_context113.prev = _context113.next) {
          case 0:
            i = $(t);
            _context113.next = 3;
            return function (t, e) {
              var n = $(t),
                s = $(n.mutationQueue);
              return n.persistence.runTransaction("Lookup mutation documents", "readonly", function (t) {
                return s.Tn(t, e).next(function (e) {
                  return e ? n.localDocuments.getDocuments(t, e) : At.resolve(null);
                });
              });
            }
            // PORTING NOTE: Multi-Tab only.
            (i.localStore, e);
          case 3:
            r = _context113.sent;
            if (!(null !== r)) {
              _context113.next = 15;
              break;
            }
            if (!("pending" === n)) {
              _context113.next = 10;
              break;
            }
            _context113.next = 8;
            return Ku(i.remoteStore);
          case 8:
            _context113.next = 11;
            break;
          case 10:
            "acknowledged" === n || "rejected" === n ? (
            // NOTE: Both these methods are no-ops for batches that originated from
            // other clients.
            index_esm2017_Mc(i, e, s || null), index_esm2017_Oc(i, e), function (t, e) {
              $($(t).mutationQueue).An(e);
            }
            // PORTING NOTE: Multi-Tab only.
            (i.localStore, e)) : index_esm2017_O();
          case 11:
            _context113.next = 13;
            return index_esm2017_Uc(i, r);
          case 13:
            _context113.next = 16;
            break;
          case 15:
            // A throttled tab may not have seen the mutation before it was completed
            // and removed from the mutation queue, in which case we won't have cached
            // the affected documents. In this case we can safely ignore the update
            // since that means we didn't apply the mutation locally at all (if we
            // had, we would have cached the affected documents), and so we will just
            // see any resulting document changes via normal remote document updates
            // as applicable.
            index_esm2017_C("SyncEngine", "Cannot apply mutation batch with id: " + e);
          case 16:
          case "end":
            return _context113.stop();
        }
      }
    }, _callee113);
  }));
  return _Wc.apply(this, arguments);
}
function index_esm2017_zc(_x92, _x93) {
  return _zc.apply(this, arguments);
}
function _zc() {
  _zc = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee114(t, e) {
    var n, _t136, _e63, _iterator100, _step100, _t137, _t138, _e64;
    return _regeneratorRuntime().wrap(function _callee114$(_context114) {
      while (1) {
        switch (_context114.prev = _context114.next) {
          case 0:
            n = $(t);
            if (!(index_esm2017_ta(n), index_esm2017_ea(n), !0 === e && !0 !== n.dc)) {
              _context114.next = 13;
              break;
            }
            _t136 = n.sharedClientState.getAllActiveQueryTargets();
            _context114.next = 5;
            return index_esm2017_Hc(n, _t136.toArray());
          case 5:
            _e63 = _context114.sent;
            n.dc = !0;
            _context114.next = 9;
            return Zu(n.remoteStore, !0);
          case 9:
            _iterator100 = _createForOfIteratorHelper(_e63);
            try {
              for (_iterator100.s(); !(_step100 = _iterator100.n()).done;) {
                _t137 = _step100.value;
                Du(n.remoteStore, _t137);
              }
            } catch (err) {
              _iterator100.e(err);
            } finally {
              _iterator100.f();
            }
            _context114.next = 25;
            break;
          case 13:
            if (!(!1 === e && !1 !== n.dc)) {
              _context114.next = 25;
              break;
            }
            _t138 = [];
            _e64 = Promise.resolve();
            n.rc.forEach(function (s, i) {
              n.sharedClientState.isLocalQueryTarget(i) ? _t138.push(i) : _e64 = _e64.then(function () {
                return index_esm2017_Fc(n, i), Ho(n.localStore, i, /*keepPersistedTargetData=*/!0);
              }), Cu(n.remoteStore, i);
            });
            _context114.next = 19;
            return _e64;
          case 19:
            _context114.next = 21;
            return index_esm2017_Hc(n, _t138);
          case 21:
            // PORTING NOTE: Multi-Tab only.
            (function (t) {
              var e = $(t);
              e.cc.forEach(function (t, n) {
                Cu(e.remoteStore, n);
              }), e.ac.fs(), e.cc = new Map(), e.uc = new Ge(ct.comparator);
            }
            /**
            * Reconcile the query views of the provided query targets with the state from
            * persistence. Raises snapshots for any changes that affect the local
            * client and returns the updated state of all target's query data.
            *
            * @param syncEngine - The sync engine implementation
            * @param targets - the list of targets with views that need to be recomputed
            * @param transitionToPrimary - `true` iff the tab transitions from a secondary
            * tab to a primary tab
            */
            // PORTING NOTE: Multi-Tab only.
            )(n);
            n.dc = !1;
            _context114.next = 25;
            return Zu(n.remoteStore, !1);
          case 25:
          case "end":
            return _context114.stop();
        }
      }
    }, _callee114);
  }));
  return _zc.apply(this, arguments);
}
function index_esm2017_Hc(_x94, _x95, _x96) {
  return _Hc.apply(this, arguments);
}
/**
 * Creates a `Query` object from the specified `Target`. There is no way to
 * obtain the original `Query`, so we synthesize a `Query` from the `Target`
 * object.
 *
 * The synthesized result might be different from the original `Query`, but
 * since the synthesized `Query` should return the same results as the
 * original one (only the presentation of results might differ), the potential
 * difference will not cause issues.
 */
// PORTING NOTE: Multi-Tab only.
function _Hc() {
  _Hc = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee115(t, e, n) {
    var s, i, r, _iterator101, _step101, _t139, _e65, _n48, _iterator102, _step102, _t140, _e66, _n49, _n50;
    return _regeneratorRuntime().wrap(function _callee115$(_context115) {
      while (1) {
        switch (_context115.prev = _context115.next) {
          case 0:
            s = $(t), i = [], r = [];
            _iterator101 = _createForOfIteratorHelper(e);
            _context115.prev = 2;
            _iterator101.s();
          case 4:
            if ((_step101 = _iterator101.n()).done) {
              _context115.next = 45;
              break;
            }
            _t139 = _step101.value;
            _e65 = void 0;
            _n48 = s.rc.get(_t139);
            if (!(_n48 && 0 !== _n48.length)) {
              _context115.next = 34;
              break;
            }
            _context115.next = 11;
            return zo(s.localStore, gn(_n48[0]));
          case 11:
            _e65 = _context115.sent;
            _iterator102 = _createForOfIteratorHelper(_n48);
            _context115.prev = 13;
            _iterator102.s();
          case 15:
            if ((_step102 = _iterator102.n()).done) {
              _context115.next = 24;
              break;
            }
            _t140 = _step102.value;
            _e66 = s.ic.get(_t140);
            _context115.next = 20;
            return index_esm2017_Qc(s, _e66);
          case 20:
            _n49 = _context115.sent;
            _n49.snapshot && r.push(_n49.snapshot);
          case 22:
            _context115.next = 15;
            break;
          case 24:
            _context115.next = 29;
            break;
          case 26:
            _context115.prev = 26;
            _context115.t0 = _context115["catch"](13);
            _iterator102.e(_context115.t0);
          case 29:
            _context115.prev = 29;
            _iterator102.f();
            return _context115.finish(29);
          case 32:
            _context115.next = 42;
            break;
          case 34:
            _context115.next = 36;
            return Yo(s.localStore, _t139);
          case 36:
            _n50 = _context115.sent;
            _context115.next = 39;
            return zo(s.localStore, _n50);
          case 39:
            _e65 = _context115.sent;
            _context115.next = 42;
            return index_esm2017_Pc(s, index_esm2017_Jc(_n50), _t139, /*current=*/!1, _e65.resumeToken);
          case 42:
            i.push(_e65);
          case 43:
            _context115.next = 4;
            break;
          case 45:
            _context115.next = 50;
            break;
          case 47:
            _context115.prev = 47;
            _context115.t1 = _context115["catch"](2);
            _iterator101.e(_context115.t1);
          case 50:
            _context115.prev = 50;
            _iterator101.f();
            return _context115.finish(50);
          case 53:
            return _context115.abrupt("return", (s.sc.Wo(r), i));
          case 54:
          case "end":
            return _context115.stop();
        }
      }
    }, _callee115, null, [[2, 47, 50, 53], [13, 26, 29, 32]]);
  }));
  return _Hc.apply(this, arguments);
}
function index_esm2017_Jc(t) {
  return hn(t.path, t.collectionGroup, t.orderBy, t.filters, t.limit, "F" /* LimitType.First */, t.startAt, t.endAt);
}

/** Returns the IDs of the clients that are currently active. */
// PORTING NOTE: Multi-Tab only.
function index_esm2017_Yc(t) {
  var e = $(t);
  return $($(e.localStore).persistence).vi();
}

/** Applies a query target change from a different tab. */
// PORTING NOTE: Multi-Tab only.
function index_esm2017_Xc(_x97, _x98, _x99, _x100) {
  return _Xc.apply(this, arguments);
}
/** Adds or removes Watch targets for queries from different tabs. */
function _Xc() {
  _Xc = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee116(t, e, n, s) {
    var i, r, _t141, _s37;
    return _regeneratorRuntime().wrap(function _callee116$(_context116) {
      while (1) {
        switch (_context116.prev = _context116.next) {
          case 0:
            i = $(t);
            if (!i.dc) {
              _context116.next = 3;
              break;
            }
            return _context116.abrupt("return", void index_esm2017_C("SyncEngine", "Ignoring unexpected query state notification."));
          case 3:
            r = i.rc.get(e);
            if (!(r && r.length > 0)) {
              _context116.next = 20;
              break;
            }
            _context116.t0 = n;
            _context116.next = _context116.t0 === "current" ? 8 : _context116.t0 === "not-current" ? 8 : _context116.t0 === "rejected" ? 15 : 19;
            break;
          case 8:
            _context116.next = 10;
            return Xo(i.localStore, Rn(r[0]));
          case 10:
            _t141 = _context116.sent;
            _s37 = bs.createSynthesizedRemoteEventForCurrentChange(e, "current" === n, Qt.EMPTY_BYTE_STRING);
            _context116.next = 14;
            return index_esm2017_Uc(i, _t141, _s37);
          case 14:
            return _context116.abrupt("break", 20);
          case 15:
            _context116.next = 17;
            return Ho(i.localStore, e, /* keepPersistedTargetData */!0);
          case 17:
            index_esm2017_Fc(i, e, s);
            return _context116.abrupt("break", 20);
          case 19:
            index_esm2017_O();
          case 20:
          case "end":
            return _context116.stop();
        }
      }
    }, _callee116);
  }));
  return _Xc.apply(this, arguments);
}
function index_esm2017_Zc(_x101, _x102, _x103) {
  return _Zc.apply(this, arguments);
}
function _Zc() {
  _Zc = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee117(t, e, n) {
    var s, _iterator103, _step103, _t142, _e67, _n51, _iterator104, _step104, _loop8;
    return _regeneratorRuntime().wrap(function _callee117$(_context118) {
      while (1) {
        switch (_context118.prev = _context118.next) {
          case 0:
            s = index_esm2017_ta(t);
            if (!s.dc) {
              _context118.next = 45;
              break;
            }
            _iterator103 = _createForOfIteratorHelper(e);
            _context118.prev = 3;
            _iterator103.s();
          case 5:
            if ((_step103 = _iterator103.n()).done) {
              _context118.next = 21;
              break;
            }
            _t142 = _step103.value;
            if (!s.rc.has(_t142)) {
              _context118.next = 10;
              break;
            }
            // A target might have been added in a previous attempt
            index_esm2017_C("SyncEngine", "Adding an already active target " + _t142);
            return _context118.abrupt("continue", 19);
          case 10:
            _context118.next = 12;
            return Yo(s.localStore, _t142);
          case 12:
            _e67 = _context118.sent;
            _context118.next = 15;
            return zo(s.localStore, _e67);
          case 15:
            _n51 = _context118.sent;
            _context118.next = 18;
            return index_esm2017_Pc(s, index_esm2017_Jc(_e67), _n51.targetId, /*current=*/!1, _n51.resumeToken);
          case 18:
            Du(s.remoteStore, _n51);
          case 19:
            _context118.next = 5;
            break;
          case 21:
            _context118.next = 26;
            break;
          case 23:
            _context118.prev = 23;
            _context118.t0 = _context118["catch"](3);
            _iterator103.e(_context118.t0);
          case 26:
            _context118.prev = 26;
            _iterator103.f();
            return _context118.finish(26);
          case 29:
            _iterator104 = _createForOfIteratorHelper(n);
            _context118.prev = 30;
            _loop8 = /*#__PURE__*/_regeneratorRuntime().mark(function _loop8() {
              var t;
              return _regeneratorRuntime().wrap(function _loop8$(_context117) {
                while (1) {
                  switch (_context117.prev = _context117.next) {
                    case 0:
                      t = _step104.value;
                      _context117.t0 = s.rc.has(t);
                      if (!_context117.t0) {
                        _context117.next = 5;
                        break;
                      }
                      _context117.next = 5;
                      return Ho(s.localStore, t, /* keepPersistedTargetData */!1).then(function () {
                        Cu(s.remoteStore, t), index_esm2017_Fc(s, t);
                      }).catch(Et);
                    case 5:
                    case "end":
                      return _context117.stop();
                  }
                }
              }, _loop8);
            });
            _iterator104.s();
          case 33:
            if ((_step104 = _iterator104.n()).done) {
              _context118.next = 37;
              break;
            }
            return _context118.delegateYield(_loop8(), "t1", 35);
          case 35:
            _context118.next = 33;
            break;
          case 37:
            _context118.next = 42;
            break;
          case 39:
            _context118.prev = 39;
            _context118.t2 = _context118["catch"](30);
            _iterator104.e(_context118.t2);
          case 42:
            _context118.prev = 42;
            _iterator104.f();
            return _context118.finish(42);
          case 45:
          case "end":
            return _context118.stop();
        }
      }
    }, _callee117, null, [[3, 23, 26, 29], [30, 39, 42, 45]]);
  }));
  return _Zc.apply(this, arguments);
}
function index_esm2017_ta(t) {
  var e = $(t);
  return e.remoteStore.remoteSyncer.applyRemoteEvent = index_esm2017_Sc.bind(null, e), e.remoteStore.remoteSyncer.getRemoteKeysForTarget = index_esm2017_Gc.bind(null, e), e.remoteStore.remoteSyncer.rejectListen = index_esm2017_Cc.bind(null, e), e.sc.Wo = index_esm2017_lc.bind(null, e.eventManager), e.sc.wc = index_esm2017_fc.bind(null, e.eventManager), e;
}
function index_esm2017_ea(t) {
  var e = $(t);
  return e.remoteStore.remoteSyncer.applySuccessfulWrite = index_esm2017_xc.bind(null, e), e.remoteStore.remoteSyncer.rejectFailedWrite = index_esm2017_Nc.bind(null, e), e;
}

/**
 * Loads a Firestore bundle into the SDK. The returned promise resolves when
 * the bundle finished loading.
 *
 * @param syncEngine - SyncEngine to use.
 * @param bundleReader - Bundle to load into the SDK.
 * @param task - LoadBundleTask used to update the loading progress to public API.
 */
function index_esm2017_na(t, e, n) {
  var s = $(t);
  // eslint-disable-next-line @typescript-eslint/no-floating-promises
  /** Loads a bundle and returns the list of affected collection groups. */(function () {
    var _ref35 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee25(t, e, n) {
      var _s26, i, r, _t103, o;
      return _regeneratorRuntime().wrap(function _callee25$(_context25) {
        while (1) {
          switch (_context25.prev = _context25.next) {
            case 0:
              _context25.prev = 0;
              _context25.next = 3;
              return e.getMetadata();
            case 3:
              _s26 = _context25.sent;
              _context25.next = 6;
              return function (t, e) {
                var n = $(t),
                  s = qs(e.createTime);
                return n.persistence.runTransaction("hasNewerBundle", "readonly", function (t) {
                  return n.Ns.getBundleMetadata(t, e.id);
                }).then(function (t) {
                  return !!t && t.createTime.compareTo(s) >= 0;
                });
              }
              /**
              * Saves the given `BundleMetadata` to local persistence.
              */(t.localStore, _s26);
            case 6:
              if (!_context25.sent) {
                _context25.next = 11;
                break;
              }
              _context25.next = 9;
              return e.close();
            case 9:
              n._completeWith(function (t) {
                return {
                  taskState: "Success",
                  documentsLoaded: t.totalDocuments,
                  bytesLoaded: t.totalBytes,
                  totalDocuments: t.totalDocuments,
                  totalBytes: t.totalBytes
                };
              }(_s26));
              return _context25.abrupt("return", Promise.resolve(new Set()));
            case 11:
              n._updateProgress(index_esm2017_yc(_s26));
              i = new index_esm2017_gc(_s26, t.localStore, e.yt);
              _context25.next = 15;
              return e.mc();
            case 15:
              r = _context25.sent;
            case 16:
              if (!r) {
                _context25.next = 26;
                break;
              }
              _context25.next = 19;
              return i.Fu(r);
            case 19:
              _t103 = _context25.sent;
              _t103 && n._updateProgress(_t103);
              _context25.next = 23;
              return e.mc();
            case 23:
              r = _context25.sent;
            case 24:
              _context25.next = 16;
              break;
            case 26:
              _context25.next = 28;
              return i.complete();
            case 28:
              o = _context25.sent;
              _context25.next = 31;
              return index_esm2017_Uc(t, o.Lu, /* remoteEvent */void 0);
            case 31:
              _context25.next = 33;
              return function (t, e) {
                var n = $(t);
                return n.persistence.runTransaction("Save bundle", "readwrite", function (t) {
                  return n.Ns.saveBundleMetadata(t, e);
                });
              }
              /**
              * Returns a promise of a `NamedQuery` associated with given query name. Promise
              * resolves to undefined if no persisted data can be found.
              */(t.localStore, _s26);
            case 33:
              n._completeWith(o.progress);
              return _context25.abrupt("return", Promise.resolve(o.Bu));
            case 37:
              _context25.prev = 37;
              _context25.t0 = _context25["catch"](0);
              return _context25.abrupt("return", (index_esm2017_N("SyncEngine", "Loading bundle failed with ".concat(_context25.t0)), n._failWith(_context25.t0), Promise.resolve(new Set())));
            case 40:
            case "end":
              return _context25.stop();
          }
        }
      }, _callee25, null, [[0, 37]]);
    }));
    return function (_x104, _x105, _x106) {
      return _ref35.apply(this, arguments);
    };
  })()
  /**
  * @license
  * Copyright 2020 Google LLC
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
  * you may not use this file except in compliance with the License.
  * You may obtain a copy of the License at
  *
  *   http://www.apache.org/licenses/LICENSE-2.0
  *
  * Unless required by applicable law or agreed to in writing, software
  * distributed under the License is distributed on an "AS IS" BASIS,
  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  * See the License for the specific language governing permissions and
  * limitations under the License.
  */
  /**
  * Provides all components needed for Firestore with in-memory persistence.
  * Uses EagerGC garbage collection.
  */
  (s, e, n).then(function (t) {
    s.sharedClientState.notifyBundleLoaded(t);
  });
}
var index_esm2017_sa = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  function sa() {
    _classCallCheck(this, sa);
    this.synchronizeTabs = !1;
  }
  _createClass(sa, [{
    key: "initialize",
    value: function () {
      var _initialize = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee26(t) {
        return _regeneratorRuntime().wrap(function _callee26$(_context26) {
          while (1) {
            switch (_context26.prev = _context26.next) {
              case 0:
                this.yt = pu(t.databaseInfo.databaseId);
                this.sharedClientState = this.gc(t);
                this.persistence = this.yc(t);
                _context26.next = 5;
                return this.persistence.start();
              case 5:
                this.localStore = this.Ic(t);
                this.gcScheduler = this.Tc(t, this.localStore);
                this.indexBackfillerScheduler = this.Ec(t, this.localStore);
              case 8:
              case "end":
                return _context26.stop();
            }
          }
        }, _callee26, this);
      }));
      function initialize(_x107) {
        return _initialize.apply(this, arguments);
      }
      return initialize;
    }()
  }, {
    key: "Tc",
    value: function Tc(t, e) {
      return null;
    }
  }, {
    key: "Ec",
    value: function Ec(t, e) {
      return null;
    }
  }, {
    key: "Ic",
    value: function Ic(t) {
      return qo(this.persistence, new Bo(), t.initialUser, this.yt);
    }
  }, {
    key: "yc",
    value: function yc(t) {
      return new Vo(Do.Bs, this.yt);
    }
  }, {
    key: "gc",
    value: function gc(t) {
      return new lu();
    }
  }, {
    key: "terminate",
    value: function () {
      var _terminate = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee27() {
        return _regeneratorRuntime().wrap(function _callee27$(_context27) {
          while (1) {
            switch (_context27.prev = _context27.next) {
              case 0:
                this.gcScheduler && this.gcScheduler.stop();
                _context27.next = 3;
                return this.sharedClientState.shutdown();
              case 3:
                _context27.next = 5;
                return this.persistence.shutdown();
              case 5:
              case "end":
                return _context27.stop();
            }
          }
        }, _callee27, this);
      }));
      function terminate() {
        return _terminate.apply(this, arguments);
      }
      return terminate;
    }()
  }]);
  return sa;
}()));
/**
 * Provides all components needed for Firestore with IndexedDB persistence.
 */
var index_esm2017_ia = /*#__PURE__*/(/* unused pure expression or super */ null && (function (_sa) {
  _inherits(ia, _sa);
  var _super30 = _createSuper(ia);
  function ia(t, e, n) {
    var _this176;
    _classCallCheck(this, ia);
    _this176 = _super30.call(this), _this176.Ac = t, _this176.cacheSizeBytes = e, _this176.forceOwnership = n, _this176.synchronizeTabs = !1;
    return _this176;
  }
  _createClass(ia, [{
    key: "initialize",
    value: function () {
      var _initialize2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee28(t) {
        var _this177 = this;
        return _regeneratorRuntime().wrap(function _callee28$(_context28) {
          while (1) {
            switch (_context28.prev = _context28.next) {
              case 0:
                _context28.next = 2;
                return _get(_getPrototypeOf(ia.prototype), "initialize", this).call(this, t);
              case 2:
                _context28.next = 4;
                return this.Ac.initialize(this, t);
              case 4:
                _context28.next = 6;
                return index_esm2017_ea(this.Ac.syncEngine);
              case 6:
                _context28.next = 8;
                return Ku(this.Ac.remoteStore);
              case 8:
                _context28.next = 10;
                return this.persistence.li(function () {
                  return _this177.gcScheduler && !_this177.gcScheduler.started && _this177.gcScheduler.start(), _this177.indexBackfillerScheduler && !_this177.indexBackfillerScheduler.started && _this177.indexBackfillerScheduler.start(), Promise.resolve();
                });
              case 10:
              case "end":
                return _context28.stop();
            }
          }
        }, _callee28, this);
      }));
      function initialize(_x108) {
        return _initialize2.apply(this, arguments);
      }
      return initialize;
    }()
  }, {
    key: "Ic",
    value: function Ic(t) {
      return qo(this.persistence, new Bo(), t.initialUser, this.yt);
    }
  }, {
    key: "Tc",
    value: function Tc(t, e) {
      var n = this.persistence.referenceDelegate.garbageCollector;
      return new io(n, t.asyncQueue, e);
    }
  }, {
    key: "Ec",
    value: function Ec(t, e) {
      var n = new kt(e, this.persistence);
      return new Nt(t.asyncQueue, n);
    }
  }, {
    key: "yc",
    value: function yc(t) {
      var e = Fo(t.databaseInfo.databaseId, t.databaseInfo.persistenceKey),
        n = void 0 !== this.cacheSizeBytes ? Kr.withCacheSize(this.cacheSizeBytes) : Kr.DEFAULT;
      return new ko(this.synchronizeTabs, e, t.clientId, n, t.asyncQueue, gu(), yu(), this.yt, this.sharedClientState, !!this.forceOwnership);
    }
  }, {
    key: "gc",
    value: function gc(t) {
      return new lu();
    }
  }]);
  return ia;
}(index_esm2017_sa)));
/**
 * Provides all components needed for Firestore with multi-tab IndexedDB
 * persistence.
 *
 * In the legacy client, this provider is used to provide both multi-tab and
 * non-multi-tab persistence since we cannot tell at build time whether
 * `synchronizeTabs` will be enabled.
 */
var index_esm2017_ra = /*#__PURE__*/(/* unused pure expression or super */ null && (function (_ia) {
  _inherits(ra, _ia);
  var _super31 = _createSuper(ra);
  function ra(t, e) {
    var _this178;
    _classCallCheck(this, ra);
    _this178 = _super31.call(this, t, e, /* forceOwnership= */!1), _this178.Ac = t, _this178.cacheSizeBytes = e, _this178.synchronizeTabs = !0;
    return _this178;
  }
  _createClass(ra, [{
    key: "initialize",
    value: function () {
      var _initialize3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee30(t) {
        var _this179 = this;
        var e;
        return _regeneratorRuntime().wrap(function _callee30$(_context30) {
          while (1) {
            switch (_context30.prev = _context30.next) {
              case 0:
                _context30.next = 2;
                return _get(_getPrototypeOf(ra.prototype), "initialize", this).call(this, t);
              case 2:
                e = this.Ac.syncEngine;
                _context30.t0 = this.sharedClientState instanceof hu;
                if (!_context30.t0) {
                  _context30.next = 8;
                  break;
                }
                this.sharedClientState.syncEngine = {
                  Fr: index_esm2017_Wc.bind(null, e),
                  $r: index_esm2017_Xc.bind(null, e),
                  Br: index_esm2017_Zc.bind(null, e),
                  vi: index_esm2017_Yc.bind(null, e),
                  Mr: index_esm2017_jc.bind(null, e)
                };
                _context30.next = 8;
                return this.sharedClientState.start();
              case 8:
                _context30.next = 10;
                return this.persistence.li( /*#__PURE__*/function () {
                  var _ref36 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee29(t) {
                    return _regeneratorRuntime().wrap(function _callee29$(_context29) {
                      while (1) {
                        switch (_context29.prev = _context29.next) {
                          case 0:
                            _context29.next = 2;
                            return index_esm2017_zc(_this179.Ac.syncEngine, t);
                          case 2:
                            _this179.gcScheduler && (t && !_this179.gcScheduler.started ? _this179.gcScheduler.start() : t || _this179.gcScheduler.stop());
                            _this179.indexBackfillerScheduler && (t && !_this179.indexBackfillerScheduler.started ? _this179.indexBackfillerScheduler.start() : t || _this179.indexBackfillerScheduler.stop());
                          case 4:
                          case "end":
                            return _context29.stop();
                        }
                      }
                    }, _callee29);
                  }));
                  return function (_x110) {
                    return _ref36.apply(this, arguments);
                  };
                }());
              case 10:
              case "end":
                return _context30.stop();
            }
          }
        }, _callee30, this);
      }));
      function initialize(_x109) {
        return _initialize3.apply(this, arguments);
      }
      return initialize;
    }()
  }, {
    key: "gc",
    value: function gc(t) {
      var e = gu();
      if (!hu.C(e)) throw new index_esm2017_L(index_esm2017_B.UNIMPLEMENTED, "IndexedDB persistence is only available on platforms that support LocalStorage.");
      var n = Fo(t.databaseInfo.databaseId, t.databaseInfo.persistenceKey);
      return new hu(e, t.asyncQueue, n, t.clientId, t.initialUser);
    }
  }]);
  return ra;
}(index_esm2017_ia)));
/**
 * Initializes and wires the components that are needed to interface with the
 * network.
 */
var index_esm2017_oa = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  function oa() {
    _classCallCheck(this, oa);
  }
  _createClass(oa, [{
    key: "initialize",
    value: function () {
      var _initialize4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee31(t, e) {
        var _this180 = this;
        return _regeneratorRuntime().wrap(function _callee31$(_context31) {
          while (1) {
            switch (_context31.prev = _context31.next) {
              case 0:
                _context31.t0 = this.localStore;
                if (_context31.t0) {
                  _context31.next = 12;
                  break;
                }
                this.localStore = t.localStore;
                this.sharedClientState = t.sharedClientState;
                this.datastore = this.createDatastore(e);
                this.remoteStore = this.createRemoteStore(e);
                this.eventManager = this.createEventManager(e);
                this.syncEngine = this.createSyncEngine(e, /* startAsPrimary=*/!t.synchronizeTabs);
                this.sharedClientState.onlineStateHandler = function (t) {
                  return index_esm2017_Dc(_this180.syncEngine, t, 1 /* OnlineStateSource.SharedClientState */);
                };
                this.remoteStore.remoteSyncer.handleCredentialChange = index_esm2017_Kc.bind(null, this.syncEngine);
                _context31.next = 12;
                return Zu(this.remoteStore, this.syncEngine.isPrimaryClient);
              case 12:
              case "end":
                return _context31.stop();
            }
          }
        }, _callee31, this);
      }));
      function initialize(_x111, _x112) {
        return _initialize4.apply(this, arguments);
      }
      return initialize;
    }()
  }, {
    key: "createEventManager",
    value: function createEventManager(t) {
      return new index_esm2017_cc();
    }
  }, {
    key: "createDatastore",
    value: function createDatastore(t) {
      var e = pu(t.databaseInfo.databaseId),
        n = (s = t.databaseInfo, new mu(s));
      var s;
      /** Return the Platform-specific connectivity monitor. */
      return function (t, e, n, s) {
        return new Ru(t, e, n, s);
      }(t.authCredentials, t.appCheckCredentials, n, e);
    }
  }, {
    key: "createRemoteStore",
    value: function createRemoteStore(t) {
      var _this181 = this;
      return e = this.localStore, n = this.datastore, s = t.asyncQueue, i = function i(t) {
        return index_esm2017_Dc(_this181.syncEngine, t, 0 /* OnlineStateSource.RemoteStore */);
      }, r = du.C() ? new du() : new fu(), new vu(e, n, s, i, r);
      var e, n, s, i, r;
      /** Re-enables the network. Idempotent. */
    }
  }, {
    key: "createSyncEngine",
    value: function createSyncEngine(t, e) {
      return function (t, e, n,
      // PORTING NOTE: Manages state synchronization in multi-tab environments.
      s, i, r, o) {
        var u = new index_esm2017_Rc(t, e, n, s, i, r);
        return o && (u.dc = !0), u;
      }(this.localStore, this.remoteStore, this.eventManager, this.sharedClientState, t.initialUser, t.maxConcurrentLimboResolutions, e);
    }
  }, {
    key: "terminate",
    value: function terminate() {
      return function () {
        var _ref37 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee32(t) {
          var e;
          return _regeneratorRuntime().wrap(function _callee32$(_context32) {
            while (1) {
              switch (_context32.prev = _context32.next) {
                case 0:
                  e = $(t);
                  index_esm2017_C("RemoteStore", "RemoteStore shutting down.");
                  e._u.add(5 /* OfflineCause.Shutdown */);
                  _context32.next = 5;
                  return Su(e);
                case 5:
                  e.mu.shutdown();
                  // Set the OnlineState to Unknown (rather than Offline) to avoid potentially
                  // triggering spurious listener events with cached data, etc.
                  e.gu.set("Unknown" /* OnlineState.Unknown */);
                case 7:
                case "end":
                  return _context32.stop();
              }
            }
          }, _callee32);
        }));
        return function (_x113) {
          return _ref37.apply(this, arguments);
        };
      }()(this.remoteStore);
    }
  }]);
  return oa;
}()));
/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
function index_esm2017_ua(t, e, n) {
  if (!n) throw new index_esm2017_L(index_esm2017_B.INVALID_ARGUMENT, "Function ".concat(t, "() cannot be called with an empty ").concat(e, "."));
}

/**
 * Validates that two boolean options are not set at the same time.
 * @internal
 */
function index_esm2017_ca(t, e, n, s) {
  if (!0 === e && !0 === s) throw new index_esm2017_L(index_esm2017_B.INVALID_ARGUMENT, "".concat(t, " and ").concat(n, " cannot be used together."));
}

/**
 * Validates that `path` refers to a document (indicated by the fact it contains
 * an even numbers of segments).
 */
function index_esm2017_aa(t) {
  if (!ct.isDocumentKey(t)) throw new index_esm2017_L(index_esm2017_B.INVALID_ARGUMENT, "Invalid document reference. Document references must have an even number of segments, but ".concat(t, " has ").concat(t.length, "."));
}

/**
 * Validates that `path` refers to a collection (indicated by the fact it
 * contains an odd numbers of segments).
 */
function index_esm2017_ha(t) {
  if (ct.isDocumentKey(t)) throw new index_esm2017_L(index_esm2017_B.INVALID_ARGUMENT, "Invalid collection reference. Collection references must have an odd number of segments, but ".concat(t, " has ").concat(t.length, "."));
}

/**
 * Returns true if it's a non-null object without a custom prototype
 * (i.e. excludes Array, Date, etc.).
 */
/** Returns a string describing the type / value of the provided input. */
function index_esm2017_la(t) {
  if (void 0 === t) return "undefined";
  if (null === t) return "null";
  if ("string" == typeof t) return t.length > 20 && (t = "".concat(t.substring(0, 20), "...")), JSON.stringify(t);
  if ("number" == typeof t || "boolean" == typeof t) return "" + t;
  if ("object" == typeof t) {
    if (t instanceof Array) return "an array";
    {
      var e = /** try to get the constructor name for an object. */
      function (t) {
        if (t.constructor) return t.constructor.name;
        return null;
      }
      /**
      * Casts `obj` to `T`, optionally unwrapping Compat types to expose the
      * underlying instance. Throws if  `obj` is not an instance of `T`.
      *
      * This cast is used in the Lite and Full SDK to verify instance types for
      * arguments passed to the public API.
      * @internal
      */(t);
      return e ? "a custom ".concat(e, " object") : "an object";
    }
  }
  return "function" == typeof t ? "a function" : index_esm2017_O();
}
function index_esm2017_fa(t,
// eslint-disable-next-line @typescript-eslint/no-explicit-any
e) {
  if ("_delegate" in t && (
  // Unwrap Compat types
  // eslint-disable-next-line @typescript-eslint/no-explicit-any
  t = t._delegate), !(t instanceof e)) {
    if (e.name === t.constructor.name) throw new index_esm2017_L(index_esm2017_B.INVALID_ARGUMENT, "Type does not match the expected instance. Did you pass a reference from a different Firestore SDK?");
    {
      var n = index_esm2017_la(t);
      throw new index_esm2017_L(index_esm2017_B.INVALID_ARGUMENT, "Expected type '".concat(e.name, "', but it was: ").concat(n));
    }
  }
  return t;
}
function index_esm2017_da(t, e) {
  if (e <= 0) throw new index_esm2017_L(index_esm2017_B.INVALID_ARGUMENT, "Function ".concat(t, "() requires a positive number, but it was: ").concat(e, "."));
}

/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
var index_esm2017_a = new Map();

/**
 * An instance map that ensures only one Datastore exists per Firestore
 * instance.
 */
/**
 * A concrete type describing all the values that can be applied via a
 * user-supplied `FirestoreSettings` object. This is a separate type so that
 * defaults can be supplied and the value can be checked for equality.
 */
var index_esm2017_wa = /*#__PURE__*/function () {
  function wa(t) {
    classCallCheck_classCallCheck(this, wa);
    var e;
    if (void 0 === t.host) {
      if (void 0 !== t.ssl) throw new index_esm2017_L(index_esm2017_B.INVALID_ARGUMENT, "Can't provide ssl option if host option is not set");
      this.host = "firestore.googleapis.com", this.ssl = true;
    } else this.host = t.host, this.ssl = null === (e = t.ssl) || void 0 === e || e;
    if (this.credentials = t.credentials, this.ignoreUndefinedProperties = !!t.ignoreUndefinedProperties, void 0 === t.cacheSizeBytes) this.cacheSizeBytes = 41943040;else {
      if (-1 !== t.cacheSizeBytes && t.cacheSizeBytes < 1048576) throw new index_esm2017_L(index_esm2017_B.INVALID_ARGUMENT, "cacheSizeBytes must be at least 1048576");
      this.cacheSizeBytes = t.cacheSizeBytes;
    }
    this.experimentalForceLongPolling = !!t.experimentalForceLongPolling, this.experimentalAutoDetectLongPolling = !!t.experimentalAutoDetectLongPolling, this.useFetchStreams = !!t.useFetchStreams, index_esm2017_ca("experimentalForceLongPolling", t.experimentalForceLongPolling, "experimentalAutoDetectLongPolling", t.experimentalAutoDetectLongPolling);
  }
  createClass_createClass(wa, [{
    key: "isEqual",
    value: function isEqual(t) {
      return this.host === t.host && this.ssl === t.ssl && this.credentials === t.credentials && this.cacheSizeBytes === t.cacheSizeBytes && this.experimentalForceLongPolling === t.experimentalForceLongPolling && this.experimentalAutoDetectLongPolling === t.experimentalAutoDetectLongPolling && this.ignoreUndefinedProperties === t.ignoreUndefinedProperties && this.useFetchStreams === t.useFetchStreams;
    }
  }]);
  return wa;
}();
/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * The Cloud Firestore service interface.
 *
 * Do not call this constructor directly. Instead, use {@link (getFirestore:1)}.
 */
var index_esm2017_ma = /*#__PURE__*/function () {
  /** @hideconstructor */
  function ma(t, e, n, s) {
    classCallCheck_classCallCheck(this, ma);
    this._authCredentials = t, this._appCheckCredentials = e, this._databaseId = n, this._app = s,
    /**
     * Whether it's a Firestore or Firestore Lite instance.
     */
    this.type = "firestore-lite", this._persistenceKey = "(lite)", this._settings = new index_esm2017_wa({}), this._settingsFrozen = !1;
  }
  /**
   * The {@link @firebase/app#FirebaseApp} associated with this `Firestore` service
   * instance.
   */
  createClass_createClass(ma, [{
    key: "app",
    get: function get() {
      if (!this._app) throw new index_esm2017_L(index_esm2017_B.FAILED_PRECONDITION, "Firestore was not initialized using the Firebase SDK. 'app' is not available");
      return this._app;
    }
  }, {
    key: "_initialized",
    get: function get() {
      return this._settingsFrozen;
    }
  }, {
    key: "_terminated",
    get: function get() {
      return void 0 !== this._terminateTask;
    }
  }, {
    key: "_setSettings",
    value: function _setSettings(t) {
      if (this._settingsFrozen) throw new index_esm2017_L(index_esm2017_B.FAILED_PRECONDITION, "Firestore has already been started and its settings can no longer be changed. You can only modify settings before calling any other methods on a Firestore object.");
      this._settings = new index_esm2017_wa(t), void 0 !== t.credentials && (this._authCredentials = function (t) {
        if (!t) return new index_esm2017_K();
        switch (t.type) {
          case "gapi":
            var e = t.client;
            return new index_esm2017_W(e, t.sessionIndex || "0", t.iamToken || null, t.authTokenFactory || null);
          case "provider":
            return t.client;
          default:
            throw new index_esm2017_L(index_esm2017_B.INVALID_ARGUMENT, "makeAuthCredentialsProvider failed due to invalid credential type");
        }
      }(t.credentials));
    }
  }, {
    key: "_getSettings",
    value: function _getSettings() {
      return this._settings;
    }
  }, {
    key: "_freezeSettings",
    value: function _freezeSettings() {
      return this._settingsFrozen = !0, this._settings;
    }
  }, {
    key: "_delete",
    value: function _delete() {
      return this._terminateTask || (this._terminateTask = this._terminate()), this._terminateTask;
    }
    /** Returns a JSON-serializable representation of this `Firestore` instance. */
  }, {
    key: "toJSON",
    value: function toJSON() {
      return {
        app: this._app,
        databaseId: this._databaseId,
        settings: this._settings
      };
    }
    /**
     * Terminates all components used by this client. Subclasses can override
     * this method to clean up their own dependencies, but must also call this
     * method.
     *
     * Only ever called once.
     */
  }, {
    key: "_terminate",
    value: function _terminate() {
      /**
      * Removes all components associated with the provided instance. Must be called
      * when the `Firestore` instance is terminated.
      */
      return function (t) {
        var e = index_esm2017_a.get(t);
        e && (index_esm2017_C("ComponentProvider", "Removing Datastore"), index_esm2017_a.delete(t), e.terminate());
      }(this), Promise.resolve();
    }
  }]);
  return ma;
}();
/**
 * Modify this instance to communicate with the Cloud Firestore emulator.
 *
 * Note: This must be called before this instance has been used to do any
 * operations.
 *
 * @param firestore - The `Firestore` instance to configure to connect to the
 * emulator.
 * @param host - the emulator host (ex: localhost).
 * @param port - the emulator port (ex: 9000).
 * @param options.mockUserToken - the mock auth token to use for unit testing
 * Security Rules.
 */
function ga(t, e, n) {
  var s = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};
  var i;
  var r = (t = index_esm2017_fa(t, index_esm2017_ma))._getSettings();
  if ("firestore.googleapis.com" !== r.host && r.host !== e && index_esm2017_N("Host has been set in both settings() and useEmulator(), emulator host will be used"), t._setSettings(Object.assign(Object.assign({}, r), {
    host: "".concat(e, ":").concat(n),
    ssl: !1
  })), s.mockUserToken) {
    var _e48, _n32;
    if ("string" == typeof s.mockUserToken) _e48 = s.mockUserToken, _n32 = index_esm2017_P.MOCK_USER;else {
      // Let createMockUserToken validate first (catches common mistakes like
      // invalid field "uid" and missing field "sub" / "user_id".)
      _e48 = createMockUserToken(s.mockUserToken, null === (i = t._app) || void 0 === i ? void 0 : i.options.projectId);
      var _r7 = s.mockUserToken.sub || s.mockUserToken.user_id;
      if (!_r7) throw new index_esm2017_L(index_esm2017_B.INVALID_ARGUMENT, "mockUserToken must contain 'sub' or 'user_id' field!");
      _n32 = new index_esm2017_P(_r7);
    }
    t._authCredentials = new index_esm2017_G(new index_esm2017_U(_e48, _n32));
  }
}

/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * A `DocumentReference` refers to a document location in a Firestore database
 * and can be used to write, read, or listen to the location. The document at
 * the referenced location may or may not exist.
 */
var index_esm2017_ya = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  /** @hideconstructor */
  function ya(t,
  /**
   * If provided, the `FirestoreDataConverter` associated with this instance.
   */
  e, n) {
    _classCallCheck(this, ya);
    this.converter = e, this._key = n, /** The type of this Firestore reference. */
    this.type = "document", this.firestore = t;
  }
  _createClass(ya, [{
    key: "_path",
    get: function get() {
      return this._key.path;
    }
    /**
     * The document's identifier within its collection.
     */
  }, {
    key: "id",
    get: function get() {
      return this._key.path.lastSegment();
    }
    /**
     * A string representing the path of the referenced document (relative
     * to the root of the database).
     */
  }, {
    key: "path",
    get: function get() {
      return this._key.path.canonicalString();
    }
    /**
     * The collection this `DocumentReference` belongs to.
     */
  }, {
    key: "parent",
    get: function get() {
      return new index_esm2017_Ia(this.firestore, this.converter, this._key.path.popLast());
    }
  }, {
    key: "withConverter",
    value: function withConverter(t) {
      return new ya(this.firestore, t, this._key);
    }
  }]);
  return ya;
}()));
/**
 * A `Query` refers to a query which you can read or listen to. You can also
 * construct refined `Query` objects by adding filters and ordering.
 */
var index_esm2017_pa = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  // This is the lite version of the Query class in the main SDK.
  /** @hideconstructor protected */
  function pa(t,
  /**
   * If provided, the `FirestoreDataConverter` associated with this instance.
   */
  e, n) {
    _classCallCheck(this, pa);
    this.converter = e, this._query = n, /** The type of this Firestore reference. */
    this.type = "query", this.firestore = t;
  }
  _createClass(pa, [{
    key: "withConverter",
    value: function withConverter(t) {
      return new pa(this.firestore, t, this._query);
    }
  }]);
  return pa;
}()));
/**
 * A `CollectionReference` object can be used for adding documents, getting
 * document references, and querying for documents (using {@link query}).
 */
var index_esm2017_Ia = /*#__PURE__*/(/* unused pure expression or super */ null && (function (_pa) {
  _inherits(Ia, _pa);
  var _super32 = _createSuper(Ia);
  /** @hideconstructor */
  function Ia(t, e, n) {
    var _this182;
    _classCallCheck(this, Ia);
    _this182 = _super32.call(this, t, e, ln(n)), _this182._path = n, /** The type of this Firestore reference. */
    _this182.type = "collection";
    return _this182;
  }
  /** The collection's identifier. */
  _createClass(Ia, [{
    key: "id",
    get: function get() {
      return this._query.path.lastSegment();
    }
    /**
     * A string representing the path of the referenced collection (relative
     * to the root of the database).
     */
  }, {
    key: "path",
    get: function get() {
      return this._query.path.canonicalString();
    }
    /**
     * A reference to the containing `DocumentReference` if this is a
     * subcollection. If this isn't a subcollection, the reference is null.
     */
  }, {
    key: "parent",
    get: function get() {
      var t = this._path.popLast();
      return t.isEmpty() ? null : new index_esm2017_ya(this.firestore, /* converter= */null, new ct(t));
    }
  }, {
    key: "withConverter",
    value: function withConverter(t) {
      return new Ia(this.firestore, t, this._path);
    }
  }]);
  return Ia;
}(index_esm2017_pa)));
function index_esm2017_Ta(t, e) {
  for (var _len7 = arguments.length, n = new Array(_len7 > 2 ? _len7 - 2 : 0), _key7 = 2; _key7 < _len7; _key7++) {
    n[_key7 - 2] = arguments[_key7];
  }
  if (t = getModularInstance(t), index_esm2017_ua("collection", "path", e), t instanceof index_esm2017_ma) {
    var s = rt.fromString.apply(rt, [e].concat(n));
    return index_esm2017_ha(s), new index_esm2017_Ia(t, /* converter= */null, s);
  }
  {
    if (!(t instanceof index_esm2017_ya || t instanceof index_esm2017_Ia)) throw new index_esm2017_L(index_esm2017_B.INVALID_ARGUMENT, "Expected first argument to collection() to be a CollectionReference, a DocumentReference or FirebaseFirestore");
    var _s27 = t._path.child(rt.fromString.apply(rt, [e].concat(n)));
    return index_esm2017_ha(_s27), new index_esm2017_Ia(t.firestore, /* converter= */null, _s27);
  }
}

// TODO(firestorelite): Consider using ErrorFactory -
// https://github.com/firebase/firebase-js-sdk/blob/0131e1f/packages/util/src/errors.ts#L106
/**
 * Creates and returns a new `Query` instance that includes all documents in the
 * database that are contained in a collection or subcollection with the
 * given `collectionId`.
 *
 * @param firestore - A reference to the root `Firestore` instance.
 * @param collectionId - Identifies the collections to query over. Every
 * collection or subcollection with this ID as the last segment of its path
 * will be included. Cannot contain a slash.
 * @returns The created `Query`.
 */
function index_esm2017_Ea(t, e) {
  if (t = index_esm2017_fa(t, index_esm2017_ma), index_esm2017_ua("collectionGroup", "collection id", e), e.indexOf("/") >= 0) throw new index_esm2017_L(index_esm2017_B.INVALID_ARGUMENT, "Invalid collection ID '".concat(e, "' passed to function collectionGroup(). Collection IDs must not contain '/'."));
  return new index_esm2017_pa(t, /* converter= */null, function (t) {
    return new an(rt.emptyPath(), t);
  }(e));
}
function index_esm2017_Aa(t, e) {
  for (var _len8 = arguments.length, n = new Array(_len8 > 2 ? _len8 - 2 : 0), _key8 = 2; _key8 < _len8; _key8++) {
    n[_key8 - 2] = arguments[_key8];
  }
  if (t = getModularInstance(t),
  // We allow omission of 'pathString' but explicitly prohibit passing in both
  // 'undefined' and 'null'.
  1 === arguments.length && (e = index_esm2017_X.R()), index_esm2017_ua("doc", "path", e), t instanceof index_esm2017_ma) {
    var s = rt.fromString.apply(rt, [e].concat(n));
    return index_esm2017_aa(s), new index_esm2017_ya(t, /* converter= */null, new ct(s));
  }
  {
    if (!(t instanceof index_esm2017_ya || t instanceof index_esm2017_Ia)) throw new index_esm2017_L(index_esm2017_B.INVALID_ARGUMENT, "Expected first argument to collection() to be a CollectionReference, a DocumentReference or FirebaseFirestore");
    var _s28 = t._path.child(rt.fromString.apply(rt, [e].concat(n)));
    return index_esm2017_aa(_s28), new index_esm2017_ya(t.firestore, t instanceof index_esm2017_Ia ? t.converter : null, new ct(_s28));
  }
}

/**
 * Returns true if the provided references are equal.
 *
 * @param left - A reference to compare.
 * @param right - A reference to compare.
 * @returns true if the references point to the same location in the same
 * Firestore database.
 */
function index_esm2017_Ra(t, e) {
  return t = getModularInstance(t), e = getModularInstance(e), (t instanceof index_esm2017_ya || t instanceof index_esm2017_Ia) && (e instanceof index_esm2017_ya || e instanceof index_esm2017_Ia) && t.firestore === e.firestore && t.path === e.path && t.converter === e.converter;
}

/**
 * Returns true if the provided queries point to the same collection and apply
 * the same constraints.
 *
 * @param left - A `Query` to compare.
 * @param right - A `Query` to compare.
 * @returns true if the references point to the same location in the same
 * Firestore database.
 */
function index_esm2017_ba(t, e) {
  return t = getModularInstance(t), e = getModularInstance(e), t instanceof index_esm2017_pa && e instanceof index_esm2017_pa && t.firestore === e.firestore && In(t._query, e._query) && t.converter === e.converter;
}

/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * How many bytes to read each time when `ReadableStreamReader.read()` is
 * called. Only applicable for byte streams that we control (e.g. those backed
 * by an UInt8Array).
 */
/**
 * Builds a `ByteStreamReader` from a UInt8Array.
 * @param source - The data source to use.
 * @param bytesPerRead - How many bytes each `read()` from the returned reader
 *        will read.
 */
function index_esm2017_Pa(t) {
  var e = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 10240;
  var n = 0;
  // The TypeScript definition for ReadableStreamReader changed. We use
  // `any` here to allow this code to compile with different versions.
  // See https://github.com/microsoft/TypeScript/issues/42970
  // eslint-disable-next-line @typescript-eslint/no-explicit-any
  return {
    // eslint-disable-next-line @typescript-eslint/no-explicit-any
    read: function read() {
      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee33() {
        var s;
        return _regeneratorRuntime().wrap(function _callee33$(_context33) {
          while (1) {
            switch (_context33.prev = _context33.next) {
              case 0:
                if (!(n < t.byteLength)) {
                  _context33.next = 3;
                  break;
                }
                s = {
                  value: t.slice(n, n + e),
                  done: !1
                };
                return _context33.abrupt("return", (n += e, s));
              case 3:
                return _context33.abrupt("return", {
                  done: !0
                });
              case 4:
              case "end":
                return _context33.stop();
            }
          }
        }, _callee33);
      }))();
    },
    cancel: function cancel() {
      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee34() {
        return _regeneratorRuntime().wrap(function _callee34$(_context34) {
          while (1) {
            switch (_context34.prev = _context34.next) {
              case 0:
              case "end":
                return _context34.stop();
            }
          }
        }, _callee34);
      }))();
    },
    releaseLock: function releaseLock() {},
    closed: Promise.reject("unimplemented")
  };
}

/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * On web, a `ReadableStream` is wrapped around by a `ByteStreamReader`.
 */
/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/*
 * A wrapper implementation of Observer<T> that will dispatch events
 * asynchronously. To allow immediate silencing, a mute call is added which
 * causes events scheduled to no longer be raised.
 */
var index_esm2017_va = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  function va(t) {
    _classCallCheck(this, va);
    this.observer = t,
    /**
     * When set to true, will not raise future events. Necessary to deal with
     * async detachment of listener.
     */
    this.muted = !1;
  }
  _createClass(va, [{
    key: "next",
    value: function next(t) {
      this.observer.next && this.Rc(this.observer.next, t);
    }
  }, {
    key: "error",
    value: function error(t) {
      this.observer.error ? this.Rc(this.observer.error, t) : index_esm2017_x("Uncaught Error in snapshot listener:", t.toString());
    }
  }, {
    key: "bc",
    value: function bc() {
      this.muted = !0;
    }
  }, {
    key: "Rc",
    value: function Rc(t, e) {
      var _this183 = this;
      this.muted || setTimeout(function () {
        _this183.muted || t(e);
      }, 0);
    }
  }]);
  return va;
}()));
/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * A class representing a bundle.
 *
 * Takes a bundle stream or buffer, and presents abstractions to read bundled
 * elements out of the underlying content.
 */
var index_esm2017_Va = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  function Va( /** The reader to read from underlying binary bundle data source. */
  t, e) {
    var _this184 = this;
    _classCallCheck(this, Va);
    this.Pc = t, this.yt = e, /** Cached bundle metadata. */
    this.metadata = new index_esm2017_q(),
    /**
     * Internal buffer to hold bundle content, accumulating incomplete element
     * content.
     */
    this.buffer = new Uint8Array(), this.vc = new TextDecoder("utf-8"),
    // Read the metadata (which is the first element).
    this.Vc().then(function (t) {
      t && t.Ou() ? _this184.metadata.resolve(t.ku.metadata) : _this184.metadata.reject(new Error("The first element of the bundle is not a metadata, it is\n             ".concat(JSON.stringify(null == t ? void 0 : t.ku))));
    }, function (t) {
      return _this184.metadata.reject(t);
    });
  }
  _createClass(Va, [{
    key: "close",
    value: function close() {
      return this.Pc.cancel();
    }
  }, {
    key: "getMetadata",
    value: function () {
      var _getMetadata = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee35() {
        return _regeneratorRuntime().wrap(function _callee35$(_context35) {
          while (1) {
            switch (_context35.prev = _context35.next) {
              case 0:
                return _context35.abrupt("return", this.metadata.promise);
              case 1:
              case "end":
                return _context35.stop();
            }
          }
        }, _callee35, this);
      }));
      function getMetadata() {
        return _getMetadata.apply(this, arguments);
      }
      return getMetadata;
    }()
  }, {
    key: "mc",
    value: function () {
      var _mc = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee36() {
        return _regeneratorRuntime().wrap(function _callee36$(_context36) {
          while (1) {
            switch (_context36.prev = _context36.next) {
              case 0:
                _context36.next = 2;
                return this.getMetadata();
              case 2:
                return _context36.abrupt("return", this.Vc());
              case 3:
              case "end":
                return _context36.stop();
            }
          }
        }, _callee36, this);
      }));
      function mc() {
        return _mc.apply(this, arguments);
      }
      return mc;
    }()
    /**
     * Reads from the head of internal buffer, and pulling more data from
     * underlying stream if a complete element cannot be found, until an
     * element(including the prefixed length and the JSON string) is found.
     *
     * Once a complete element is read, it is dropped from internal buffer.
     *
     * Returns either the bundled element, or null if we have reached the end of
     * the stream.
     */
  }, {
    key: "Vc",
    value: function () {
      var _Vc2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee37() {
        var t, e, n, s;
        return _regeneratorRuntime().wrap(function _callee37$(_context37) {
          while (1) {
            switch (_context37.prev = _context37.next) {
              case 0:
                _context37.next = 2;
                return this.Sc();
              case 2:
                t = _context37.sent;
                if (!(null === t)) {
                  _context37.next = 5;
                  break;
                }
                return _context37.abrupt("return", null);
              case 5:
                e = this.vc.decode(t), n = Number(e);
                isNaN(n) && this.Dc("length string (".concat(e, ") is not valid number"));
                _context37.next = 9;
                return this.Cc(n);
              case 9:
                s = _context37.sent;
                return _context37.abrupt("return", new index_esm2017_wc(JSON.parse(s), t.length + n));
              case 11:
              case "end":
                return _context37.stop();
            }
          }
        }, _callee37, this);
      }));
      function Vc() {
        return _Vc2.apply(this, arguments);
      }
      return Vc;
    }() /** First index of '{' from the underlying buffer. */
  }, {
    key: "xc",
    value: function xc() {
      return this.buffer.findIndex(function (t) {
        return t === "{".charCodeAt(0);
      });
    }
    /**
     * Reads from the beginning of the internal buffer, until the first '{', and
     * return the content.
     *
     * If reached end of the stream, returns a null.
     */
  }, {
    key: "Sc",
    value: function () {
      var _Sc2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee38() {
        var t, e;
        return _regeneratorRuntime().wrap(function _callee38$(_context38) {
          while (1) {
            switch (_context38.prev = _context38.next) {
              case 0:
                if (!(this.xc() < 0)) {
                  _context38.next = 7;
                  break;
                }
                _context38.next = 3;
                return this.Nc();
              case 3:
                if (!_context38.sent) {
                  _context38.next = 5;
                  break;
                }
                return _context38.abrupt("break", 7);
              case 5:
                _context38.next = 0;
                break;
              case 7:
                if (!(0 === this.buffer.length)) {
                  _context38.next = 9;
                  break;
                }
                return _context38.abrupt("return", null);
              case 9:
                t = this.xc(); // Broke out of the loop because underlying stream is closed, but still
                // cannot find an open bracket.
                t < 0 && this.Dc("Reached the end of bundle when a length string is expected.");
                e = this.buffer.slice(0, t); // Update the internal buffer to drop the read length.
                return _context38.abrupt("return", (this.buffer = this.buffer.slice(t), e));
              case 13:
              case "end":
                return _context38.stop();
            }
          }
        }, _callee38, this);
      }));
      function Sc() {
        return _Sc2.apply(this, arguments);
      }
      return Sc;
    }()
    /**
     * Reads from a specified position from the internal buffer, for a specified
     * number of bytes, pulling more data from the underlying stream if needed.
     *
     * Returns a string decoded from the read bytes.
     */
  }, {
    key: "Cc",
    value: function () {
      var _Cc2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee39(t) {
        var e;
        return _regeneratorRuntime().wrap(function _callee39$(_context39) {
          while (1) {
            switch (_context39.prev = _context39.next) {
              case 0:
                if (!(this.buffer.length < t)) {
                  _context39.next = 8;
                  break;
                }
                _context39.next = 3;
                return this.Nc();
              case 3:
                _context39.t0 = _context39.sent;
                if (!_context39.t0) {
                  _context39.next = 6;
                  break;
                }
                this.Dc("Reached the end of bundle when more is expected.");
              case 6:
                _context39.next = 0;
                break;
              case 8:
                e = this.vc.decode(this.buffer.slice(0, t)); // Update the internal buffer to drop the read json string.
                return _context39.abrupt("return", (this.buffer = this.buffer.slice(t), e));
              case 10:
              case "end":
                return _context39.stop();
            }
          }
        }, _callee39, this);
      }));
      function Cc(_x114) {
        return _Cc2.apply(this, arguments);
      }
      return Cc;
    }()
  }, {
    key: "Dc",
    value: function Dc(t) {
      // eslint-disable-next-line @typescript-eslint/no-floating-promises
      throw this.Pc.cancel(), new Error("Invalid bundle format: ".concat(t));
    }
    /**
     * Pulls more data from underlying stream to internal buffer.
     * Returns a boolean indicating whether the stream is finished.
     */
  }, {
    key: "Nc",
    value: function () {
      var _Nc2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee40() {
        var t, e;
        return _regeneratorRuntime().wrap(function _callee40$(_context40) {
          while (1) {
            switch (_context40.prev = _context40.next) {
              case 0:
                _context40.next = 2;
                return this.Pc.read();
              case 2:
                t = _context40.sent;
                if (!t.done) {
                  e = new Uint8Array(this.buffer.length + t.value.length);
                  e.set(this.buffer), e.set(t.value, this.buffer.length), this.buffer = e;
                }
                return _context40.abrupt("return", t.done);
              case 5:
              case "end":
                return _context40.stop();
            }
          }
        }, _callee40, this);
      }));
      function Nc() {
        return _Nc2.apply(this, arguments);
      }
      return Nc;
    }()
  }]);
  return Va;
}()));
/**
 * @license
 * Copyright 2022 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * Represents an aggregation that can be performed by Firestore.
 */
// eslint-disable-next-line @typescript-eslint/no-unused-vars
var index_esm2017_Sa = /*#__PURE__*/(/* unused pure expression or super */ null && (_createClass(function Sa() {
  _classCallCheck(this, Sa);
  /** A type string to uniquely identify instances of this class. */
  this.type = "AggregateField";
})));
/**
 * The results of executing an aggregation query.
 */
var Da = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  /** @hideconstructor */
  function Da(t, e) {
    _classCallCheck(this, Da);
    this._data = e, /** A type string to uniquely identify instances of this class. */
    this.type = "AggregateQuerySnapshot", this.query = t;
  }
  /**
   * Returns the results of the aggregations performed over the underlying
   * query.
   *
   * The keys of the returned object will be the same as those of the
   * `AggregateSpec` object specified to the aggregation method, and the values
   * will be the corresponding aggregation result.
   *
   * @returns The results of the aggregations performed over the underlying
   * query.
   */
  _createClass(Da, [{
    key: "data",
    value: function data() {
      return this._data;
    }
  }]);
  return Da;
}()));
/**
 * @license
 * Copyright 2022 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * CountQueryRunner encapsulates the logic needed to run the count aggregation
 * queries.
 */
var Ca = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  function Ca(t, e, n) {
    _classCallCheck(this, Ca);
    this.query = t, this.datastore = e, this.userDataWriter = n;
  }
  _createClass(Ca, [{
    key: "run",
    value: function run() {
      var _this185 = this;
      return bu(this.datastore, this.query._query).then(function (t) {
        index_esm2017_M(void 0 !== t[0]);
        var e = Object.entries(t[0]).filter(function (_ref38) {
          var _ref39 = _slicedToArray(_ref38, 2),
            t = _ref39[0],
            e = _ref39[1];
          return "count_alias" === t;
        }).map(function (_ref40) {
          var _ref41 = _slicedToArray(_ref40, 2),
            t = _ref41[0],
            e = _ref41[1];
          return _this185.userDataWriter.convertValue(e);
        })[0];
        return index_esm2017_M("number" == typeof e), Promise.resolve(new Da(_this185.query, {
          count: e
        }));
      });
    }
  }]);
  return Ca;
}()));
/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * Internal transaction object responsible for accumulating the mutations to
 * perform and the base versions for any documents read.
 */
var index_esm2017_xa = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  function xa(t) {
    _classCallCheck(this, xa);
    this.datastore = t,
    // The version of each document that was read during this transaction.
    this.readVersions = new Map(), this.mutations = [], this.committed = !1,
    /**
     * A deferred usage error that occurred previously in this transaction that
     * will cause the transaction to fail once it actually commits.
     */
    this.lastWriteError = null,
    /**
     * Set of documents that have been written in the transaction.
     *
     * When there's more than one write to the same key in a transaction, any
     * writes after the first are handled differently.
     */
    this.writtenDocs = new Set();
  }
  _createClass(xa, [{
    key: "lookup",
    value: function () {
      var _lookup = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee42(t) {
        var _this186 = this;
        var e;
        return _regeneratorRuntime().wrap(function _callee42$(_context42) {
          while (1) {
            switch (_context42.prev = _context42.next) {
              case 0:
                if (!(this.ensureCommitNotCalled(), this.mutations.length > 0)) {
                  _context42.next = 2;
                  break;
                }
                throw new index_esm2017_L(index_esm2017_B.INVALID_ARGUMENT, "Firestore transactions require all reads to be executed before all writes.");
              case 2:
                _context42.next = 4;
                return function () {
                  var _ref42 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee41(t, e) {
                    var n, s, i, r, o, u;
                    return _regeneratorRuntime().wrap(function _callee41$(_context41) {
                      while (1) {
                        switch (_context41.prev = _context41.next) {
                          case 0:
                            n = $(t);
                            s = zs(n.yt) + "/documents";
                            i = {
                              documents: e.map(function (t) {
                                return Gs(n.yt, t);
                              })
                            };
                            _context41.next = 5;
                            return n._o("BatchGetDocuments", s, i, e.length);
                          case 5:
                            r = _context41.sent;
                            o = new Map();
                            r.forEach(function (t) {
                              var e = Xs(n.yt, t);
                              o.set(e.key.toString(), e);
                            });
                            u = [];
                            return _context41.abrupt("return", (e.forEach(function (t) {
                              var e = o.get(t.toString());
                              index_esm2017_M(!!e), u.push(e);
                            }), u));
                          case 10:
                          case "end":
                            return _context41.stop();
                        }
                      }
                    }, _callee41);
                  }));
                  return function (_x116, _x117) {
                    return _ref42.apply(this, arguments);
                  };
                }()(this.datastore, t);
              case 4:
                e = _context42.sent;
                return _context42.abrupt("return", (e.forEach(function (t) {
                  return _this186.recordVersion(t);
                }), e));
              case 6:
              case "end":
                return _context42.stop();
            }
          }
        }, _callee42, this);
      }));
      function lookup(_x115) {
        return _lookup.apply(this, arguments);
      }
      return lookup;
    }()
  }, {
    key: "set",
    value: function set(t, e) {
      this.write(e.toMutation(t, this.precondition(t))), this.writtenDocs.add(t.toString());
    }
  }, {
    key: "update",
    value: function update(t, e) {
      try {
        this.write(e.toMutation(t, this.preconditionForUpdate(t)));
      } catch (t) {
        this.lastWriteError = t;
      }
      this.writtenDocs.add(t.toString());
    }
  }, {
    key: "delete",
    value: function _delete(t) {
      this.write(new is(t, this.precondition(t))), this.writtenDocs.add(t.toString());
    }
  }, {
    key: "commit",
    value: function () {
      var _commit = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee44() {
        var _this187 = this;
        var t;
        return _regeneratorRuntime().wrap(function _callee44$(_context44) {
          while (1) {
            switch (_context44.prev = _context44.next) {
              case 0:
                if (!(this.ensureCommitNotCalled(), this.lastWriteError)) {
                  _context44.next = 2;
                  break;
                }
                throw this.lastWriteError;
              case 2:
                t = this.readVersions; // For each mutation, note that the doc was written.
                this.mutations.forEach(function (e) {
                  t.delete(e.key.toString());
                });
                // For each document that was read but not written to, we want to perform
                // a `verify` operation.
                t.forEach(function (t, e) {
                  var n = ct.fromPath(e);
                  _this187.mutations.push(new rs(n, _this187.precondition(n)));
                });
                _context44.next = 7;
                return function () {
                  var _ref43 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee43(t, e) {
                    var n, s, i;
                    return _regeneratorRuntime().wrap(function _callee43$(_context43) {
                      while (1) {
                        switch (_context43.prev = _context43.next) {
                          case 0:
                            n = $(t), s = zs(n.yt) + "/documents", i = {
                              writes: e.map(function (t) {
                                return ti(n.yt, t);
                              })
                            };
                            _context43.next = 3;
                            return n.ao("Commit", s, i);
                          case 3:
                          case "end":
                            return _context43.stop();
                        }
                      }
                    }, _callee43);
                  }));
                  return function (_x118, _x119) {
                    return _ref43.apply(this, arguments);
                  };
                }()(this.datastore, this.mutations);
              case 7:
                this.committed = !0;
              case 8:
              case "end":
                return _context44.stop();
            }
          }
        }, _callee44, this);
      }));
      function commit() {
        return _commit.apply(this, arguments);
      }
      return commit;
    }()
  }, {
    key: "recordVersion",
    value: function recordVersion(t) {
      var e;
      if (t.isFoundDocument()) e = t.version;else {
        if (!t.isNoDocument()) throw index_esm2017_O();
        // Represent a deleted doc using SnapshotVersion.min().
        e = st.min();
      }
      var n = this.readVersions.get(t.key.toString());
      if (n) {
        if (!e.isEqual(n))
          // This transaction will fail no matter what.
          throw new index_esm2017_L(index_esm2017_B.ABORTED, "Document version changed between two reads.");
      } else this.readVersions.set(t.key.toString(), e);
    }
    /**
     * Returns the version of this document when it was read in this transaction,
     * as a precondition, or no precondition if it was not read.
     */
  }, {
    key: "precondition",
    value: function precondition(t) {
      var e = this.readVersions.get(t.toString());
      return !this.writtenDocs.has(t.toString()) && e ? e.isEqual(st.min()) ? Qn.exists(!1) : Qn.updateTime(e) : Qn.none();
    }
    /**
     * Returns the precondition for a document if the operation is an update.
     */
  }, {
    key: "preconditionForUpdate",
    value: function preconditionForUpdate(t) {
      var e = this.readVersions.get(t.toString());
      // The first time a document is written, we want to take into account the
      // read time and existence
      if (!this.writtenDocs.has(t.toString()) && e) {
        if (e.isEqual(st.min()))
          // The document doesn't exist, so fail the transaction.
          // This has to be validated locally because you can't send a
          // precondition that a document does not exist without changing the
          // semantics of the backend write to be an insert. This is the reverse
          // of what we want, since we want to assert that the document doesn't
          // exist but then send the update and have it fail. Since we can't
          // express that to the backend, we have to validate locally.
          // Note: this can change once we can send separate verify writes in the
          // transaction.
          throw new index_esm2017_L(index_esm2017_B.INVALID_ARGUMENT, "Can't update a document that doesn't exist.");
        // Document exists, base precondition on document update time.
        return Qn.updateTime(e);
      }
      // Document was not read, so we just use the preconditions for a blind
      // update.
      return Qn.exists(!0);
    }
  }, {
    key: "write",
    value: function write(t) {
      this.ensureCommitNotCalled(), this.mutations.push(t);
    }
  }, {
    key: "ensureCommitNotCalled",
    value: function ensureCommitNotCalled() {}
  }]);
  return xa;
}()));
/**
 * @license
 * Copyright 2019 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * TransactionRunner encapsulates the logic needed to run and retry transactions
 * with backoff.
 */
var index_esm2017_Na = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  function Na(t, e, n, s, i) {
    _classCallCheck(this, Na);
    this.asyncQueue = t, this.datastore = e, this.options = n, this.updateFunction = s, this.deferred = i, this.kc = n.maxAttempts, this.xo = new Iu(this.asyncQueue, "transaction_retry" /* TimerId.TransactionRetry */);
  }
  /** Runs the transaction and sets the result on deferred. */
  _createClass(Na, [{
    key: "run",
    value: function run() {
      this.kc -= 1, this.Oc();
    }
  }, {
    key: "Oc",
    value: function Oc() {
      var _this188 = this;
      this.xo.Ro( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee45() {
        var t, e;
        return _regeneratorRuntime().wrap(function _callee45$(_context45) {
          while (1) {
            switch (_context45.prev = _context45.next) {
              case 0:
                t = new index_esm2017_xa(_this188.datastore), e = _this188.Mc(t);
                e && e.then(function (e) {
                  _this188.asyncQueue.enqueueAndForget(function () {
                    return t.commit().then(function () {
                      _this188.deferred.resolve(e);
                    }).catch(function (t) {
                      _this188.Fc(t);
                    });
                  });
                }).catch(function (t) {
                  _this188.Fc(t);
                });
              case 2:
              case "end":
                return _context45.stop();
            }
          }
        }, _callee45);
      })));
    }
  }, {
    key: "Mc",
    value: function Mc(t) {
      try {
        var e = this.updateFunction(t);
        return !qt(e) && e.catch && e.then ? e : (this.deferred.reject(Error("Transaction callback must return a Promise")), null);
      } catch (t) {
        // Do not retry errors thrown by user provided updateFunction.
        return this.deferred.reject(t), null;
      }
    }
  }, {
    key: "Fc",
    value: function Fc(t) {
      var _this189 = this;
      this.kc > 0 && this.$c(t) ? (this.kc -= 1, this.asyncQueue.enqueueAndForget(function () {
        return _this189.Oc(), Promise.resolve();
      })) : this.deferred.reject(t);
    }
  }, {
    key: "$c",
    value: function $c(t) {
      if ("FirebaseError" === t.name) {
        // In transactions, the backend will fail outdated reads with FAILED_PRECONDITION and
        // non-matching document versions with ABORTED. These errors should be retried.
        var e = t.code;
        return "aborted" === e || "failed-precondition" === e || "already-exists" === e || !as(e);
      }
      return !1;
    }
  }]);
  return Na;
}()));
/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * FirestoreClient is a top-level class that constructs and owns all of the
 * pieces of the client SDK architecture. It is responsible for creating the
 * async queue that is shared by all of the other components in the system.
 */
var ka = /*#__PURE__*/function () {
  function ka(t, e,
  /**
   * Asynchronous queue responsible for all of our internal processing. When
   * we get incoming work from the user (via public API) or the network
   * (incoming GRPC messages), we should always schedule onto this queue.
   * This ensures all of our work is properly serialized (e.g. we don't
   * start processing a new operation while the previous one is waiting for
   * an async I/O to complete).
   */
  n, s) {
    var _this190 = this;
    classCallCheck_classCallCheck(this, ka);
    this.authCredentials = t, this.appCheckCredentials = e, this.asyncQueue = n, this.databaseInfo = s, this.user = index_esm2017_P.UNAUTHENTICATED, this.clientId = index_esm2017_X.R(), this.authCredentialListener = function () {
      return Promise.resolve();
    }, this.appCheckCredentialListener = function () {
      return Promise.resolve();
    }, this.authCredentials.start(n, /*#__PURE__*/function () {
      var _ref45 = asyncToGenerator_asyncToGenerator( /*#__PURE__*/regeneratorRuntime_regeneratorRuntime().mark(function _callee46(t) {
        return regeneratorRuntime_regeneratorRuntime().wrap(function _callee46$(_context46) {
          while (1) {
            switch (_context46.prev = _context46.next) {
              case 0:
                index_esm2017_C("FirestoreClient", "Received user=", t.uid);
                _context46.next = 3;
                return _this190.authCredentialListener(t);
              case 3:
                _this190.user = t;
              case 4:
              case "end":
                return _context46.stop();
            }
          }
        }, _callee46);
      }));
      return function (_x120) {
        return _ref45.apply(this, arguments);
      };
    }()), this.appCheckCredentials.start(n, function (t) {
      return index_esm2017_C("FirestoreClient", "Received new app check token=", t), _this190.appCheckCredentialListener(t, _this190.user);
    });
  }
  createClass_createClass(ka, [{
    key: "getConfiguration",
    value: function () {
      var _getConfiguration = asyncToGenerator_asyncToGenerator( /*#__PURE__*/regeneratorRuntime_regeneratorRuntime().mark(function _callee47() {
        return regeneratorRuntime_regeneratorRuntime().wrap(function _callee47$(_context47) {
          while (1) {
            switch (_context47.prev = _context47.next) {
              case 0:
                return _context47.abrupt("return", {
                  asyncQueue: this.asyncQueue,
                  databaseInfo: this.databaseInfo,
                  clientId: this.clientId,
                  authCredentials: this.authCredentials,
                  appCheckCredentials: this.appCheckCredentials,
                  initialUser: this.user,
                  maxConcurrentLimboResolutions: 100
                });
              case 1:
              case "end":
                return _context47.stop();
            }
          }
        }, _callee47, this);
      }));
      function getConfiguration() {
        return _getConfiguration.apply(this, arguments);
      }
      return getConfiguration;
    }()
  }, {
    key: "setCredentialChangeListener",
    value: function setCredentialChangeListener(t) {
      this.authCredentialListener = t;
    }
  }, {
    key: "setAppCheckTokenChangeListener",
    value: function setAppCheckTokenChangeListener(t) {
      this.appCheckCredentialListener = t;
    }
    /**
     * Checks that the client has not been terminated. Ensures that other methods on
     * this class cannot be called after the client is terminated.
     */
  }, {
    key: "verifyNotTerminated",
    value: function verifyNotTerminated() {
      if (this.asyncQueue.isShuttingDown) throw new index_esm2017_L(index_esm2017_B.FAILED_PRECONDITION, "The client has already been terminated.");
    }
  }, {
    key: "terminate",
    value: function terminate() {
      var _this191 = this;
      this.asyncQueue.enterRestrictedMode();
      var t = new index_esm2017_q();
      return this.asyncQueue.enqueueAndForgetEvenWhileRestricted( /*#__PURE__*/asyncToGenerator_asyncToGenerator( /*#__PURE__*/regeneratorRuntime_regeneratorRuntime().mark(function _callee48() {
        var n;
        return regeneratorRuntime_regeneratorRuntime().wrap(function _callee48$(_context48) {
          while (1) {
            switch (_context48.prev = _context48.next) {
              case 0:
                _context48.prev = 0;
                _context48.t0 = _this191.onlineComponents;
                if (!_context48.t0) {
                  _context48.next = 5;
                  break;
                }
                _context48.next = 5;
                return _this191.onlineComponents.terminate();
              case 5:
                _context48.t1 = _this191.offlineComponents;
                if (!_context48.t1) {
                  _context48.next = 9;
                  break;
                }
                _context48.next = 9;
                return _this191.offlineComponents.terminate();
              case 9:
                // The credentials provider must be terminated after shutting down the
                // RemoteStore as it will prevent the RemoteStore from retrieving auth
                // tokens.
                _this191.authCredentials.shutdown();
                _this191.appCheckCredentials.shutdown();
                t.resolve();
                _context48.next = 18;
                break;
              case 14:
                _context48.prev = 14;
                _context48.t2 = _context48["catch"](0);
                n = index_esm2017_sc(_context48.t2, "Failed to shutdown persistence");
                t.reject(n);
              case 18:
              case "end":
                return _context48.stop();
            }
          }
        }, _callee48, null, [[0, 14]]);
      }))), t.promise;
    }
  }]);
  return ka;
}();
function index_esm2017_Oa(_x121, _x122) {
  return _Oa.apply(this, arguments);
}
function _Oa() {
  _Oa = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee119(t, e) {
    var n, s;
    return _regeneratorRuntime().wrap(function _callee119$(_context120) {
      while (1) {
        switch (_context120.prev = _context120.next) {
          case 0:
            t.asyncQueue.verifyOperationInProgress(), index_esm2017_C("FirestoreClient", "Initializing OfflineComponentProvider");
            _context120.next = 3;
            return t.getConfiguration();
          case 3:
            n = _context120.sent;
            _context120.next = 6;
            return e.initialize(n);
          case 6:
            s = n.initialUser;
            t.setCredentialChangeListener( /*#__PURE__*/function () {
              var _ref78 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee118(t) {
                return _regeneratorRuntime().wrap(function _callee118$(_context119) {
                  while (1) {
                    switch (_context119.prev = _context119.next) {
                      case 0:
                        _context119.t0 = s.isEqual(t);
                        if (_context119.t0) {
                          _context119.next = 5;
                          break;
                        }
                        _context119.next = 4;
                        return Uo(e.localStore, t);
                      case 4:
                        s = t;
                      case 5:
                      case "end":
                        return _context119.stop();
                    }
                  }
                }, _callee118);
              }));
              return function (_x148) {
                return _ref78.apply(this, arguments);
              };
            }()),
            // When a user calls clearPersistence() in one client, all other clients
            // need to be terminated to allow the delete to succeed.
            e.persistence.setDatabaseDeletedListener(function () {
              return t.terminate();
            }), t.offlineComponents = e;
          case 8:
          case "end":
            return _context120.stop();
        }
      }
    }, _callee119);
  }));
  return _Oa.apply(this, arguments);
}
function index_esm2017_Ma(_x123, _x124) {
  return _Ma.apply(this, arguments);
}
function _Ma() {
  _Ma = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee120(t, e) {
    var n, s;
    return _regeneratorRuntime().wrap(function _callee120$(_context121) {
      while (1) {
        switch (_context121.prev = _context121.next) {
          case 0:
            t.asyncQueue.verifyOperationInProgress();
            _context121.next = 3;
            return index_esm2017_Fa(t);
          case 3:
            n = _context121.sent;
            index_esm2017_C("FirestoreClient", "Initializing OnlineComponentProvider");
            _context121.next = 7;
            return t.getConfiguration();
          case 7:
            s = _context121.sent;
            _context121.next = 10;
            return e.initialize(n, s);
          case 10:
            // The CredentialChangeListener of the online component provider takes
            // precedence over the offline component provider.
            t.setCredentialChangeListener(function (t) {
              return Xu(e.remoteStore, t);
            });
            t.setAppCheckTokenChangeListener(function (t, n) {
              return Xu(e.remoteStore, n);
            });
            t.onlineComponents = e;
          case 13:
          case "end":
            return _context121.stop();
        }
      }
    }, _callee120);
  }));
  return _Ma.apply(this, arguments);
}
function index_esm2017_Fa(_x125) {
  return _Fa.apply(this, arguments);
}
function _Fa() {
  _Fa = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee121(t) {
    return _regeneratorRuntime().wrap(function _callee121$(_context122) {
      while (1) {
        switch (_context122.prev = _context122.next) {
          case 0:
            _context122.t0 = t.offlineComponents;
            if (_context122.t0) {
              _context122.next = 5;
              break;
            }
            index_esm2017_C("FirestoreClient", "Using default OfflineComponentProvider");
            _context122.next = 5;
            return index_esm2017_Oa(t, new index_esm2017_sa());
          case 5:
            return _context122.abrupt("return", t.offlineComponents);
          case 6:
          case "end":
            return _context122.stop();
        }
      }
    }, _callee121);
  }));
  return _Fa.apply(this, arguments);
}
function index_esm2017_$a(_x126) {
  return _$a.apply(this, arguments);
}
function _$a() {
  _$a = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee122(t) {
    return _regeneratorRuntime().wrap(function _callee122$(_context123) {
      while (1) {
        switch (_context123.prev = _context123.next) {
          case 0:
            _context123.t0 = t.onlineComponents;
            if (_context123.t0) {
              _context123.next = 5;
              break;
            }
            index_esm2017_C("FirestoreClient", "Using default OnlineComponentProvider");
            _context123.next = 5;
            return index_esm2017_Ma(t, new index_esm2017_oa());
          case 5:
            return _context123.abrupt("return", t.onlineComponents);
          case 6:
          case "end":
            return _context123.stop();
        }
      }
    }, _callee122);
  }));
  return _$a.apply(this, arguments);
}
function index_esm2017_Ba(t) {
  return index_esm2017_Fa(t).then(function (t) {
    return t.persistence;
  });
}
function index_esm2017_La(t) {
  return index_esm2017_Fa(t).then(function (t) {
    return t.localStore;
  });
}
function index_esm2017_qa(t) {
  return index_esm2017_$a(t).then(function (t) {
    return t.remoteStore;
  });
}
function index_esm2017_Ua(t) {
  return index_esm2017_$a(t).then(function (t) {
    return t.syncEngine;
  });
}
function index_esm2017_Ka(t) {
  return index_esm2017_$a(t).then(function (t) {
    return t.datastore;
  });
}
function index_esm2017_Ga(_x127) {
  return _Ga.apply(this, arguments);
}
/** Enables the network connection and re-enqueues all pending operations. */
function _Ga() {
  _Ga = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee123(t) {
    var e, n;
    return _regeneratorRuntime().wrap(function _callee123$(_context124) {
      while (1) {
        switch (_context124.prev = _context124.next) {
          case 0:
            _context124.next = 2;
            return index_esm2017_$a(t);
          case 2:
            e = _context124.sent;
            n = e.eventManager;
            return _context124.abrupt("return", (n.onListen = index_esm2017_bc.bind(null, e.syncEngine), n.onUnlisten = index_esm2017_vc.bind(null, e.syncEngine), n));
          case 5:
          case "end":
            return _context124.stop();
        }
      }
    }, _callee123);
  }));
  return _Ga.apply(this, arguments);
}
function index_esm2017_Qa(t) {
  return t.asyncQueue.enqueue( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee49() {
    var e, n;
    return _regeneratorRuntime().wrap(function _callee49$(_context49) {
      while (1) {
        switch (_context49.prev = _context49.next) {
          case 0:
            _context49.next = 2;
            return index_esm2017_Ba(t);
          case 2:
            e = _context49.sent;
            _context49.next = 5;
            return index_esm2017_qa(t);
          case 5:
            n = _context49.sent;
            return _context49.abrupt("return", (e.setNetworkEnabled(!0), function (t) {
              var e = $(t);
              return e._u.delete(0 /* OfflineCause.UserDisabled */), Vu(e);
            }(n)));
          case 7:
          case "end":
            return _context49.stop();
        }
      }
    }, _callee49);
  })));
}

/** Disables the network connection. Pending operations will not complete. */
function index_esm2017_ja(t) {
  return t.asyncQueue.enqueue( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee51() {
    var e, n;
    return _regeneratorRuntime().wrap(function _callee51$(_context51) {
      while (1) {
        switch (_context51.prev = _context51.next) {
          case 0:
            _context51.next = 2;
            return index_esm2017_Ba(t);
          case 2:
            e = _context51.sent;
            _context51.next = 5;
            return index_esm2017_qa(t);
          case 5:
            n = _context51.sent;
            return _context51.abrupt("return", (e.setNetworkEnabled(!1), function () {
              var _ref49 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee50(t) {
                var e;
                return _regeneratorRuntime().wrap(function _callee50$(_context50) {
                  while (1) {
                    switch (_context50.prev = _context50.next) {
                      case 0:
                        e = $(t);
                        e._u.add(0 /* OfflineCause.UserDisabled */);
                        _context50.next = 4;
                        return Su(e);
                      case 4:
                        // Set the OnlineState to Offline so get()s return from cache, etc.
                        e.gu.set("Offline" /* OnlineState.Offline */);
                      case 5:
                      case "end":
                        return _context50.stop();
                    }
                  }
                }, _callee50);
              }));
              return function (_x128) {
                return _ref49.apply(this, arguments);
              };
            }()(n)));
          case 7:
          case "end":
            return _context51.stop();
        }
      }
    }, _callee51);
  })));
}

/**
 * Returns a Promise that resolves when all writes that were pending at the time
 * this method was called received server acknowledgement. An acknowledgement
 * can be either acceptance or rejection.
 */
function index_esm2017_Wa(t, e) {
  var n = new index_esm2017_q();
  return t.asyncQueue.enqueueAndForget( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee53() {
    return _regeneratorRuntime().wrap(function _callee53$(_context53) {
      while (1) {
        switch (_context53.prev = _context53.next) {
          case 0:
            _context53.t0 = function () {
              var _ref51 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee52(t, e, n) {
                var s, _s29;
                return _regeneratorRuntime().wrap(function _callee52$(_context52) {
                  while (1) {
                    switch (_context52.prev = _context52.next) {
                      case 0:
                        _context52.prev = 0;
                        _context52.next = 3;
                        return function (t, e) {
                          var n = $(t);
                          return n.persistence.runTransaction("read document", "readonly", function (t) {
                            return n.localDocuments.getDocument(t, e);
                          });
                        }(t, e);
                      case 3:
                        s = _context52.sent;
                        s.isFoundDocument() ? n.resolve(s) : s.isNoDocument() ? n.resolve(null) : n.reject(new index_esm2017_L(index_esm2017_B.UNAVAILABLE, "Failed to get document from cache. (However, this document may exist on the server. Run again without setting 'source' in the GetOptions to attempt to retrieve the document from the server.)"));
                        _context52.next = 11;
                        break;
                      case 7:
                        _context52.prev = 7;
                        _context52.t0 = _context52["catch"](0);
                        _s29 = index_esm2017_sc(_context52.t0, "Failed to get document '".concat(e, " from cache"));
                        n.reject(_s29);
                      case 11:
                      case "end":
                        return _context52.stop();
                    }
                  }
                }, _callee52, null, [[0, 7]]);
              }));
              return function (_x129, _x130, _x131) {
                return _ref51.apply(this, arguments);
              };
            }()
            /**
            * Retrieves a latency-compensated document from the backend via a
            * SnapshotListener.
            */
            ;
            _context53.next = 3;
            return index_esm2017_La(t);
          case 3:
            _context53.t1 = _context53.sent;
            _context53.t2 = e;
            _context53.t3 = n;
            return _context53.abrupt("return", (0, _context53.t0)(_context53.t1, _context53.t2, _context53.t3));
          case 7:
          case "end":
            return _context53.stop();
        }
      }
    }, _callee53);
  }))), n.promise;
}
function index_esm2017_za(t, e) {
  var n = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
  var s = new index_esm2017_q();
  return t.asyncQueue.enqueueAndForget( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee54() {
    return _regeneratorRuntime().wrap(function _callee54$(_context54) {
      while (1) {
        switch (_context54.prev = _context54.next) {
          case 0:
            _context54.t0 = function (t, e, n, s, i) {
              var r = new index_esm2017_va({
                  next: function next(r) {
                    // Remove query first before passing event to user to avoid
                    // user actions affecting the now stale query.
                    e.enqueueAndForget(function () {
                      return index_esm2017_hc(t, o);
                    });
                    var u = r.docs.has(n);
                    !u && r.fromCache ?
                    // TODO(dimond): If we're online and the document doesn't
                    // exist then we resolve with a doc.exists set to false. If
                    // we're offline however, we reject the Promise in this
                    // case. Two options: 1) Cache the negative response from
                    // the server so we can deliver that even when you're
                    // offline 2) Actually reject the Promise in the online case
                    // if the document doesn't exist.
                    i.reject(new index_esm2017_L(index_esm2017_B.UNAVAILABLE, "Failed to get document because the client is offline.")) : u && r.fromCache && s && "server" === s.source ? i.reject(new index_esm2017_L(index_esm2017_B.UNAVAILABLE, 'Failed to get document from server. (However, this document does exist in the local cache. Run again without setting source to "server" to retrieve the cached document.)')) : i.resolve(r);
                  },
                  error: function error(t) {
                    return i.reject(t);
                  }
                }),
                o = new _c(ln(n.path), r, {
                  includeMetadataChanges: !0,
                  Nu: !0
                });
              return index_esm2017_ac(t, o);
            };
            _context54.next = 3;
            return index_esm2017_Ga(t);
          case 3:
            _context54.t1 = _context54.sent;
            _context54.t2 = t.asyncQueue;
            _context54.t3 = e;
            _context54.t4 = n;
            _context54.t5 = s;
            return _context54.abrupt("return", (0, _context54.t0)(_context54.t1, _context54.t2, _context54.t3, _context54.t4, _context54.t5));
          case 9:
          case "end":
            return _context54.stop();
        }
      }
    }, _callee54);
  }))), s.promise;
}
function index_esm2017_Ha(t, e) {
  var n = new index_esm2017_q();
  return t.asyncQueue.enqueueAndForget( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee56() {
    return _regeneratorRuntime().wrap(function _callee56$(_context56) {
      while (1) {
        switch (_context56.prev = _context56.next) {
          case 0:
            _context56.t0 = function () {
              var _ref54 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee55(t, e, n) {
                var s, i, r, o, _s30;
                return _regeneratorRuntime().wrap(function _callee55$(_context55) {
                  while (1) {
                    switch (_context55.prev = _context55.next) {
                      case 0:
                        _context55.prev = 0;
                        _context55.next = 3;
                        return Jo(t, e, /* usePreviousResults= */!0);
                      case 3:
                        s = _context55.sent;
                        i = new index_esm2017_Tc(e, s.Hi);
                        r = i.Wu(s.documents);
                        o = i.applyChanges(r, /* updateLimboDocuments= */!1);
                        n.resolve(o.snapshot);
                        _context55.next = 14;
                        break;
                      case 10:
                        _context55.prev = 10;
                        _context55.t0 = _context55["catch"](0);
                        _s30 = index_esm2017_sc(_context55.t0, "Failed to execute query '".concat(e, " against cache"));
                        n.reject(_s30);
                      case 14:
                      case "end":
                        return _context55.stop();
                    }
                  }
                }, _callee55, null, [[0, 10]]);
              }));
              return function (_x132, _x133, _x134) {
                return _ref54.apply(this, arguments);
              };
            }()
            /**
            * Retrieves a latency-compensated query snapshot from the backend via a
            * SnapshotListener.
            */
            ;
            _context56.next = 3;
            return index_esm2017_La(t);
          case 3:
            _context56.t1 = _context56.sent;
            _context56.t2 = e;
            _context56.t3 = n;
            return _context56.abrupt("return", (0, _context56.t0)(_context56.t1, _context56.t2, _context56.t3));
          case 7:
          case "end":
            return _context56.stop();
        }
      }
    }, _callee56);
  }))), n.promise;
}
function index_esm2017_Ja(t, e) {
  var n = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
  var s = new index_esm2017_q();
  return t.asyncQueue.enqueueAndForget( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee57() {
    return _regeneratorRuntime().wrap(function _callee57$(_context57) {
      while (1) {
        switch (_context57.prev = _context57.next) {
          case 0:
            _context57.t0 = function (t, e, n, s, i) {
              var r = new index_esm2017_va({
                  next: function next(n) {
                    // Remove query first before passing event to user to avoid
                    // user actions affecting the now stale query.
                    e.enqueueAndForget(function () {
                      return index_esm2017_hc(t, o);
                    }), n.fromCache && "server" === s.source ? i.reject(new index_esm2017_L(index_esm2017_B.UNAVAILABLE, 'Failed to get documents from server. (However, these documents may exist in the local cache. Run again without setting source to "server" to retrieve the cached documents.)')) : i.resolve(n);
                  },
                  error: function error(t) {
                    return i.reject(t);
                  }
                }),
                o = new _c(n, r, {
                  includeMetadataChanges: !0,
                  Nu: !0
                });
              return index_esm2017_ac(t, o);
            };
            _context57.next = 3;
            return index_esm2017_Ga(t);
          case 3:
            _context57.t1 = _context57.sent;
            _context57.t2 = t.asyncQueue;
            _context57.t3 = e;
            _context57.t4 = n;
            _context57.t5 = s;
            return _context57.abrupt("return", (0, _context57.t0)(_context57.t1, _context57.t2, _context57.t3, _context57.t4, _context57.t5));
          case 9:
          case "end":
            return _context57.stop();
        }
      }
    }, _callee57);
  }))), s.promise;
}
function index_esm2017_Ya(t, e) {
  var n = new index_esm2017_va(e);
  return t.asyncQueue.enqueueAndForget( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee58() {
    return _regeneratorRuntime().wrap(function _callee58$(_context58) {
      while (1) {
        switch (_context58.prev = _context58.next) {
          case 0:
            _context58.t0 = function (t, e) {
              $(t).Ru.add(e),
              // Immediately fire an initial event, indicating all existing listeners
              // are in-sync.
              e.next();
            };
            _context58.next = 3;
            return index_esm2017_Ga(t);
          case 3:
            _context58.t1 = _context58.sent;
            _context58.t2 = n;
            return _context58.abrupt("return", (0, _context58.t0)(_context58.t1, _context58.t2));
          case 6:
          case "end":
            return _context58.stop();
        }
      }
    }, _callee58);
  }))), function () {
    n.bc(), t.asyncQueue.enqueueAndForget( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee59() {
      return _regeneratorRuntime().wrap(function _callee59$(_context59) {
        while (1) {
          switch (_context59.prev = _context59.next) {
            case 0:
              _context59.t0 = function (t, e) {
                $(t).Ru.delete(e);
              };
              _context59.next = 3;
              return index_esm2017_Ga(t);
            case 3:
              _context59.t1 = _context59.sent;
              _context59.t2 = n;
              return _context59.abrupt("return", (0, _context59.t0)(_context59.t1, _context59.t2));
            case 6:
            case "end":
              return _context59.stop();
          }
        }
      }, _callee59);
    })));
  };
}

/**
 * Takes an updateFunction in which a set of reads and writes can be performed
 * atomically. In the updateFunction, the client can read and write values
 * using the supplied transaction object. After the updateFunction, all
 * changes will be committed. If a retryable error occurs (ex: some other
 * client has changed any of the data referenced), then the updateFunction
 * will be called again after a backoff. If the updateFunction still fails
 * after all retries, then the transaction will be rejected.
 *
 * The transaction object passed to the updateFunction contains methods for
 * accessing documents and collections. Unlike other datastore access, data
 * accessed with the transaction will not reflect local changes that have not
 * been committed. For this reason, it is required that all reads are
 * performed before any writes. Transactions must be performed while online.
 */
function index_esm2017_Xa(t, e, n, s) {
  var i = function (t, e) {
    var n;
    n = "string" == typeof t ? new TextEncoder().encode(t) : t;
    return function (t, e) {
      return new index_esm2017_Va(t, e);
    }(function (t, e) {
      if (t instanceof Uint8Array) return index_esm2017_Pa(t, e);
      if (t instanceof ArrayBuffer) return index_esm2017_Pa(new Uint8Array(t), e);
      if (t instanceof ReadableStream) return t.getReader();
      throw new Error("Source of `toByteStreamReader` has to be a ArrayBuffer or ReadableStream");
    }(n), e);
  }
  /**
  * @license
  * Copyright 2020 Google LLC
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
  * you may not use this file except in compliance with the License.
  * You may obtain a copy of the License at
  *
  *   http://www.apache.org/licenses/LICENSE-2.0
  *
  * Unless required by applicable law or agreed to in writing, software
  * distributed under the License is distributed on an "AS IS" BASIS,
  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  * See the License for the specific language governing permissions and
  * limitations under the License.
  */(n, pu(e));
  t.asyncQueue.enqueueAndForget( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee60() {
    return _regeneratorRuntime().wrap(function _callee60$(_context60) {
      while (1) {
        switch (_context60.prev = _context60.next) {
          case 0:
            _context60.t0 = index_esm2017_na;
            _context60.next = 3;
            return index_esm2017_Ua(t);
          case 3:
            _context60.t1 = _context60.sent;
            _context60.t2 = i;
            _context60.t3 = s;
            (0, _context60.t0)(_context60.t1, _context60.t2, _context60.t3);
          case 7:
          case "end":
            return _context60.stop();
        }
      }
    }, _callee60);
  })));
}
function Za(t, e) {
  return t.asyncQueue.enqueue( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee61() {
    return _regeneratorRuntime().wrap(function _callee61$(_context61) {
      while (1) {
        switch (_context61.prev = _context61.next) {
          case 0:
            _context61.t0 = function (t, e) {
              var n = $(t);
              return n.persistence.runTransaction("Get named query", "readonly", function (t) {
                return n.Ns.getNamedQuery(t, e);
              });
            };
            _context61.next = 3;
            return index_esm2017_La(t);
          case 3:
            _context61.t1 = _context61.sent;
            _context61.t2 = e;
            return _context61.abrupt("return", (0, _context61.t0)(_context61.t1, _context61.t2));
          case 6:
          case "end":
            return _context61.stop();
        }
      }
    }, _callee61);
  })));
}
var th = /*#__PURE__*/function () {
  function th() {
    var _this192 = this;
    classCallCheck_classCallCheck(this, th);
    // The last promise in the queue.
    this.Bc = Promise.resolve(),
    // A list of retryable operations. Retryable operations are run in order and
    // retried with backoff.
    this.Lc = [],
    // Is this AsyncQueue being shut down? Once it is set to true, it will not
    // be changed again.
    this.qc = !1,
    // Operations scheduled to be queued in the future. Operations are
    // automatically removed after they are run or canceled.
    this.Uc = [],
    // visible for testing
    this.Kc = null,
    // Flag set while there's an outstanding AsyncQueue operation, used for
    // assertion sanity-checks.
    this.Gc = !1,
    // Enabled during shutdown on Safari to prevent future access to IndexedDB.
    this.Qc = !1,
    // List of TimerIds to fast-forward delays for.
    this.jc = [],
    // Backoff timer used to schedule retries for retryable operations
    this.xo = new Iu(this, "async_queue_retry" /* TimerId.AsyncQueueRetry */),
    // Visibility handler that triggers an immediate retry of all retryable
    // operations. Meant to speed up recovery when we regain file system access
    // after page comes into foreground.
    this.Wc = function () {
      var t = yu();
      t && index_esm2017_C("AsyncQueue", "Visibility state changed to " + t.visibilityState), _this192.xo.Po();
    };
    var t = yu();
    t && "function" == typeof t.addEventListener && t.addEventListener("visibilitychange", this.Wc);
  }
  createClass_createClass(th, [{
    key: "isShuttingDown",
    get: function get() {
      return this.qc;
    }
    /**
     * Adds a new operation to the queue without waiting for it to complete (i.e.
     * we ignore the Promise result).
     */
  }, {
    key: "enqueueAndForget",
    value: function enqueueAndForget(t) {
      // eslint-disable-next-line @typescript-eslint/no-floating-promises
      this.enqueue(t);
    }
  }, {
    key: "enqueueAndForgetEvenWhileRestricted",
    value: function enqueueAndForgetEvenWhileRestricted(t) {
      this.zc(),
      // eslint-disable-next-line @typescript-eslint/no-floating-promises
      this.Hc(t);
    }
  }, {
    key: "enterRestrictedMode",
    value: function enterRestrictedMode(t) {
      if (!this.qc) {
        this.qc = !0, this.Qc = t || !1;
        var e = yu();
        e && "function" == typeof e.removeEventListener && e.removeEventListener("visibilitychange", this.Wc);
      }
    }
  }, {
    key: "enqueue",
    value: function enqueue(t) {
      var _this193 = this;
      if (this.zc(), this.qc)
        // Return a Promise which never resolves.
        return new Promise(function () {});
      // Create a deferred Promise that we can return to the callee. This
      // allows us to return a "hanging Promise" only to the callee and still
      // advance the queue even when the operation is not run.
      var e = new index_esm2017_q();
      return this.Hc(function () {
        return _this193.qc && _this193.Qc ? Promise.resolve() : (t().then(e.resolve, e.reject), e.promise);
      }).then(function () {
        return e.promise;
      });
    }
  }, {
    key: "enqueueRetryable",
    value: function enqueueRetryable(t) {
      var _this194 = this;
      this.enqueueAndForget(function () {
        return _this194.Lc.push(t), _this194.Jc();
      });
    }
    /**
     * Runs the next operation from the retryable queue. If the operation fails,
     * reschedules with backoff.
     */
  }, {
    key: "Jc",
    value: function () {
      var _Jc = asyncToGenerator_asyncToGenerator( /*#__PURE__*/regeneratorRuntime_regeneratorRuntime().mark(function _callee62() {
        var _this195 = this;
        return regeneratorRuntime_regeneratorRuntime().wrap(function _callee62$(_context62) {
          while (1) {
            switch (_context62.prev = _context62.next) {
              case 0:
                if (!(0 !== this.Lc.length)) {
                  _context62.next = 14;
                  break;
                }
                _context62.prev = 1;
                _context62.next = 4;
                return this.Lc[0]();
              case 4:
                this.Lc.shift();
                this.xo.reset();
                _context62.next = 13;
                break;
              case 8:
                _context62.prev = 8;
                _context62.t0 = _context62["catch"](1);
                if (Vt(_context62.t0)) {
                  _context62.next = 12;
                  break;
                }
                throw _context62.t0;
              case 12:
                // Failure will be handled by AsyncQueue
                index_esm2017_C("AsyncQueue", "Operation failed with retryable error: " + _context62.t0);
              case 13:
                this.Lc.length > 0 &&
                // If there are additional operations, we re-schedule `retryNextOp()`.
                // This is necessary to run retryable operations that failed during
                // their initial attempt since we don't know whether they are already
                // enqueued. If, for example, `op1`, `op2`, `op3` are enqueued and `op1`
                // needs to  be re-run, we will run `op1`, `op1`, `op2` using the
                // already enqueued calls to `retryNextOp()`. `op3()` will then run in the
                // call scheduled here.
                // Since `backoffAndRun()` cancels an existing backoff and schedules a
                // new backoff on every call, there is only ever a single additional
                // operation in the queue.
                this.xo.Ro(function () {
                  return _this195.Jc();
                });
              case 14:
              case "end":
                return _context62.stop();
            }
          }
        }, _callee62, this, [[1, 8]]);
      }));
      function Jc() {
        return _Jc.apply(this, arguments);
      }
      return Jc;
    }()
  }, {
    key: "Hc",
    value: function Hc(t) {
      var _this196 = this;
      var e = this.Bc.then(function () {
        return _this196.Gc = !0, t().catch(function (t) {
          _this196.Kc = t, _this196.Gc = !1;
          var e =
          /**
          * Chrome includes Error.message in Error.stack. Other browsers do not.
          * This returns expected output of message + stack when available.
          * @param error - Error or FirestoreError
          */
          function (t) {
            var e = t.message || "";
            t.stack && (e = t.stack.includes(t.message) ? t.stack : t.message + "\n" + t.stack);
            return e;
          }
          /**
          * @license
          * Copyright 2017 Google LLC
          *
          * Licensed under the Apache License, Version 2.0 (the "License");
          * you may not use this file except in compliance with the License.
          * You may obtain a copy of the License at
          *
          *   http://www.apache.org/licenses/LICENSE-2.0
          *
          * Unless required by applicable law or agreed to in writing, software
          * distributed under the License is distributed on an "AS IS" BASIS,
          * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
          * See the License for the specific language governing permissions and
          * limitations under the License.
          */(t);
          // Re-throw the error so that this.tail becomes a rejected Promise and
          // all further attempts to chain (via .then) will just short-circuit
          // and return the rejected Promise.
          throw index_esm2017_x("INTERNAL UNHANDLED ERROR: ", e), t;
        }).then(function (t) {
          return _this196.Gc = !1, t;
        });
      });
      return this.Bc = e, e;
    }
  }, {
    key: "enqueueAfterDelay",
    value: function enqueueAfterDelay(t, e, n) {
      var _this197 = this;
      this.zc(),
      // Fast-forward delays for timerIds that have been overriden.
      this.jc.indexOf(t) > -1 && (e = 0);
      var s = index_esm2017_nc.createAndSchedule(this, t, e, n, function (t) {
        return _this197.Yc(t);
      });
      return this.Uc.push(s), s;
    }
  }, {
    key: "zc",
    value: function zc() {
      this.Kc && index_esm2017_O();
    }
  }, {
    key: "verifyOperationInProgress",
    value: function verifyOperationInProgress() {}
    /**
     * Waits until all currently queued tasks are finished executing. Delayed
     * operations are not run.
     */
  }, {
    key: "Xc",
    value: function () {
      var _Xc2 = asyncToGenerator_asyncToGenerator( /*#__PURE__*/regeneratorRuntime_regeneratorRuntime().mark(function _callee63() {
        var t;
        return regeneratorRuntime_regeneratorRuntime().wrap(function _callee63$(_context63) {
          while (1) {
            switch (_context63.prev = _context63.next) {
              case 0:
                t = this.Bc;
                _context63.next = 3;
                return t;
              case 3:
                if (t !== this.Bc) {
                  _context63.next = 0;
                  break;
                }
              case 4:
              case "end":
                return _context63.stop();
            }
          }
        }, _callee63, this);
      }));
      function Xc() {
        return _Xc2.apply(this, arguments);
      }
      return Xc;
    }()
    /**
     * For Tests: Determine if a delayed operation with a particular TimerId
     * exists.
     */
  }, {
    key: "Zc",
    value: function Zc(t) {
      var _iterator76 = createForOfIteratorHelper_createForOfIteratorHelper(this.Uc),
        _step76;
      try {
        for (_iterator76.s(); !(_step76 = _iterator76.n()).done;) {
          var e = _step76.value;
          if (e.timerId === t) return !0;
        }
      } catch (err) {
        _iterator76.e(err);
      } finally {
        _iterator76.f();
      }
      return !1;
    }
    /**
     * For Tests: Runs some or all delayed operations early.
     *
     * @param lastTimerId - Delayed operations up to and including this TimerId
     * will be drained. Pass TimerId.All to run all delayed operations.
     * @returns a Promise that resolves once all operations have been run.
     */
  }, {
    key: "ta",
    value: function ta(t) {
      var _this198 = this;
      // Note that draining may generate more delayed ops, so we do that first.
      return this.Xc().then(function () {
        // Run ops in the same order they'd run if they ran naturally.
        _this198.Uc.sort(function (t, e) {
          return t.targetTimeMs - e.targetTimeMs;
        });
        var _iterator77 = createForOfIteratorHelper_createForOfIteratorHelper(_this198.Uc),
          _step77;
        try {
          for (_iterator77.s(); !(_step77 = _iterator77.n()).done;) {
            var e = _step77.value;
            if (e.skipDelay(), "all" /* TimerId.All */ !== t && e.timerId === t) break;
          }
        } catch (err) {
          _iterator77.e(err);
        } finally {
          _iterator77.f();
        }
        return _this198.Xc();
      });
    }
    /**
     * For Tests: Skip all subsequent delays for a timer id.
     */
  }, {
    key: "ea",
    value: function ea(t) {
      this.jc.push(t);
    }
    /** Called once a DelayedOperation is run or canceled. */
  }, {
    key: "Yc",
    value: function Yc(t) {
      // NOTE: indexOf / slice are O(n), but delayedOperations is expected to be small.
      var e = this.Uc.indexOf(t);
      this.Uc.splice(e, 1);
    }
  }]);
  return th;
}();
function eh(t) {
  /**
  * Returns true if obj is an object and contains at least one of the specified
  * methods.
  */
  return function (t, e) {
    if ("object" != typeof t || null === t) return !1;
    var n = t;
    var _iterator78 = _createForOfIteratorHelper(e),
      _step78;
    try {
      for (_iterator78.s(); !(_step78 = _iterator78.n()).done;) {
        var _t104 = _step78.value;
        if (_t104 in n && "function" == typeof n[_t104]) return !0;
      }
    } catch (err) {
      _iterator78.e(err);
    } finally {
      _iterator78.f();
    }
    return !1;
  }
  /**
  * @license
  * Copyright 2020 Google LLC
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
  * you may not use this file except in compliance with the License.
  * You may obtain a copy of the License at
  *
  *   http://www.apache.org/licenses/LICENSE-2.0
  *
  * Unless required by applicable law or agreed to in writing, software
  * distributed under the License is distributed on an "AS IS" BASIS,
  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  * See the License for the specific language governing permissions and
  * limitations under the License.
  */
  /**
  * Represents the task of loading a Firestore bundle. It provides progress of bundle
  * loading, as well as task completion and error events.
  *
  * The API is compatible with `Promise<LoadBundleTaskProgress>`.
  */(t, ["next", "error", "complete"]);
}
var nh = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  function nh() {
    _classCallCheck(this, nh);
    this._progressObserver = {}, this._taskCompletionResolver = new index_esm2017_q(), this._lastProgress = {
      taskState: "Running",
      totalBytes: 0,
      totalDocuments: 0,
      bytesLoaded: 0,
      documentsLoaded: 0
    };
  }
  /**
   * Registers functions to listen to bundle loading progress events.
   * @param next - Called when there is a progress update from bundle loading. Typically `next` calls occur
   *   each time a Firestore document is loaded from the bundle.
   * @param error - Called when an error occurs during bundle loading. The task aborts after reporting the
   *   error, and there should be no more updates after this.
   * @param complete - Called when the loading task is complete.
   */
  _createClass(nh, [{
    key: "onProgress",
    value: function onProgress(t, e, n) {
      this._progressObserver = {
        next: t,
        error: e,
        complete: n
      };
    }
    /**
     * Implements the `Promise<LoadBundleTaskProgress>.catch` interface.
     *
     * @param onRejected - Called when an error occurs during bundle loading.
     */
  }, {
    key: "catch",
    value: function _catch(t) {
      return this._taskCompletionResolver.promise.catch(t);
    }
    /**
     * Implements the `Promise<LoadBundleTaskProgress>.then` interface.
     *
     * @param onFulfilled - Called on the completion of the loading task with a final `LoadBundleTaskProgress` update.
     *   The update will always have its `taskState` set to `"Success"`.
     * @param onRejected - Called when an error occurs during bundle loading.
     */
  }, {
    key: "then",
    value: function then(t, e) {
      return this._taskCompletionResolver.promise.then(t, e);
    }
    /**
     * Notifies all observers that bundle loading has completed, with a provided
     * `LoadBundleTaskProgress` object.
     *
     * @private
     */
  }, {
    key: "_completeWith",
    value: function _completeWith(t) {
      this._updateProgress(t), this._progressObserver.complete && this._progressObserver.complete(), this._taskCompletionResolver.resolve(t);
    }
    /**
     * Notifies all observers that bundle loading has failed, with a provided
     * `Error` as the reason.
     *
     * @private
     */
  }, {
    key: "_failWith",
    value: function _failWith(t) {
      this._lastProgress.taskState = "Error", this._progressObserver.next && this._progressObserver.next(this._lastProgress), this._progressObserver.error && this._progressObserver.error(t), this._taskCompletionResolver.reject(t);
    }
    /**
     * Notifies a progress update of loading a bundle.
     * @param progress - The new progress.
     *
     * @private
     */
  }, {
    key: "_updateProgress",
    value: function _updateProgress(t) {
      this._lastProgress = t, this._progressObserver.next && this._progressObserver.next(t);
    }
  }]);
  return nh;
}()));
/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/** DOMException error code constants. */
var sh = (/* unused pure expression or super */ null && (-1));

/**
 * The Cloud Firestore service interface.
 *
 * Do not call this constructor directly. Instead, use {@link (getFirestore:1)}.
 */
var ih = /*#__PURE__*/function (_ma) {
  inherits_inherits(ih, _ma);
  var _super33 = createSuper_createSuper(ih);
  /** @hideconstructor */
  function ih(t, e, n, s) {
    var _this199;
    classCallCheck_classCallCheck(this, ih);
    _this199 = _super33.call(this, t, e, n, s),
    /**
     * Whether it's a {@link Firestore} or Firestore Lite instance.
     */
    _this199.type = "firestore", _this199._queue = new th(), _this199._persistenceKey = (null == s ? void 0 : s.name) || "[DEFAULT]";
    return _this199;
  }
  createClass_createClass(ih, [{
    key: "_terminate",
    value: function _terminate() {
      return this._firestoreClient ||
      // The client must be initialized to ensure that all subsequent API
      // usage throws an exception.
      ch(this), this._firestoreClient.terminate();
    }
  }]);
  return ih;
}(index_esm2017_ma);
/**
 * Initializes a new instance of {@link Firestore} with the provided settings.
 * Can only be called before any other function, including
 * {@link (getFirestore:1)}. If the custom settings are empty, this function is
 * equivalent to calling {@link (getFirestore:1)}.
 *
 * @param app - The {@link @firebase/app#FirebaseApp} with which the {@link Firestore} instance will
 * be associated.
 * @param settings - A settings object to configure the {@link Firestore} instance.
 * @param databaseId - The name of database.
 * @returns A newly initialized {@link Firestore} instance.
 */
function rh(t, e, n) {
  n || (n = "(default)");
  var s = _getProvider(t, "firestore");
  if (s.isInitialized(n)) {
    var _t105 = s.getImmediate({
        identifier: n
      }),
      i = s.getOptions(n);
    if (deepEqual(i, e)) return _t105;
    throw new index_esm2017_L(index_esm2017_B.FAILED_PRECONDITION, "initializeFirestore() has already been called with different options. To avoid this error, call initializeFirestore() with the same options as when it was originally called, or call getFirestore() to return the already initialized instance.");
  }
  if (void 0 !== e.cacheSizeBytes && -1 !== e.cacheSizeBytes && e.cacheSizeBytes < 1048576) throw new index_esm2017_L(index_esm2017_B.INVALID_ARGUMENT, "cacheSizeBytes must be at least 1048576");
  return s.initialize({
    options: e,
    instanceIdentifier: n
  });
}
function oh(e, n) {
  var s = "object" == typeof e ? e : index_esm2017_getApp(),
    i = "string" == typeof e ? e : n || "(default)",
    r = index_esm2017_getProvider(s, "firestore").getImmediate({
      identifier: i
    });
  if (!r._initialized) {
    var t = getDefaultEmulatorHostnameAndPort("firestore");
    t && ga.apply(void 0, [r].concat((0,toConsumableArray/* default */.Z)(t)));
  }
  return r;
}

/**
 * @internal
 */
function uh(t) {
  return t._firestoreClient || ch(t), t._firestoreClient.verifyNotTerminated(), t._firestoreClient;
}
function ch(t) {
  var e;
  var n = t._freezeSettings(),
    s = function (t, e, n, s) {
      return new Mt(t, e, n, s.host, s.ssl, s.experimentalForceLongPolling, s.experimentalAutoDetectLongPolling, s.useFetchStreams);
    }
    /**
    * @license
    * Copyright 2020 Google LLC
    *
    * Licensed under the Apache License, Version 2.0 (the "License");
    * you may not use this file except in compliance with the License.
    * You may obtain a copy of the License at
    *
    *   http://www.apache.org/licenses/LICENSE-2.0
    *
    * Unless required by applicable law or agreed to in writing, software
    * distributed under the License is distributed on an "AS IS" BASIS,
    * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    * See the License for the specific language governing permissions and
    * limitations under the License.
    */
    // settings() defaults:
    (t._databaseId, (null === (e = t._app) || void 0 === e ? void 0 : e.options.appId) || "", t._persistenceKey, n);
  t._firestoreClient = new ka(t._authCredentials, t._appCheckCredentials, t._queue, s);
}

/**
 * Attempts to enable persistent storage, if possible.
 *
 * Must be called before any other functions (other than
 * {@link initializeFirestore}, {@link (getFirestore:1)} or
 * {@link clearIndexedDbPersistence}.
 *
 * If this fails, `enableIndexedDbPersistence()` will reject the promise it
 * returns. Note that even after this failure, the {@link Firestore} instance will
 * remain usable, however offline persistence will be disabled.
 *
 * There are several reasons why this can fail, which can be identified by
 * the `code` on the error.
 *
 *   * failed-precondition: The app is already open in another browser tab.
 *   * unimplemented: The browser is incompatible with the offline
 *     persistence implementation.
 *
 * @param firestore - The {@link Firestore} instance to enable persistence for.
 * @param persistenceSettings - Optional settings object to configure
 * persistence.
 * @returns A `Promise` that represents successfully enabling persistent storage.
 */
function ah(t, e) {
  ph(t = index_esm2017_fa(t, ih));
  var n = uh(t),
    s = t._freezeSettings(),
    i = new index_esm2017_oa();
  return lh(n, i, new index_esm2017_ia(i, s.cacheSizeBytes, null == e ? void 0 : e.forceOwnership));
}

/**
 * Attempts to enable multi-tab persistent storage, if possible. If enabled
 * across all tabs, all operations share access to local persistence, including
 * shared execution of queries and latency-compensated local document updates
 * across all connected instances.
 *
 * If this fails, `enableMultiTabIndexedDbPersistence()` will reject the promise
 * it returns. Note that even after this failure, the {@link Firestore} instance will
 * remain usable, however offline persistence will be disabled.
 *
 * There are several reasons why this can fail, which can be identified by
 * the `code` on the error.
 *
 *   * failed-precondition: The app is already open in another browser tab and
 *     multi-tab is not enabled.
 *   * unimplemented: The browser is incompatible with the offline
 *     persistence implementation.
 *
 * @param firestore - The {@link Firestore} instance to enable persistence for.
 * @returns A `Promise` that represents successfully enabling persistent
 * storage.
 */
function hh(t) {
  ph(t = index_esm2017_fa(t, ih));
  var e = uh(t),
    n = t._freezeSettings(),
    s = new index_esm2017_oa();
  return lh(e, s, new index_esm2017_ra(s, n.cacheSizeBytes));
}

/**
 * Registers both the `OfflineComponentProvider` and `OnlineComponentProvider`.
 * If the operation fails with a recoverable error (see
 * `canRecoverFromIndexedDbError()` below), the returned Promise is rejected
 * but the client remains usable.
 */
function lh(t, e, n) {
  var s = new index_esm2017_q();
  return t.asyncQueue.enqueue( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee64() {
    var _e49;
    return _regeneratorRuntime().wrap(function _callee64$(_context64) {
      while (1) {
        switch (_context64.prev = _context64.next) {
          case 0:
            _context64.prev = 0;
            _context64.next = 3;
            return index_esm2017_Oa(t, n);
          case 3:
            _context64.next = 5;
            return index_esm2017_Ma(t, e);
          case 5:
            s.resolve();
            _context64.next = 14;
            break;
          case 8:
            _context64.prev = 8;
            _context64.t0 = _context64["catch"](0);
            _e49 = _context64.t0;
            if (
            /**
            * Decides whether the provided error allows us to gracefully disable
            * persistence (as opposed to crashing the client).
            */
            function (t) {
              if ("FirebaseError" === t.name) return t.code === index_esm2017_B.FAILED_PRECONDITION || t.code === index_esm2017_B.UNIMPLEMENTED;
              if ("undefined" != typeof DOMException && t instanceof DOMException)
                // There are a few known circumstances where we can open IndexedDb but
                // trying to read/write will fail (e.g. quota exceeded). For
                // well-understood cases, we attempt to detect these and then gracefully
                // fall back to memory persistence.
                // NOTE: Rather than continue to add to this list, we could decide to
                // always fall back, with the risk that we might accidentally hide errors
                // representing actual SDK bugs.
                // When the browser is out of quota we could get either quota exceeded
                // or an aborted error depending on whether the error happened during
                // schema migration.
                return 22 === t.code || 20 === t.code ||
                // Firefox Private Browsing mode disables IndexedDb and returns
                // INVALID_STATE for any usage.
                11 === t.code;
              return !0;
            }
            /**
            * Clears the persistent storage. This includes pending writes and cached
            * documents.
            *
            * Must be called while the {@link Firestore} instance is not started (after the app is
            * terminated or when the app is first initialized). On startup, this function
            * must be called before other functions (other than {@link
            * initializeFirestore} or {@link (getFirestore:1)})). If the {@link Firestore}
            * instance is still running, the promise will be rejected with the error code
            * of `failed-precondition`.
            *
            * Note: `clearIndexedDbPersistence()` is primarily intended to help write
            * reliable tests that use Cloud Firestore. It uses an efficient mechanism for
            * dropping existing data but does not attempt to securely overwrite or
            * otherwise make cached data unrecoverable. For applications that are sensitive
            * to the disclosure of cached data in between user sessions, we strongly
            * recommend not enabling persistence at all.
            *
            * @param firestore - The {@link Firestore} instance to clear persistence for.
            * @returns A `Promise` that is resolved when the persistent storage is
            * cleared. Otherwise, the promise is rejected with an error.
            */(_e49)) {
              _context64.next = 13;
              break;
            }
            throw _e49;
          case 13:
            index_esm2017_N("Error enabling offline persistence. Falling back to persistence disabled: " + _e49), s.reject(_e49);
          case 14:
          case "end":
            return _context64.stop();
        }
      }
    }, _callee64, null, [[0, 8]]);
  }))).then(function () {
    return s.promise;
  });
}
function fh(t) {
  if (t._initialized && !t._terminated) throw new index_esm2017_L(index_esm2017_B.FAILED_PRECONDITION, "Persistence can only be cleared before a Firestore instance is initialized or after it is terminated.");
  var e = new index_esm2017_q();
  return t._queue.enqueueAndForgetEvenWhileRestricted( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee66() {
    return _regeneratorRuntime().wrap(function _callee66$(_context66) {
      while (1) {
        switch (_context66.prev = _context66.next) {
          case 0:
            _context66.prev = 0;
            _context66.next = 3;
            return function () {
              var _ref62 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee65(t) {
                var e;
                return _regeneratorRuntime().wrap(function _callee65$(_context65) {
                  while (1) {
                    switch (_context65.prev = _context65.next) {
                      case 0:
                        if (bt.C()) {
                          _context65.next = 2;
                          break;
                        }
                        return _context65.abrupt("return", Promise.resolve());
                      case 2:
                        e = t + "main";
                        _context65.next = 5;
                        return bt.delete(e);
                      case 5:
                      case "end":
                        return _context65.stop();
                    }
                  }
                }, _callee65);
              }));
              return function (_x135) {
                return _ref62.apply(this, arguments);
              };
            }()
            /**
            * @license
            * Copyright 2017 Google LLC
            *
            * Licensed under the Apache License, Version 2.0 (the "License");
            * you may not use this file except in compliance with the License.
            * You may obtain a copy of the License at
            *
            *   http://www.apache.org/licenses/LICENSE-2.0
            *
            * Unless required by applicable law or agreed to in writing, software
            * distributed under the License is distributed on an "AS IS" BASIS,
            * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
            * See the License for the specific language governing permissions and
            * limitations under the License.
            */
            /**
            * Compares two array for equality using comparator. The method computes the
            * intersection and invokes `onAdd` for every element that is in `after` but not
            * `before`. `onRemove` is invoked for every element in `before` but missing
            * from `after`.
            *
            * The method creates a copy of both `before` and `after` and runs in O(n log
            * n), where n is the size of the two lists.
            *
            * @param before - The elements that exist in the original array.
            * @param after - The elements to diff against the original array.
            * @param comparator - The comparator for the elements in before and after.
            * @param onAdd - A function to invoke for every element that is part of `
            * after` but not `before`.
            * @param onRemove - A function to invoke for every element that is part of
            * `before` but not `after`.
            */
            (Fo(t._databaseId, t._persistenceKey));
          case 3:
            e.resolve();
            _context66.next = 9;
            break;
          case 6:
            _context66.prev = 6;
            _context66.t0 = _context66["catch"](0);
            e.reject(_context66.t0);
          case 9:
          case "end":
            return _context66.stop();
        }
      }
    }, _callee66, null, [[0, 6]]);
  }))), e.promise;
}

/**
 * Waits until all currently pending writes for the active user have been
 * acknowledged by the backend.
 *
 * The returned promise resolves immediately if there are no outstanding writes.
 * Otherwise, the promise waits for all previously issued writes (including
 * those written in a previous app session), but it does not wait for writes
 * that were added after the function is called. If you want to wait for
 * additional writes, call `waitForPendingWrites()` again.
 *
 * Any outstanding `waitForPendingWrites()` promises are rejected during user
 * changes.
 *
 * @returns A `Promise` which resolves when all currently pending writes have been
 * acknowledged by the backend.
 */
function dh(t) {
  return function (t) {
    var e = new index_esm2017_q();
    return t.asyncQueue.enqueueAndForget( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee67() {
      return _regeneratorRuntime().wrap(function _callee67$(_context67) {
        while (1) {
          switch (_context67.prev = _context67.next) {
            case 0:
              _context67.t0 = index_esm2017_kc;
              _context67.next = 3;
              return index_esm2017_Ua(t);
            case 3:
              _context67.t1 = _context67.sent;
              _context67.t2 = e;
              return _context67.abrupt("return", (0, _context67.t0)(_context67.t1, _context67.t2));
            case 6:
            case "end":
              return _context67.stop();
          }
        }
      }, _callee67);
    }))), e.promise;
  }(uh(t = index_esm2017_fa(t, ih)));
}

/**
 * Re-enables use of the network for this {@link Firestore} instance after a prior
 * call to {@link disableNetwork}.
 *
 * @returns A `Promise` that is resolved once the network has been enabled.
 */
function _h(t) {
  return index_esm2017_Qa(uh(t = index_esm2017_fa(t, ih)));
}

/**
 * Disables network usage for this instance. It can be re-enabled via {@link
 * enableNetwork}. While the network is disabled, any snapshot listeners,
 * `getDoc()` or `getDocs()` calls will return results from cache, and any write
 * operations will be queued until the network is restored.
 *
 * @returns A `Promise` that is resolved once the network has been disabled.
 */
function wh(t) {
  return index_esm2017_ja(uh(t = index_esm2017_fa(t, ih)));
}

/**
 * Terminates the provided {@link Firestore} instance.
 *
 * After calling `terminate()` only the `clearIndexedDbPersistence()` function
 * may be used. Any other function will throw a `FirestoreError`.
 *
 * To restart after termination, create a new instance of FirebaseFirestore with
 * {@link (getFirestore:1)}.
 *
 * Termination does not cancel any pending writes, and any promises that are
 * awaiting a response from the server will not be resolved. If you have
 * persistence enabled, the next time you start this instance, it will resume
 * sending these writes to the server.
 *
 * Note: Under normal circumstances, calling `terminate()` is not required. This
 * function is useful only when you want to force this instance to release all
 * of its resources or in combination with `clearIndexedDbPersistence()` to
 * ensure that all local state is destroyed between test runs.
 *
 * @returns A `Promise` that is resolved when the instance has been successfully
 * terminated.
 */
function mh(t) {
  return _removeServiceInstance(t.app, "firestore", t._databaseId.database), t._delete();
}

/**
 * Loads a Firestore bundle into the local cache.
 *
 * @param firestore - The {@link Firestore} instance to load bundles for.
 * @param bundleData - An object representing the bundle to be loaded. Valid
 * objects are `ArrayBuffer`, `ReadableStream<Uint8Array>` or `string`.
 *
 * @returns A `LoadBundleTask` object, which notifies callers with progress
 * updates, and completion or error events. It can be used as a
 * `Promise<LoadBundleTaskProgress>`.
 */
function gh(t, e) {
  var n = uh(t = index_esm2017_fa(t, ih)),
    s = new nh();
  return index_esm2017_Xa(n, t._databaseId, e, s), s;
}

/**
 * Reads a Firestore {@link Query} from local cache, identified by the given
 * name.
 *
 * The named queries are packaged  into bundles on the server side (along
 * with resulting documents), and loaded to local cache using `loadBundle`. Once
 * in local cache, use this method to extract a {@link Query} by name.
 *
 * @param firestore - The {@link Firestore} instance to read the query from.
 * @param name - The name of the query.
 * @returns A `Promise` that is resolved with the Query or `null`.
 */
function yh(t, e) {
  return Za(uh(t = index_esm2017_fa(t, ih)), e).then(function (e) {
    return e ? new index_esm2017_pa(t, null, e.query) : null;
  });
}
function ph(t) {
  if (t._initialized || t._terminated) throw new index_esm2017_L(index_esm2017_B.FAILED_PRECONDITION, "Firestore has already been started and persistence can no longer be enabled. You can only enable persistence before calling any other methods on a Firestore object.");
}

/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * An immutable object representing an array of bytes.
 */
var Ih = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  /** @hideconstructor */
  function Ih(t) {
    _classCallCheck(this, Ih);
    this._byteString = t;
  }
  /**
   * Creates a new `Bytes` object from the given Base64 string, converting it to
   * bytes.
   *
   * @param base64 - The Base64 string used to create the `Bytes` object.
   */
  _createClass(Ih, [{
    key: "toBase64",
    value:
    /**
     * Returns the underlying bytes as a Base64-encoded string.
     *
     * @returns The Base64-encoded string created from the `Bytes` object.
     */
    function toBase64() {
      return this._byteString.toBase64();
    }
    /**
     * Returns the underlying bytes in a new `Uint8Array`.
     *
     * @returns The Uint8Array created from the `Bytes` object.
     */
  }, {
    key: "toUint8Array",
    value: function toUint8Array() {
      return this._byteString.toUint8Array();
    }
    /**
     * Returns a string representation of the `Bytes` object.
     *
     * @returns A string representation of the `Bytes` object.
     */
  }, {
    key: "toString",
    value: function toString() {
      return "Bytes(base64: " + this.toBase64() + ")";
    }
    /**
     * Returns true if this `Bytes` object is equal to the provided one.
     *
     * @param other - The `Bytes` object to compare against.
     * @returns true if this `Bytes` object is equal to the provided one.
     */
  }, {
    key: "isEqual",
    value: function isEqual(t) {
      return this._byteString.isEqual(t._byteString);
    }
  }], [{
    key: "fromBase64String",
    value: function fromBase64String(t) {
      try {
        return new Ih(Qt.fromBase64String(t));
      } catch (t) {
        throw new index_esm2017_L(index_esm2017_B.INVALID_ARGUMENT, "Failed to construct data from Base64 string: " + t);
      }
    }
    /**
     * Creates a new `Bytes` object from the given Uint8Array.
     *
     * @param array - The Uint8Array used to create the `Bytes` object.
     */
  }, {
    key: "fromUint8Array",
    value: function fromUint8Array(t) {
      return new Ih(Qt.fromUint8Array(t));
    }
  }]);
  return Ih;
}()));
/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * A `FieldPath` refers to a field in a document. The path may consist of a
 * single field name (referring to a top-level field in the document), or a
 * list of field names (referring to a nested field in the document).
 *
 * Create a `FieldPath` by providing field names. If more than one field
 * name is provided, the path will point to a nested field in a document.
 */
var Th = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  /**
   * Creates a `FieldPath` from the provided field names. If more than one field
   * name is provided, the path will point to a nested field in a document.
   *
   * @param fieldNames - A list of field names.
   */
  function Th() {
    _classCallCheck(this, Th);
    for (var _len9 = arguments.length, t = new Array(_len9), _key9 = 0; _key9 < _len9; _key9++) {
      t[_key9] = arguments[_key9];
    }
    for (var e = 0; e < t.length; ++e) {
      if (0 === t[e].length) throw new index_esm2017_L(index_esm2017_B.INVALID_ARGUMENT, "Invalid field name at argument $(i + 1). Field names must not be empty.");
    }
    this._internalPath = new ut(t);
  }
  /**
   * Returns true if this `FieldPath` is equal to the provided one.
   *
   * @param other - The `FieldPath` to compare against.
   * @returns true if this `FieldPath` is equal to the provided one.
   */
  _createClass(Th, [{
    key: "isEqual",
    value: function isEqual(t) {
      return this._internalPath.isEqual(t._internalPath);
    }
  }]);
  return Th;
}()));
/**
 * Returns a special sentinel `FieldPath` to refer to the ID of a document.
 * It can be used in queries to sort or filter by the document ID.
 */
function Eh() {
  return new Th("__name__");
}

/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * Sentinel values that can be used when writing document fields with `set()`
 * or `update()`.
 */
var Ah = /*#__PURE__*/(/* unused pure expression or super */ null && (_createClass(
/**
 * @param _methodName - The public API endpoint that returns this class.
 * @hideconstructor
 */
function Ah(t) {
  _classCallCheck(this, Ah);
  this._methodName = t;
})));
/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * An immutable object representing a geographic location in Firestore. The
 * location is represented as latitude/longitude pair.
 *
 * Latitude values are in the range of [-90, 90].
 * Longitude values are in the range of [-180, 180].
 */
var Rh = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  /**
   * Creates a new immutable `GeoPoint` object with the provided latitude and
   * longitude values.
   * @param latitude - The latitude as number between -90 and 90.
   * @param longitude - The longitude as number between -180 and 180.
   */
  function Rh(t, e) {
    _classCallCheck(this, Rh);
    if (!isFinite(t) || t < -90 || t > 90) throw new index_esm2017_L(index_esm2017_B.INVALID_ARGUMENT, "Latitude must be a number between -90 and 90, but was: " + t);
    if (!isFinite(e) || e < -180 || e > 180) throw new index_esm2017_L(index_esm2017_B.INVALID_ARGUMENT, "Longitude must be a number between -180 and 180, but was: " + e);
    this._lat = t, this._long = e;
  }
  /**
   * The latitude of this `GeoPoint` instance.
   */
  _createClass(Rh, [{
    key: "latitude",
    get: function get() {
      return this._lat;
    }
    /**
     * The longitude of this `GeoPoint` instance.
     */
  }, {
    key: "longitude",
    get: function get() {
      return this._long;
    }
    /**
     * Returns true if this `GeoPoint` is equal to the provided one.
     *
     * @param other - The `GeoPoint` to compare against.
     * @returns true if this `GeoPoint` is equal to the provided one.
     */
  }, {
    key: "isEqual",
    value: function isEqual(t) {
      return this._lat === t._lat && this._long === t._long;
    }
    /** Returns a JSON-serializable representation of this GeoPoint. */
  }, {
    key: "toJSON",
    value: function toJSON() {
      return {
        latitude: this._lat,
        longitude: this._long
      };
    }
    /**
     * Actually private to JS consumers of our API, so this function is prefixed
     * with an underscore.
     */
  }, {
    key: "_compareTo",
    value: function _compareTo(t) {
      return Z(this._lat, t._lat) || Z(this._long, t._long);
    }
  }]);
  return Rh;
}()));
/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
var bh = /^__.*__$/;

/** The result of parsing document data (e.g. for a setData call). */
var Ph = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  function Ph(t, e, n) {
    _classCallCheck(this, Ph);
    this.data = t, this.fieldMask = e, this.fieldTransforms = n;
  }
  _createClass(Ph, [{
    key: "toMutation",
    value: function toMutation(t, e) {
      return null !== this.fieldMask ? new ts(t, this.data, this.fieldMask, e, this.fieldTransforms) : new Zn(t, this.data, e, this.fieldTransforms);
    }
  }]);
  return Ph;
}()));
/** The result of parsing "update" data (i.e. for an updateData call). */
var vh = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  function vh(t,
  // The fieldMask does not include document transforms.
  e, n) {
    _classCallCheck(this, vh);
    this.data = t, this.fieldMask = e, this.fieldTransforms = n;
  }
  _createClass(vh, [{
    key: "toMutation",
    value: function toMutation(t, e) {
      return new ts(t, this.data, this.fieldMask, e, this.fieldTransforms);
    }
  }]);
  return vh;
}()));
function Vh(t) {
  switch (t) {
    case 0 /* UserDataSource.Set */:
    // fall through
    case 2 /* UserDataSource.MergeSet */:
    // fall through
    case 1 /* UserDataSource.Update */:
      return !0;
    case 3 /* UserDataSource.Argument */:
    case 4 /* UserDataSource.ArrayArgument */:
      return !1;
    default:
      throw index_esm2017_O();
  }
}

/** A "context" object passed around while parsing user data. */
var Sh = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  /**
   * Initializes a ParseContext with the given source and path.
   *
   * @param settings - The settings for the parser.
   * @param databaseId - The database ID of the Firestore instance.
   * @param serializer - The serializer to use to generate the Value proto.
   * @param ignoreUndefinedProperties - Whether to ignore undefined properties
   * rather than throw.
   * @param fieldTransforms - A mutable list of field transforms encountered
   * while parsing the data.
   * @param fieldMask - A mutable list of field paths encountered while parsing
   * the data.
   *
   * TODO(b/34871131): We don't support array paths right now, so path can be
   * null to indicate the context represents any location within an array (in
   * which case certain features will not work and errors will be somewhat
   * compromised).
   */
  function Sh(t, e, n, s, i, r) {
    _classCallCheck(this, Sh);
    this.settings = t, this.databaseId = e, this.yt = n, this.ignoreUndefinedProperties = s,
    // Minor hack: If fieldTransforms is undefined, we assume this is an
    // external call and we need to validate the entire path.
    void 0 === i && this.na(), this.fieldTransforms = i || [], this.fieldMask = r || [];
  }
  _createClass(Sh, [{
    key: "path",
    get: function get() {
      return this.settings.path;
    }
  }, {
    key: "sa",
    get: function get() {
      return this.settings.sa;
    }
    /** Returns a new context with the specified settings overwritten. */
  }, {
    key: "ia",
    value: function ia(t) {
      return new Sh(Object.assign(Object.assign({}, this.settings), t), this.databaseId, this.yt, this.ignoreUndefinedProperties, this.fieldTransforms, this.fieldMask);
    }
  }, {
    key: "ra",
    value: function ra(t) {
      var e;
      var n = null === (e = this.path) || void 0 === e ? void 0 : e.child(t),
        s = this.ia({
          path: n,
          oa: !1
        });
      return s.ua(t), s;
    }
  }, {
    key: "ca",
    value: function ca(t) {
      var e;
      var n = null === (e = this.path) || void 0 === e ? void 0 : e.child(t),
        s = this.ia({
          path: n,
          oa: !1
        });
      return s.na(), s;
    }
  }, {
    key: "aa",
    value: function aa(t) {
      // TODO(b/34871131): We don't support array paths right now; so make path
      // undefined.
      return this.ia({
        path: void 0,
        oa: !0
      });
    }
  }, {
    key: "ha",
    value: function ha(t) {
      return Hh(t, this.settings.methodName, this.settings.la || !1, this.path, this.settings.fa);
    }
    /** Returns 'true' if 'fieldPath' was traversed when creating this context. */
  }, {
    key: "contains",
    value: function contains(t) {
      return void 0 !== this.fieldMask.find(function (e) {
        return t.isPrefixOf(e);
      }) || void 0 !== this.fieldTransforms.find(function (e) {
        return t.isPrefixOf(e.field);
      });
    }
  }, {
    key: "na",
    value: function na() {
      // TODO(b/34871131): Remove null check once we have proper paths for fields
      // within arrays.
      if (this.path) for (var t = 0; t < this.path.length; t++) {
        this.ua(this.path.get(t));
      }
    }
  }, {
    key: "ua",
    value: function ua(t) {
      if (0 === t.length) throw this.ha("Document fields must not be empty");
      if (Vh(this.sa) && bh.test(t)) throw this.ha('Document fields cannot begin and end with "__"');
    }
  }]);
  return Sh;
}()));
/**
 * Helper for parsing raw user input (provided via the API) into internal model
 * classes.
 */
var Dh = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  function Dh(t, e, n) {
    _classCallCheck(this, Dh);
    this.databaseId = t, this.ignoreUndefinedProperties = e, this.yt = n || pu(t);
  }
  /** Creates a new top-level parse context. */
  _createClass(Dh, [{
    key: "da",
    value: function da(t, e, n) {
      var s = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : !1;
      return new Sh({
        sa: t,
        methodName: e,
        fa: n,
        path: ut.emptyPath(),
        oa: !1,
        la: s
      }, this.databaseId, this.yt, this.ignoreUndefinedProperties);
    }
  }]);
  return Dh;
}()));
function Ch(t) {
  var e = t._freezeSettings(),
    n = pu(t._databaseId);
  return new Dh(t._databaseId, !!e.ignoreUndefinedProperties, n);
}

/** Parse document data from a set() call. */
function xh(t, e, n, s, i) {
  var r = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : {};
  var o = t.da(r.merge || r.mergeFields ? 2 /* UserDataSource.MergeSet */ : 0 /* UserDataSource.Set */, e, n, i);
  Qh("Data must be an object, but it was:", o, s);
  var u = Kh(s, o);
  var c, a;
  if (r.merge) c = new Je(o.fieldMask), a = o.fieldTransforms;else if (r.mergeFields) {
    var _t106 = [];
    var _iterator79 = _createForOfIteratorHelper(r.mergeFields),
      _step79;
    try {
      for (_iterator79.s(); !(_step79 = _iterator79.n()).done;) {
        var _s31 = _step79.value;
        var _i16 = jh(e, _s31, n);
        if (!o.contains(_i16)) throw new index_esm2017_L(index_esm2017_B.INVALID_ARGUMENT, "Field '".concat(_i16, "' is specified in your field mask but missing from your input data."));
        Jh(_t106, _i16) || _t106.push(_i16);
      }
    } catch (err) {
      _iterator79.e(err);
    } finally {
      _iterator79.f();
    }
    c = new Je(_t106), a = o.fieldTransforms.filter(function (t) {
      return c.covers(t.field);
    });
  } else c = null, a = o.fieldTransforms;
  return new Ph(new Ye(u), c, a);
}
var Nh = /*#__PURE__*/(/* unused pure expression or super */ null && (function (_Ah) {
  _inherits(Nh, _Ah);
  var _super34 = _createSuper(Nh);
  function Nh() {
    _classCallCheck(this, Nh);
    return _super34.apply(this, arguments);
  }
  _createClass(Nh, [{
    key: "_toFieldTransform",
    value: function _toFieldTransform(t) {
      if (2 /* UserDataSource.MergeSet */ !== t.sa) throw 1 /* UserDataSource.Update */ === t.sa ? t.ha("".concat(this._methodName, "() can only appear at the top level of your update data")) : t.ha("".concat(this._methodName, "() cannot be used with set() unless you pass {merge:true}"));
      // No transform to add for a delete, but we need to add it to our
      // fieldMask so it gets deleted.
      return t.fieldMask.push(t.path), null;
    }
  }, {
    key: "isEqual",
    value: function isEqual(t) {
      return t instanceof Nh;
    }
  }]);
  return Nh;
}(Ah)));
/**
 * Creates a child context for parsing SerializableFieldValues.
 *
 * This is different than calling `ParseContext.contextWith` because it keeps
 * the fieldTransforms and fieldMask separate.
 *
 * The created context has its `dataSource` set to `UserDataSource.Argument`.
 * Although these values are used with writes, any elements in these FieldValues
 * are not considered writes since they cannot contain any FieldValue sentinels,
 * etc.
 *
 * @param fieldValue - The sentinel FieldValue for which to create a child
 *     context.
 * @param context - The parent context.
 * @param arrayElement - Whether or not the FieldValue has an array.
 */
function kh(t, e, n) {
  return new Sh({
    sa: 3 /* UserDataSource.Argument */,
    fa: e.settings.fa,
    methodName: t._methodName,
    oa: n
  }, e.databaseId, e.yt, e.ignoreUndefinedProperties);
}
var Oh = /*#__PURE__*/(/* unused pure expression or super */ null && (function (_Ah2) {
  _inherits(Oh, _Ah2);
  var _super35 = _createSuper(Oh);
  function Oh() {
    _classCallCheck(this, Oh);
    return _super35.apply(this, arguments);
  }
  _createClass(Oh, [{
    key: "_toFieldTransform",
    value: function _toFieldTransform(t) {
      return new Un(t.path, new kn());
    }
  }, {
    key: "isEqual",
    value: function isEqual(t) {
      return t instanceof Oh;
    }
  }]);
  return Oh;
}(Ah)));
var Mh = /*#__PURE__*/(/* unused pure expression or super */ null && (function (_Ah3) {
  _inherits(Mh, _Ah3);
  var _super36 = _createSuper(Mh);
  function Mh(t, e) {
    var _this200;
    _classCallCheck(this, Mh);
    _this200 = _super36.call(this, t), _this200._a = e;
    return _this200;
  }
  _createClass(Mh, [{
    key: "_toFieldTransform",
    value: function _toFieldTransform(t) {
      var e = kh(this, t, /*array=*/!0),
        n = this._a.map(function (t) {
          return Uh(t, e);
        }),
        s = new On(n);
      return new Un(t.path, s);
    }
  }, {
    key: "isEqual",
    value: function isEqual(t) {
      // TODO(mrschmidt): Implement isEquals
      return this === t;
    }
  }]);
  return Mh;
}(Ah)));
var Fh = /*#__PURE__*/(/* unused pure expression or super */ null && (function (_Ah4) {
  _inherits(Fh, _Ah4);
  var _super37 = _createSuper(Fh);
  function Fh(t, e) {
    var _this201;
    _classCallCheck(this, Fh);
    _this201 = _super37.call(this, t), _this201._a = e;
    return _this201;
  }
  _createClass(Fh, [{
    key: "_toFieldTransform",
    value: function _toFieldTransform(t) {
      var e = kh(this, t, /*array=*/!0),
        n = this._a.map(function (t) {
          return Uh(t, e);
        }),
        s = new Fn(n);
      return new Un(t.path, s);
    }
  }, {
    key: "isEqual",
    value: function isEqual(t) {
      // TODO(mrschmidt): Implement isEquals
      return this === t;
    }
  }]);
  return Fh;
}(Ah)));
var $h = /*#__PURE__*/(/* unused pure expression or super */ null && (function (_Ah5) {
  _inherits($h, _Ah5);
  var _super38 = _createSuper($h);
  function $h(t, e) {
    var _this202;
    _classCallCheck(this, $h);
    _this202 = _super38.call(this, t), _this202.wa = e;
    return _this202;
  }
  _createClass($h, [{
    key: "_toFieldTransform",
    value: function _toFieldTransform(t) {
      var e = new Bn(t.yt, Sn(t.yt, this.wa));
      return new Un(t.path, e);
    }
  }, {
    key: "isEqual",
    value: function isEqual(t) {
      // TODO(mrschmidt): Implement isEquals
      return this === t;
    }
  }]);
  return $h;
}(Ah)));
/** Parse update data from an update() call. */
function Bh(t, e, n, s) {
  var i = t.da(1 /* UserDataSource.Update */, e, n);
  Qh("Data must be an object, but it was:", i, s);
  var r = [],
    o = Ye.empty();
  Bt(s, function (t, s) {
    var u = zh(e, t, n);
    // For Compat types, we have to "extract" the underlying types before
    // performing validation.
    s = getModularInstance(s);
    var c = i.ca(u);
    if (s instanceof Nh)
      // Add it to the field mask, but don't add anything to updateData.
      r.push(u);else {
      var _t107 = Uh(s, c);
      null != _t107 && (r.push(u), o.set(u, _t107));
    }
  });
  var u = new Je(r);
  return new vh(o, u, i.fieldTransforms);
}

/** Parse update data from a list of field/value arguments. */
function Lh(t, e, n, s, i, r) {
  var o = t.da(1 /* UserDataSource.Update */, e, n),
    u = [jh(e, s, n)],
    c = [i];
  if (r.length % 2 != 0) throw new index_esm2017_L(index_esm2017_B.INVALID_ARGUMENT, "Function ".concat(e, "() needs to be called with an even number of arguments that alternate between field names and values."));
  for (var _t108 = 0; _t108 < r.length; _t108 += 2) {
    u.push(jh(e, r[_t108])), c.push(r[_t108 + 1]);
  }
  var a = [],
    h = Ye.empty();
  // We iterate in reverse order to pick the last value for a field if the
  // user specified the field multiple times.
  for (var _t109 = u.length - 1; _t109 >= 0; --_t109) {
    if (!Jh(a, u[_t109])) {
      var _e50 = u[_t109];
      var _n33 = c[_t109];
      // For Compat types, we have to "extract" the underlying types before
      // performing validation.
      _n33 = getModularInstance(_n33);
      var _s32 = o.ca(_e50);
      if (_n33 instanceof Nh)
        // Add it to the field mask, but don't add anything to updateData.
        a.push(_e50);else {
        var _t110 = Uh(_n33, _s32);
        null != _t110 && (a.push(_e50), h.set(_e50, _t110));
      }
    }
  }
  var l = new Je(a);
  return new vh(h, l, o.fieldTransforms);
}

/**
 * Parse a "query value" (e.g. value in a where filter or a value in a cursor
 * bound).
 *
 * @param allowArrays - Whether the query value is an array that may directly
 * contain additional arrays (e.g. the operand of an `in` query).
 */
function qh(t, e, n) {
  var s = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : !1;
  return Uh(n, t.da(s ? 4 /* UserDataSource.ArrayArgument */ : 3 /* UserDataSource.Argument */, e));
}

/**
 * Parses user data to Protobuf Values.
 *
 * @param input - Data to be parsed.
 * @param context - A context object representing the current path being parsed,
 * the source of the data being parsed, etc.
 * @returns The parsed value, or null if the value was a FieldValue sentinel
 * that should not be included in the resulting parsed data.
 */
function Uh(t, e) {
  if (Gh(
  // Unwrap the API type from the Compat SDK. This will return the API type
  // from firestore-exp.
  t = getModularInstance(t))) return Qh("Unsupported field value:", e, t), Kh(t, e);
  if (t instanceof Ah)
    // FieldValues usually parse into transforms (except deleteField())
    // in which case we do not want to include this field in our parsed data
    // (as doing so will overwrite the field directly prior to the transform
    // trying to transform it). So we don't add this location to
    // context.fieldMask and we return null as our parsing result.
    /**
    * "Parses" the provided FieldValueImpl, adding any necessary transforms to
    * context.fieldTransforms.
    */
    return function (t, e) {
      // Sentinels are only supported with writes, and not within arrays.
      if (!Vh(e.sa)) throw e.ha("".concat(t._methodName, "() can only be used with update() and set()"));
      if (!e.path) throw e.ha("".concat(t._methodName, "() is not currently supported inside arrays"));
      var n = t._toFieldTransform(e);
      n && e.fieldTransforms.push(n);
    }
    /**
    * Helper to parse a scalar value (i.e. not an Object, Array, or FieldValue)
    *
    * @returns The parsed value
    */(t, e), null;
  if (void 0 === t && e.ignoreUndefinedProperties)
    // If the input is undefined it can never participate in the fieldMask, so
    // don't handle this below. If `ignoreUndefinedProperties` is false,
    // `parseScalarValue` will reject an undefined value.
    return null;
  if (
  // If context.path is null we are inside an array and we don't support
  // field mask paths more granular than the top-level array.
  e.path && e.fieldMask.push(e.path), t instanceof Array) {
    // TODO(b/34871131): Include the path containing the array in the error
    // message.
    // In the case of IN queries, the parsed data is an array (representing
    // the set of values to be included for the IN query) that may directly
    // contain additional arrays (each representing an individual field
    // value), so we disable this validation.
    if (e.settings.oa && 4 /* UserDataSource.ArrayArgument */ !== e.sa) throw e.ha("Nested arrays are not supported");
    return function (t, e) {
      var n = [];
      var s = 0;
      var _iterator80 = _createForOfIteratorHelper(t),
        _step80;
      try {
        for (_iterator80.s(); !(_step80 = _iterator80.n()).done;) {
          var i = _step80.value;
          var _t111 = Uh(i, e.aa(s));
          null == _t111 && (
          // Just include nulls in the array for fields being replaced with a
          // sentinel.
          _t111 = {
            nullValue: "NULL_VALUE"
          }), n.push(_t111), s++;
        }
      } catch (err) {
        _iterator80.e(err);
      } finally {
        _iterator80.f();
      }
      return {
        arrayValue: {
          values: n
        }
      };
    }(t, e);
  }
  return function (t, e) {
    if (null === (t = getModularInstance(t))) return {
      nullValue: "NULL_VALUE"
    };
    if ("number" == typeof t) return Sn(e.yt, t);
    if ("boolean" == typeof t) return {
      booleanValue: t
    };
    if ("string" == typeof t) return {
      stringValue: t
    };
    if (t instanceof Date) {
      var n = nt.fromDate(t);
      return {
        timestampValue: $s(e.yt, n)
      };
    }
    if (t instanceof nt) {
      // Firestore backend truncates precision down to microseconds. To ensure
      // offline mode works the same with regards to truncation, perform the
      // truncation immediately without waiting for the backend to do that.
      var _n34 = new nt(t.seconds, 1e3 * Math.floor(t.nanoseconds / 1e3));
      return {
        timestampValue: $s(e.yt, _n34)
      };
    }
    if (t instanceof Rh) return {
      geoPointValue: {
        latitude: t.latitude,
        longitude: t.longitude
      }
    };
    if (t instanceof Ih) return {
      bytesValue: Bs(e.yt, t._byteString)
    };
    if (t instanceof index_esm2017_ya) {
      var _n35 = e.databaseId,
        s = t.firestore._databaseId;
      if (!s.isEqual(_n35)) throw e.ha("Document reference is for database ".concat(s.projectId, "/").concat(s.database, " but should be for database ").concat(_n35.projectId, "/").concat(_n35.database));
      return {
        referenceValue: Us(t.firestore._databaseId || e.databaseId, t._key.path)
      };
    }
    throw e.ha("Unsupported field value: ".concat(index_esm2017_la(t)));
  }
  /**
  * Checks whether an object looks like a JSON object that should be converted
  * into a struct. Normal class/prototype instances are considered to look like
  * JSON objects since they should be converted to a struct value. Arrays, Dates,
  * GeoPoints, etc. are not considered to look like JSON objects since they map
  * to specific FieldValue types other than ObjectValue.
  */(t, e);
}
function Kh(t, e) {
  var n = {};
  return Lt(t) ?
  // If we encounter an empty object, we explicitly add it to the update
  // mask to ensure that the server creates a map entry.
  e.path && e.path.length > 0 && e.fieldMask.push(e.path) : Bt(t, function (t, s) {
    var i = Uh(s, e.ra(t));
    null != i && (n[t] = i);
  }), {
    mapValue: {
      fields: n
    }
  };
}
function Gh(t) {
  return !("object" != typeof t || null === t || t instanceof Array || t instanceof Date || t instanceof nt || t instanceof Rh || t instanceof Ih || t instanceof index_esm2017_ya || t instanceof Ah);
}
function Qh(t, e, n) {
  if (!Gh(n) || !function (t) {
    return "object" == typeof t && null !== t && (Object.getPrototypeOf(t) === Object.prototype || null === Object.getPrototypeOf(t));
  }(n)) {
    var s = index_esm2017_la(n);
    throw "an object" === s ? e.ha(t + " a custom object") : e.ha(t + " " + s);
  }
}

/**
 * Helper that calls fromDotSeparatedString() but wraps any error thrown.
 */
function jh(t, e, n) {
  if ((
  // If required, replace the FieldPath Compat class with with the firestore-exp
  // FieldPath.
  e = getModularInstance(e)) instanceof Th) return e._internalPath;
  if ("string" == typeof e) return zh(t, e);
  throw Hh("Field path arguments must be of type string or ", t, /* hasConverter= */!1, /* path= */void 0, n);
}

/**
 * Matches any characters in a field path string that are reserved.
 */
var Wh = (/* unused pure expression or super */ null && (new RegExp("[~\\*/\\[\\]]")));

/**
 * Wraps fromDotSeparatedString with an error message about the method that
 * was thrown.
 * @param methodName - The publicly visible method name
 * @param path - The dot-separated string form of a field path which will be
 * split on dots.
 * @param targetDoc - The document against which the field path will be
 * evaluated.
 */
function zh(t, e, n) {
  if (e.search(Wh) >= 0) throw Hh("Invalid field path (".concat(e, "). Paths must not contain '~', '*', '/', '[', or ']'"), t, /* hasConverter= */!1, /* path= */void 0, n);
  try {
    return _construct(Th, _toConsumableArray(e.split(".")))._internalPath;
  } catch (s) {
    throw Hh("Invalid field path (".concat(e, "). Paths must not be empty, begin with '.', end with '.', or contain '..'"), t, /* hasConverter= */!1, /* path= */void 0, n);
  }
}
function Hh(t, e, n, s, i) {
  var r = s && !s.isEmpty(),
    o = void 0 !== i;
  var u = "Function ".concat(e, "() called with invalid data");
  n && (u += " (via `toFirestore()`)"), u += ". ";
  var c = "";
  return (r || o) && (c += " (found", r && (c += " in field ".concat(s)), o && (c += " in document ".concat(i)), c += ")"), new index_esm2017_L(index_esm2017_B.INVALID_ARGUMENT, u + t + c);
}

/** Checks `haystack` if FieldPath `needle` is present. Runs in O(n). */
function Jh(t, e) {
  return t.some(function (t) {
    return t.isEqual(e);
  });
}

/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * A `DocumentSnapshot` contains data read from a document in your Firestore
 * database. The data can be extracted with `.data()` or `.get(<field>)` to
 * get a specific field.
 *
 * For a `DocumentSnapshot` that points to a non-existing document, any data
 * access will return 'undefined'. You can use the `exists()` method to
 * explicitly verify a document's existence.
 */
var Yh = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  // Note: This class is stripped down version of the DocumentSnapshot in
  // the legacy SDK. The changes are:
  // - No support for SnapshotMetadata.
  // - No support for SnapshotOptions.
  /** @hideconstructor protected */
  function Yh(t, e, n, s, i) {
    _classCallCheck(this, Yh);
    this._firestore = t, this._userDataWriter = e, this._key = n, this._document = s, this._converter = i;
  }
  /** Property of the `DocumentSnapshot` that provides the document's ID. */
  _createClass(Yh, [{
    key: "id",
    get: function get() {
      return this._key.path.lastSegment();
    }
    /**
     * The `DocumentReference` for the document included in the `DocumentSnapshot`.
     */
  }, {
    key: "ref",
    get: function get() {
      return new index_esm2017_ya(this._firestore, this._converter, this._key);
    }
    /**
     * Signals whether or not the document at the snapshot's location exists.
     *
     * @returns true if the document exists.
     */
  }, {
    key: "exists",
    value: function exists() {
      return null !== this._document;
    }
    /**
     * Retrieves all fields in the document as an `Object`. Returns `undefined` if
     * the document doesn't exist.
     *
     * @returns An `Object` containing all fields in the document or `undefined`
     * if the document doesn't exist.
     */
  }, {
    key: "data",
    value: function data() {
      if (this._document) {
        if (this._converter) {
          // We only want to use the converter and create a new DocumentSnapshot
          // if a converter has been provided.
          var t = new Xh(this._firestore, this._userDataWriter, this._key, this._document, /* converter= */null);
          return this._converter.fromFirestore(t);
        }
        return this._userDataWriter.convertValue(this._document.data.value);
      }
    }
    /**
     * Retrieves the field specified by `fieldPath`. Returns `undefined` if the
     * document or field doesn't exist.
     *
     * @param fieldPath - The path (for example 'foo' or 'foo.bar') to a specific
     * field.
     * @returns The data at the specified field location or undefined if no such
     * field exists in the document.
     */
    // We are using `any` here to avoid an explicit cast by our users.
    // eslint-disable-next-line @typescript-eslint/no-explicit-any
  }, {
    key: "get",
    value: function get(t) {
      if (this._document) {
        var e = this._document.data.field(Zh("DocumentSnapshot.get", t));
        if (null !== e) return this._userDataWriter.convertValue(e);
      }
    }
  }]);
  return Yh;
}()));
/**
 * A `QueryDocumentSnapshot` contains data read from a document in your
 * Firestore database as part of a query. The document is guaranteed to exist
 * and its data can be extracted with `.data()` or `.get(<field>)` to get a
 * specific field.
 *
 * A `QueryDocumentSnapshot` offers the same API surface as a
 * `DocumentSnapshot`. Since query results contain only existing documents, the
 * `exists` property will always be true and `data()` will never return
 * 'undefined'.
 */
var Xh = /*#__PURE__*/(/* unused pure expression or super */ null && (function (_Yh) {
  _inherits(Xh, _Yh);
  var _super39 = _createSuper(Xh);
  function Xh() {
    _classCallCheck(this, Xh);
    return _super39.apply(this, arguments);
  }
  _createClass(Xh, [{
    key: "data",
    value:
    /**
     * Retrieves all fields in the document as an `Object`.
     *
     * @override
     * @returns An `Object` containing all fields in the document.
     */
    function data() {
      return _get(_getPrototypeOf(Xh.prototype), "data", this).call(this);
    }
  }]);
  return Xh;
}(Yh)));
/**
 * Helper that calls `fromDotSeparatedString()` but wraps any error thrown.
 */
function Zh(t, e) {
  return "string" == typeof e ? zh(t, e) : e instanceof Th ? e._internalPath : e._delegate._internalPath;
}

/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
function tl(t) {
  if ("L" /* LimitType.Last */ === t.limitType && 0 === t.explicitOrderBy.length) throw new index_esm2017_L(index_esm2017_B.UNIMPLEMENTED, "limitToLast() queries require specifying at least one orderBy() clause");
}

/**
 * An `AppliableConstraint` is an abstraction of a constraint that can be applied
 * to a Firestore query.
 */
var el = /*#__PURE__*/(/* unused pure expression or super */ null && (_createClass(function el() {
  _classCallCheck(this, el);
})));
/**
 * A `QueryConstraint` is used to narrow the set of documents returned by a
 * Firestore query. `QueryConstraint`s are created by invoking {@link where},
 * {@link orderBy}, {@link startAt}, {@link startAfter}, {@link
 * endBefore}, {@link endAt}, {@link limit}, {@link limitToLast} and
 * can then be passed to {@link query} to create a new query instance that
 * also contains this `QueryConstraint`.
 */
var nl = /*#__PURE__*/(/* unused pure expression or super */ null && (function (_el) {
  _inherits(nl, _el);
  var _super40 = _createSuper(nl);
  function nl() {
    _classCallCheck(this, nl);
    return _super40.apply(this, arguments);
  }
  return _createClass(nl);
}(el)));
function sl(t, e) {
  var s = [];
  for (var _len10 = arguments.length, n = new Array(_len10 > 2 ? _len10 - 2 : 0), _key10 = 2; _key10 < _len10; _key10++) {
    n[_key10 - 2] = arguments[_key10];
  }
  e instanceof el && s.push(e), s = s.concat(n), function (t) {
    var e = t.filter(function (t) {
        return t instanceof ol;
      }).length,
      n = t.filter(function (t) {
        return t instanceof il;
      }).length;
    if (e > 1 || e > 0 && n > 0) throw new index_esm2017_L(index_esm2017_B.INVALID_ARGUMENT, "InvalidQuery. When using composite filters, you cannot use more than one filter at the top level. Consider nesting the multiple filters within an `and(...)` statement. For example: change `query(query, where(...), or(...))` to `query(query, and(where(...), or(...)))`.");
  }
  /**
  * @license
  * Copyright 2020 Google LLC
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
  * you may not use this file except in compliance with the License.
  * You may obtain a copy of the License at
  *
  *   http://www.apache.org/licenses/LICENSE-2.0
  *
  * Unless required by applicable law or agreed to in writing, software
  * distributed under the License is distributed on an "AS IS" BASIS,
  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  * See the License for the specific language governing permissions and
  * limitations under the License.
  */
  /**
  * Converts Firestore's internal types to the JavaScript types that we expose
  * to the user.
  *
  * @internal
  */(s);
  var _iterator81 = _createForOfIteratorHelper(s),
    _step81;
  try {
    for (_iterator81.s(); !(_step81 = _iterator81.n()).done;) {
      var _e51 = _step81.value;
      t = _e51._apply(t);
    }
  } catch (err) {
    _iterator81.e(err);
  } finally {
    _iterator81.f();
  }
  return t;
}

/**
 * A `QueryFieldFilterConstraint` is used to narrow the set of documents returned by
 * a Firestore query by filtering on one or more document fields.
 * `QueryFieldFilterConstraint`s are created by invoking {@link where} and can then
 * be passed to {@link query} to create a new query instance that also contains
 * this `QueryFieldFilterConstraint`.
 */
var il = /*#__PURE__*/(/* unused pure expression or super */ null && (function (_nl) {
  _inherits(il, _nl);
  var _super41 = _createSuper(il);
  /**
   * @internal
   */
  function il(t, e, n) {
    var _this203;
    _classCallCheck(this, il);
    _this203 = _super41.call(this), _this203._field = t, _this203._op = e, _this203._value = n, /** The type of this query constraint */
    _this203.type = "where";
    return _this203;
  }
  _createClass(il, [{
    key: "_apply",
    value: function _apply(t) {
      var e = this._parse(t);
      return Al(t._query, e), new index_esm2017_pa(t.firestore, t.converter, yn(t._query, e));
    }
  }, {
    key: "_parse",
    value: function _parse(t) {
      var e = Ch(t.firestore),
        n = function (t, e, n, s, i, r, o) {
          var u;
          if (i.isKeyField()) {
            if ("array-contains" /* Operator.ARRAY_CONTAINS */ === r || "array-contains-any" /* Operator.ARRAY_CONTAINS_ANY */ === r) throw new index_esm2017_L(index_esm2017_B.INVALID_ARGUMENT, "Invalid Query. You can't perform '".concat(r, "' queries on documentId()."));
            if ("in" /* Operator.IN */ === r || "not-in" /* Operator.NOT_IN */ === r) {
              El(o, r);
              var _e52 = [];
              var _iterator82 = _createForOfIteratorHelper(o),
                _step82;
              try {
                for (_iterator82.s(); !(_step82 = _iterator82.n()).done;) {
                  var _n36 = _step82.value;
                  _e52.push(Tl(s, t, _n36));
                }
              } catch (err) {
                _iterator82.e(err);
              } finally {
                _iterator82.f();
              }
              u = {
                arrayValue: {
                  values: _e52
                }
              };
            } else u = Tl(s, t, o);
          } else "in" /* Operator.IN */ !== r && "not-in" /* Operator.NOT_IN */ !== r && "array-contains-any" /* Operator.ARRAY_CONTAINS_ANY */ !== r || El(o, r), u = qh(n, e, o, /* allowArrays= */"in" /* Operator.IN */ === r || "not-in" /* Operator.NOT_IN */ === r);
          return Re.create(i, r, u);
        }(t._query, "where", e, t.firestore._databaseId, this._field, this._op, this._value);
      return n;
    }
  }], [{
    key: "_create",
    value: function _create(t, e, n) {
      return new il(t, e, n);
    }
  }]);
  return il;
}(nl)));
/**
 * Creates a {@link QueryFieldFilterConstraint} that enforces that documents
 * must contain the specified field and that the value should satisfy the
 * relation constraint provided.
 *
 * @param fieldPath - The path to compare
 * @param opStr - The operation string (e.g "&lt;", "&lt;=", "==", "&lt;",
 *   "&lt;=", "!=").
 * @param value - The value for comparison
 * @returns The created {@link QueryFieldFilterConstraint}.
 */
function rl(t, e, n) {
  var s = e,
    i = Zh("where", t);
  return il._create(i, s, n);
}

/**
 * A `QueryCompositeFilterConstraint` is used to narrow the set of documents
 * returned by a Firestore query by performing the logical OR or AND of multiple
 * {@link QueryFieldFilterConstraint}s or {@link QueryCompositeFilterConstraint}s.
 * `QueryCompositeFilterConstraint`s are created by invoking {@link or} or
 * {@link and} and can then be passed to {@link query} to create a new query
 * instance that also contains the `QueryCompositeFilterConstraint`.
 * @internal TODO remove this internal tag with OR Query support in the server
 */
var ol = /*#__PURE__*/(/* unused pure expression or super */ null && (function (_el2) {
  _inherits(ol, _el2);
  var _super42 = _createSuper(ol);
  /**
   * @internal
   */
  function ol( /** The type of this query constraint */
  t, e) {
    var _this204;
    _classCallCheck(this, ol);
    _this204 = _super42.call(this), _this204.type = t, _this204._queryConstraints = e;
    return _this204;
  }
  _createClass(ol, [{
    key: "_parse",
    value: function _parse(t) {
      var e = this._queryConstraints.map(function (e) {
        return e._parse(t);
      }).filter(function (t) {
        return t.getFilters().length > 0;
      });
      return 1 === e.length ? e[0] : be.create(e, this._getOperator());
    }
  }, {
    key: "_apply",
    value: function _apply(t) {
      var e = this._parse(t);
      return 0 === e.getFilters().length ? t : (function (t, e) {
        var n = t;
        var s = e.getFlattenedFilters();
        var _iterator83 = _createForOfIteratorHelper(s),
          _step83;
        try {
          for (_iterator83.s(); !(_step83 = _iterator83.n()).done;) {
            var _t112 = _step83.value;
            Al(n, _t112), n = yn(n, _t112);
          }
        } catch (err) {
          _iterator83.e(err);
        } finally {
          _iterator83.f();
        }
      }
      // Checks if any of the provided filter operators are included in the given list of filters and
      // returns the first one that is, or null if none are.
      (t._query, e), new index_esm2017_pa(t.firestore, t.converter, yn(t._query, e)));
    }
  }, {
    key: "_getQueryConstraints",
    value: function _getQueryConstraints() {
      return this._queryConstraints;
    }
  }, {
    key: "_getOperator",
    value: function _getOperator() {
      return "and" === this.type ? "and" /* CompositeOperator.AND */ : "or" /* CompositeOperator.OR */;
    }
  }], [{
    key: "_create",
    value: function _create(t, e) {
      return new ol(t, e);
    }
  }]);
  return ol;
}(el)));
/**
 * Creates a {@link QueryCompositeFilterConstraint} that performs a logical OR
 * of all the provided {@link QueryFilterConstraint}s.
 *
 * @param queryConstraints - Optional. The {@link QueryFilterConstraint}s
 * for OR operation. These must be created with calls to {@link where},
 * {@link or}, or {@link and}.
 * @returns The created {@link QueryCompositeFilterConstraint}.
 * @internal TODO remove this internal tag with OR Query support in the server
 */
function ul() {
  for (var _len11 = arguments.length, t = new Array(_len11), _key11 = 0; _key11 < _len11; _key11++) {
    t[_key11] = arguments[_key11];
  }
  // Only support QueryFilterConstraints
  return t.forEach(function (t) {
    return bl("or", t);
  }), ol._create("or" /* CompositeOperator.OR */, t);
}

/**
 * Creates a {@link QueryCompositeFilterConstraint} that performs a logical AND
 * of all the provided {@link QueryFilterConstraint}s.
 *
 * @param queryConstraints - Optional. The {@link QueryFilterConstraint}s
 * for AND operation. These must be created with calls to {@link where},
 * {@link or}, or {@link and}.
 * @returns The created {@link QueryCompositeFilterConstraint}.
 * @internal TODO remove this internal tag with OR Query support in the server
 */
function cl() {
  for (var _len12 = arguments.length, t = new Array(_len12), _key12 = 0; _key12 < _len12; _key12++) {
    t[_key12] = arguments[_key12];
  }
  // Only support QueryFilterConstraints
  return t.forEach(function (t) {
    return bl("and", t);
  }), ol._create("and" /* CompositeOperator.AND */, t);
}

/**
 * A `QueryOrderByConstraint` is used to sort the set of documents returned by a
 * Firestore query. `QueryOrderByConstraint`s are created by invoking
 * {@link orderBy} and can then be passed to {@link query} to create a new query
 * instance that also contains this `QueryOrderByConstraint`.
 *
 * Note: Documents that do not contain the orderBy field will not be present in
 * the query result.
 */
var al = /*#__PURE__*/(/* unused pure expression or super */ null && (function (_nl2) {
  _inherits(al, _nl2);
  var _super43 = _createSuper(al);
  /**
   * @internal
   */
  function al(t, e) {
    var _this205;
    _classCallCheck(this, al);
    _this205 = _super43.call(this), _this205._field = t, _this205._direction = e, /** The type of this query constraint */
    _this205.type = "orderBy";
    return _this205;
  }
  _createClass(al, [{
    key: "_apply",
    value: function _apply(t) {
      var e = function (t, e, n) {
        if (null !== t.startAt) throw new index_esm2017_L(index_esm2017_B.INVALID_ARGUMENT, "Invalid query. You must not call startAt() or startAfter() before calling orderBy().");
        if (null !== t.endAt) throw new index_esm2017_L(index_esm2017_B.INVALID_ARGUMENT, "Invalid query. You must not call endAt() or endBefore() before calling orderBy().");
        var s = new Ue(e, n);
        return function (t, e) {
          if (null === dn(t)) {
            // This is the first order by. It must match any inequality.
            var _n37 = _n(t);
            null !== _n37 && Rl(t, _n37, e.field);
          }
        }(t, s), s;
      }
      /**
      * Create a `Bound` from a query and a document.
      *
      * Note that the `Bound` will always include the key of the document
      * and so only the provided document will compare equal to the returned
      * position.
      *
      * Will throw if the document does not contain all fields of the order by
      * of the query or if any of the fields in the order by are an uncommitted
      * server timestamp.
      */(t._query, this._field, this._direction);
      return new index_esm2017_pa(t.firestore, t.converter, function (t, e) {
        // TODO(dimond): validate that orderBy does not list the same key twice.
        var n = t.explicitOrderBy.concat([e]);
        return new an(t.path, t.collectionGroup, n, t.filters.slice(), t.limit, t.limitType, t.startAt, t.endAt);
      }(t._query, e));
    }
  }], [{
    key: "_create",
    value: function _create(t, e) {
      return new al(t, e);
    }
  }]);
  return al;
}(nl)));
/**
 * Creates a {@link QueryOrderByConstraint} that sorts the query result by the
 * specified field, optionally in descending order instead of ascending.
 *
 * Note: Documents that do not contain the specified field will not be present
 * in the query result.
 *
 * @param fieldPath - The field to sort by.
 * @param directionStr - Optional direction to sort by ('asc' or 'desc'). If
 * not specified, order will be ascending.
 * @returns The created {@link QueryOrderByConstraint}.
 */
function hl(t) {
  var e = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : "asc";
  var n = e,
    s = Zh("orderBy", t);
  return al._create(s, n);
}

/**
 * A `QueryLimitConstraint` is used to limit the number of documents returned by
 * a Firestore query.
 * `QueryLimitConstraint`s are created by invoking {@link limit} or
 * {@link limitToLast} and can then be passed to {@link query} to create a new
 * query instance that also contains this `QueryLimitConstraint`.
 */
var ll = /*#__PURE__*/(/* unused pure expression or super */ null && (function (_nl3) {
  _inherits(ll, _nl3);
  var _super44 = _createSuper(ll);
  /**
   * @internal
   */
  function ll( /** The type of this query constraint */
  t, e, n) {
    var _this206;
    _classCallCheck(this, ll);
    _this206 = _super44.call(this), _this206.type = t, _this206._limit = e, _this206._limitType = n;
    return _this206;
  }
  _createClass(ll, [{
    key: "_apply",
    value: function _apply(t) {
      return new index_esm2017_pa(t.firestore, t.converter, pn(t._query, this._limit, this._limitType));
    }
  }], [{
    key: "_create",
    value: function _create(t, e, n) {
      return new ll(t, e, n);
    }
  }]);
  return ll;
}(nl)));
/**
 * Creates a {@link QueryLimitConstraint} that only returns the first matching
 * documents.
 *
 * @param limit - The maximum number of items to return.
 * @returns The created {@link QueryLimitConstraint}.
 */
function fl(t) {
  return index_esm2017_da("limit", t), ll._create("limit", t, "F" /* LimitType.First */);
}

/**
 * Creates a {@link QueryLimitConstraint} that only returns the last matching
 * documents.
 *
 * You must specify at least one `orderBy` clause for `limitToLast` queries,
 * otherwise an exception will be thrown during execution.
 *
 * @param limit - The maximum number of items to return.
 * @returns The created {@link QueryLimitConstraint}.
 */
function dl(t) {
  return index_esm2017_da("limitToLast", t), ll._create("limitToLast", t, "L" /* LimitType.Last */);
}

/**
 * A `QueryStartAtConstraint` is used to exclude documents from the start of a
 * result set returned by a Firestore query.
 * `QueryStartAtConstraint`s are created by invoking {@link (startAt:1)} or
 * {@link (startAfter:1)} and can then be passed to {@link query} to create a
 * new query instance that also contains this `QueryStartAtConstraint`.
 */
var _l = /*#__PURE__*/(/* unused pure expression or super */ null && (function (_nl4) {
  _inherits(_l, _nl4);
  var _super45 = _createSuper(_l);
  /**
   * @internal
   */
  function _l( /** The type of this query constraint */
  t, e, n) {
    var _this207;
    _classCallCheck(this, _l);
    _this207 = _super45.call(this), _this207.type = t, _this207._docOrFields = e, _this207._inclusive = n;
    return _this207;
  }
  _createClass(_l, [{
    key: "_apply",
    value: function _apply(t) {
      var e = Il(t, this.type, this._docOrFields, this._inclusive);
      return new index_esm2017_pa(t.firestore, t.converter, function (t, e) {
        return new an(t.path, t.collectionGroup, t.explicitOrderBy.slice(), t.filters.slice(), t.limit, t.limitType, e, t.endAt);
      }(t._query, e));
    }
  }], [{
    key: "_create",
    value: function _create(t, e, n) {
      return new _l(t, e, n);
    }
  }]);
  return _l;
}(nl)));
function wl() {
  for (var _len13 = arguments.length, t = new Array(_len13), _key13 = 0; _key13 < _len13; _key13++) {
    t[_key13] = arguments[_key13];
  }
  return _l._create("startAt", t, /*inclusive=*/!0);
}
function ml() {
  for (var _len14 = arguments.length, t = new Array(_len14), _key14 = 0; _key14 < _len14; _key14++) {
    t[_key14] = arguments[_key14];
  }
  return _l._create("startAfter", t, /*inclusive=*/!1);
}

/**
 * A `QueryEndAtConstraint` is used to exclude documents from the end of a
 * result set returned by a Firestore query.
 * `QueryEndAtConstraint`s are created by invoking {@link (endAt:1)} or
 * {@link (endBefore:1)} and can then be passed to {@link query} to create a new
 * query instance that also contains this `QueryEndAtConstraint`.
 */
var gl = /*#__PURE__*/(/* unused pure expression or super */ null && (function (_nl5) {
  _inherits(gl, _nl5);
  var _super46 = _createSuper(gl);
  /**
   * @internal
   */
  function gl( /** The type of this query constraint */
  t, e, n) {
    var _this208;
    _classCallCheck(this, gl);
    _this208 = _super46.call(this), _this208.type = t, _this208._docOrFields = e, _this208._inclusive = n;
    return _this208;
  }
  _createClass(gl, [{
    key: "_apply",
    value: function _apply(t) {
      var e = Il(t, this.type, this._docOrFields, this._inclusive);
      return new index_esm2017_pa(t.firestore, t.converter, function (t, e) {
        return new an(t.path, t.collectionGroup, t.explicitOrderBy.slice(), t.filters.slice(), t.limit, t.limitType, t.startAt, e);
      }(t._query, e));
    }
  }], [{
    key: "_create",
    value: function _create(t, e, n) {
      return new gl(t, e, n);
    }
  }]);
  return gl;
}(nl)));
function yl() {
  for (var _len15 = arguments.length, t = new Array(_len15), _key15 = 0; _key15 < _len15; _key15++) {
    t[_key15] = arguments[_key15];
  }
  return gl._create("endBefore", t, /*inclusive=*/!1);
}
function pl() {
  for (var _len16 = arguments.length, t = new Array(_len16), _key16 = 0; _key16 < _len16; _key16++) {
    t[_key16] = arguments[_key16];
  }
  return gl._create("endAt", t, /*inclusive=*/!0);
}

/** Helper function to create a bound from a document or fields */
function Il(t, e, n, s) {
  if (n[0] = getModularInstance(n[0]), n[0] instanceof Yh) return function (t, e, n, s, i) {
    if (!s) throw new index_esm2017_L(index_esm2017_B.NOT_FOUND, "Can't use a DocumentSnapshot that doesn't exist for ".concat(n, "()."));
    var r = [];
    // Because people expect to continue/end a query at the exact document
    // provided, we need to use the implicit sort order rather than the explicit
    // sort order, because it's guaranteed to contain the document key. That way
    // the position becomes unambiguous and the query continues/ends exactly at
    // the provided document. Without the key (by using the explicit sort
    // orders), multiple documents could match the position, yielding duplicate
    // results.
    var _iterator84 = _createForOfIteratorHelper(mn(t)),
      _step84;
    try {
      for (_iterator84.s(); !(_step84 = _iterator84.n()).done;) {
        var _n38 = _step84.value;
        if (_n38.field.isKeyField()) r.push(ce(e, s.key));else {
          var _t113 = s.data.field(_n38.field);
          if (Jt(_t113)) throw new index_esm2017_L(index_esm2017_B.INVALID_ARGUMENT, 'Invalid query. You are trying to start or end a query using a document for which the field "' + _n38.field + '" is an uncommitted server timestamp. (Since the value of this field is unknown, you cannot start/end a query with it.)');
          if (null === _t113) {
            var _t114 = _n38.field.canonicalString();
            throw new index_esm2017_L(index_esm2017_B.INVALID_ARGUMENT, "Invalid query. You are trying to start or end a query using a document for which the field '".concat(_t114, "' (used as the orderBy) does not exist."));
          }
          r.push(_t113);
        }
      }
    } catch (err) {
      _iterator84.e(err);
    } finally {
      _iterator84.f();
    }
    return new Ie(r, i);
  }
  /**
  * Converts a list of field values to a `Bound` for the given query.
  */(t._query, t.firestore._databaseId, e, n[0]._document, s);
  {
    var i = Ch(t.firestore);
    return function (t, e, n, s, i, r) {
      // Use explicit order by's because it has to match the query the user made
      var o = t.explicitOrderBy;
      if (i.length > o.length) throw new index_esm2017_L(index_esm2017_B.INVALID_ARGUMENT, "Too many arguments provided to ".concat(s, "(). The number of arguments must be less than or equal to the number of orderBy() clauses"));
      var u = [];
      for (var _r8 = 0; _r8 < i.length; _r8++) {
        var c = i[_r8];
        if (o[_r8].field.isKeyField()) {
          if ("string" != typeof c) throw new index_esm2017_L(index_esm2017_B.INVALID_ARGUMENT, "Invalid query. Expected a string for document ID in ".concat(s, "(), but got a ").concat(typeof c));
          if (!wn(t) && -1 !== c.indexOf("/")) throw new index_esm2017_L(index_esm2017_B.INVALID_ARGUMENT, "Invalid query. When querying a collection and ordering by documentId(), the value passed to ".concat(s, "() must be a plain document ID, but '").concat(c, "' contains a slash."));
          var _n39 = t.path.child(rt.fromString(c));
          if (!ct.isDocumentKey(_n39)) throw new index_esm2017_L(index_esm2017_B.INVALID_ARGUMENT, "Invalid query. When querying a collection group and ordering by documentId(), the value passed to ".concat(s, "() must result in a valid document path, but '").concat(_n39, "' is not because it contains an odd number of segments."));
          var _i17 = new ct(_n39);
          u.push(ce(e, _i17));
        } else {
          var _t115 = qh(n, s, c);
          u.push(_t115);
        }
      }
      return new Ie(u, r);
    }
    /**
    * Parses the given `documentIdValue` into a `ReferenceValue`, throwing
    * appropriate errors if the value is anything other than a `DocumentReference`
    * or `string`, or if the string is malformed.
    */(t._query, t.firestore._databaseId, i, e, n, s);
  }
}
function Tl(t, e, n) {
  if ("string" == typeof (n = getModularInstance(n))) {
    if ("" === n) throw new index_esm2017_L(index_esm2017_B.INVALID_ARGUMENT, "Invalid query. When querying with documentId(), you must provide a valid document ID, but it was an empty string.");
    if (!wn(e) && -1 !== n.indexOf("/")) throw new index_esm2017_L(index_esm2017_B.INVALID_ARGUMENT, "Invalid query. When querying a collection by documentId(), you must provide a plain document ID, but '".concat(n, "' contains a '/' character."));
    var s = e.path.child(rt.fromString(n));
    if (!ct.isDocumentKey(s)) throw new index_esm2017_L(index_esm2017_B.INVALID_ARGUMENT, "Invalid query. When querying a collection group by documentId(), the value provided must result in a valid document path, but '".concat(s, "' is not because it has an odd number of segments (").concat(s.length, ")."));
    return ce(t, new ct(s));
  }
  if (n instanceof index_esm2017_ya) return ce(t, n._key);
  throw new index_esm2017_L(index_esm2017_B.INVALID_ARGUMENT, "Invalid query. When querying with documentId(), you must provide a valid string or a DocumentReference, but it was: ".concat(index_esm2017_la(n), "."));
}

/**
 * Validates that the value passed into a disjunctive filter satisfies all
 * array requirements.
 */
function El(t, e) {
  if (!Array.isArray(t) || 0 === t.length) throw new index_esm2017_L(index_esm2017_B.INVALID_ARGUMENT, "Invalid Query. A non-empty array is required for '".concat(e.toString(), "' filters."));
  if (t.length > 10) throw new index_esm2017_L(index_esm2017_B.INVALID_ARGUMENT, "Invalid Query. '".concat(e.toString(), "' filters support a maximum of 10 elements in the value array."));
}

/**
 * Given an operator, returns the set of operators that cannot be used with it.
 *
 * Operators in a query must adhere to the following set of rules:
 * 1. Only one array operator is allowed.
 * 2. Only one disjunctive operator is allowed.
 * 3. `NOT_EQUAL` cannot be used with another `NOT_EQUAL` operator.
 * 4. `NOT_IN` cannot be used with array, disjunctive, or `NOT_EQUAL` operators.
 *
 * Array operators: `ARRAY_CONTAINS`, `ARRAY_CONTAINS_ANY`
 * Disjunctive operators: `IN`, `ARRAY_CONTAINS_ANY`, `NOT_IN`
 */
function Al(t, e) {
  if (e.isInequality()) {
    var _n40 = _n(t),
      s = e.field;
    if (null !== _n40 && !_n40.isEqual(s)) throw new index_esm2017_L(index_esm2017_B.INVALID_ARGUMENT, "Invalid query. All where filters with an inequality (<, <=, !=, not-in, >, or >=) must be on the same field. But you have inequality filters on '".concat(_n40.toString(), "' and '").concat(s.toString(), "'"));
    var i = dn(t);
    null !== i && Rl(t, s, i);
  }
  var n = function (t, e) {
    var _iterator85 = _createForOfIteratorHelper(t),
      _step85;
    try {
      for (_iterator85.s(); !(_step85 = _iterator85.n()).done;) {
        var _n41 = _step85.value;
        var _iterator86 = _createForOfIteratorHelper(_n41.getFlattenedFilters()),
          _step86;
        try {
          for (_iterator86.s(); !(_step86 = _iterator86.n()).done;) {
            var _t116 = _step86.value;
            if (e.indexOf(_t116.op) >= 0) return _t116.op;
          }
        } catch (err) {
          _iterator86.e(err);
        } finally {
          _iterator86.f();
        }
      }
    } catch (err) {
      _iterator85.e(err);
    } finally {
      _iterator85.f();
    }
    return null;
  }(t.filters, function (t) {
    switch (t) {
      case "!=" /* Operator.NOT_EQUAL */:
        return ["!=" /* Operator.NOT_EQUAL */, "not-in" /* Operator.NOT_IN */];

      case "array-contains" /* Operator.ARRAY_CONTAINS */:
        return ["array-contains" /* Operator.ARRAY_CONTAINS */, "array-contains-any" /* Operator.ARRAY_CONTAINS_ANY */, "not-in" /* Operator.NOT_IN */];

      case "in" /* Operator.IN */:
        return ["array-contains-any" /* Operator.ARRAY_CONTAINS_ANY */, "in" /* Operator.IN */, "not-in" /* Operator.NOT_IN */];

      case "array-contains-any" /* Operator.ARRAY_CONTAINS_ANY */:
        return ["array-contains" /* Operator.ARRAY_CONTAINS */, "array-contains-any" /* Operator.ARRAY_CONTAINS_ANY */, "in" /* Operator.IN */, "not-in" /* Operator.NOT_IN */];

      case "not-in" /* Operator.NOT_IN */:
        return ["array-contains" /* Operator.ARRAY_CONTAINS */, "array-contains-any" /* Operator.ARRAY_CONTAINS_ANY */, "in" /* Operator.IN */, "not-in" /* Operator.NOT_IN */, "!=" /* Operator.NOT_EQUAL */];

      default:
        return [];
    }
  }(e.op));
  if (null !== n)
    // Special case when it's a duplicate op to give a slightly clearer error message.
    throw n === e.op ? new index_esm2017_L(index_esm2017_B.INVALID_ARGUMENT, "Invalid query. You cannot use more than one '".concat(e.op.toString(), "' filter.")) : new index_esm2017_L(index_esm2017_B.INVALID_ARGUMENT, "Invalid query. You cannot use '".concat(e.op.toString(), "' filters with '").concat(n.toString(), "' filters."));
}
function Rl(t, e, n) {
  if (!n.isEqual(e)) throw new index_esm2017_L(index_esm2017_B.INVALID_ARGUMENT, "Invalid query. You have a where filter with an inequality (<, <=, !=, not-in, >, or >=) on field '".concat(e.toString(), "' and so you must also use '").concat(e.toString(), "' as your first argument to orderBy(), but your first orderBy() is on field '").concat(n.toString(), "' instead."));
}
function bl(t, e) {
  if (!(e instanceof il || e instanceof ol)) throw new index_esm2017_L(index_esm2017_B.INVALID_ARGUMENT, "Function ".concat(t, "() requires AppliableConstraints created with a call to 'where(...)', 'or(...)', or 'and(...)'."));
}
var Pl = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  function Pl() {
    _classCallCheck(this, Pl);
  }
  _createClass(Pl, [{
    key: "convertValue",
    value: function convertValue(t) {
      var e = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : "none";
      switch (ee(t)) {
        case 0 /* TypeOrder.NullValue */:
          return null;
        case 1 /* TypeOrder.BooleanValue */:
          return t.booleanValue;
        case 2 /* TypeOrder.NumberValue */:
          return zt(t.integerValue || t.doubleValue);
        case 3 /* TypeOrder.TimestampValue */:
          return this.convertTimestamp(t.timestampValue);
        case 4 /* TypeOrder.ServerTimestampValue */:
          return this.convertServerTimestamp(t, e);
        case 5 /* TypeOrder.StringValue */:
          return t.stringValue;
        case 6 /* TypeOrder.BlobValue */:
          return this.convertBytes(Ht(t.bytesValue));
        case 7 /* TypeOrder.RefValue */:
          return this.convertReference(t.referenceValue);
        case 8 /* TypeOrder.GeoPointValue */:
          return this.convertGeoPoint(t.geoPointValue);
        case 9 /* TypeOrder.ArrayValue */:
          return this.convertArray(t.arrayValue, e);
        case 10 /* TypeOrder.ObjectValue */:
          return this.convertObject(t.mapValue, e);
        default:
          throw index_esm2017_O();
      }
    }
  }, {
    key: "convertObject",
    value: function convertObject(t, e) {
      var _this209 = this;
      var n = {};
      return Bt(t.fields, function (t, s) {
        n[t] = _this209.convertValue(s, e);
      }), n;
    }
  }, {
    key: "convertGeoPoint",
    value: function convertGeoPoint(t) {
      return new Rh(zt(t.latitude), zt(t.longitude));
    }
  }, {
    key: "convertArray",
    value: function convertArray(t, e) {
      var _this210 = this;
      return (t.values || []).map(function (t) {
        return _this210.convertValue(t, e);
      });
    }
  }, {
    key: "convertServerTimestamp",
    value: function convertServerTimestamp(t, e) {
      switch (e) {
        case "previous":
          var n = Yt(t);
          return null == n ? null : this.convertValue(n, e);
        case "estimate":
          return this.convertTimestamp(Xt(t));
        default:
          return null;
      }
    }
  }, {
    key: "convertTimestamp",
    value: function convertTimestamp(t) {
      var e = Wt(t);
      return new nt(e.seconds, e.nanos);
    }
  }, {
    key: "convertDocumentKey",
    value: function convertDocumentKey(t, e) {
      var n = rt.fromString(t);
      index_esm2017_M(wi(n));
      var s = new Ft(n.get(1), n.get(3)),
        i = new ct(n.popFirst(5));
      return s.isEqual(e) ||
      // TODO(b/64130202): Somehow support foreign references.
      index_esm2017_x("Document ".concat(i, " contains a document reference within a different database (").concat(s.projectId, "/").concat(s.database, ") which is not supported. It will be treated as a reference in the current database (").concat(e.projectId, "/").concat(e.database, ") instead.")), i;
    }
  }]);
  return Pl;
}()));
/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * Converts custom model object of type T into `DocumentData` by applying the
 * converter if it exists.
 *
 * This function is used when converting user objects to `DocumentData`
 * because we want to provide the user with a more specific error message if
 * their `set()` or fails due to invalid data originating from a `toFirestore()`
 * call.
 */
function vl(t, e, n) {
  var s;
  // Cast to `any` in order to satisfy the union type constraint on
  // toFirestore().
  // eslint-disable-next-line @typescript-eslint/no-explicit-any
  return s = t ? n && (n.merge || n.mergeFields) ? t.toFirestore(e, n) : t.toFirestore(e) : e, s;
}
var Vl = /*#__PURE__*/(/* unused pure expression or super */ null && (function (_Pl) {
  _inherits(Vl, _Pl);
  var _super47 = _createSuper(Vl);
  function Vl(t) {
    var _this211;
    _classCallCheck(this, Vl);
    _this211 = _super47.call(this), _this211.firestore = t;
    return _this211;
  }
  _createClass(Vl, [{
    key: "convertBytes",
    value: function convertBytes(t) {
      return new Ih(t);
    }
  }, {
    key: "convertReference",
    value: function convertReference(t) {
      var e = this.convertDocumentKey(t, this.firestore._databaseId);
      return new index_esm2017_ya(this.firestore, /* converter= */null, e);
    }
  }]);
  return Vl;
}(Pl)));
/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * Metadata about a snapshot, describing the state of the snapshot.
 */
var Sl = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  /** @hideconstructor */
  function Sl(t, e) {
    _classCallCheck(this, Sl);
    this.hasPendingWrites = t, this.fromCache = e;
  }
  /**
   * Returns true if this `SnapshotMetadata` is equal to the provided one.
   *
   * @param other - The `SnapshotMetadata` to compare against.
   * @returns true if this `SnapshotMetadata` is equal to the provided one.
   */
  _createClass(Sl, [{
    key: "isEqual",
    value: function isEqual(t) {
      return this.hasPendingWrites === t.hasPendingWrites && this.fromCache === t.fromCache;
    }
  }]);
  return Sl;
}()));
/**
 * A `DocumentSnapshot` contains data read from a document in your Firestore
 * database. The data can be extracted with `.data()` or `.get(<field>)` to
 * get a specific field.
 *
 * For a `DocumentSnapshot` that points to a non-existing document, any data
 * access will return 'undefined'. You can use the `exists()` method to
 * explicitly verify a document's existence.
 */
var Dl = /*#__PURE__*/(/* unused pure expression or super */ null && (function (_Yh2) {
  _inherits(Dl, _Yh2);
  var _super48 = _createSuper(Dl);
  /** @hideconstructor protected */
  function Dl(t, e, n, s, i, r) {
    var _this212;
    _classCallCheck(this, Dl);
    _this212 = _super48.call(this, t, e, n, s, r), _this212._firestore = t, _this212._firestoreImpl = t, _this212.metadata = i;
    return _this212;
  }
  /**
   * Returns whether or not the data exists. True if the document exists.
   */
  _createClass(Dl, [{
    key: "exists",
    value: function exists() {
      return _get(_getPrototypeOf(Dl.prototype), "exists", this).call(this);
    }
    /**
     * Retrieves all fields in the document as an `Object`. Returns `undefined` if
     * the document doesn't exist.
     *
     * By default, `serverTimestamp()` values that have not yet been
     * set to their final value will be returned as `null`. You can override
     * this by passing an options object.
     *
     * @param options - An options object to configure how data is retrieved from
     * the snapshot (for example the desired behavior for server timestamps that
     * have not yet been set to their final value).
     * @returns An `Object` containing all fields in the document or `undefined` if
     * the document doesn't exist.
     */
  }, {
    key: "data",
    value: function data() {
      var t = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
      if (this._document) {
        if (this._converter) {
          // We only want to use the converter and create a new DocumentSnapshot
          // if a converter has been provided.
          var e = new Cl(this._firestore, this._userDataWriter, this._key, this._document, this.metadata, /* converter= */null);
          return this._converter.fromFirestore(e, t);
        }
        return this._userDataWriter.convertValue(this._document.data.value, t.serverTimestamps);
      }
    }
    /**
     * Retrieves the field specified by `fieldPath`. Returns `undefined` if the
     * document or field doesn't exist.
     *
     * By default, a `serverTimestamp()` that has not yet been set to
     * its final value will be returned as `null`. You can override this by
     * passing an options object.
     *
     * @param fieldPath - The path (for example 'foo' or 'foo.bar') to a specific
     * field.
     * @param options - An options object to configure how the field is retrieved
     * from the snapshot (for example the desired behavior for server timestamps
     * that have not yet been set to their final value).
     * @returns The data at the specified field location or undefined if no such
     * field exists in the document.
     */
    // We are using `any` here to avoid an explicit cast by our users.
    // eslint-disable-next-line @typescript-eslint/no-explicit-any
  }, {
    key: "get",
    value: function get(t) {
      var e = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
      if (this._document) {
        var n = this._document.data.field(Zh("DocumentSnapshot.get", t));
        if (null !== n) return this._userDataWriter.convertValue(n, e.serverTimestamps);
      }
    }
  }]);
  return Dl;
}(Yh)));
/**
 * A `QueryDocumentSnapshot` contains data read from a document in your
 * Firestore database as part of a query. The document is guaranteed to exist
 * and its data can be extracted with `.data()` or `.get(<field>)` to get a
 * specific field.
 *
 * A `QueryDocumentSnapshot` offers the same API surface as a
 * `DocumentSnapshot`. Since query results contain only existing documents, the
 * `exists` property will always be true and `data()` will never return
 * 'undefined'.
 */
var Cl = /*#__PURE__*/(/* unused pure expression or super */ null && (function (_Dl) {
  _inherits(Cl, _Dl);
  var _super49 = _createSuper(Cl);
  function Cl() {
    _classCallCheck(this, Cl);
    return _super49.apply(this, arguments);
  }
  _createClass(Cl, [{
    key: "data",
    value:
    /**
     * Retrieves all fields in the document as an `Object`.
     *
     * By default, `serverTimestamp()` values that have not yet been
     * set to their final value will be returned as `null`. You can override
     * this by passing an options object.
     *
     * @override
     * @param options - An options object to configure how data is retrieved from
     * the snapshot (for example the desired behavior for server timestamps that
     * have not yet been set to their final value).
     * @returns An `Object` containing all fields in the document.
     */
    function data() {
      var t = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
      return _get(_getPrototypeOf(Cl.prototype), "data", this).call(this, t);
    }
  }]);
  return Cl;
}(Dl)));
/**
 * A `QuerySnapshot` contains zero or more `DocumentSnapshot` objects
 * representing the results of a query. The documents can be accessed as an
 * array via the `docs` property or enumerated using the `forEach` method. The
 * number of documents can be determined via the `empty` and `size`
 * properties.
 */
var xl = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  /** @hideconstructor */
  function xl(t, e, n, s) {
    _classCallCheck(this, xl);
    this._firestore = t, this._userDataWriter = e, this._snapshot = s, this.metadata = new Sl(s.hasPendingWrites, s.fromCache), this.query = n;
  }
  /** An array of all the documents in the `QuerySnapshot`. */
  _createClass(xl, [{
    key: "docs",
    get: function get() {
      var t = [];
      return this.forEach(function (e) {
        return t.push(e);
      }), t;
    }
    /** The number of documents in the `QuerySnapshot`. */
  }, {
    key: "size",
    get: function get() {
      return this._snapshot.docs.size;
    }
    /** True if there are no documents in the `QuerySnapshot`. */
  }, {
    key: "empty",
    get: function get() {
      return 0 === this.size;
    }
    /**
     * Enumerates all of the documents in the `QuerySnapshot`.
     *
     * @param callback - A callback to be called with a `QueryDocumentSnapshot` for
     * each document in the snapshot.
     * @param thisArg - The `this` binding for the callback.
     */
  }, {
    key: "forEach",
    value: function forEach(t, e) {
      var _this213 = this;
      this._snapshot.docs.forEach(function (n) {
        t.call(e, new Cl(_this213._firestore, _this213._userDataWriter, n.key, n, new Sl(_this213._snapshot.mutatedKeys.has(n.key), _this213._snapshot.fromCache), _this213.query.converter));
      });
    }
    /**
     * Returns an array of the documents changes since the last snapshot. If this
     * is the first snapshot, all documents will be in the list as 'added'
     * changes.
     *
     * @param options - `SnapshotListenOptions` that control whether metadata-only
     * changes (i.e. only `DocumentSnapshot.metadata` changed) should trigger
     * snapshot events.
     */
  }, {
    key: "docChanges",
    value: function docChanges() {
      var t = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
      var e = !!t.includeMetadataChanges;
      if (e && this._snapshot.excludesMetadataChanges) throw new index_esm2017_L(index_esm2017_B.INVALID_ARGUMENT, "To include metadata changes with your document changes, you must also pass { includeMetadataChanges:true } to onSnapshot().");
      return this._cachedChanges && this._cachedChangesIncludeMetadataChanges === e || (this._cachedChanges = /** Calculates the array of `DocumentChange`s for a given `ViewSnapshot`. */
      function (t, e) {
        if (t._snapshot.oldDocs.isEmpty()) {
          var _e53 = 0;
          return t._snapshot.docChanges.map(function (n) {
            var s = new Cl(t._firestore, t._userDataWriter, n.doc.key, n.doc, new Sl(t._snapshot.mutatedKeys.has(n.doc.key), t._snapshot.fromCache), t.query.converter);
            return n.doc, {
              type: "added",
              doc: s,
              oldIndex: -1,
              newIndex: _e53++
            };
          });
        }
        {
          // A `DocumentSet` that is updated incrementally as changes are applied to use
          // to lookup the index of a document.
          var n = t._snapshot.oldDocs;
          return t._snapshot.docChanges.filter(function (t) {
            return e || 3 /* ChangeType.Metadata */ !== t.type;
          }).map(function (e) {
            var s = new Cl(t._firestore, t._userDataWriter, e.doc.key, e.doc, new Sl(t._snapshot.mutatedKeys.has(e.doc.key), t._snapshot.fromCache), t.query.converter);
            var i = -1,
              r = -1;
            return 0 /* ChangeType.Added */ !== e.type && (i = n.indexOf(e.doc.key), n = n.delete(e.doc.key)), 1 /* ChangeType.Removed */ !== e.type && (n = n.add(e.doc), r = n.indexOf(e.doc.key)), {
              type: Nl(e.type),
              doc: s,
              oldIndex: i,
              newIndex: r
            };
          });
        }
      }(this, e), this._cachedChangesIncludeMetadataChanges = e), this._cachedChanges;
    }
  }]);
  return xl;
}()));
function Nl(t) {
  switch (t) {
    case 0 /* ChangeType.Added */:
      return "added";
    case 2 /* ChangeType.Modified */:
    case 3 /* ChangeType.Metadata */:
      return "modified";
    case 1 /* ChangeType.Removed */:
      return "removed";
    default:
      return index_esm2017_O();
  }
}

// TODO(firestoreexp): Add tests for snapshotEqual with different snapshot
// metadata
/**
 * Returns true if the provided snapshots are equal.
 *
 * @param left - A snapshot to compare.
 * @param right - A snapshot to compare.
 * @returns true if the snapshots are equal.
 */
function kl(t, e) {
  return t instanceof Dl && e instanceof Dl ? t._firestore === e._firestore && t._key.isEqual(e._key) && (null === t._document ? null === e._document : t._document.isEqual(e._document)) && t._converter === e._converter : t instanceof xl && e instanceof xl && t._firestore === e._firestore && index_esm2017_ba(t.query, e.query) && t.metadata.isEqual(e.metadata) && t._snapshot.isEqual(e._snapshot);
}

/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * Reads the document referred to by this `DocumentReference`.
 *
 * Note: `getDoc()` attempts to provide up-to-date data when possible by waiting
 * for data from the server, but it may return cached data or fail if you are
 * offline and the server cannot be reached. To specify this behavior, invoke
 * {@link getDocFromCache} or {@link getDocFromServer}.
 *
 * @param reference - The reference of the document to fetch.
 * @returns A Promise resolved with a `DocumentSnapshot` containing the
 * current document contents.
 */
function Ol(t) {
  t = index_esm2017_fa(t, index_esm2017_ya);
  var e = index_esm2017_fa(t.firestore, ih);
  return index_esm2017_za(uh(e), t._key).then(function (n) {
    return Hl(e, t, n);
  });
}
var Ml = /*#__PURE__*/(/* unused pure expression or super */ null && (function (_Pl2) {
  _inherits(Ml, _Pl2);
  var _super50 = _createSuper(Ml);
  function Ml(t) {
    var _this214;
    _classCallCheck(this, Ml);
    _this214 = _super50.call(this), _this214.firestore = t;
    return _this214;
  }
  _createClass(Ml, [{
    key: "convertBytes",
    value: function convertBytes(t) {
      return new Ih(t);
    }
  }, {
    key: "convertReference",
    value: function convertReference(t) {
      var e = this.convertDocumentKey(t, this.firestore._databaseId);
      return new index_esm2017_ya(this.firestore, /* converter= */null, e);
    }
  }]);
  return Ml;
}(Pl)));
/**
 * Reads the document referred to by this `DocumentReference` from cache.
 * Returns an error if the document is not currently cached.
 *
 * @returns A `Promise` resolved with a `DocumentSnapshot` containing the
 * current document contents.
 */
function Fl(t) {
  t = index_esm2017_fa(t, index_esm2017_ya);
  var e = index_esm2017_fa(t.firestore, ih),
    n = uh(e),
    s = new Ml(e);
  return index_esm2017_Wa(n, t._key).then(function (n) {
    return new Dl(e, s, t._key, n, new Sl(null !== n && n.hasLocalMutations, /* fromCache= */!0), t.converter);
  });
}

/**
 * Reads the document referred to by this `DocumentReference` from the server.
 * Returns an error if the network is not available.
 *
 * @returns A `Promise` resolved with a `DocumentSnapshot` containing the
 * current document contents.
 */
function $l(t) {
  t = index_esm2017_fa(t, index_esm2017_ya);
  var e = index_esm2017_fa(t.firestore, ih);
  return index_esm2017_za(uh(e), t._key, {
    source: "server"
  }).then(function (n) {
    return Hl(e, t, n);
  });
}

/**
 * Executes the query and returns the results as a `QuerySnapshot`.
 *
 * Note: `getDocs()` attempts to provide up-to-date data when possible by
 * waiting for data from the server, but it may return cached data or fail if
 * you are offline and the server cannot be reached. To specify this behavior,
 * invoke {@link getDocsFromCache} or {@link getDocsFromServer}.
 *
 * @returns A `Promise` that will be resolved with the results of the query.
 */
function Bl(t) {
  t = index_esm2017_fa(t, index_esm2017_pa);
  var e = index_esm2017_fa(t.firestore, ih),
    n = uh(e),
    s = new Ml(e);
  return tl(t._query), index_esm2017_Ja(n, t._query).then(function (n) {
    return new xl(e, s, t, n);
  });
}

/**
 * Executes the query and returns the results as a `QuerySnapshot` from cache.
 * Returns an error if the document is not currently cached.
 *
 * @returns A `Promise` that will be resolved with the results of the query.
 */
function Ll(t) {
  t = index_esm2017_fa(t, index_esm2017_pa);
  var e = index_esm2017_fa(t.firestore, ih),
    n = uh(e),
    s = new Ml(e);
  return index_esm2017_Ha(n, t._query).then(function (n) {
    return new xl(e, s, t, n);
  });
}

/**
 * Executes the query and returns the results as a `QuerySnapshot` from the
 * server. Returns an error if the network is not available.
 *
 * @returns A `Promise` that will be resolved with the results of the query.
 */
function ql(t) {
  t = index_esm2017_fa(t, index_esm2017_pa);
  var e = index_esm2017_fa(t.firestore, ih),
    n = uh(e),
    s = new Ml(e);
  return index_esm2017_Ja(n, t._query, {
    source: "server"
  }).then(function (n) {
    return new xl(e, s, t, n);
  });
}
function Ul(t, e, n) {
  t = index_esm2017_fa(t, index_esm2017_ya);
  var s = index_esm2017_fa(t.firestore, ih),
    i = vl(t.converter, e, n);
  return zl(s, [xh(Ch(s), "setDoc", t._key, i, null !== t.converter, n).toMutation(t._key, Qn.none())]);
}
function Kl(t, e, n) {
  t = index_esm2017_fa(t, index_esm2017_ya);
  var i = index_esm2017_fa(t.firestore, ih),
    r = Ch(i);
  var o;
  for (var _len17 = arguments.length, s = new Array(_len17 > 3 ? _len17 - 3 : 0), _key17 = 3; _key17 < _len17; _key17++) {
    s[_key17 - 3] = arguments[_key17];
  }
  o = "string" == typeof (
  // For Compat types, we have to "extract" the underlying types before
  // performing validation.
  e = getModularInstance(e)) || e instanceof Th ? Lh(r, "updateDoc", t._key, e, n, s) : Bh(r, "updateDoc", t._key, e);
  return zl(i, [o.toMutation(t._key, Qn.exists(!0))]);
}

/**
 * Deletes the document referred to by the specified `DocumentReference`.
 *
 * @param reference - A reference to the document to delete.
 * @returns A Promise resolved once the document has been successfully
 * deleted from the backend (note that it won't resolve while you're offline).
 */
function Gl(t) {
  return zl(index_esm2017_fa(t.firestore, ih), [new is(t._key, Qn.none())]);
}

/**
 * Add a new document to specified `CollectionReference` with the given data,
 * assigning it a document ID automatically.
 *
 * @param reference - A reference to the collection to add this document to.
 * @param data - An Object containing the data for the new document.
 * @returns A `Promise` resolved with a `DocumentReference` pointing to the
 * newly created document after it has been written to the backend (Note that it
 * won't resolve while you're offline).
 */
function Ql(t, e) {
  var n = index_esm2017_fa(t.firestore, ih),
    s = index_esm2017_Aa(t),
    i = vl(t.converter, e);
  return zl(n, [xh(Ch(t.firestore), "addDoc", s._key, i, null !== t.converter, {}).toMutation(s._key, Qn.exists(!1))]).then(function () {
    return s;
  });
}
function jl(t) {
  for (var _len18 = arguments.length, e = new Array(_len18 > 1 ? _len18 - 1 : 0), _key18 = 1; _key18 < _len18; _key18++) {
    e[_key18 - 1] = arguments[_key18];
  }
  var n, s, i;
  t = getModularInstance(t);
  var r = {
      includeMetadataChanges: !1
    },
    o = 0;
  "object" != typeof e[o] || eh(e[o]) || (r = e[o], o++);
  var u = {
    includeMetadataChanges: r.includeMetadataChanges
  };
  if (eh(e[o])) {
    var _t117 = e[o];
    e[o] = null === (n = _t117.next) || void 0 === n ? void 0 : n.bind(_t117), e[o + 1] = null === (s = _t117.error) || void 0 === s ? void 0 : s.bind(_t117), e[o + 2] = null === (i = _t117.complete) || void 0 === i ? void 0 : i.bind(_t117);
  }
  var c, a, h;
  if (t instanceof index_esm2017_ya) a = index_esm2017_fa(t.firestore, ih), h = ln(t._key.path), c = {
    next: function next(n) {
      e[o] && e[o](Hl(a, t, n));
    },
    error: e[o + 1],
    complete: e[o + 2]
  };else {
    var _n42 = index_esm2017_fa(t, index_esm2017_pa);
    a = index_esm2017_fa(_n42.firestore, ih), h = _n42._query;
    var _s33 = new Ml(a);
    c = {
      next: function next(t) {
        e[o] && e[o](new xl(a, _s33, _n42, t));
      },
      error: e[o + 1],
      complete: e[o + 2]
    }, tl(t._query);
  }
  return function (t, e, n, s) {
    var i = new index_esm2017_va(s),
      r = new _c(e, i, n);
    return t.asyncQueue.enqueueAndForget( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee68() {
      return _regeneratorRuntime().wrap(function _callee68$(_context68) {
        while (1) {
          switch (_context68.prev = _context68.next) {
            case 0:
              _context68.t0 = index_esm2017_ac;
              _context68.next = 3;
              return index_esm2017_Ga(t);
            case 3:
              _context68.t1 = _context68.sent;
              _context68.t2 = r;
              return _context68.abrupt("return", (0, _context68.t0)(_context68.t1, _context68.t2));
            case 6:
            case "end":
              return _context68.stop();
          }
        }
      }, _callee68);
    }))), function () {
      i.bc(), t.asyncQueue.enqueueAndForget( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee69() {
        return _regeneratorRuntime().wrap(function _callee69$(_context69) {
          while (1) {
            switch (_context69.prev = _context69.next) {
              case 0:
                _context69.t0 = index_esm2017_hc;
                _context69.next = 3;
                return index_esm2017_Ga(t);
              case 3:
                _context69.t1 = _context69.sent;
                _context69.t2 = r;
                return _context69.abrupt("return", (0, _context69.t0)(_context69.t1, _context69.t2));
              case 6:
              case "end":
                return _context69.stop();
            }
          }
        }, _callee69);
      })));
    };
  }(uh(a), h, u, c);
}
function Wl(t, e) {
  return index_esm2017_Ya(uh(t = index_esm2017_fa(t, ih)), eh(e) ? e : {
    next: e
  });
}

/**
 * Locally writes `mutations` on the async queue.
 * @internal
 */
function zl(t, e) {
  return function (t, e) {
    var n = new index_esm2017_q();
    return t.asyncQueue.enqueueAndForget( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee70() {
      return _regeneratorRuntime().wrap(function _callee70$(_context70) {
        while (1) {
          switch (_context70.prev = _context70.next) {
            case 0:
              _context70.t0 = index_esm2017_Vc;
              _context70.next = 3;
              return index_esm2017_Ua(t);
            case 3:
              _context70.t1 = _context70.sent;
              _context70.t2 = e;
              _context70.t3 = n;
              return _context70.abrupt("return", (0, _context70.t0)(_context70.t1, _context70.t2, _context70.t3));
            case 7:
            case "end":
              return _context70.stop();
          }
        }
      }, _callee70);
    }))), n.promise;
  }(uh(t), e);
}

/**
 * Converts a {@link ViewSnapshot} that contains the single document specified by `ref`
 * to a {@link DocumentSnapshot}.
 */
function Hl(t, e, n) {
  var s = n.docs.get(e._key),
    i = new Ml(t);
  return new Dl(t, i, e._key, s, new Sl(n.hasPendingWrites, n.fromCache), e.converter);
}

/**
 * @license
 * Copyright 2022 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * Compares two `AggregateQuerySnapshot` instances for equality.
 *
 * Two `AggregateQuerySnapshot` instances are considered "equal" if they have
 * underlying queries that compare equal, and the same data.
 *
 * @param left - The first `AggregateQuerySnapshot` to compare.
 * @param right - The second `AggregateQuerySnapshot` to compare.
 *
 * @returns `true` if the objects are "equal", as defined above, or `false`
 * otherwise.
 */
function Jl(t, e) {
  return index_esm2017_ba(t.query, e.query) && deepEqual(t.data(), e.data());
}

/**
 * @license
 * Copyright 2022 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * Calculates the number of documents in the result set of the given query,
 * without actually downloading the documents.
 *
 * Using this function to count the documents is efficient because only the
 * final count, not the documents' data, is downloaded. This function can even
 * count the documents if the result set would be prohibitively large to
 * download entirely (e.g. thousands of documents).
 *
 * The result received from the server is presented, unaltered, without
 * considering any local state. That is, documents in the local cache are not
 * taken into consideration, neither are local modifications not yet
 * synchronized with the server. Previously-downloaded results, if any, are not
 * used: every request using this source necessarily involves a round trip to
 * the server.
 *
 * @param query - The query whose result set size to calculate.
 * @returns A Promise that will be resolved with the count; the count can be
 * retrieved from `snapshot.data().count`, where `snapshot` is the
 * `AggregateQuerySnapshot` to which the returned Promise resolves.
 */
function Yl(t) {
  var e = index_esm2017_fa(t.firestore, ih);
  return function (t, e, n) {
    var s = new index_esm2017_q();
    return t.asyncQueue.enqueueAndForget( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee71() {
      var i, r;
      return _regeneratorRuntime().wrap(function _callee71$(_context71) {
        while (1) {
          switch (_context71.prev = _context71.next) {
            case 0:
              _context71.prev = 0;
              _context71.t0 = Mu;
              _context71.next = 4;
              return index_esm2017_qa(t);
            case 4:
              _context71.t1 = _context71.sent;
              if (!(0, _context71.t0)(_context71.t1)) {
                _context71.next = 13;
                break;
              }
              _context71.next = 8;
              return index_esm2017_Ka(t);
            case 8:
              i = _context71.sent;
              r = new Ca(e, i, n).run();
              s.resolve(r);
              _context71.next = 14;
              break;
            case 13:
              s.reject(new index_esm2017_L(index_esm2017_B.UNAVAILABLE, "Failed to get count result because the client is offline."));
            case 14:
              _context71.next = 19;
              break;
            case 16:
              _context71.prev = 16;
              _context71.t2 = _context71["catch"](0);
              s.reject(_context71.t2);
            case 19:
            case "end":
              return _context71.stop();
          }
        }
      }, _callee71, null, [[0, 16]]);
    }))), s.promise;
  }(uh(e), t, new Ml(e));
}

/**
 * @license
 * Copyright 2022 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
var Xl = {
  maxAttempts: 5
};

/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * A write batch, used to perform multiple writes as a single atomic unit.
 *
 * A `WriteBatch` object can be acquired by calling {@link writeBatch}. It
 * provides methods for adding writes to the write batch. None of the writes
 * will be committed (or visible locally) until {@link WriteBatch.commit} is
 * called.
 */
var Zl = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  /** @hideconstructor */
  function Zl(t, e) {
    _classCallCheck(this, Zl);
    this._firestore = t, this._commitHandler = e, this._mutations = [], this._committed = !1, this._dataReader = Ch(t);
  }
  _createClass(Zl, [{
    key: "set",
    value: function set(t, e, n) {
      this._verifyNotCommitted();
      var s = tf(t, this._firestore),
        i = vl(s.converter, e, n),
        r = xh(this._dataReader, "WriteBatch.set", s._key, i, null !== s.converter, n);
      return this._mutations.push(r.toMutation(s._key, Qn.none())), this;
    }
  }, {
    key: "update",
    value: function update(t, e, n) {
      this._verifyNotCommitted();
      var i = tf(t, this._firestore);
      // For Compat types, we have to "extract" the underlying types before
      // performing validation.
      var r;
      for (var _len19 = arguments.length, s = new Array(_len19 > 3 ? _len19 - 3 : 0), _key19 = 3; _key19 < _len19; _key19++) {
        s[_key19 - 3] = arguments[_key19];
      }
      return r = "string" == typeof (e = getModularInstance(e)) || e instanceof Th ? Lh(this._dataReader, "WriteBatch.update", i._key, e, n, s) : Bh(this._dataReader, "WriteBatch.update", i._key, e), this._mutations.push(r.toMutation(i._key, Qn.exists(!0))), this;
    }
    /**
     * Deletes the document referred to by the provided {@link DocumentReference}.
     *
     * @param documentRef - A reference to the document to be deleted.
     * @returns This `WriteBatch` instance. Used for chaining method calls.
     */
  }, {
    key: "delete",
    value: function _delete(t) {
      this._verifyNotCommitted();
      var e = tf(t, this._firestore);
      return this._mutations = this._mutations.concat(new is(e._key, Qn.none())), this;
    }
    /**
     * Commits all of the writes in this write batch as a single atomic unit.
     *
     * The result of these writes will only be reflected in document reads that
     * occur after the returned promise resolves. If the client is offline, the
     * write fails. If you would like to see local modifications or buffer writes
     * until the client is online, use the full Firestore SDK.
     *
     * @returns A `Promise` resolved once all of the writes in the batch have been
     * successfully written to the backend as an atomic unit (note that it won't
     * resolve while you're offline).
     */
  }, {
    key: "commit",
    value: function commit() {
      return this._verifyNotCommitted(), this._committed = !0, this._mutations.length > 0 ? this._commitHandler(this._mutations) : Promise.resolve();
    }
  }, {
    key: "_verifyNotCommitted",
    value: function _verifyNotCommitted() {
      if (this._committed) throw new index_esm2017_L(index_esm2017_B.FAILED_PRECONDITION, "A write batch can no longer be used after commit() has been called.");
    }
  }]);
  return Zl;
}()));
function tf(t, e) {
  if ((t = getModularInstance(t)).firestore !== e) throw new index_esm2017_L(index_esm2017_B.INVALID_ARGUMENT, "Provided document reference is from a different Firestore instance.");
  return t;
}

/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
// TODO(mrschmidt) Consider using `BaseTransaction` as the base class in the
// legacy SDK.
/**
 * A reference to a transaction.
 *
 * The `Transaction` object passed to a transaction's `updateFunction` provides
 * the methods to read and write data within the transaction context. See
 * {@link runTransaction}.
 */
/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * A reference to a transaction.
 *
 * The `Transaction` object passed to a transaction's `updateFunction` provides
 * the methods to read and write data within the transaction context. See
 * {@link runTransaction}.
 */
var ef = /*#__PURE__*/(/* unused pure expression or super */ null && (function (_ref68) {
  _inherits(ef, _ref68);
  var _super51 = _createSuper(ef);
  // This class implements the same logic as the Transaction API in the Lite SDK
  // but is subclassed in order to return its own DocumentSnapshot types.
  /** @hideconstructor */
  function ef(t, e) {
    var _this215;
    _classCallCheck(this, ef);
    _this215 = _super51.call(this, t, e), _this215._firestore = t;
    return _this215;
  }
  /**
   * Reads the document referenced by the provided {@link DocumentReference}.
   *
   * @param documentRef - A reference to the document to be read.
   * @returns A `DocumentSnapshot` with the read data.
   */
  _createClass(ef, [{
    key: "get",
    value: function get(t) {
      var _this216 = this;
      var e = tf(t, this._firestore),
        n = new Ml(this._firestore);
      return _get(_getPrototypeOf(ef.prototype), "get", this).call(this, t).then(function (t) {
        return new Dl(_this216._firestore, n, e._key, t._document, new Sl( /* hasPendingWrites= */!1, /* fromCache= */!1), e.converter);
      });
    }
  }]);
  return ef;
}( /*#__PURE__*/function () {
  /** @hideconstructor */
  function _class4(t, e) {
    _classCallCheck(this, _class4);
    this._firestore = t, this._transaction = e, this._dataReader = Ch(t);
  }
  /**
   * Reads the document referenced by the provided {@link DocumentReference}.
   *
   * @param documentRef - A reference to the document to be read.
   * @returns A `DocumentSnapshot` with the read data.
   */
  _createClass(_class4, [{
    key: "get",
    value: function get(t) {
      var _this217 = this;
      var e = tf(t, this._firestore),
        n = new Vl(this._firestore);
      return this._transaction.lookup([e._key]).then(function (t) {
        if (!t || 1 !== t.length) return index_esm2017_O();
        var s = t[0];
        if (s.isFoundDocument()) return new Yh(_this217._firestore, n, s.key, s, e.converter);
        if (s.isNoDocument()) return new Yh(_this217._firestore, n, e._key, null, e.converter);
        throw index_esm2017_O();
      });
    }
  }, {
    key: "set",
    value: function set(t, e, n) {
      var s = tf(t, this._firestore),
        i = vl(s.converter, e, n),
        r = xh(this._dataReader, "Transaction.set", s._key, i, null !== s.converter, n);
      return this._transaction.set(s._key, r), this;
    }
  }, {
    key: "update",
    value: function update(t, e, n) {
      var i = tf(t, this._firestore);
      // For Compat types, we have to "extract" the underlying types before
      // performing validation.
      var r;
      for (var _len20 = arguments.length, s = new Array(_len20 > 3 ? _len20 - 3 : 0), _key20 = 3; _key20 < _len20; _key20++) {
        s[_key20 - 3] = arguments[_key20];
      }
      return r = "string" == typeof (e = getModularInstance(e)) || e instanceof Th ? Lh(this._dataReader, "Transaction.update", i._key, e, n, s) : Bh(this._dataReader, "Transaction.update", i._key, e), this._transaction.update(i._key, r), this;
    }
    /**
     * Deletes the document referred to by the provided {@link DocumentReference}.
     *
     * @param documentRef - A reference to the document to be deleted.
     * @returns This `Transaction` instance. Used for chaining method calls.
     */
  }, {
    key: "delete",
    value: function _delete(t) {
      var e = tf(t, this._firestore);
      return this._transaction.delete(e._key), this;
    }
  }]);
  return _class4;
}())));
/**
 * Executes the given `updateFunction` and then attempts to commit the changes
 * applied within the transaction. If any document read within the transaction
 * has changed, Cloud Firestore retries the `updateFunction`. If it fails to
 * commit after 5 attempts, the transaction fails.
 *
 * The maximum number of writes allowed in a single transaction is 500.
 *
 * @param firestore - A reference to the Firestore database to run this
 * transaction against.
 * @param updateFunction - The function to execute within the transaction
 * context.
 * @param options - An options object to configure maximum number of attempts to
 * commit.
 * @returns If the transaction completed successfully or was explicitly aborted
 * (the `updateFunction` returned a failed promise), the promise returned by the
 * `updateFunction `is returned here. Otherwise, if the transaction failed, a
 * rejected promise with the corresponding failure error is returned.
 */
function nf(t, e, n) {
  t = index_esm2017_fa(t, ih);
  var s = Object.assign(Object.assign({}, Xl), n);
  !function (t) {
    if (t.maxAttempts < 1) throw new index_esm2017_L(index_esm2017_B.INVALID_ARGUMENT, "Max attempts must be at least 1");
  }(s);
  return function (t, e, n) {
    var s = new index_esm2017_q();
    return t.asyncQueue.enqueueAndForget( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee72() {
      var i;
      return _regeneratorRuntime().wrap(function _callee72$(_context72) {
        while (1) {
          switch (_context72.prev = _context72.next) {
            case 0:
              _context72.next = 2;
              return index_esm2017_Ka(t);
            case 2:
              i = _context72.sent;
              new index_esm2017_Na(t.asyncQueue, i, n, e, s).run();
            case 4:
            case "end":
              return _context72.stop();
          }
        }
      }, _callee72);
    }))), s.promise;
  }(uh(t), function (n) {
    return e(new ef(t, n));
  }, s);
}

/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * Returns a sentinel for use with {@link @firebase/firestore/lite#(updateDoc:1)} or
 * {@link @firebase/firestore/lite#(setDoc:1)} with `{merge: true}` to mark a field for deletion.
 */
function sf() {
  return new Nh("deleteField");
}

/**
 * Returns a sentinel used with {@link @firebase/firestore/lite#(setDoc:1)} or {@link @firebase/firestore/lite#(updateDoc:1)} to
 * include a server-generated timestamp in the written data.
 */
function rf() {
  return new Oh("serverTimestamp");
}

/**
 * Returns a special value that can be used with {@link @firebase/firestore/lite#(setDoc:1)} or {@link
 * @firebase/firestore/lite#(updateDoc:1)} that tells the server to union the given elements with any array
 * value that already exists on the server. Each specified element that doesn't
 * already exist in the array will be added to the end. If the field being
 * modified is not already an array it will be overwritten with an array
 * containing exactly the specified elements.
 *
 * @param elements - The elements to union into the array.
 * @returns The `FieldValue` sentinel for use in a call to `setDoc()` or
 * `updateDoc()`.
 */
function of() {
  for (var _len21 = arguments.length, t = new Array(_len21), _key21 = 0; _key21 < _len21; _key21++) {
    t[_key21] = arguments[_key21];
  }
  // NOTE: We don't actually parse the data until it's used in set() or
  // update() since we'd need the Firestore instance to do this.
  return new Mh("arrayUnion", t);
}

/**
 * Returns a special value that can be used with {@link (setDoc:1)} or {@link
 * updateDoc:1} that tells the server to remove the given elements from any
 * array value that already exists on the server. All instances of each element
 * specified will be removed from the array. If the field being modified is not
 * already an array it will be overwritten with an empty array.
 *
 * @param elements - The elements to remove from the array.
 * @returns The `FieldValue` sentinel for use in a call to `setDoc()` or
 * `updateDoc()`
 */
function uf() {
  for (var _len22 = arguments.length, t = new Array(_len22), _key22 = 0; _key22 < _len22; _key22++) {
    t[_key22] = arguments[_key22];
  }
  // NOTE: We don't actually parse the data until it's used in set() or
  // update() since we'd need the Firestore instance to do this.
  return new Fh("arrayRemove", t);
}

/**
 * Returns a special value that can be used with {@link @firebase/firestore/lite#(setDoc:1)} or {@link
 * @firebase/firestore/lite#(updateDoc:1)} that tells the server to increment the field's current value by
 * the given value.
 *
 * If either the operand or the current field value uses floating point
 * precision, all arithmetic follows IEEE 754 semantics. If both values are
 * integers, values outside of JavaScript's safe number range
 * (`Number.MIN_SAFE_INTEGER` to `Number.MAX_SAFE_INTEGER`) are also subject to
 * precision loss. Furthermore, once processed by the Firestore backend, all
 * integer operations are capped between -2^63 and 2^63-1.
 *
 * If the current field value is not of type `number`, or if the field does not
 * yet exist, the transformation sets the field to the given value.
 *
 * @param n - The value to increment by.
 * @returns The `FieldValue` sentinel for use in a call to `setDoc()` or
 * `updateDoc()`
 */
function cf(t) {
  return new $h("increment", t);
}

/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * Creates a write batch, used for performing multiple writes as a single
 * atomic operation. The maximum number of writes allowed in a single {@link WriteBatch}
 * is 500.
 *
 * Unlike transactions, write batches are persisted offline and therefore are
 * preferable when you don't need to condition your writes on read data.
 *
 * @returns A {@link WriteBatch} that can be used to atomically execute multiple
 * writes.
 */
function af(t) {
  return uh(t = index_esm2017_fa(t, ih)), new Zl(t, function (e) {
    return zl(t, e);
  });
}

/**
 * @license
 * Copyright 2021 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
function hf(t, e) {
  var n;
  var s = uh(t = index_esm2017_fa(t, ih));
  // PORTING NOTE: We don't return an error if the user has not enabled
  // persistence since `enableIndexeddbPersistence()` can fail on the Web.
  if (!(null === (n = s.offlineComponents) || void 0 === n ? void 0 : n.indexBackfillerScheduler)) return index_esm2017_N("Cannot enable indexes when persistence is disabled"), Promise.resolve();
  var i = function (t) {
    var e = "string" == typeof t ? function (t) {
        try {
          return JSON.parse(t);
        } catch (t) {
          throw new index_esm2017_L(index_esm2017_B.INVALID_ARGUMENT, "Failed to parse JSON: " + (null == t ? void 0 : t.message));
        }
      }(t) : t,
      n = [];
    if (Array.isArray(e.indexes)) {
      var _iterator87 = _createForOfIteratorHelper(e.indexes),
        _step87;
      try {
        for (_iterator87.s(); !(_step87 = _iterator87.n()).done;) {
          var _t118 = _step87.value;
          var _e54 = lf(_t118, "collectionGroup"),
            _s34 = [];
          if (Array.isArray(_t118.fields)) {
            var _iterator88 = _createForOfIteratorHelper(_t118.fields),
              _step88;
            try {
              for (_iterator88.s(); !(_step88 = _iterator88.n()).done;) {
                var _e55 = _step88.value;
                var _t119 = zh("setIndexConfiguration", lf(_e55, "fieldPath"));
                "CONTAINS" === _e55.arrayConfig ? _s34.push(new dt(_t119, 2 /* IndexKind.CONTAINS */)) : "ASCENDING" === _e55.order ? _s34.push(new dt(_t119, 0 /* IndexKind.ASCENDING */)) : "DESCENDING" === _e55.order && _s34.push(new dt(_t119, 1 /* IndexKind.DESCENDING */));
              }
            } catch (err) {
              _iterator88.e(err);
            } finally {
              _iterator88.f();
            }
          }
          n.push(new at(at.UNKNOWN_ID, _e54, _s34, wt.empty()));
        }
      } catch (err) {
        _iterator87.e(err);
      } finally {
        _iterator87.f();
      }
    }
    return n;
  }(e);
  return index_esm2017_La(s).then(function (t) {
    return function () {
      var _ref70 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee73(t, e) {
        var n, s, i;
        return _regeneratorRuntime().wrap(function _callee73$(_context73) {
          while (1) {
            switch (_context73.prev = _context73.next) {
              case 0:
                n = $(t), s = n.indexManager, i = [];
                return _context73.abrupt("return", n.persistence.runTransaction("Configure indexes", "readwrite", function (t) {
                  return s.getFieldIndexes(t).next(function (n) {
                    return function (t, e, n, s, i) {
                      t = _toConsumableArray(t), e = _toConsumableArray(e), t.sort(n), e.sort(n);
                      var r = t.length,
                        o = e.length;
                      var u = 0,
                        c = 0;
                      for (; u < o && c < r;) {
                        var _r9 = n(t[c], e[u]);
                        _r9 < 0 ?
                        // The element was removed if the next element in our ordered
                        // walkthrough is only in `before`.
                        i(t[c++]) : _r9 > 0 ?
                        // The element was added if the next element in our ordered walkthrough
                        // is only in `after`.
                        s(e[u++]) : (u++, c++);
                      }
                      for (; u < o;) {
                        s(e[u++]);
                      }
                      for (; c < r;) {
                        i(t[c++]);
                      }
                    }(n, e, ft, function (e) {
                      i.push(s.addFieldIndex(t, e));
                    }, function (e) {
                      i.push(s.deleteFieldIndex(t, e));
                    });
                  }).next(function () {
                    return At.waitFor(i);
                  });
                }));
              case 2:
              case "end":
                return _context73.stop();
            }
          }
        }, _callee73);
      }));
      return function (_x136, _x137) {
        return _ref70.apply(this, arguments);
      };
    }()
    /**
    * @license
    * Copyright 2019 Google LLC
    *
    * Licensed under the Apache License, Version 2.0 (the "License");
    * you may not use this file except in compliance with the License.
    * You may obtain a copy of the License at
    *
    *   http://www.apache.org/licenses/LICENSE-2.0
    *
    * Unless required by applicable law or agreed to in writing, software
    * distributed under the License is distributed on an "AS IS" BASIS,
    * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    * See the License for the specific language governing permissions and
    * limitations under the License.
    */
    // The format of the LocalStorage key that stores the client state is:
    //     firestore_clients_<persistence_prefix>_<instance_key>
    (t, i);
  });
}
function lf(t, e) {
  if ("string" != typeof t[e]) throw new index_esm2017_L(index_esm2017_B.INVALID_ARGUMENT, "Missing string value for: " + e);
  return t[e];
}

/**
 * Cloud Firestore
 *
 * @packageDocumentation
 */
!function (t) {
  var e = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : !0;
  !function (t) {
    index_esm2017_v = t;
  }(SDK_VERSION), _registerComponent(new Component("firestore", function (t, _ref71) {
    var n = _ref71.instanceIdentifier,
      s = _ref71.options;
    var i = t.getProvider("app").getImmediate(),
      r = new ih(new index_esm2017_Q(t.getProvider("auth-internal")), new index_esm2017_H(t.getProvider("app-check-internal")), function (t, e) {
        if (!Object.prototype.hasOwnProperty.apply(t.options, ["projectId"])) throw new index_esm2017_L(index_esm2017_B.INVALID_ARGUMENT, '"projectId" not provided in firebase.initializeApp.');
        return new Ft(t.options.projectId, e);
      }(i, n), i);
    return s = Object.assign({
      useFetchStreams: e
    }, s), r._setSettings(s), r;
  }, "PUBLIC").setMultipleInstances(!0)), registerVersion(b, "3.8.0", t),
  // BUILD_TARGET will be replaced by values like esm5, esm2017, cjs5, etc during the compilation
  registerVersion(b, "3.8.0", "esm2017");
}();

;// CONCATENATED MODULE: ./node_modules/firebase/firestore/dist/esm/index.esm.js

;// CONCATENATED MODULE: ./src/service/firebase.js
// Import the functions you need from the SDKs you need
// TODO: Add SDKs for Firebase products that you want to use
// https://firebase.google.com/docs/web/setup#available-libraries
// Your web app's Firebase configuration
// For Firebase JS SDK v7.20.0 and later, measurementId is optional
var firebaseConfig={apiKey:'AIzaSyCEfMq8AuvRRKljQq5oGgrbTeR8o5fXCe8',authDomain:'swap-b7d41.firebaseapp.com',projectId:'swap-b7d41',storageBucket:'swap-b7d41.appspot.com',messagingSenderId:'567845549205',appId:'1:567845549205:web:8cd920f90428dbf981d79c',measurementId:'G-W42SKKZSQP'};// Initialize Firebase
var app=initializeApp(firebaseConfig);var analytics=getAnalytics(app);var firebase_db=oh(app);if(window.location.hostname==='localhost'){ga(firebase_db,'localhost',8080);}var logEvent=function logEvent(eventName,eventObj){_logEvent(analytics,eventName,eventObj);};var writeDoc=/*#__PURE__*/(/* unused pure expression or super */ null && (function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(collectionPath,doc){var docRef;return _regeneratorRuntime().wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;_context.next=3;return addDoc(collection(firebase_db,collectionPath),doc);case 3:docRef=_context.sent;console.log('Document written with ID: ',docRef.id);_context.next=10;break;case 7:_context.prev=7;_context.t0=_context["catch"](0);console.error('Error adding document: ',_context.t0);case 10:case"end":return _context.stop();}}},_callee,null,[[0,7]]);}));return function writeDoc(_x,_x2){return _ref.apply(this,arguments);};}()));
;// CONCATENATED MODULE: ./src/service/aws.js
// Import the functions you need from the SDKs you need
var url='https://76je3cz5bd.execute-api.us-east-1.amazonaws.com/default/swapTestFunction';var logToDb=/*#__PURE__*/function(){var _ref=asyncToGenerator_asyncToGenerator(/*#__PURE__*/regeneratorRuntime_regeneratorRuntime().mark(function _callee(tag,eventObj){var payload;return regeneratorRuntime_regeneratorRuntime().wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;eventObj.table='dynamotest';eventObj.tag=tag;payload=JSON.stringify(eventObj);_context.next=6;return fetch(url,{method:'POST',headers:{'Content-Type':'application/json'},body:payload});case 6:_context.next=11;break;case 8:_context.prev=8;_context.t0=_context["catch"](0);console.error(_context.t0);case 11:case"end":return _context.stop();}}},_callee,null,[[0,8]]);}));return function logToDb(_x,_x2){return _ref.apply(this,arguments);};}();var logErrorEvent=/*#__PURE__*/function(){var _ref2=asyncToGenerator_asyncToGenerator(/*#__PURE__*/regeneratorRuntime_regeneratorRuntime().mark(function _callee2(eventObj){var payload;return regeneratorRuntime_regeneratorRuntime().wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.prev=0;eventObj.table='web-errors';payload=JSON.stringify(eventObj);_context2.next=5;return fetch(url,{method:'POST',headers:{'Content-Type':'application/json'},body:payload});case 5:_context2.next=10;break;case 7:_context2.prev=7;_context2.t0=_context2["catch"](0);console.error(_context2.t0);case 10:case"end":return _context2.stop();}}},_callee2,null,[[0,7]]);}));return function logErrorEvent(_x3){return _ref2.apply(this,arguments);};}();
;// CONCATENATED MODULE: ./src/service/analytics.js
var analytics_root;var logLocalHost=false;var setStore=function setStore(rootStore){analytics_root=rootStore;};var addCommonFields=function addCommonFields(obj){var o=_objectSpread2(_objectSpread2({},obj),{},{timestamp:new Date().toISOString(),gamever:analytics_root.gameStore.gameVersion,user:analytics_root.gameStore.uuid,site:window.location.href});if(analytics_root.puzzle){o=_objectSpread2(_objectSpread2({},o),{},{puzzle_id:analytics_root.puzzle.id});}if(analytics_root.puzzleStore.chapter){o=_objectSpread2(_objectSpread2({},o),{},{chapter_id:analytics_root.puzzleStore.chapter.id});}return o;};var analytics_logEvent=/*#__PURE__*/function(){var _ref=asyncToGenerator_asyncToGenerator(/*#__PURE__*/regeneratorRuntime_regeneratorRuntime().mark(function _callee(eventName){var eventObj,p,_args=arguments;return regeneratorRuntime_regeneratorRuntime().wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:eventObj=_args.length>1&&_args[1]!==undefined?_args[1]:{};if(!(!logLocalHost&&window.location.href.includes('localhost'))){_context.next=3;break;}return _context.abrupt("return");case 3:p=addCommonFields(eventObj);logEvent(eventName,p);case 5:case"end":return _context.stop();}}},_callee);}));return function logEvent(_x){return _ref.apply(this,arguments);};}();var analytics_logToDb=/*#__PURE__*/function(){var _ref2=asyncToGenerator_asyncToGenerator(/*#__PURE__*/regeneratorRuntime_regeneratorRuntime().mark(function _callee2(tag,obj){var p;return regeneratorRuntime_regeneratorRuntime().wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:if(!(!logLocalHost&&window.location.href.includes('localhost'))){_context2.next=2;break;}return _context2.abrupt("return");case 2:p=addCommonFields(obj);_context2.next=5;return logToDb(tag,p);case 5:case"end":return _context2.stop();}}},_callee2);}));return function logToDb(_x2,_x3){return _ref2.apply(this,arguments);};}();var logAppError=/*#__PURE__*/function(){var _ref3=asyncToGenerator_asyncToGenerator(/*#__PURE__*/regeneratorRuntime_regeneratorRuntime().mark(function _callee3(obj){var p;return regeneratorRuntime_regeneratorRuntime().wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:if(!window.location.href.includes('localhost')){_context3.next=2;break;}return _context3.abrupt("return");case 2:p=addCommonFields(obj);_context3.next=5;return logErrorEvent(p);case 5:case"end":return _context3.stop();}}},_callee3);}));return function logAppError(_x4){return _ref3.apply(this,arguments);};}();var key={feedback_question:'feedback_question',feedback_form:'feedback_form',chapter_started:'chapter_started',chapter_ended:'chapter_ended',attrib_link:'attrib_link',tutorial_begin:'tutorial_begin',tutorial_complete:'tutorial_complete',level_start:'level_start',level_end:'level_end',puzzle_skip:'puzzle_skip',show_hint:'show_hint',app_started:'app_started'};/*
firebase collections:
  users
  actions
*/
;// CONCATENATED MODULE: ./src/components/errorHandler.js
window.onerror=function(event,source,lineno,colno,error){// error is { message, stack }, both strings
handleError(error.message,error.stack);};var ErrorFallback=function ErrorFallback(error,resetErrorBoundary){return/*#__PURE__*/(0,jsx_runtime.jsxs)(Box_Box,{children:["Sorry, there was an error.",/*#__PURE__*/(0,jsx_runtime.jsx)("br",{}),/*#__PURE__*/(0,jsx_runtime.jsx)("button",{click:resetErrorBoundary,children:"return home"})]});};var handleError=function handleError(error,info){var errorObj={error:error,info:info};logAppError(errorObj);};var ErrorHandler=function ErrorHandler(props){return/*#__PURE__*/(0,jsx_runtime.jsx)(react_error_boundary_umd.ErrorBoundary,{FallbackComponent:ErrorFallback,onError:handleError,children:props.children});};/* harmony default export */ var errorHandler = (ErrorHandler);
// EXTERNAL MODULE: ./node_modules/@mui/utils/esm/capitalize.js
var capitalize = __webpack_require__(7312);
// EXTERNAL MODULE: ./node_modules/@mui/utils/esm/generateUtilityClass/generateUtilityClass.js
var generateUtilityClass_generateUtilityClass = __webpack_require__(1217);
// EXTERNAL MODULE: ./node_modules/@mui/utils/esm/composeClasses/composeClasses.js
var composeClasses = __webpack_require__(4419);
// EXTERNAL MODULE: ./node_modules/@mui/system/esm/useThemeProps/useThemeProps.js
var useThemeProps = __webpack_require__(6083);
// EXTERNAL MODULE: ./node_modules/@mui/system/esm/createStyled.js + 1 modules
var createStyled = __webpack_require__(4046);
;// CONCATENATED MODULE: ./node_modules/@mui/system/esm/styled.js

var styled = (0,createStyled/* default */.ZP)();
/* harmony default export */ var esm_styled = (styled);
// EXTERNAL MODULE: ./node_modules/@mui/system/esm/createTheme/createTheme.js + 3 modules
var createTheme_createTheme = __webpack_require__(5080);
;// CONCATENATED MODULE: ./node_modules/@mui/system/esm/Container/createContainer.js



var createContainer_excluded = ["className", "component", "disableGutters", "fixed", "maxWidth", "classes"];








var createContainer_defaultTheme = (0,createTheme_createTheme/* default */.Z)();
var defaultCreateStyledComponent = esm_styled('div', {
  name: 'MuiContainer',
  slot: 'Root',
  overridesResolver: function overridesResolver(props, styles) {
    var ownerState = props.ownerState;
    return [styles.root, styles["maxWidth".concat((0,capitalize/* default */.Z)(String(ownerState.maxWidth)))], ownerState.fixed && styles.fixed, ownerState.disableGutters && styles.disableGutters];
  }
});
var useThemePropsDefault = function useThemePropsDefault(inProps) {
  return (0,useThemeProps/* default */.Z)({
    props: inProps,
    name: 'MuiContainer',
    defaultTheme: createContainer_defaultTheme
  });
};
var useUtilityClasses = function useUtilityClasses(ownerState, componentName) {
  var getContainerUtilityClass = function getContainerUtilityClass(slot) {
    return (0,generateUtilityClass_generateUtilityClass/* default */.Z)(componentName, slot);
  };
  var classes = ownerState.classes,
    fixed = ownerState.fixed,
    disableGutters = ownerState.disableGutters,
    maxWidth = ownerState.maxWidth;
  var slots = {
    root: ['root', maxWidth && "maxWidth".concat((0,capitalize/* default */.Z)(String(maxWidth))), fixed && 'fixed', disableGutters && 'disableGutters']
  };
  return (0,composeClasses/* default */.Z)(slots, getContainerUtilityClass, classes);
};
function createContainer() {
  var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
  var _options$createStyled = options.createStyledComponent,
    createStyledComponent = _options$createStyled === void 0 ? defaultCreateStyledComponent : _options$createStyled,
    _options$useThemeProp = options.useThemeProps,
    useThemeProps = _options$useThemeProp === void 0 ? useThemePropsDefault : _options$useThemeProp,
    _options$componentNam = options.componentName,
    componentName = _options$componentNam === void 0 ? 'MuiContainer' : _options$componentNam;
  var ContainerRoot = createStyledComponent(function (_ref) {
    var theme = _ref.theme,
      ownerState = _ref.ownerState;
    return (0,esm_extends/* default */.Z)({
      width: '100%',
      marginLeft: 'auto',
      boxSizing: 'border-box',
      marginRight: 'auto',
      display: 'block'
    }, !ownerState.disableGutters && (0,esm_defineProperty/* default */.Z)({
      paddingLeft: theme.spacing(2),
      paddingRight: theme.spacing(2)
    }, theme.breakpoints.up('sm'), {
      paddingLeft: theme.spacing(3),
      paddingRight: theme.spacing(3)
    }));
  }, function (_ref3) {
    var theme = _ref3.theme,
      ownerState = _ref3.ownerState;
    return ownerState.fixed && Object.keys(theme.breakpoints.values).reduce(function (acc, breakpointValueKey) {
      var breakpoint = breakpointValueKey;
      var value = theme.breakpoints.values[breakpoint];
      if (value !== 0) {
        // @ts-ignore
        acc[theme.breakpoints.up(breakpoint)] = {
          maxWidth: "".concat(value).concat(theme.breakpoints.unit)
        };
      }
      return acc;
    }, {});
  }, function (_ref4) {
    var theme = _ref4.theme,
      ownerState = _ref4.ownerState;
    return (0,esm_extends/* default */.Z)({}, ownerState.maxWidth === 'xs' && (0,esm_defineProperty/* default */.Z)({}, theme.breakpoints.up('xs'), {
      // @ts-ignore module augmentation fails if custom breakpoints are used
      maxWidth: Math.max(theme.breakpoints.values.xs, 444)
    }), ownerState.maxWidth &&
    // @ts-ignore module augmentation fails if custom breakpoints are used
    ownerState.maxWidth !== 'xs' && (0,esm_defineProperty/* default */.Z)({}, theme.breakpoints.up(ownerState.maxWidth), {
      // @ts-ignore module augmentation fails if custom breakpoints are used
      maxWidth: "".concat(theme.breakpoints.values[ownerState.maxWidth]).concat(theme.breakpoints.unit)
    }));
  });
  var Container = /*#__PURE__*/react.forwardRef(function Container(inProps, ref) {
    var props = useThemeProps(inProps);
    var className = props.className,
      _props$component = props.component,
      component = _props$component === void 0 ? 'div' : _props$component,
      _props$disableGutters = props.disableGutters,
      disableGutters = _props$disableGutters === void 0 ? false : _props$disableGutters,
      _props$fixed = props.fixed,
      fixed = _props$fixed === void 0 ? false : _props$fixed,
      _props$maxWidth = props.maxWidth,
      maxWidth = _props$maxWidth === void 0 ? 'lg' : _props$maxWidth,
      other = (0,objectWithoutPropertiesLoose/* default */.Z)(props, createContainer_excluded);
    var ownerState = (0,esm_extends/* default */.Z)({}, props, {
      component: component,
      disableGutters: disableGutters,
      fixed: fixed,
      maxWidth: maxWidth
    });

    // @ts-ignore module augmentation fails if custom breakpoints are used
    var classes = useUtilityClasses(ownerState, componentName);
    return /*#__PURE__*/(
      // @ts-ignore theme is injected by the styled util
      (0,jsx_runtime.jsx)(ContainerRoot, (0,esm_extends/* default */.Z)({
        as: component
        // @ts-ignore module augmentation fails if custom breakpoints are used
        ,

        ownerState: ownerState,
        className: (0,clsx_m/* default */.Z)(classes.root, className),
        ref: ref
      }, other))
    );
  });
   false ? 0 : void 0;
  return Container;
}
// EXTERNAL MODULE: ./node_modules/@mui/material/utils/capitalize.js
var utils_capitalize = __webpack_require__(4036);
// EXTERNAL MODULE: ./node_modules/@mui/material/styles/styled.js
var styles_styled = __webpack_require__(6934);
;// CONCATENATED MODULE: ./node_modules/@mui/material/Container/Container.js
/* eslint-disable material-ui/mui-name-matches-component-name */





var Container = createContainer({
  createStyledComponent: (0,styles_styled/* default */.ZP)('div', {
    name: 'MuiContainer',
    slot: 'Root',
    overridesResolver: function overridesResolver(props, styles) {
      var ownerState = props.ownerState;
      return [styles.root, styles["maxWidth".concat((0,utils_capitalize/* default */.Z)(String(ownerState.maxWidth)))], ownerState.fixed && styles.fixed, ownerState.disableGutters && styles.disableGutters];
    }
  }),
  useThemeProps: function useThemeProps(inProps) {
    return (0,styles_useThemeProps/* default */.Z)({
      props: inProps,
      name: 'MuiContainer'
    });
  }
});
 false ? 0 : void 0;
/* harmony default export */ var Container_Container = (Container);
// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js
var arrayWithHoles = __webpack_require__(3878);
// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/iterableToArray.js
var iterableToArray = __webpack_require__(9199);
// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/nonIterableRest.js
var nonIterableRest = __webpack_require__(5267);
;// CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/esm/toArray.js




function _toArray(arr) {
  return (0,arrayWithHoles/* default */.Z)(arr) || (0,iterableToArray/* default */.Z)(arr) || (0,unsupportedIterableToArray/* default */.Z)(arr) || (0,nonIterableRest/* default */.Z)();
}
;// CONCATENATED MODULE: ./node_modules/@remix-run/router/dist/router.js












/**
 * @remix-run/router v1.2.1
 *
 * Copyright (c) Remix Software Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE.md file in the root directory of this source tree.
 *
 * @license MIT
 */
function router_extends() {
  router_extends = Object.assign ? Object.assign.bind() : function (target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return router_extends.apply(this, arguments);
}

////////////////////////////////////////////////////////////////////////////////
//#region Types and Constants
////////////////////////////////////////////////////////////////////////////////

/**
 * Actions represent the type of change to a location value.
 */
var Action;
(function (Action) {
  /**
   * A POP indicates a change to an arbitrary index in the history stack, such
   * as a back or forward navigation. It does not describe the direction of the
   * navigation, only that the current index changed.
   *
   * Note: This is the default action for newly created history objects.
   */
  Action["Pop"] = "POP";
  /**
   * A PUSH indicates a new entry being added to the history stack, such as when
   * a link is clicked and a new page loads. When this happens, all subsequent
   * entries in the stack are lost.
   */

  Action["Push"] = "PUSH";
  /**
   * A REPLACE indicates the entry at the current index in the history stack
   * being replaced by a new one.
   */

  Action["Replace"] = "REPLACE";
})(Action || (Action = {}));
var PopStateEventType = "popstate";
/**
 * Memory history stores the current location in memory. It is designed for use
 * in stateful non-browser environments like tests and React Native.
 */

function router_createMemoryHistory(options) {
  if (options === void 0) {
    options = {};
  }
  var _options = options,
    _options$initialEntri = _options.initialEntries,
    initialEntries = _options$initialEntri === void 0 ? ["/"] : _options$initialEntri,
    initialIndex = _options.initialIndex,
    _options$v5Compat = _options.v5Compat,
    v5Compat = _options$v5Compat === void 0 ? false : _options$v5Compat;
  var entries; // Declare so we can access from createMemoryLocation

  entries = initialEntries.map(function (entry, index) {
    return createMemoryLocation(entry, typeof entry === "string" ? null : entry.state, index === 0 ? "default" : undefined);
  });
  var index = clampIndex(initialIndex == null ? entries.length - 1 : initialIndex);
  var action = Action.Pop;
  var listener = null;
  function clampIndex(n) {
    return Math.min(Math.max(n, 0), entries.length - 1);
  }
  function getCurrentLocation() {
    return entries[index];
  }
  function createMemoryLocation(to, state, key) {
    if (state === void 0) {
      state = null;
    }
    var location = createLocation(entries ? getCurrentLocation().pathname : "/", to, state, key);
    warning$1(location.pathname.charAt(0) === "/", "relative pathnames are not supported in memory history: " + JSON.stringify(to));
    return location;
  }
  var history = {
    get index() {
      return index;
    },
    get action() {
      return action;
    },
    get location() {
      return getCurrentLocation();
    },
    createHref: function createHref(to) {
      return typeof to === "string" ? to : router_createPath(to);
    },
    encodeLocation: function encodeLocation(to) {
      var path = typeof to === "string" ? parsePath(to) : to;
      return {
        pathname: path.pathname || "",
        search: path.search || "",
        hash: path.hash || ""
      };
    },
    push: function push(to, state) {
      action = Action.Push;
      var nextLocation = createMemoryLocation(to, state);
      index += 1;
      entries.splice(index, entries.length, nextLocation);
      if (v5Compat && listener) {
        listener({
          action: action,
          location: nextLocation
        });
      }
    },
    replace: function replace(to, state) {
      action = Action.Replace;
      var nextLocation = createMemoryLocation(to, state);
      entries[index] = nextLocation;
      if (v5Compat && listener) {
        listener({
          action: action,
          location: nextLocation
        });
      }
    },
    go: function go(delta) {
      action = Action.Pop;
      index = clampIndex(index + delta);
      if (listener) {
        listener({
          action: action,
          location: getCurrentLocation()
        });
      }
    },
    listen: function listen(fn) {
      listener = fn;
      return function () {
        listener = null;
      };
    }
  };
  return history;
}
/**
 * Browser history stores the location in regular URLs. This is the standard for
 * most web apps, but it requires some configuration on the server to ensure you
 * serve the same app at multiple URLs.
 *
 * @see https://github.com/remix-run/history/tree/main/docs/api-reference.md#createbrowserhistory
 */

function router_createBrowserHistory(options) {
  if (options === void 0) {
    options = {};
  }
  function createBrowserLocation(window, globalHistory) {
    var _window$location = window.location,
      pathname = _window$location.pathname,
      search = _window$location.search,
      hash = _window$location.hash;
    return createLocation("", {
      pathname: pathname,
      search: search,
      hash: hash
    },
    // state defaults to `null` because `window.history.state` does
    globalHistory.state && globalHistory.state.usr || null, globalHistory.state && globalHistory.state.key || "default");
  }
  function createBrowserHref(window, to) {
    return typeof to === "string" ? to : router_createPath(to);
  }
  return getUrlBasedHistory(createBrowserLocation, createBrowserHref, null, options);
}
/**
 * Hash history stores the location in window.location.hash. This makes it ideal
 * for situations where you don't want to send the location to the server for
 * some reason, either because you do cannot configure it or the URL space is
 * reserved for something else.
 *
 * @see https://github.com/remix-run/history/tree/main/docs/api-reference.md#createhashhistory
 */

function router_createHashHistory(options) {
  if (options === void 0) {
    options = {};
  }
  function createHashLocation(window, globalHistory) {
    var _parsePath = parsePath(window.location.hash.substr(1)),
      _parsePath$pathname = _parsePath.pathname,
      pathname = _parsePath$pathname === void 0 ? "/" : _parsePath$pathname,
      _parsePath$search = _parsePath.search,
      search = _parsePath$search === void 0 ? "" : _parsePath$search,
      _parsePath$hash = _parsePath.hash,
      hash = _parsePath$hash === void 0 ? "" : _parsePath$hash;
    return createLocation("", {
      pathname: pathname,
      search: search,
      hash: hash
    },
    // state defaults to `null` because `window.history.state` does
    globalHistory.state && globalHistory.state.usr || null, globalHistory.state && globalHistory.state.key || "default");
  }
  function createHashHref(window, to) {
    var base = window.document.querySelector("base");
    var href = "";
    if (base && base.getAttribute("href")) {
      var url = window.location.href;
      var hashIndex = url.indexOf("#");
      href = hashIndex === -1 ? url : url.slice(0, hashIndex);
    }
    return href + "#" + (typeof to === "string" ? to : router_createPath(to));
  }
  function validateHashLocation(location, to) {
    warning$1(location.pathname.charAt(0) === "/", "relative pathnames are not supported in hash history.push(" + JSON.stringify(to) + ")");
  }
  return getUrlBasedHistory(createHashLocation, createHashHref, validateHashLocation, options);
}
function router_invariant(value, message) {
  if (value === false || value === null || typeof value === "undefined") {
    throw new Error(message);
  }
}
function warning$1(cond, message) {
  if (!cond) {
    // eslint-disable-next-line no-console
    if (typeof console !== "undefined") console.warn(message);
    try {
      // Welcome to debugging history!
      //
      // This error is thrown as a convenience so you can more easily
      // find the source for a warning that appears in the console by
      // enabling "pause on exceptions" in your JavaScript debugger.
      throw new Error(message); // eslint-disable-next-line no-empty
    } catch (e) {}
  }
}
function createKey() {
  return Math.random().toString(36).substr(2, 8);
}
/**
 * For browser-based histories, we combine the state and key into an object
 */

function getHistoryState(location) {
  return {
    usr: location.state,
    key: location.key
  };
}
/**
 * Creates a Location object with a unique key from the given Path
 */

function createLocation(current, to, state, key) {
  if (state === void 0) {
    state = null;
  }
  var location = router_extends({
    pathname: typeof current === "string" ? current : current.pathname,
    search: "",
    hash: ""
  }, typeof to === "string" ? parsePath(to) : to, {
    state: state,
    // TODO: This could be cleaned up.  push/replace should probably just take
    // full Locations now and avoid the need to run through this flow at all
    // But that's a pretty big refactor to the current test suite so going to
    // keep as is for the time being and just let any incoming keys take precedence
    key: to && to.key || key || createKey()
  });
  return location;
}
/**
 * Creates a string URL path from the given pathname, search, and hash components.
 */

function router_createPath(_ref) {
  var _ref$pathname = _ref.pathname,
    pathname = _ref$pathname === void 0 ? "/" : _ref$pathname,
    _ref$search = _ref.search,
    search = _ref$search === void 0 ? "" : _ref$search,
    _ref$hash = _ref.hash,
    hash = _ref$hash === void 0 ? "" : _ref$hash;
  if (search && search !== "?") pathname += search.charAt(0) === "?" ? search : "?" + search;
  if (hash && hash !== "#") pathname += hash.charAt(0) === "#" ? hash : "#" + hash;
  return pathname;
}
/**
 * Parses a string URL path into its separate pathname, search, and hash components.
 */

function parsePath(path) {
  var parsedPath = {};
  if (path) {
    var hashIndex = path.indexOf("#");
    if (hashIndex >= 0) {
      parsedPath.hash = path.substr(hashIndex);
      path = path.substr(0, hashIndex);
    }
    var searchIndex = path.indexOf("?");
    if (searchIndex >= 0) {
      parsedPath.search = path.substr(searchIndex);
      path = path.substr(0, searchIndex);
    }
    if (path) {
      parsedPath.pathname = path;
    }
  }
  return parsedPath;
}
function createClientSideURL(location) {
  // window.location.origin is "null" (the literal string value) in Firefox
  // under certain conditions, notably when serving from a local HTML file
  // See https://bugzilla.mozilla.org/show_bug.cgi?id=878297
  var base = typeof window !== "undefined" && typeof window.location !== "undefined" && window.location.origin !== "null" ? window.location.origin : window.location.href;
  var href = typeof location === "string" ? location : router_createPath(location);
  router_invariant(base, "No window.location.(origin|href) available to create URL for href: " + href);
  return new URL(href, base);
}
function getUrlBasedHistory(getLocation, _createHref, validateLocation, options) {
  if (options === void 0) {
    options = {};
  }
  var _options2 = options,
    _options2$window = _options2.window,
    window = _options2$window === void 0 ? document.defaultView : _options2$window,
    _options2$v5Compat = _options2.v5Compat,
    v5Compat = _options2$v5Compat === void 0 ? false : _options2$v5Compat;
  var globalHistory = window.history;
  var action = Action.Pop;
  var listener = null;
  function handlePop() {
    action = Action.Pop;
    if (listener) {
      listener({
        action: action,
        location: history.location
      });
    }
  }
  function push(to, state) {
    action = Action.Push;
    var location = createLocation(history.location, to, state);
    if (validateLocation) validateLocation(location, to);
    var historyState = getHistoryState(location);
    var url = history.createHref(location); // try...catch because iOS limits us to 100 pushState calls :/

    try {
      globalHistory.pushState(historyState, "", url);
    } catch (error) {
      // They are going to lose state here, but there is no real
      // way to warn them about it since the page will refresh...
      window.location.assign(url);
    }
    if (v5Compat && listener) {
      listener({
        action: action,
        location: history.location
      });
    }
  }
  function replace(to, state) {
    action = Action.Replace;
    var location = createLocation(history.location, to, state);
    if (validateLocation) validateLocation(location, to);
    var historyState = getHistoryState(location);
    var url = history.createHref(location);
    globalHistory.replaceState(historyState, "", url);
    if (v5Compat && listener) {
      listener({
        action: action,
        location: history.location
      });
    }
  }
  var history = {
    get action() {
      return action;
    },
    get location() {
      return getLocation(window, globalHistory);
    },
    listen: function listen(fn) {
      if (listener) {
        throw new Error("A history only accepts one active listener");
      }
      window.addEventListener(PopStateEventType, handlePop);
      listener = fn;
      return function () {
        window.removeEventListener(PopStateEventType, handlePop);
        listener = null;
      };
    },
    createHref: function createHref(to) {
      return _createHref(window, to);
    },
    encodeLocation: function encodeLocation(to) {
      // Encode a Location the same way window.location would
      var url = createClientSideURL(typeof to === "string" ? to : router_createPath(to));
      return {
        pathname: url.pathname,
        search: url.search,
        hash: url.hash
      };
    },
    push: push,
    replace: replace,
    go: function go(n) {
      return globalHistory.go(n);
    }
  };
  return history;
} //#endregion

var ResultType;
(function (ResultType) {
  ResultType["data"] = "data";
  ResultType["deferred"] = "deferred";
  ResultType["redirect"] = "redirect";
  ResultType["error"] = "error";
})(ResultType || (ResultType = {}));
function isIndexRoute(route) {
  return route.index === true;
} // Walk the route tree generating unique IDs where necessary so we are working
// solely with AgnosticDataRouteObject's within the Router

function convertRoutesToDataRoutes(routes, parentPath, allIds) {
  if (parentPath === void 0) {
    parentPath = [];
  }
  if (allIds === void 0) {
    allIds = new Set();
  }
  return routes.map(function (route, index) {
    var treePath = [].concat(_toConsumableArray(parentPath), [index]);
    var id = typeof route.id === "string" ? route.id : treePath.join("-");
    router_invariant(route.index !== true || !route.children, "Cannot specify children on an index route");
    router_invariant(!allIds.has(id), "Found a route id collision on id \"" + id + "\".  Route " + "id's must be globally unique within Data Router usages");
    allIds.add(id);
    if (isIndexRoute(route)) {
      var indexRoute = router_extends({}, route, {
        id: id
      });
      return indexRoute;
    } else {
      var pathOrLayoutRoute = router_extends({}, route, {
        id: id,
        children: route.children ? convertRoutesToDataRoutes(route.children, treePath, allIds) : undefined
      });
      return pathOrLayoutRoute;
    }
  });
}
/**
 * Matches the given routes to a location and returns the match data.
 *
 * @see https://reactrouter.com/utils/match-routes
 */

function matchRoutes(routes, locationArg, basename) {
  if (basename === void 0) {
    basename = "/";
  }
  var location = typeof locationArg === "string" ? parsePath(locationArg) : locationArg;
  var pathname = stripBasename(location.pathname || "/", basename);
  if (pathname == null) {
    return null;
  }
  var branches = flattenRoutes(routes);
  rankRouteBranches(branches);
  var matches = null;
  for (var i = 0; matches == null && i < branches.length; ++i) {
    matches = matchRouteBranch(branches[i],
    // Incoming pathnames are generally encoded from either window.location
    // or from router.navigate, but we want to match against the unencoded
    // paths in the route definitions.  Memory router locations won't be
    // encoded here but there also shouldn't be anything to decode so this
    // should be a safe operation.  This avoids needing matchRoutes to be
    // history-aware.
    safelyDecodeURI(pathname));
  }
  return matches;
}
function flattenRoutes(routes, branches, parentsMeta, parentPath) {
  if (branches === void 0) {
    branches = [];
  }
  if (parentsMeta === void 0) {
    parentsMeta = [];
  }
  if (parentPath === void 0) {
    parentPath = "";
  }
  var flattenRoute = function flattenRoute(route, index, relativePath) {
    var meta = {
      relativePath: relativePath === undefined ? route.path || "" : relativePath,
      caseSensitive: route.caseSensitive === true,
      childrenIndex: index,
      route: route
    };
    if (meta.relativePath.startsWith("/")) {
      router_invariant(meta.relativePath.startsWith(parentPath), "Absolute route path \"" + meta.relativePath + "\" nested under path " + ("\"" + parentPath + "\" is not valid. An absolute child route path ") + "must start with the combined path of all its parent routes.");
      meta.relativePath = meta.relativePath.slice(parentPath.length);
    }
    var path = router_joinPaths([parentPath, meta.relativePath]);
    var routesMeta = parentsMeta.concat(meta); // Add the children before adding this route to the array so we traverse the
    // route tree depth-first and child routes appear before their parents in
    // the "flattened" version.

    if (route.children && route.children.length > 0) {
      router_invariant(
      // Our types know better, but runtime JS may not!
      // @ts-expect-error
      route.index !== true, "Index routes must not have child routes. Please remove " + ("all child routes from route path \"" + path + "\"."));
      flattenRoutes(route.children, branches, routesMeta, path);
    } // Routes without a path shouldn't ever match by themselves unless they are
    // index routes, so don't add them to the list of possible branches.

    if (route.path == null && !route.index) {
      return;
    }
    branches.push({
      path: path,
      score: computeScore(path, route.index),
      routesMeta: routesMeta
    });
  };
  routes.forEach(function (route, index) {
    var _route$path;

    // coarse-grain check for optional params
    if (route.path === "" || !((_route$path = route.path) != null && _route$path.includes("?"))) {
      flattenRoute(route, index);
    } else {
      var _iterator = createForOfIteratorHelper_createForOfIteratorHelper(explodeOptionalSegments(route.path)),
        _step;
      try {
        for (_iterator.s(); !(_step = _iterator.n()).done;) {
          var exploded = _step.value;
          flattenRoute(route, index, exploded);
        }
      } catch (err) {
        _iterator.e(err);
      } finally {
        _iterator.f();
      }
    }
  });
  return branches;
}
/**
 * Computes all combinations of optional path segments for a given path,
 * excluding combinations that are ambiguous and of lower priority.
 *
 * For example, `/one/:two?/three/:four?/:five?` explodes to:
 * - `/one/three`
 * - `/one/:two/three`
 * - `/one/three/:four`
 * - `/one/three/:five`
 * - `/one/:two/three/:four`
 * - `/one/:two/three/:five`
 * - `/one/three/:four/:five`
 * - `/one/:two/three/:four/:five`
 */

function explodeOptionalSegments(path) {
  var segments = path.split("/");
  if (segments.length === 0) return [];
  var _segments = _toArray(segments),
    first = _segments[0],
    rest = _segments.slice(1); // Optional path segments are denoted by a trailing `?`

  var isOptional = first.endsWith("?"); // Compute the corresponding required segment: `foo?` -> `foo`

  var required = first.replace(/\?$/, "");
  if (rest.length === 0) {
    // Intepret empty string as omitting an optional segment
    // `["one", "", "three"]` corresponds to omitting `:two` from `/one/:two?/three` -> `/one/three`
    return isOptional ? [required, ""] : [required];
  }
  var restExploded = explodeOptionalSegments(rest.join("/"));
  var result = []; // All child paths with the prefix.  Do this for all children before the
  // optional version for all children so we get consistent ordering where the
  // parent optional aspect is preferred as required.  Otherwise, we can get
  // child sections interspersed where deeper optional segments are higher than
  // parent optional segments, where for example, /:two would explodes _earlier_
  // then /:one.  By always including the parent as required _for all children_
  // first, we avoid this issue

  result.push.apply(result, (0,toConsumableArray/* default */.Z)(restExploded.map(function (subpath) {
    return subpath === "" ? required : [required, subpath].join("/");
  }))); // Then if this is an optional value, add all child versions without

  if (isOptional) {
    result.push.apply(result, (0,toConsumableArray/* default */.Z)(restExploded));
  } // for absolute paths, ensure `/` instead of empty segment

  return result.map(function (exploded) {
    return path.startsWith("/") && exploded === "" ? "/" : exploded;
  });
}
function rankRouteBranches(branches) {
  branches.sort(function (a, b) {
    return a.score !== b.score ? b.score - a.score // Higher score first
    : compareIndexes(a.routesMeta.map(function (meta) {
      return meta.childrenIndex;
    }), b.routesMeta.map(function (meta) {
      return meta.childrenIndex;
    }));
  });
}
var paramRe = /^:\w+$/;
var dynamicSegmentValue = 3;
var indexRouteValue = 2;
var emptySegmentValue = 1;
var staticSegmentValue = 10;
var splatPenalty = -2;
var isSplat = function isSplat(s) {
  return s === "*";
};
function computeScore(path, index) {
  var segments = path.split("/");
  var initialScore = segments.length;
  if (segments.some(isSplat)) {
    initialScore += splatPenalty;
  }
  if (index) {
    initialScore += indexRouteValue;
  }
  return segments.filter(function (s) {
    return !isSplat(s);
  }).reduce(function (score, segment) {
    return score + (paramRe.test(segment) ? dynamicSegmentValue : segment === "" ? emptySegmentValue : staticSegmentValue);
  }, initialScore);
}
function compareIndexes(a, b) {
  var siblings = a.length === b.length && a.slice(0, -1).every(function (n, i) {
    return n === b[i];
  });
  return siblings ?
  // If two routes are siblings, we should try to match the earlier sibling
  // first. This allows people to have fine-grained control over the matching
  // behavior by simply putting routes with identical paths in the order they
  // want them tried.
  a[a.length - 1] - b[b.length - 1] :
  // Otherwise, it doesn't really make sense to rank non-siblings by index,
  // so they sort equally.
  0;
}
function matchRouteBranch(branch, pathname) {
  var routesMeta = branch.routesMeta;
  var matchedParams = {};
  var matchedPathname = "/";
  var matches = [];
  for (var i = 0; i < routesMeta.length; ++i) {
    var meta = routesMeta[i];
    var end = i === routesMeta.length - 1;
    var remainingPathname = matchedPathname === "/" ? pathname : pathname.slice(matchedPathname.length) || "/";
    var match = router_matchPath({
      path: meta.relativePath,
      caseSensitive: meta.caseSensitive,
      end: end
    }, remainingPathname);
    if (!match) return null;
    Object.assign(matchedParams, match.params);
    var route = meta.route;
    matches.push({
      // TODO: Can this as be avoided?
      params: matchedParams,
      pathname: router_joinPaths([matchedPathname, match.pathname]),
      pathnameBase: normalizePathname(router_joinPaths([matchedPathname, match.pathnameBase])),
      route: route
    });
    if (match.pathnameBase !== "/") {
      matchedPathname = router_joinPaths([matchedPathname, match.pathnameBase]);
    }
  }
  return matches;
}
/**
 * Returns a path with params interpolated.
 *
 * @see https://reactrouter.com/utils/generate-path
 */

function generatePath(originalPath, params) {
  if (params === void 0) {
    params = {};
  }
  var path = originalPath;
  if (path.endsWith("*") && path !== "*" && !path.endsWith("/*")) {
    warning(false, "Route path \"" + path + "\" will be treated as if it were " + ("\"" + path.replace(/\*$/, "/*") + "\" because the `*` character must ") + "always follow a `/` in the pattern. To get rid of this warning, " + ("please change the route path to \"" + path.replace(/\*$/, "/*") + "\"."));
    path = path.replace(/\*$/, "/*");
  }
  return path.replace(/^:(\w+)/g, function (_, key) {
    router_invariant(params[key] != null, "Missing \":" + key + "\" param");
    return params[key];
  }).replace(/\/:(\w+)/g, function (_, key) {
    router_invariant(params[key] != null, "Missing \":" + key + "\" param");
    return "/" + params[key];
  }).replace(/(\/?)\*/, function (_, prefix, __, str) {
    var star = "*";
    if (params[star] == null) {
      // If no splat was provided, trim the trailing slash _unless_ it's
      // the entire path
      return str === "/*" ? "/" : "";
    } // Apply the splat

    return "" + prefix + params[star];
  });
}
/**
 * Performs pattern matching on a URL pathname and returns information about
 * the match.
 *
 * @see https://reactrouter.com/utils/match-path
 */

function router_matchPath(pattern, pathname) {
  if (typeof pattern === "string") {
    pattern = {
      path: pattern,
      caseSensitive: false,
      end: true
    };
  }
  var _compilePath = compilePath(pattern.path, pattern.caseSensitive, pattern.end),
    _compilePath2 = (0,slicedToArray/* default */.Z)(_compilePath, 2),
    matcher = _compilePath2[0],
    paramNames = _compilePath2[1];
  var match = pathname.match(matcher);
  if (!match) return null;
  var matchedPathname = match[0];
  var pathnameBase = matchedPathname.replace(/(.)\/+$/, "$1");
  var captureGroups = match.slice(1);
  var params = paramNames.reduce(function (memo, paramName, index) {
    // We need to compute the pathnameBase here using the raw splat value
    // instead of using params["*"] later because it will be decoded then
    if (paramName === "*") {
      var splatValue = captureGroups[index] || "";
      pathnameBase = matchedPathname.slice(0, matchedPathname.length - splatValue.length).replace(/(.)\/+$/, "$1");
    }
    memo[paramName] = safelyDecodeURIComponent(captureGroups[index] || "", paramName);
    return memo;
  }, {});
  return {
    params: params,
    pathname: matchedPathname,
    pathnameBase: pathnameBase,
    pattern: pattern
  };
}
function compilePath(path, caseSensitive, end) {
  if (caseSensitive === void 0) {
    caseSensitive = false;
  }
  if (end === void 0) {
    end = true;
  }
  warning(path === "*" || !path.endsWith("*") || path.endsWith("/*"), "Route path \"" + path + "\" will be treated as if it were " + ("\"" + path.replace(/\*$/, "/*") + "\" because the `*` character must ") + "always follow a `/` in the pattern. To get rid of this warning, " + ("please change the route path to \"" + path.replace(/\*$/, "/*") + "\"."));
  var paramNames = [];
  var regexpSource = "^" + path.replace(/\/*\*?$/, "") // Ignore trailing / and /*, we'll handle it below
  .replace(/^\/*/, "/") // Make sure it has a leading /
  .replace(/[\\.*+^$?{}|()[\]]/g, "\\$&") // Escape special regex chars
  .replace(/\/:(\w+)/g, function (_, paramName) {
    paramNames.push(paramName);
    return "/([^\\/]+)";
  });
  if (path.endsWith("*")) {
    paramNames.push("*");
    regexpSource += path === "*" || path === "/*" ? "(.*)$" // Already matched the initial /, just match the rest
    : "(?:\\/(.+)|\\/*)$"; // Don't include the / in params["*"]
  } else if (end) {
    // When matching to the end, ignore trailing slashes
    regexpSource += "\\/*$";
  } else if (path !== "" && path !== "/") {
    // If our path is non-empty and contains anything beyond an initial slash,
    // then we have _some_ form of path in our regex so we should expect to
    // match only if we find the end of this path segment.  Look for an optional
    // non-captured trailing slash (to match a portion of the URL) or the end
    // of the path (if we've matched to the end).  We used to do this with a
    // word boundary but that gives false positives on routes like
    // /user-preferences since `-` counts as a word boundary.
    regexpSource += "(?:(?=\\/|$))";
  } else ;
  var matcher = new RegExp(regexpSource, caseSensitive ? undefined : "i");
  return [matcher, paramNames];
}
function safelyDecodeURI(value) {
  try {
    return decodeURI(value);
  } catch (error) {
    warning(false, "The URL path \"" + value + "\" could not be decoded because it is is a " + "malformed URL segment. This is probably due to a bad percent " + ("encoding (" + error + ")."));
    return value;
  }
}
function safelyDecodeURIComponent(value, paramName) {
  try {
    return decodeURIComponent(value);
  } catch (error) {
    warning(false, "The value for the URL param \"" + paramName + "\" will not be decoded because" + (" the string \"" + value + "\" is a malformed URL segment. This is probably") + (" due to a bad percent encoding (" + error + ")."));
    return value;
  }
}
/**
 * @private
 */

function stripBasename(pathname, basename) {
  if (basename === "/") return pathname;
  if (!pathname.toLowerCase().startsWith(basename.toLowerCase())) {
    return null;
  } // We want to leave trailing slash behavior in the user's control, so if they
  // specify a basename with a trailing slash, we should support it

  var startIndex = basename.endsWith("/") ? basename.length - 1 : basename.length;
  var nextChar = pathname.charAt(startIndex);
  if (nextChar && nextChar !== "/") {
    // pathname does not start with basename/
    return null;
  }
  return pathname.slice(startIndex) || "/";
}
/**
 * @private
 */

function warning(cond, message) {
  if (!cond) {
    // eslint-disable-next-line no-console
    if (typeof console !== "undefined") console.warn(message);
    try {
      // Welcome to debugging React Router!
      //
      // This error is thrown as a convenience so you can more easily
      // find the source for a warning that appears in the console by
      // enabling "pause on exceptions" in your JavaScript debugger.
      throw new Error(message); // eslint-disable-next-line no-empty
    } catch (e) {}
  }
}
/**
 * Returns a resolved path object relative to the given pathname.
 *
 * @see https://reactrouter.com/utils/resolve-path
 */

function resolvePath(to, fromPathname) {
  if (fromPathname === void 0) {
    fromPathname = "/";
  }
  var _ref11 = typeof to === "string" ? parsePath(to) : to,
    toPathname = _ref11.pathname,
    _ref11$search = _ref11.search,
    search = _ref11$search === void 0 ? "" : _ref11$search,
    _ref11$hash = _ref11.hash,
    hash = _ref11$hash === void 0 ? "" : _ref11$hash;
  var pathname = toPathname ? toPathname.startsWith("/") ? toPathname : resolvePathname(toPathname, fromPathname) : fromPathname;
  return {
    pathname: pathname,
    search: normalizeSearch(search),
    hash: normalizeHash(hash)
  };
}
function resolvePathname(relativePath, fromPathname) {
  var segments = fromPathname.replace(/\/+$/, "").split("/");
  var relativeSegments = relativePath.split("/");
  relativeSegments.forEach(function (segment) {
    if (segment === "..") {
      // Keep the root "" segment so the pathname starts at /
      if (segments.length > 1) segments.pop();
    } else if (segment !== ".") {
      segments.push(segment);
    }
  });
  return segments.length > 1 ? segments.join("/") : "/";
}
function getInvalidPathError(char, field, dest, path) {
  return "Cannot include a '" + char + "' character in a manually specified " + ("`to." + field + "` field [" + JSON.stringify(path) + "].  Please separate it out to the ") + ("`to." + dest + "` field. Alternatively you may provide the full path as ") + "a string in <Link to=\"...\"> and the router will parse it for you.";
}
/**
 * @private
 *
 * When processing relative navigation we want to ignore ancestor routes that
 * do not contribute to the path, such that index/pathless layout routes don't
 * interfere.
 *
 * For example, when moving a route element into an index route and/or a
 * pathless layout route, relative link behavior contained within should stay
 * the same.  Both of the following examples should link back to the root:
 *
 *   <Route path="/">
 *     <Route path="accounts" element={<Link to=".."}>
 *   </Route>
 *
 *   <Route path="/">
 *     <Route path="accounts">
 *       <Route element={<AccountsLayout />}>       // <-- Does not contribute
 *         <Route index element={<Link to=".."} />  // <-- Does not contribute
 *       </Route
 *     </Route>
 *   </Route>
 */

function getPathContributingMatches(matches) {
  return matches.filter(function (match, index) {
    return index === 0 || match.route.path && match.route.path.length > 0;
  });
}
/**
 * @private
 */

function resolveTo(toArg, routePathnames, locationPathname, isPathRelative) {
  if (isPathRelative === void 0) {
    isPathRelative = false;
  }
  var to;
  if (typeof toArg === "string") {
    to = parsePath(toArg);
  } else {
    to = router_extends({}, toArg);
    router_invariant(!to.pathname || !to.pathname.includes("?"), getInvalidPathError("?", "pathname", "search", to));
    router_invariant(!to.pathname || !to.pathname.includes("#"), getInvalidPathError("#", "pathname", "hash", to));
    router_invariant(!to.search || !to.search.includes("#"), getInvalidPathError("#", "search", "hash", to));
  }
  var isEmptyPath = toArg === "" || to.pathname === "";
  var toPathname = isEmptyPath ? "/" : to.pathname;
  var from; // Routing is relative to the current pathname if explicitly requested.
  //
  // If a pathname is explicitly provided in `to`, it should be relative to the
  // route context. This is explained in `Note on `<Link to>` values` in our
  // migration guide from v5 as a means of disambiguation between `to` values
  // that begin with `/` and those that do not. However, this is problematic for
  // `to` values that do not provide a pathname. `to` can simply be a search or
  // hash string, in which case we should assume that the navigation is relative
  // to the current location's pathname and *not* the route pathname.

  if (isPathRelative || toPathname == null) {
    from = locationPathname;
  } else {
    var routePathnameIndex = routePathnames.length - 1;
    if (toPathname.startsWith("..")) {
      var toSegments = toPathname.split("/"); // Each leading .. segment means "go up one route" instead of "go up one
      // URL segment".  This is a key difference from how <a href> works and a
      // major reason we call this a "to" value instead of a "href".

      while (toSegments[0] === "..") {
        toSegments.shift();
        routePathnameIndex -= 1;
      }
      to.pathname = toSegments.join("/");
    } // If there are more ".." segments than parent routes, resolve relative to
    // the root / URL.

    from = routePathnameIndex >= 0 ? routePathnames[routePathnameIndex] : "/";
  }
  var path = resolvePath(to, from); // Ensure the pathname has a trailing slash if the original "to" had one

  var hasExplicitTrailingSlash = toPathname && toPathname !== "/" && toPathname.endsWith("/"); // Or if this was a link to the current path which has a trailing slash

  var hasCurrentTrailingSlash = (isEmptyPath || toPathname === ".") && locationPathname.endsWith("/");
  if (!path.pathname.endsWith("/") && (hasExplicitTrailingSlash || hasCurrentTrailingSlash)) {
    path.pathname += "/";
  }
  return path;
}
/**
 * @private
 */

function getToPathname(to) {
  // Empty strings should be treated the same as / paths
  return to === "" || to.pathname === "" ? "/" : typeof to === "string" ? parsePath(to).pathname : to.pathname;
}
/**
 * @private
 */

var router_joinPaths = function joinPaths(paths) {
  return paths.join("/").replace(/\/\/+/g, "/");
};
/**
 * @private
 */

var normalizePathname = function normalizePathname(pathname) {
  return pathname.replace(/\/+$/, "").replace(/^\/*/, "/");
};
/**
 * @private
 */

var normalizeSearch = function normalizeSearch(search) {
  return !search || search === "?" ? "" : search.startsWith("?") ? search : "?" + search;
};
/**
 * @private
 */

var normalizeHash = function normalizeHash(hash) {
  return !hash || hash === "#" ? "" : hash.startsWith("#") ? hash : "#" + hash;
};
/**
 * This is a shortcut for creating `application/json` responses. Converts `data`
 * to JSON and sets the `Content-Type` header.
 */

var json = function json(data, init) {
  if (init === void 0) {
    init = {};
  }
  var responseInit = typeof init === "number" ? {
    status: init
  } : init;
  var headers = new Headers(responseInit.headers);
  if (!headers.has("Content-Type")) {
    headers.set("Content-Type", "application/json; charset=utf-8");
  }
  return new Response(JSON.stringify(data), router_extends({}, responseInit, {
    headers: headers
  }));
};
var AbortedDeferredError = /*#__PURE__*/function (_Error) {
  inherits_inherits(AbortedDeferredError, _Error);
  var _super = createSuper_createSuper(AbortedDeferredError);
  function AbortedDeferredError() {
    classCallCheck_classCallCheck(this, AbortedDeferredError);
    return _super.apply(this, arguments);
  }
  return createClass_createClass(AbortedDeferredError);
}( /*#__PURE__*/_wrapNativeSuper(Error));
var DeferredData = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  function DeferredData(data) {
    var _this = this;
    _classCallCheck(this, DeferredData);
    this.pendingKeys = new Set();
    this.subscriber = undefined;
    router_invariant(data && typeof data === "object" && !Array.isArray(data), "defer() only accepts plain objects"); // Set up an AbortController + Promise we can race against to exit early
    // cancellation

    var reject;
    this.abortPromise = new Promise(function (_, r) {
      return reject = r;
    });
    this.controller = new AbortController();
    var onAbort = function onAbort() {
      return reject(new AbortedDeferredError("Deferred data aborted"));
    };
    this.unlistenAbortSignal = function () {
      return _this.controller.signal.removeEventListener("abort", onAbort);
    };
    this.controller.signal.addEventListener("abort", onAbort);
    this.data = Object.entries(data).reduce(function (acc, _ref) {
      var _ref12 = _slicedToArray(_ref, 2),
        key = _ref12[0],
        value = _ref12[1];
      return Object.assign(acc, _defineProperty({}, key, _this.trackPromise(key, value)));
    }, {});
  }
  _createClass(DeferredData, [{
    key: "trackPromise",
    value: function trackPromise(key, value) {
      var _this2 = this;
      if (!(value instanceof Promise)) {
        return value;
      }
      this.pendingKeys.add(key); // We store a little wrapper promise that will be extended with
      // _data/_error props upon resolve/reject

      var promise = Promise.race([value, this.abortPromise]).then(function (data) {
        return _this2.onSettle(promise, key, null, data);
      }, function (error) {
        return _this2.onSettle(promise, key, error);
      }); // Register rejection listeners to avoid uncaught promise rejections on
      // errors or aborted deferred values

      promise.catch(function () {});
      Object.defineProperty(promise, "_tracked", {
        get: function get() {
          return true;
        }
      });
      return promise;
    }
  }, {
    key: "onSettle",
    value: function onSettle(promise, key, error, data) {
      if (this.controller.signal.aborted && error instanceof AbortedDeferredError) {
        this.unlistenAbortSignal();
        Object.defineProperty(promise, "_error", {
          get: function get() {
            return error;
          }
        });
        return Promise.reject(error);
      }
      this.pendingKeys.delete(key);
      if (this.done) {
        // Nothing left to abort!
        this.unlistenAbortSignal();
      }
      var subscriber = this.subscriber;
      if (error) {
        Object.defineProperty(promise, "_error", {
          get: function get() {
            return error;
          }
        });
        subscriber && subscriber(false);
        return Promise.reject(error);
      }
      Object.defineProperty(promise, "_data", {
        get: function get() {
          return data;
        }
      });
      subscriber && subscriber(false);
      return data;
    }
  }, {
    key: "subscribe",
    value: function subscribe(fn) {
      this.subscriber = fn;
    }
  }, {
    key: "cancel",
    value: function cancel() {
      var _this3 = this;
      this.controller.abort();
      this.pendingKeys.forEach(function (v, k) {
        return _this3.pendingKeys.delete(k);
      });
      var subscriber = this.subscriber;
      subscriber && subscriber(true);
    }
  }, {
    key: "resolveData",
    value: function () {
      var _resolveData = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(signal) {
        var _this4 = this;
        var aborted, onAbort;
        return _regeneratorRuntime().wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                aborted = false;
                if (this.done) {
                  _context.next = 7;
                  break;
                }
                onAbort = function onAbort() {
                  return _this4.cancel();
                };
                signal.addEventListener("abort", onAbort);
                _context.next = 6;
                return new Promise(function (resolve) {
                  _this4.subscribe(function (aborted) {
                    signal.removeEventListener("abort", onAbort);
                    if (aborted || _this4.done) {
                      resolve(aborted);
                    }
                  });
                });
              case 6:
                aborted = _context.sent;
              case 7:
                return _context.abrupt("return", aborted);
              case 8:
              case "end":
                return _context.stop();
            }
          }
        }, _callee, this);
      }));
      function resolveData(_x) {
        return _resolveData.apply(this, arguments);
      }
      return resolveData;
    }()
  }, {
    key: "done",
    get: function get() {
      return this.pendingKeys.size === 0;
    }
  }, {
    key: "unwrappedData",
    get: function get() {
      router_invariant(this.data !== null && this.done, "Can only unwrap data on initialized and settled deferreds");
      return Object.entries(this.data).reduce(function (acc, _ref2) {
        var _ref13 = _slicedToArray(_ref2, 2),
          key = _ref13[0],
          value = _ref13[1];
        return Object.assign(acc, _defineProperty({}, key, unwrapTrackedPromise(value)));
      }, {});
    }
  }]);
  return DeferredData;
}()));
function isTrackedPromise(value) {
  return value instanceof Promise && value._tracked === true;
}
function unwrapTrackedPromise(value) {
  if (!isTrackedPromise(value)) {
    return value;
  }
  if (value._error) {
    throw value._error;
  }
  return value._data;
}
function defer(data) {
  return new DeferredData(data);
}
/**
 * A redirect response. Sets the status code and the `Location` header.
 * Defaults to "302 Found".
 */

var redirect = function redirect(url, init) {
  if (init === void 0) {
    init = 302;
  }
  var responseInit = init;
  if (typeof responseInit === "number") {
    responseInit = {
      status: responseInit
    };
  } else if (typeof responseInit.status === "undefined") {
    responseInit.status = 302;
  }
  var headers = new Headers(responseInit.headers);
  headers.set("Location", url);
  return new Response(null, router_extends({}, responseInit, {
    headers: headers
  }));
};
/**
 * @private
 * Utility class we use to hold auto-unwrapped 4xx/5xx Response bodies
 */
var router_ErrorResponse = /*#__PURE__*/createClass_createClass(function ErrorResponse(status, statusText, data, internal) {
  classCallCheck_classCallCheck(this, ErrorResponse);
  if (internal === void 0) {
    internal = false;
  }
  this.status = status;
  this.statusText = statusText || "";
  this.internal = internal;
  if (data instanceof Error) {
    this.data = data.toString();
    this.error = data;
  } else {
    this.data = data;
  }
});
/**
 * Check if the given error is an ErrorResponse generated from a 4xx/5xx
 * Response throw from an action/loader
 */
function isRouteErrorResponse(e) {
  return e instanceof router_ErrorResponse;
}
var validMutationMethodsArr = ["post", "put", "patch", "delete"];
var validMutationMethods = new Set(validMutationMethodsArr);
var validRequestMethodsArr = ["get"].concat(validMutationMethodsArr);
var validRequestMethods = new Set(validRequestMethodsArr);
var redirectStatusCodes = new Set([301, 302, 303, 307, 308]);
var redirectPreserveMethodStatusCodes = new Set([307, 308]);
var IDLE_NAVIGATION = {
  state: "idle",
  location: undefined,
  formMethod: undefined,
  formAction: undefined,
  formEncType: undefined,
  formData: undefined
};
var IDLE_FETCHER = {
  state: "idle",
  data: undefined,
  formMethod: undefined,
  formAction: undefined,
  formEncType: undefined,
  formData: undefined
};
var router_isBrowser = typeof window !== "undefined" && typeof window.document !== "undefined" && typeof window.document.createElement !== "undefined";
var isServer = !router_isBrowser; //#endregion
////////////////////////////////////////////////////////////////////////////////
//#region createRouter
////////////////////////////////////////////////////////////////////////////////

/**
 * Create a router and listen to history POP navigations
 */

function router_createRouter(init) {
  router_invariant(init.routes.length > 0, "You must provide a non-empty routes array to createRouter");
  var dataRoutes = convertRoutesToDataRoutes(init.routes); // Cleanup function for history

  var unlistenHistory = null; // Externally-provided functions to call on all state changes

  var subscribers = new Set(); // Externally-provided object to hold scroll restoration locations during routing

  var savedScrollPositions = null; // Externally-provided function to get scroll restoration keys

  var getScrollRestorationKey = null; // Externally-provided function to get current scroll position

  var getScrollPosition = null; // One-time flag to control the initial hydration scroll restoration.  Because
  // we don't get the saved positions from <ScrollRestoration /> until _after_
  // the initial render, we need to manually trigger a separate updateState to
  // send along the restoreScrollPosition
  // Set to true if we have `hydrationData` since we assume we were SSR'd and that
  // SSR did the initial scroll restoration.

  var initialScrollRestored = init.hydrationData != null;
  var initialMatches = matchRoutes(dataRoutes, init.history.location, init.basename);
  var initialErrors = null;
  if (initialMatches == null) {
    // If we do not match a user-provided-route, fall back to the root
    // to allow the error boundary to take over
    var error = getInternalRouterError(404, {
      pathname: init.history.location.pathname
    });
    var _getShortCircuitMatch = getShortCircuitMatches(dataRoutes),
      matches = _getShortCircuitMatch.matches,
      route = _getShortCircuitMatch.route;
    initialMatches = matches;
    initialErrors = _defineProperty({}, route.id, error);
  }
  var initialized = !initialMatches.some(function (m) {
    return m.route.loader;
  }) || init.hydrationData != null;
  var router;
  var state = {
    historyAction: init.history.action,
    location: init.history.location,
    matches: initialMatches,
    initialized: initialized,
    navigation: IDLE_NAVIGATION,
    // Don't restore on initial updateState() if we were SSR'd
    restoreScrollPosition: init.hydrationData != null ? false : null,
    preventScrollReset: false,
    revalidation: "idle",
    loaderData: init.hydrationData && init.hydrationData.loaderData || {},
    actionData: init.hydrationData && init.hydrationData.actionData || null,
    errors: init.hydrationData && init.hydrationData.errors || initialErrors,
    fetchers: new Map()
  }; // -- Stateful internal variables to manage navigations --
  // Current navigation in progress (to be committed in completeNavigation)

  var pendingAction = Action.Pop; // Should the current navigation prevent the scroll reset if scroll cannot
  // be restored?

  var pendingPreventScrollReset = false; // AbortController for the active navigation

  var pendingNavigationController; // We use this to avoid touching history in completeNavigation if a
  // revalidation is entirely uninterrupted

  var isUninterruptedRevalidation = false; // Use this internal flag to force revalidation of all loaders:
  //  - submissions (completed or interrupted)
  //  - useRevalidate()
  //  - X-Remix-Revalidate (from redirect)

  var isRevalidationRequired = false; // Use this internal array to capture routes that require revalidation due
  // to a cancelled deferred on action submission

  var cancelledDeferredRoutes = []; // Use this internal array to capture fetcher loads that were cancelled by an
  // action navigation and require revalidation

  var cancelledFetcherLoads = []; // AbortControllers for any in-flight fetchers

  var fetchControllers = new Map(); // Track loads based on the order in which they started

  var incrementingLoadId = 0; // Track the outstanding pending navigation data load to be compared against
  // the globally incrementing load when a fetcher load lands after a completed
  // navigation

  var pendingNavigationLoadId = -1; // Fetchers that triggered data reloads as a result of their actions

  var fetchReloadIds = new Map(); // Fetchers that triggered redirect navigations from their actions

  var fetchRedirectIds = new Set(); // Most recent href/match for fetcher.load calls for fetchers

  var fetchLoadMatches = new Map(); // Store DeferredData instances for active route matches.  When a
  // route loader returns defer() we stick one in here.  Then, when a nested
  // promise resolves we update loaderData.  If a new navigation starts we
  // cancel active deferreds for eliminated routes.

  var activeDeferreds = new Map(); // Initialize the router, all side effects should be kicked off from here.
  // Implemented as a Fluent API for ease of:
  //   let router = createRouter(init).initialize();

  function initialize() {
    // If history informs us of a POP navigation, start the navigation but do not update
    // state.  We'll update our own state once the navigation completes
    unlistenHistory = init.history.listen(function (_ref) {
      var historyAction = _ref.action,
        location = _ref.location;
      return startNavigation(historyAction, location);
    }); // Kick off initial data load if needed.  Use Pop to avoid modifying history

    if (!state.initialized) {
      startNavigation(Action.Pop, state.location);
    }
    return router;
  } // Clean up a router and it's side effects

  function dispose() {
    if (unlistenHistory) {
      unlistenHistory();
    }
    subscribers.clear();
    pendingNavigationController && pendingNavigationController.abort();
    state.fetchers.forEach(function (_, key) {
      return deleteFetcher(key);
    });
  } // Subscribe to state updates for the router

  function subscribe(fn) {
    subscribers.add(fn);
    return function () {
      return subscribers.delete(fn);
    };
  } // Update our state and notify the calling context of the change

  function updateState(newState) {
    state = router_extends({}, state, newState);
    subscribers.forEach(function (subscriber) {
      return subscriber(state);
    });
  } // Complete a navigation returning the state.navigation back to the IDLE_NAVIGATION
  // and setting state.[historyAction/location/matches] to the new route.
  // - Location is a required param
  // - Navigation will always be set to IDLE_NAVIGATION
  // - Can pass any other state in newState

  function completeNavigation(location, newState) {
    var _location$state;

    // Deduce if we're in a loading/actionReload state:
    // - We have committed actionData in the store
    // - The current navigation was a mutation submission
    // - We're past the submitting state and into the loading state
    // - The location being loaded is not the result of a redirect
    var isActionReload = state.actionData != null && state.navigation.formMethod != null && isMutationMethod(state.navigation.formMethod) && state.navigation.state === "loading" && ((_location$state = location.state) == null ? void 0 : _location$state._isRedirect) !== true;
    var actionData;
    if (newState.actionData) {
      if (Object.keys(newState.actionData).length > 0) {
        actionData = newState.actionData;
      } else {
        // Empty actionData -> clear prior actionData due to an action error
        actionData = null;
      }
    } else if (isActionReload) {
      // Keep the current data if we're wrapping up the action reload
      actionData = state.actionData;
    } else {
      // Clear actionData on any other completed navigations
      actionData = null;
    } // Always preserve any existing loaderData from re-used routes

    var loaderData = newState.loaderData ? mergeLoaderData(state.loaderData, newState.loaderData, newState.matches || [], newState.errors) : state.loaderData;
    updateState(router_extends({}, newState, {
      actionData: actionData,
      loaderData: loaderData,
      historyAction: pendingAction,
      location: location,
      initialized: true,
      navigation: IDLE_NAVIGATION,
      revalidation: "idle",
      // Don't restore on submission navigations
      restoreScrollPosition: state.navigation.formData ? false : getSavedScrollPosition(location, newState.matches || state.matches),
      preventScrollReset: pendingPreventScrollReset
    }));
    if (isUninterruptedRevalidation) ;else if (pendingAction === Action.Pop) ;else if (pendingAction === Action.Push) {
      init.history.push(location, location.state);
    } else if (pendingAction === Action.Replace) {
      init.history.replace(location, location.state);
    } // Reset stateful navigation vars

    pendingAction = Action.Pop;
    pendingPreventScrollReset = false;
    isUninterruptedRevalidation = false;
    isRevalidationRequired = false;
    cancelledDeferredRoutes = [];
    cancelledFetcherLoads = [];
  } // Trigger a navigation event, which can either be a numerical POP or a PUSH
  // replace with an optional submission
  function navigate(_x2, _x3) {
    return _navigate.apply(this, arguments);
  } // Revalidate all current loaders.  If a navigation is in progress or if this
  // is interrupted by a navigation, allow this to "succeed" by calling all
  // loaders during the next loader round
  function _navigate() {
    _navigate = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(to, opts) {
      var _normalizeNavigateOpt2, path, submission, error, location, userReplace, historyAction, preventScrollReset;
      return _regeneratorRuntime().wrap(function _callee2$(_context2) {
        while (1) {
          switch (_context2.prev = _context2.next) {
            case 0:
              if (!(typeof to === "number")) {
                _context2.next = 3;
                break;
              }
              init.history.go(to);
              return _context2.abrupt("return");
            case 3:
              _normalizeNavigateOpt2 = normalizeNavigateOptions(to, opts), path = _normalizeNavigateOpt2.path, submission = _normalizeNavigateOpt2.submission, error = _normalizeNavigateOpt2.error;
              location = createLocation(state.location, path, opts && opts.state); // When using navigate as a PUSH/REPLACE we aren't reading an already-encoded
              // URL from window.location, so we need to encode it here so the behavior
              // remains the same as POP and non-data-router usages.  new URL() does all
              // the same encoding we'd get from a history.pushState/window.location read
              // without having to touch history
              location = router_extends({}, location, init.history.encodeLocation(location));
              userReplace = opts && opts.replace != null ? opts.replace : undefined;
              historyAction = Action.Push;
              if (userReplace === true) {
                historyAction = Action.Replace;
              } else if (userReplace === false) ;else if (submission != null && isMutationMethod(submission.formMethod) && submission.formAction === state.location.pathname + state.location.search) {
                // By default on submissions to the current location we REPLACE so that
                // users don't have to double-click the back button to get to the prior
                // location.  If the user redirects to a different location from the
                // action/loader this will be ignored and the redirect will be a PUSH
                historyAction = Action.Replace;
              }
              preventScrollReset = opts && "preventScrollReset" in opts ? opts.preventScrollReset === true : undefined;
              _context2.next = 12;
              return startNavigation(historyAction, location, {
                submission: submission,
                // Send through the formData serialization error if we have one so we can
                // render at the right error boundary after we match routes
                pendingError: error,
                preventScrollReset: preventScrollReset,
                replace: opts && opts.replace
              });
            case 12:
              return _context2.abrupt("return", _context2.sent);
            case 13:
            case "end":
              return _context2.stop();
          }
        }
      }, _callee2);
    }));
    return _navigate.apply(this, arguments);
  }
  function revalidate() {
    interruptActiveLoads();
    updateState({
      revalidation: "loading"
    }); // If we're currently submitting an action, we don't need to start a new
    // navigation, we'll just let the follow up loader execution call all loaders

    if (state.navigation.state === "submitting") {
      return;
    } // If we're currently in an idle state, start a new navigation for the current
    // action/location and mark it as uninterrupted, which will skip the history
    // update in completeNavigation

    if (state.navigation.state === "idle") {
      startNavigation(state.historyAction, state.location, {
        startUninterruptedRevalidation: true
      });
      return;
    } // Otherwise, if we're currently in a loading state, just start a new
    // navigation to the navigation.location but do not trigger an uninterrupted
    // revalidation so that history correctly updates once the navigation completes

    startNavigation(pendingAction || state.historyAction, state.navigation.location, {
      overrideNavigation: state.navigation
    });
  } // Start a navigation to the given action/location.  Can optionally provide a
  // overrideNavigation which will override the normalLoad in the case of a redirect
  // navigation
  function startNavigation(_x4, _x5, _x6) {
    return _startNavigation.apply(this, arguments);
  } // Call the action matched by the leaf route for this navigation and handle
  // redirects/errors
  function _startNavigation() {
    _startNavigation = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3(historyAction, location, opts) {
      var loadingNavigation, matches, _error, _getShortCircuitMatch2, notFoundMatches, _route, request, pendingActionData, pendingError, actionOutput, navigation, _yield$handleLoaders, shortCircuited, loaderData, errors;
      return _regeneratorRuntime().wrap(function _callee3$(_context3) {
        while (1) {
          switch (_context3.prev = _context3.next) {
            case 0:
              // Abort any in-progress navigations and start a new one. Unset any ongoing
              // uninterrupted revalidations unless told otherwise, since we want this
              // new navigation to update history normally
              pendingNavigationController && pendingNavigationController.abort();
              pendingNavigationController = null;
              pendingAction = historyAction;
              isUninterruptedRevalidation = (opts && opts.startUninterruptedRevalidation) === true; // Save the current scroll position every time we start a new navigation,
              // and track whether we should reset scroll on completion

              saveScrollPosition(state.location, state.matches);
              pendingPreventScrollReset = (opts && opts.preventScrollReset) === true;
              loadingNavigation = opts && opts.overrideNavigation;
              matches = matchRoutes(dataRoutes, location, init.basename); // Short circuit with a 404 on the root error boundary if we match nothing
              if (matches) {
                _context3.next = 14;
                break;
              }
              _error = getInternalRouterError(404, {
                pathname: location.pathname
              });
              _getShortCircuitMatch2 = getShortCircuitMatches(dataRoutes), notFoundMatches = _getShortCircuitMatch2.matches, _route = _getShortCircuitMatch2.route; // Cancel all pending deferred on 404s since we don't keep any routes
              cancelActiveDeferreds();
              completeNavigation(location, {
                matches: notFoundMatches,
                loaderData: {},
                errors: _defineProperty({}, _route.id, _error)
              });
              return _context3.abrupt("return");
            case 14:
              if (!isHashChangeOnly(state.location, location)) {
                _context3.next = 17;
                break;
              }
              completeNavigation(location, {
                matches: matches
              });
              return _context3.abrupt("return");
            case 17:
              // Create a controller/Request for this navigation

              pendingNavigationController = new AbortController();
              request = createClientSideRequest(location, pendingNavigationController.signal, opts && opts.submission);
              if (!(opts && opts.pendingError)) {
                _context3.next = 23;
                break;
              }
              // If we have a pendingError, it means the user attempted a GET submission
              // with binary FormData so assign here and skip to handleLoaders.  That
              // way we handle calling loaders above the boundary etc.  It's not really
              // different from an actionError in that sense.
              pendingError = _defineProperty({}, findNearestBoundary(matches).route.id, opts.pendingError);
              _context3.next = 34;
              break;
            case 23:
              if (!(opts && opts.submission && isMutationMethod(opts.submission.formMethod))) {
                _context3.next = 34;
                break;
              }
              _context3.next = 26;
              return handleAction(request, location, opts.submission, matches, {
                replace: opts.replace
              });
            case 26:
              actionOutput = _context3.sent;
              if (!actionOutput.shortCircuited) {
                _context3.next = 29;
                break;
              }
              return _context3.abrupt("return");
            case 29:
              pendingActionData = actionOutput.pendingActionData;
              pendingError = actionOutput.pendingActionError;
              navigation = router_extends({
                state: "loading",
                location: location
              }, opts.submission);
              loadingNavigation = navigation; // Create a GET request for the loaders

              request = new Request(request.url, {
                signal: request.signal
              });
            case 34:
              _context3.next = 36;
              return handleLoaders(request, location, matches, loadingNavigation, opts && opts.submission, opts && opts.replace, pendingActionData, pendingError);
            case 36:
              _yield$handleLoaders = _context3.sent;
              shortCircuited = _yield$handleLoaders.shortCircuited;
              loaderData = _yield$handleLoaders.loaderData;
              errors = _yield$handleLoaders.errors;
              if (!shortCircuited) {
                _context3.next = 42;
                break;
              }
              return _context3.abrupt("return");
            case 42:
              // Clean up now that the action/loaders have completed.  Don't clean up if
              // we short circuited because pendingNavigationController will have already
              // been assigned to a new controller for the next navigation

              pendingNavigationController = null;
              completeNavigation(location, router_extends({
                matches: matches
              }, pendingActionData ? {
                actionData: pendingActionData
              } : {}, {
                loaderData: loaderData,
                errors: errors
              }));
            case 44:
            case "end":
              return _context3.stop();
          }
        }
      }, _callee3);
    }));
    return _startNavigation.apply(this, arguments);
  }
  function handleAction(_x7, _x8, _x9, _x10, _x11) {
    return _handleAction.apply(this, arguments);
  } // Call all applicable loaders for the given matches, handling redirects,
  // errors, etc.
  function _handleAction() {
    _handleAction = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee4(request, location, submission, matches, opts) {
      var navigation, result, actionMatch, replace, boundaryMatch;
      return _regeneratorRuntime().wrap(function _callee4$(_context4) {
        while (1) {
          switch (_context4.prev = _context4.next) {
            case 0:
              interruptActiveLoads(); // Put us in a submitting state
              navigation = router_extends({
                state: "submitting",
                location: location
              }, submission);
              updateState({
                navigation: navigation
              }); // Call our action and get the result
              actionMatch = getTargetMatch(matches, location);
              if (actionMatch.route.action) {
                _context4.next = 8;
                break;
              }
              result = {
                type: ResultType.error,
                error: getInternalRouterError(405, {
                  method: request.method,
                  pathname: location.pathname,
                  routeId: actionMatch.route.id
                })
              };
              _context4.next = 13;
              break;
            case 8:
              _context4.next = 10;
              return callLoaderOrAction("action", request, actionMatch, matches, router.basename);
            case 10:
              result = _context4.sent;
              if (!request.signal.aborted) {
                _context4.next = 13;
                break;
              }
              return _context4.abrupt("return", {
                shortCircuited: true
              });
            case 13:
              if (!isRedirectResult(result)) {
                _context4.next = 18;
                break;
              }
              if (opts && opts.replace != null) {
                replace = opts.replace;
              } else {
                // If the user didn't explicity indicate replace behavior, replace if
                // we redirected to the exact same location we're currently at to avoid
                // double back-buttons
                replace = result.location === state.location.pathname + state.location.search;
              }
              _context4.next = 17;
              return startRedirectNavigation(state, result, {
                submission: submission,
                replace: replace
              });
            case 17:
              return _context4.abrupt("return", {
                shortCircuited: true
              });
            case 18:
              if (!isErrorResult(result)) {
                _context4.next = 22;
                break;
              }
              // Store off the pending error - we use it to determine which loaders
              // to call and will commit it when we complete the navigation
              boundaryMatch = findNearestBoundary(matches, actionMatch.route.id); // By default, all submissions are REPLACE navigations, but if the
              // action threw an error that'll be rendered in an errorElement, we fall
              // back to PUSH so that the user can use the back button to get back to
              // the pre-submission form location to try again
              if ((opts && opts.replace) !== true) {
                pendingAction = Action.Push;
              }
              return _context4.abrupt("return", {
                // Send back an empty object we can use to clear out any prior actionData
                pendingActionData: {},
                pendingActionError: _defineProperty({}, boundaryMatch.route.id, result.error)
              });
            case 22:
              if (!isDeferredResult(result)) {
                _context4.next = 24;
                break;
              }
              throw new Error("defer() is not supported in actions");
            case 24:
              return _context4.abrupt("return", {
                pendingActionData: _defineProperty({}, actionMatch.route.id, result.data)
              });
            case 25:
            case "end":
              return _context4.stop();
          }
        }
      }, _callee4);
    }));
    return _handleAction.apply(this, arguments);
  }
  function handleLoaders(_x12, _x13, _x14, _x15, _x16, _x17, _x18, _x19) {
    return _handleLoaders.apply(this, arguments);
  }
  function _handleLoaders() {
    _handleLoaders = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee5(request, location, matches, overrideNavigation, submission, replace, pendingActionData, pendingError) {
      var loadingNavigation, navigation, activeSubmission, _getMatchesToLoad, _getMatchesToLoad2, matchesToLoad, revalidatingFetchers, actionData, _yield$callLoadersAnd, results, loaderResults, fetcherResults, redirect, _processLoaderData, loaderData, errors, didAbortFetchLoads;
      return _regeneratorRuntime().wrap(function _callee5$(_context5) {
        while (1) {
          switch (_context5.prev = _context5.next) {
            case 0:
              // Figure out the right navigation we want to use for data loading
              loadingNavigation = overrideNavigation;
              if (!loadingNavigation) {
                navigation = router_extends({
                  state: "loading",
                  location: location,
                  formMethod: undefined,
                  formAction: undefined,
                  formEncType: undefined,
                  formData: undefined
                }, submission);
                loadingNavigation = navigation;
              } // If this was a redirect from an action we don't have a "submission" but
              // we have it on the loading navigation so use that if available
              activeSubmission = submission ? submission : loadingNavigation.formMethod && loadingNavigation.formAction && loadingNavigation.formData && loadingNavigation.formEncType ? {
                formMethod: loadingNavigation.formMethod,
                formAction: loadingNavigation.formAction,
                formData: loadingNavigation.formData,
                formEncType: loadingNavigation.formEncType
              } : undefined;
              _getMatchesToLoad = getMatchesToLoad(state, matches, activeSubmission, location, isRevalidationRequired, cancelledDeferredRoutes, cancelledFetcherLoads, pendingActionData, pendingError, fetchLoadMatches), _getMatchesToLoad2 = _slicedToArray(_getMatchesToLoad, 2), matchesToLoad = _getMatchesToLoad2[0], revalidatingFetchers = _getMatchesToLoad2[1]; // Cancel pending deferreds for no-longer-matched routes or routes we're
              // about to reload.  Note that if this is an action reload we would have
              // already cancelled all pending deferreds so this would be a no-op
              cancelActiveDeferreds(function (routeId) {
                return !(matches && matches.some(function (m) {
                  return m.route.id === routeId;
                })) || matchesToLoad && matchesToLoad.some(function (m) {
                  return m.route.id === routeId;
                });
              }); // Short circuit if we have no loaders to run
              if (!(matchesToLoad.length === 0 && revalidatingFetchers.length === 0)) {
                _context5.next = 8;
                break;
              }
              completeNavigation(location, router_extends({
                matches: matches,
                loaderData: {},
                // Commit pending error if we're short circuiting
                errors: pendingError || null
              }, pendingActionData ? {
                actionData: pendingActionData
              } : {}));
              return _context5.abrupt("return", {
                shortCircuited: true
              });
            case 8:
              // If this is an uninterrupted revalidation, we remain in our current idle
              // state.  If not, we need to switch to our loading state and load data,
              // preserving any new action data or existing action data (in the case of
              // a revalidation interrupting an actionReload)

              if (!isUninterruptedRevalidation) {
                revalidatingFetchers.forEach(function (_ref2) {
                  var _ref14 = _slicedToArray(_ref2, 1),
                    key = _ref14[0];
                  var fetcher = state.fetchers.get(key);
                  var revalidatingFetcher = {
                    state: "loading",
                    data: fetcher && fetcher.data,
                    formMethod: undefined,
                    formAction: undefined,
                    formEncType: undefined,
                    formData: undefined,
                    " _hasFetcherDoneAnything ": true
                  };
                  state.fetchers.set(key, revalidatingFetcher);
                });
                actionData = pendingActionData || state.actionData;
                updateState(router_extends({
                  navigation: loadingNavigation
                }, actionData ? Object.keys(actionData).length === 0 ? {
                  actionData: null
                } : {
                  actionData: actionData
                } : {}, revalidatingFetchers.length > 0 ? {
                  fetchers: new Map(state.fetchers)
                } : {}));
              }
              pendingNavigationLoadId = ++incrementingLoadId;
              revalidatingFetchers.forEach(function (_ref3) {
                var _ref15 = _slicedToArray(_ref3, 1),
                  key = _ref15[0];
                return fetchControllers.set(key, pendingNavigationController);
              });
              _context5.next = 13;
              return callLoadersAndMaybeResolveData(state.matches, matches, matchesToLoad, revalidatingFetchers, request);
            case 13:
              _yield$callLoadersAnd = _context5.sent;
              results = _yield$callLoadersAnd.results;
              loaderResults = _yield$callLoadersAnd.loaderResults;
              fetcherResults = _yield$callLoadersAnd.fetcherResults;
              if (!request.signal.aborted) {
                _context5.next = 19;
                break;
              }
              return _context5.abrupt("return", {
                shortCircuited: true
              });
            case 19:
              // Clean up _after_ loaders have completed.  Don't clean up if we short
              // circuited because fetchControllers would have been aborted and
              // reassigned to new controllers for the next navigation

              revalidatingFetchers.forEach(function (_ref4) {
                var _ref16 = _slicedToArray(_ref4, 1),
                  key = _ref16[0];
                return fetchControllers.delete(key);
              }); // If any loaders returned a redirect Response, start a new REPLACE navigation
              redirect = findRedirect(results);
              if (!redirect) {
                _context5.next = 25;
                break;
              }
              _context5.next = 24;
              return startRedirectNavigation(state, redirect, {
                replace: replace
              });
            case 24:
              return _context5.abrupt("return", {
                shortCircuited: true
              });
            case 25:
              // Process and commit output from loaders
              _processLoaderData = processLoaderData(state, matches, matchesToLoad, loaderResults, pendingError, revalidatingFetchers, fetcherResults, activeDeferreds), loaderData = _processLoaderData.loaderData, errors = _processLoaderData.errors; // Wire up subscribers to update loaderData as promises settle
              activeDeferreds.forEach(function (deferredData, routeId) {
                deferredData.subscribe(function (aborted) {
                  // Note: No need to updateState here since the TrackedPromise on
                  // loaderData is stable across resolve/reject
                  // Remove this instance if we were aborted or if promises have settled
                  if (aborted || deferredData.done) {
                    activeDeferreds.delete(routeId);
                  }
                });
              });
              markFetchRedirectsDone();
              didAbortFetchLoads = abortStaleFetchLoads(pendingNavigationLoadId);
              return _context5.abrupt("return", router_extends({
                loaderData: loaderData,
                errors: errors
              }, didAbortFetchLoads || revalidatingFetchers.length > 0 ? {
                fetchers: new Map(state.fetchers)
              } : {}));
            case 30:
            case "end":
              return _context5.stop();
          }
        }
      }, _callee5);
    }));
    return _handleLoaders.apply(this, arguments);
  }
  function getFetcher(key) {
    return state.fetchers.get(key) || IDLE_FETCHER;
  } // Trigger a fetcher load/submit for the given fetcher key

  function fetch(key, routeId, href, opts) {
    if (isServer) {
      throw new Error("router.fetch() was called during the server render, but it shouldn't be. " + "You are likely calling a useFetcher() method in the body of your component. " + "Try moving it to a useEffect or a callback.");
    }
    if (fetchControllers.has(key)) abortFetcher(key);
    var matches = matchRoutes(dataRoutes, href, init.basename);
    if (!matches) {
      setFetcherError(key, routeId, getInternalRouterError(404, {
        pathname: href
      }));
      return;
    }
    var _normalizeNavigateOpt = normalizeNavigateOptions(href, opts, true),
      path = _normalizeNavigateOpt.path,
      submission = _normalizeNavigateOpt.submission;
    var match = getTargetMatch(matches, path);
    if (submission && isMutationMethod(submission.formMethod)) {
      handleFetcherAction(key, routeId, path, match, matches, submission);
      return;
    } // Store off the match so we can call it's shouldRevalidate on subsequent
    // revalidations

    fetchLoadMatches.set(key, [path, match, matches]);
    handleFetcherLoader(key, routeId, path, match, matches, submission);
  } // Call the action for the matched fetcher.submit(), and then handle redirects,
  // errors, and revalidation
  function handleFetcherAction(_x20, _x21, _x22, _x23, _x24, _x25) {
    return _handleFetcherAction.apply(this, arguments);
  } // Call the matched loader for fetcher.load(), handling redirects, errors, etc.
  function _handleFetcherAction() {
    _handleFetcherAction = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee6(key, routeId, path, match, requestMatches, submission) {
      var _error2, existingFetcher, fetcher, abortController, fetchRequest, actionResult, loadingFetcher, nextLocation, revalidationRequest, matches, loadId, loadFetcher, _getMatchesToLoad3, _getMatchesToLoad4, matchesToLoad, revalidatingFetchers, _yield$callLoadersAnd2, results, loaderResults, fetcherResults, redirect, _processLoaderData2, loaderData, errors, doneFetcher, didAbortFetchLoads;
      return _regeneratorRuntime().wrap(function _callee6$(_context6) {
        while (1) {
          switch (_context6.prev = _context6.next) {
            case 0:
              interruptActiveLoads();
              fetchLoadMatches.delete(key);
              if (match.route.action) {
                _context6.next = 6;
                break;
              }
              _error2 = getInternalRouterError(405, {
                method: submission.formMethod,
                pathname: path,
                routeId: routeId
              });
              setFetcherError(key, routeId, _error2);
              return _context6.abrupt("return");
            case 6:
              // Put this fetcher into it's submitting state
              existingFetcher = state.fetchers.get(key);
              fetcher = router_extends({
                state: "submitting"
              }, submission, {
                data: existingFetcher && existingFetcher.data,
                " _hasFetcherDoneAnything ": true
              });
              state.fetchers.set(key, fetcher);
              updateState({
                fetchers: new Map(state.fetchers)
              }); // Call the action for the fetcher
              abortController = new AbortController();
              fetchRequest = createClientSideRequest(path, abortController.signal, submission);
              fetchControllers.set(key, abortController);
              _context6.next = 15;
              return callLoaderOrAction("action", fetchRequest, match, requestMatches, router.basename);
            case 15:
              actionResult = _context6.sent;
              if (!fetchRequest.signal.aborted) {
                _context6.next = 19;
                break;
              }
              // We can delete this so long as we weren't aborted by ou our own fetcher
              // re-submit which would have put _new_ controller is in fetchControllers
              if (fetchControllers.get(key) === abortController) {
                fetchControllers.delete(key);
              }
              return _context6.abrupt("return");
            case 19:
              if (!isRedirectResult(actionResult)) {
                _context6.next = 26;
                break;
              }
              fetchControllers.delete(key);
              fetchRedirectIds.add(key);
              loadingFetcher = router_extends({
                state: "loading"
              }, submission, {
                data: undefined,
                " _hasFetcherDoneAnything ": true
              });
              state.fetchers.set(key, loadingFetcher);
              updateState({
                fetchers: new Map(state.fetchers)
              });
              return _context6.abrupt("return", startRedirectNavigation(state, actionResult, {
                isFetchActionRedirect: true
              }));
            case 26:
              if (!isErrorResult(actionResult)) {
                _context6.next = 29;
                break;
              }
              setFetcherError(key, routeId, actionResult.error);
              return _context6.abrupt("return");
            case 29:
              if (isDeferredResult(actionResult)) {
                router_invariant(false, "defer() is not supported in actions");
              } // Start the data load for current matches, or the next location if we're
              // in the middle of a navigation
              nextLocation = state.navigation.location || state.location;
              revalidationRequest = createClientSideRequest(nextLocation, abortController.signal);
              matches = state.navigation.state !== "idle" ? matchRoutes(dataRoutes, state.navigation.location, init.basename) : state.matches;
              router_invariant(matches, "Didn't find any matches after fetcher action");
              loadId = ++incrementingLoadId;
              fetchReloadIds.set(key, loadId);
              loadFetcher = router_extends({
                state: "loading",
                data: actionResult.data
              }, submission, {
                " _hasFetcherDoneAnything ": true
              });
              state.fetchers.set(key, loadFetcher);
              _getMatchesToLoad3 = getMatchesToLoad(state, matches, submission, nextLocation, isRevalidationRequired, cancelledDeferredRoutes, cancelledFetcherLoads, _defineProperty({}, match.route.id, actionResult.data), undefined,
              // No need to send through errors since we short circuit above
              fetchLoadMatches), _getMatchesToLoad4 = _slicedToArray(_getMatchesToLoad3, 2), matchesToLoad = _getMatchesToLoad4[0], revalidatingFetchers = _getMatchesToLoad4[1]; // Put all revalidating fetchers into the loading state, except for the
              // current fetcher which we want to keep in it's current loading state which
              // contains it's action submission info + action data
              revalidatingFetchers.filter(function (_ref5) {
                var _ref17 = _slicedToArray(_ref5, 1),
                  staleKey = _ref17[0];
                return staleKey !== key;
              }).forEach(function (_ref6) {
                var _ref18 = _slicedToArray(_ref6, 1),
                  staleKey = _ref18[0];
                var existingFetcher = state.fetchers.get(staleKey);
                var revalidatingFetcher = {
                  state: "loading",
                  data: existingFetcher && existingFetcher.data,
                  formMethod: undefined,
                  formAction: undefined,
                  formEncType: undefined,
                  formData: undefined,
                  " _hasFetcherDoneAnything ": true
                };
                state.fetchers.set(staleKey, revalidatingFetcher);
                fetchControllers.set(staleKey, abortController);
              });
              updateState({
                fetchers: new Map(state.fetchers)
              });
              _context6.next = 43;
              return callLoadersAndMaybeResolveData(state.matches, matches, matchesToLoad, revalidatingFetchers, revalidationRequest);
            case 43:
              _yield$callLoadersAnd2 = _context6.sent;
              results = _yield$callLoadersAnd2.results;
              loaderResults = _yield$callLoadersAnd2.loaderResults;
              fetcherResults = _yield$callLoadersAnd2.fetcherResults;
              if (!abortController.signal.aborted) {
                _context6.next = 49;
                break;
              }
              return _context6.abrupt("return");
            case 49:
              fetchReloadIds.delete(key);
              fetchControllers.delete(key);
              revalidatingFetchers.forEach(function (_ref7) {
                var _ref19 = _slicedToArray(_ref7, 1),
                  staleKey = _ref19[0];
                return fetchControllers.delete(staleKey);
              });
              redirect = findRedirect(results);
              if (!redirect) {
                _context6.next = 55;
                break;
              }
              return _context6.abrupt("return", startRedirectNavigation(state, redirect));
            case 55:
              // Process and commit output from loaders
              _processLoaderData2 = processLoaderData(state, state.matches, matchesToLoad, loaderResults, undefined, revalidatingFetchers, fetcherResults, activeDeferreds), loaderData = _processLoaderData2.loaderData, errors = _processLoaderData2.errors;
              doneFetcher = {
                state: "idle",
                data: actionResult.data,
                formMethod: undefined,
                formAction: undefined,
                formEncType: undefined,
                formData: undefined,
                " _hasFetcherDoneAnything ": true
              };
              state.fetchers.set(key, doneFetcher);
              didAbortFetchLoads = abortStaleFetchLoads(loadId); // If we are currently in a navigation loading state and this fetcher is
              // more recent than the navigation, we want the newer data so abort the
              // navigation and complete it with the fetcher data
              if (state.navigation.state === "loading" && loadId > pendingNavigationLoadId) {
                router_invariant(pendingAction, "Expected pending action");
                pendingNavigationController && pendingNavigationController.abort();
                completeNavigation(state.navigation.location, {
                  matches: matches,
                  loaderData: loaderData,
                  errors: errors,
                  fetchers: new Map(state.fetchers)
                });
              } else {
                // otherwise just update with the fetcher data, preserving any existing
                // loaderData for loaders that did not need to reload.  We have to
                // manually merge here since we aren't going through completeNavigation
                updateState(router_extends({
                  errors: errors,
                  loaderData: mergeLoaderData(state.loaderData, loaderData, matches, errors)
                }, didAbortFetchLoads ? {
                  fetchers: new Map(state.fetchers)
                } : {}));
                isRevalidationRequired = false;
              }
            case 60:
            case "end":
              return _context6.stop();
          }
        }
      }, _callee6);
    }));
    return _handleFetcherAction.apply(this, arguments);
  }
  function handleFetcherLoader(_x26, _x27, _x28, _x29, _x30, _x31) {
    return _handleFetcherLoader.apply(this, arguments);
  }
  /**
   * Utility function to handle redirects returned from an action or loader.
   * Normally, a redirect "replaces" the navigation that triggered it.  So, for
   * example:
   *
   *  - user is on /a
   *  - user clicks a link to /b
   *  - loader for /b redirects to /c
   *
   * In a non-JS app the browser would track the in-flight navigation to /b and
   * then replace it with /c when it encountered the redirect response.  In
   * the end it would only ever update the URL bar with /c.
   *
   * In client-side routing using pushState/replaceState, we aim to emulate
   * this behavior and we also do not update history until the end of the
   * navigation (including processed redirects).  This means that we never
   * actually touch history until we've processed redirects, so we just use
   * the history action from the original navigation (PUSH or REPLACE).
   */
  function _handleFetcherLoader() {
    _handleFetcherLoader = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee7(key, routeId, path, match, matches, submission) {
      var existingFetcher, loadingFetcher, abortController, fetchRequest, result, boundaryMatch, doneFetcher;
      return _regeneratorRuntime().wrap(function _callee7$(_context7) {
        while (1) {
          switch (_context7.prev = _context7.next) {
            case 0:
              existingFetcher = state.fetchers.get(key); // Put this fetcher into it's loading state
              loadingFetcher = router_extends({
                state: "loading",
                formMethod: undefined,
                formAction: undefined,
                formEncType: undefined,
                formData: undefined
              }, submission, {
                data: existingFetcher && existingFetcher.data,
                " _hasFetcherDoneAnything ": true
              });
              state.fetchers.set(key, loadingFetcher);
              updateState({
                fetchers: new Map(state.fetchers)
              }); // Call the loader for this fetcher route match
              abortController = new AbortController();
              fetchRequest = createClientSideRequest(path, abortController.signal);
              fetchControllers.set(key, abortController);
              _context7.next = 9;
              return callLoaderOrAction("loader", fetchRequest, match, matches, router.basename);
            case 9:
              result = _context7.sent;
              if (!isDeferredResult(result)) {
                _context7.next = 17;
                break;
              }
              _context7.next = 13;
              return resolveDeferredData(result, fetchRequest.signal, true);
            case 13:
              _context7.t0 = _context7.sent;
              if (_context7.t0) {
                _context7.next = 16;
                break;
              }
              _context7.t0 = result;
            case 16:
              result = _context7.t0;
            case 17:
              // We can delete this so long as we weren't aborted by ou our own fetcher
              // re-load which would have put _new_ controller is in fetchControllers

              if (fetchControllers.get(key) === abortController) {
                fetchControllers.delete(key);
              }
              if (!fetchRequest.signal.aborted) {
                _context7.next = 20;
                break;
              }
              return _context7.abrupt("return");
            case 20:
              if (!isRedirectResult(result)) {
                _context7.next = 24;
                break;
              }
              _context7.next = 23;
              return startRedirectNavigation(state, result);
            case 23:
              return _context7.abrupt("return");
            case 24:
              if (!isErrorResult(result)) {
                _context7.next = 29;
                break;
              }
              boundaryMatch = findNearestBoundary(state.matches, routeId);
              state.fetchers.delete(key); // TODO: In remix, this would reset to IDLE_NAVIGATION if it was a catch -
              // do we need to behave any differently with our non-redirect errors?
              // What if it was a non-redirect Response?

              updateState({
                fetchers: new Map(state.fetchers),
                errors: _defineProperty({}, boundaryMatch.route.id, result.error)
              });
              return _context7.abrupt("return");
            case 29:
              router_invariant(!isDeferredResult(result), "Unhandled fetcher deferred data"); // Put the fetcher back into an idle state
              doneFetcher = {
                state: "idle",
                data: result.data,
                formMethod: undefined,
                formAction: undefined,
                formEncType: undefined,
                formData: undefined,
                " _hasFetcherDoneAnything ": true
              };
              state.fetchers.set(key, doneFetcher);
              updateState({
                fetchers: new Map(state.fetchers)
              });
            case 33:
            case "end":
              return _context7.stop();
          }
        }
      }, _callee7);
    }));
    return _handleFetcherLoader.apply(this, arguments);
  }
  function startRedirectNavigation(_x32, _x33, _x34) {
    return _startRedirectNavigation.apply(this, arguments);
  }
  function _startRedirectNavigation() {
    _startRedirectNavigation = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee8(state, redirect, _temp) {
      var _window, _ref20, submission, replace, isFetchActionRedirect, redirectLocation, newOrigin, redirectHistoryAction, _state$navigation, formMethod, formAction, formEncType, formData;
      return _regeneratorRuntime().wrap(function _callee8$(_context8) {
        while (1) {
          switch (_context8.prev = _context8.next) {
            case 0:
              _ref20 = _temp === void 0 ? {} : _temp, submission = _ref20.submission, replace = _ref20.replace, isFetchActionRedirect = _ref20.isFetchActionRedirect;
              if (redirect.revalidate) {
                isRevalidationRequired = true;
              }
              redirectLocation = createLocation(state.location, redirect.location,
              // TODO: This can be removed once we get rid of useTransition in Remix v2
              router_extends({
                _isRedirect: true
              }, isFetchActionRedirect ? {
                _isFetchActionRedirect: true
              } : {}));
              router_invariant(redirectLocation, "Expected a location on the redirect navigation"); // Check if this an external redirect that goes to a new origin
              if (!(typeof ((_window = window) == null ? void 0 : _window.location) !== "undefined")) {
                _context8.next = 9;
                break;
              }
              newOrigin = createClientSideURL(redirect.location).origin;
              if (!(window.location.origin !== newOrigin)) {
                _context8.next = 9;
                break;
              }
              if (replace) {
                window.location.replace(redirect.location);
              } else {
                window.location.assign(redirect.location);
              }
              return _context8.abrupt("return");
            case 9:
              // There's no need to abort on redirects, since we don't detect the
              // redirect until the action/loaders have settled

              pendingNavigationController = null;
              redirectHistoryAction = replace === true ? Action.Replace : Action.Push; // Use the incoming submission if provided, fallback on the active one in
              // state.navigation
              _state$navigation = state.navigation, formMethod = _state$navigation.formMethod, formAction = _state$navigation.formAction, formEncType = _state$navigation.formEncType, formData = _state$navigation.formData;
              if (!submission && formMethod && formAction && formData && formEncType) {
                submission = {
                  formMethod: formMethod,
                  formAction: formAction,
                  formEncType: formEncType,
                  formData: formData
                };
              } // If this was a 307/308 submission we want to preserve the HTTP method and
              // re-submit the GET/POST/PUT/PATCH/DELETE as a submission navigation to the
              // redirected location
              if (!(redirectPreserveMethodStatusCodes.has(redirect.status) && submission && isMutationMethod(submission.formMethod))) {
                _context8.next = 18;
                break;
              }
              _context8.next = 16;
              return startNavigation(redirectHistoryAction, redirectLocation, {
                submission: router_extends({}, submission, {
                  formAction: redirect.location
                })
              });
            case 16:
              _context8.next = 20;
              break;
            case 18:
              _context8.next = 20;
              return startNavigation(redirectHistoryAction, redirectLocation, {
                overrideNavigation: {
                  state: "loading",
                  location: redirectLocation,
                  formMethod: submission ? submission.formMethod : undefined,
                  formAction: submission ? submission.formAction : undefined,
                  formEncType: submission ? submission.formEncType : undefined,
                  formData: submission ? submission.formData : undefined
                }
              });
            case 20:
            case "end":
              return _context8.stop();
          }
        }
      }, _callee8);
    }));
    return _startRedirectNavigation.apply(this, arguments);
  }
  function callLoadersAndMaybeResolveData(_x35, _x36, _x37, _x38, _x39) {
    return _callLoadersAndMaybeResolveData.apply(this, arguments);
  }
  function _callLoadersAndMaybeResolveData() {
    _callLoadersAndMaybeResolveData = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee9(currentMatches, matches, matchesToLoad, fetchersToLoad, request) {
      var results, loaderResults, fetcherResults;
      return _regeneratorRuntime().wrap(function _callee9$(_context9) {
        while (1) {
          switch (_context9.prev = _context9.next) {
            case 0:
              _context9.next = 2;
              return Promise.all([].concat(_toConsumableArray(matchesToLoad.map(function (match) {
                return callLoaderOrAction("loader", request, match, matches, router.basename);
              })), _toConsumableArray(fetchersToLoad.map(function (_ref8) {
                var _ref21 = _slicedToArray(_ref8, 4),
                  href = _ref21[1],
                  match = _ref21[2],
                  fetchMatches = _ref21[3];
                return callLoaderOrAction("loader", createClientSideRequest(href, request.signal), match, fetchMatches, router.basename);
              }))));
            case 2:
              results = _context9.sent;
              loaderResults = results.slice(0, matchesToLoad.length);
              fetcherResults = results.slice(matchesToLoad.length);
              _context9.next = 7;
              return Promise.all([resolveDeferredResults(currentMatches, matchesToLoad, loaderResults, request.signal, false, state.loaderData), resolveDeferredResults(currentMatches, fetchersToLoad.map(function (_ref9) {
                var _ref22 = _slicedToArray(_ref9, 3),
                  match = _ref22[2];
                return match;
              }), fetcherResults, request.signal, true)]);
            case 7:
              return _context9.abrupt("return", {
                results: results,
                loaderResults: loaderResults,
                fetcherResults: fetcherResults
              });
            case 8:
            case "end":
              return _context9.stop();
          }
        }
      }, _callee9);
    }));
    return _callLoadersAndMaybeResolveData.apply(this, arguments);
  }
  function interruptActiveLoads() {
    var _cancelledDeferredRou;
    // Every interruption triggers a revalidation
    isRevalidationRequired = true; // Cancel pending route-level deferreds and mark cancelled routes for
    // revalidation

    (_cancelledDeferredRou = cancelledDeferredRoutes).push.apply(_cancelledDeferredRou, _toConsumableArray(cancelActiveDeferreds())); // Abort in-flight fetcher loads

    fetchLoadMatches.forEach(function (_, key) {
      if (fetchControllers.has(key)) {
        cancelledFetcherLoads.push(key);
        abortFetcher(key);
      }
    });
  }
  function setFetcherError(key, routeId, error) {
    var boundaryMatch = findNearestBoundary(state.matches, routeId);
    deleteFetcher(key);
    updateState({
      errors: _defineProperty({}, boundaryMatch.route.id, error),
      fetchers: new Map(state.fetchers)
    });
  }
  function deleteFetcher(key) {
    if (fetchControllers.has(key)) abortFetcher(key);
    fetchLoadMatches.delete(key);
    fetchReloadIds.delete(key);
    fetchRedirectIds.delete(key);
    state.fetchers.delete(key);
  }
  function abortFetcher(key) {
    var controller = fetchControllers.get(key);
    router_invariant(controller, "Expected fetch controller: " + key);
    controller.abort();
    fetchControllers.delete(key);
  }
  function markFetchersDone(keys) {
    var _iterator2 = _createForOfIteratorHelper(keys),
      _step2;
    try {
      for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {
        var key = _step2.value;
        var fetcher = getFetcher(key);
        var doneFetcher = {
          state: "idle",
          data: fetcher.data,
          formMethod: undefined,
          formAction: undefined,
          formEncType: undefined,
          formData: undefined,
          " _hasFetcherDoneAnything ": true
        };
        state.fetchers.set(key, doneFetcher);
      }
    } catch (err) {
      _iterator2.e(err);
    } finally {
      _iterator2.f();
    }
  }
  function markFetchRedirectsDone() {
    var doneKeys = [];
    var _iterator3 = _createForOfIteratorHelper(fetchRedirectIds),
      _step3;
    try {
      for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {
        var key = _step3.value;
        var fetcher = state.fetchers.get(key);
        router_invariant(fetcher, "Expected fetcher: " + key);
        if (fetcher.state === "loading") {
          fetchRedirectIds.delete(key);
          doneKeys.push(key);
        }
      }
    } catch (err) {
      _iterator3.e(err);
    } finally {
      _iterator3.f();
    }
    markFetchersDone(doneKeys);
  }
  function abortStaleFetchLoads(landedId) {
    var yeetedKeys = [];
    var _iterator4 = _createForOfIteratorHelper(fetchReloadIds),
      _step4;
    try {
      for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {
        var _step4$value = _slicedToArray(_step4.value, 2),
          key = _step4$value[0],
          id = _step4$value[1];
        if (id < landedId) {
          var fetcher = state.fetchers.get(key);
          router_invariant(fetcher, "Expected fetcher: " + key);
          if (fetcher.state === "loading") {
            abortFetcher(key);
            fetchReloadIds.delete(key);
            yeetedKeys.push(key);
          }
        }
      }
    } catch (err) {
      _iterator4.e(err);
    } finally {
      _iterator4.f();
    }
    markFetchersDone(yeetedKeys);
    return yeetedKeys.length > 0;
  }
  function cancelActiveDeferreds(predicate) {
    var cancelledRouteIds = [];
    activeDeferreds.forEach(function (dfd, routeId) {
      if (!predicate || predicate(routeId)) {
        // Cancel the deferred - but do not remove from activeDeferreds here -
        // we rely on the subscribers to do that so our tests can assert proper
        // cleanup via _internalActiveDeferreds
        dfd.cancel();
        cancelledRouteIds.push(routeId);
        activeDeferreds.delete(routeId);
      }
    });
    return cancelledRouteIds;
  } // Opt in to capturing and reporting scroll positions during navigations,
  // used by the <ScrollRestoration> component

  function enableScrollRestoration(positions, getPosition, getKey) {
    savedScrollPositions = positions;
    getScrollPosition = getPosition;
    getScrollRestorationKey = getKey || function (location) {
      return location.key;
    }; // Perform initial hydration scroll restoration, since we miss the boat on
    // the initial updateState() because we've not yet rendered <ScrollRestoration/>
    // and therefore have no savedScrollPositions available

    if (!initialScrollRestored && state.navigation === IDLE_NAVIGATION) {
      initialScrollRestored = true;
      var y = getSavedScrollPosition(state.location, state.matches);
      if (y != null) {
        updateState({
          restoreScrollPosition: y
        });
      }
    }
    return function () {
      savedScrollPositions = null;
      getScrollPosition = null;
      getScrollRestorationKey = null;
    };
  }
  function saveScrollPosition(location, matches) {
    if (savedScrollPositions && getScrollRestorationKey && getScrollPosition) {
      var userMatches = matches.map(function (m) {
        return createUseMatchesMatch(m, state.loaderData);
      });
      var key = getScrollRestorationKey(location, userMatches) || location.key;
      savedScrollPositions[key] = getScrollPosition();
    }
  }
  function getSavedScrollPosition(location, matches) {
    if (savedScrollPositions && getScrollRestorationKey && getScrollPosition) {
      var userMatches = matches.map(function (m) {
        return createUseMatchesMatch(m, state.loaderData);
      });
      var key = getScrollRestorationKey(location, userMatches) || location.key;
      var y = savedScrollPositions[key];
      if (typeof y === "number") {
        return y;
      }
    }
    return null;
  }
  router = {
    get basename() {
      return init.basename;
    },
    get state() {
      return state;
    },
    get routes() {
      return dataRoutes;
    },
    initialize: initialize,
    subscribe: subscribe,
    enableScrollRestoration: enableScrollRestoration,
    navigate: navigate,
    fetch: fetch,
    revalidate: revalidate,
    // Passthrough to history-aware createHref used by useHref so we get proper
    // hash-aware URLs in DOM paths
    createHref: function createHref(to) {
      return init.history.createHref(to);
    },
    encodeLocation: function encodeLocation(to) {
      return init.history.encodeLocation(to);
    },
    getFetcher: getFetcher,
    deleteFetcher: deleteFetcher,
    dispose: dispose,
    _internalFetchControllers: fetchControllers,
    _internalActiveDeferreds: activeDeferreds
  };
  return router;
} //#endregion
////////////////////////////////////////////////////////////////////////////////
//#region createStaticHandler
////////////////////////////////////////////////////////////////////////////////

function createStaticHandler(routes, opts) {
  router_invariant(routes.length > 0, "You must provide a non-empty routes array to createStaticHandler");
  var dataRoutes = convertRoutesToDataRoutes(routes);
  var basename = (opts ? opts.basename : null) || "/";
  /**
   * The query() method is intended for document requests, in which we want to
   * call an optional action and potentially multiple loaders for all nested
   * routes.  It returns a StaticHandlerContext object, which is very similar
   * to the router state (location, loaderData, actionData, errors, etc.) and
   * also adds SSR-specific information such as the statusCode and headers
   * from action/loaders Responses.
   *
   * It _should_ never throw and should report all errors through the
   * returned context.errors object, properly associating errors to their error
   * boundary.  Additionally, it tracks _deepestRenderedBoundaryId which can be
   * used to emulate React error boundaries during SSr by performing a second
   * pass only down to the boundaryId.
   *
   * The one exception where we do not return a StaticHandlerContext is when a
   * redirect response is returned or thrown from any action/loader.  We
   * propagate that out and return the raw Response so the HTTP server can
   * return it directly.
   */
  function query(_x40, _x41) {
    return _query.apply(this, arguments);
  }
  /**
   * The queryRoute() method is intended for targeted route requests, either
   * for fetch ?_data requests or resource route requests.  In this case, we
   * are only ever calling a single action or loader, and we are returning the
   * returned value directly.  In most cases, this will be a Response returned
   * from the action/loader, but it may be a primitive or other value as well -
   * and in such cases the calling context should handle that accordingly.
   *
   * We do respect the throw/return differentiation, so if an action/loader
   * throws, then this method will throw the value.  This is important so we
   * can do proper boundary identification in Remix where a thrown Response
   * must go to the Catch Boundary but a returned Response is happy-path.
   *
   * One thing to note is that any Router-initiated Errors that make sense
   * to associate with a status code will be thrown as an ErrorResponse
   * instance which include the raw Error, such that the calling context can
   * serialize the error as they see fit while including the proper response
   * code.  Examples here are 404 and 405 errors that occur prior to reaching
   * any user-defined loaders.
   */
  function _query() {
    _query = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee10(request, _temp2) {
      var _ref23, requestContext, url, method, location, matches, error, _getShortCircuitMatch3, methodNotAllowedMatches, route, _error3, _getShortCircuitMatch4, notFoundMatches, _route2, result;
      return _regeneratorRuntime().wrap(function _callee10$(_context10) {
        while (1) {
          switch (_context10.prev = _context10.next) {
            case 0:
              _ref23 = _temp2 === void 0 ? {} : _temp2, requestContext = _ref23.requestContext;
              url = new URL(request.url);
              method = request.method.toLowerCase();
              location = createLocation("", router_createPath(url), null, "default");
              matches = matchRoutes(dataRoutes, location, basename); // SSR supports HEAD requests while SPA doesn't
              if (!(!isValidMethod(method) && method !== "head")) {
                _context10.next = 11;
                break;
              }
              error = getInternalRouterError(405, {
                method: method
              });
              _getShortCircuitMatch3 = getShortCircuitMatches(dataRoutes), methodNotAllowedMatches = _getShortCircuitMatch3.matches, route = _getShortCircuitMatch3.route;
              return _context10.abrupt("return", {
                basename: basename,
                location: location,
                matches: methodNotAllowedMatches,
                loaderData: {},
                actionData: null,
                errors: _defineProperty({}, route.id, error),
                statusCode: error.status,
                loaderHeaders: {},
                actionHeaders: {}
              });
            case 11:
              if (matches) {
                _context10.next = 15;
                break;
              }
              _error3 = getInternalRouterError(404, {
                pathname: location.pathname
              });
              _getShortCircuitMatch4 = getShortCircuitMatches(dataRoutes), notFoundMatches = _getShortCircuitMatch4.matches, _route2 = _getShortCircuitMatch4.route;
              return _context10.abrupt("return", {
                basename: basename,
                location: location,
                matches: notFoundMatches,
                loaderData: {},
                actionData: null,
                errors: _defineProperty({}, _route2.id, _error3),
                statusCode: _error3.status,
                loaderHeaders: {},
                actionHeaders: {}
              });
            case 15:
              _context10.next = 17;
              return queryImpl(request, location, matches, requestContext);
            case 17:
              result = _context10.sent;
              if (!isResponse(result)) {
                _context10.next = 20;
                break;
              }
              return _context10.abrupt("return", result);
            case 20:
              return _context10.abrupt("return", router_extends({
                location: location,
                basename: basename
              }, result));
            case 21:
            case "end":
              return _context10.stop();
          }
        }
      }, _callee10);
    }));
    return _query.apply(this, arguments);
  }
  function queryRoute(_x42, _x43) {
    return _queryRoute.apply(this, arguments);
  }
  function _queryRoute() {
    _queryRoute = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee11(request, _temp3) {
      var _ref24, routeId, requestContext, url, method, location, matches, match, result, error, routeData;
      return _regeneratorRuntime().wrap(function _callee11$(_context11) {
        while (1) {
          switch (_context11.prev = _context11.next) {
            case 0:
              _ref24 = _temp3 === void 0 ? {} : _temp3, routeId = _ref24.routeId, requestContext = _ref24.requestContext;
              url = new URL(request.url);
              method = request.method.toLowerCase();
              location = createLocation("", router_createPath(url), null, "default");
              matches = matchRoutes(dataRoutes, location, basename); // SSR supports HEAD requests while SPA doesn't
              if (!(!isValidMethod(method) && method !== "head")) {
                _context11.next = 9;
                break;
              }
              throw getInternalRouterError(405, {
                method: method
              });
            case 9:
              if (matches) {
                _context11.next = 11;
                break;
              }
              throw getInternalRouterError(404, {
                pathname: location.pathname
              });
            case 11:
              match = routeId ? matches.find(function (m) {
                return m.route.id === routeId;
              }) : getTargetMatch(matches, location);
              if (!(routeId && !match)) {
                _context11.next = 16;
                break;
              }
              throw getInternalRouterError(403, {
                pathname: location.pathname,
                routeId: routeId
              });
            case 16:
              if (match) {
                _context11.next = 18;
                break;
              }
              throw getInternalRouterError(404, {
                pathname: location.pathname
              });
            case 18:
              _context11.next = 20;
              return queryImpl(request, location, matches, requestContext, match);
            case 20:
              result = _context11.sent;
              if (!isResponse(result)) {
                _context11.next = 23;
                break;
              }
              return _context11.abrupt("return", result);
            case 23:
              error = result.errors ? Object.values(result.errors)[0] : undefined;
              if (!(error !== undefined)) {
                _context11.next = 26;
                break;
              }
              throw error;
            case 26:
              // Pick off the right state value to return
              routeData = [result.actionData, result.loaderData].find(function (v) {
                return v;
              });
              return _context11.abrupt("return", Object.values(routeData || {})[0]);
            case 28:
            case "end":
              return _context11.stop();
          }
        }
      }, _callee11);
    }));
    return _queryRoute.apply(this, arguments);
  }
  function queryImpl(_x44, _x45, _x46, _x47, _x48) {
    return _queryImpl.apply(this, arguments);
  }
  function _queryImpl() {
    _queryImpl = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee12(request, location, matches, requestContext, routeMatch) {
      var _result, result;
      return _regeneratorRuntime().wrap(function _callee12$(_context12) {
        while (1) {
          switch (_context12.prev = _context12.next) {
            case 0:
              router_invariant(request.signal, "query()/queryRoute() requests must contain an AbortController signal");
              _context12.prev = 1;
              if (!isMutationMethod(request.method.toLowerCase())) {
                _context12.next = 7;
                break;
              }
              _context12.next = 5;
              return submit(request, matches, routeMatch || getTargetMatch(matches, location), requestContext, routeMatch != null);
            case 5:
              _result = _context12.sent;
              return _context12.abrupt("return", _result);
            case 7:
              _context12.next = 9;
              return loadRouteData(request, matches, requestContext, routeMatch);
            case 9:
              result = _context12.sent;
              return _context12.abrupt("return", isResponse(result) ? result : router_extends({}, result, {
                actionData: null,
                actionHeaders: {}
              }));
            case 13:
              _context12.prev = 13;
              _context12.t0 = _context12["catch"](1);
              if (!isQueryRouteResponse(_context12.t0)) {
                _context12.next = 19;
                break;
              }
              if (!(_context12.t0.type === ResultType.error && !isRedirectResponse(_context12.t0.response))) {
                _context12.next = 18;
                break;
              }
              throw _context12.t0.response;
            case 18:
              return _context12.abrupt("return", _context12.t0.response);
            case 19:
              if (!isRedirectResponse(_context12.t0)) {
                _context12.next = 21;
                break;
              }
              return _context12.abrupt("return", _context12.t0);
            case 21:
              throw _context12.t0;
            case 22:
            case "end":
              return _context12.stop();
          }
        }
      }, _callee12, null, [[1, 13]]);
    }));
    return _queryImpl.apply(this, arguments);
  }
  function submit(_x49, _x50, _x51, _x52, _x53) {
    return _submit.apply(this, arguments);
  }
  function _submit() {
    _submit = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee13(request, matches, actionMatch, requestContext, isRouteRequest) {
      var result, error, method, boundaryMatch, _context13, loaderRequest, context;
      return _regeneratorRuntime().wrap(function _callee13$(_context14) {
        while (1) {
          switch (_context14.prev = _context14.next) {
            case 0:
              if (actionMatch.route.action) {
                _context14.next = 7;
                break;
              }
              error = getInternalRouterError(405, {
                method: request.method,
                pathname: new URL(request.url).pathname,
                routeId: actionMatch.route.id
              });
              if (!isRouteRequest) {
                _context14.next = 4;
                break;
              }
              throw error;
            case 4:
              result = {
                type: ResultType.error,
                error: error
              };
              _context14.next = 13;
              break;
            case 7:
              _context14.next = 9;
              return callLoaderOrAction("action", request, actionMatch, matches, basename, true, isRouteRequest, requestContext);
            case 9:
              result = _context14.sent;
              if (!request.signal.aborted) {
                _context14.next = 13;
                break;
              }
              method = isRouteRequest ? "queryRoute" : "query";
              throw new Error(method + "() call aborted");
            case 13:
              if (!isRedirectResult(result)) {
                _context14.next = 15;
                break;
              }
              throw new Response(null, {
                status: result.status,
                headers: {
                  Location: result.location
                }
              });
            case 15:
              if (!isDeferredResult(result)) {
                _context14.next = 17;
                break;
              }
              throw new Error("defer() is not supported in actions");
            case 17:
              if (!isRouteRequest) {
                _context14.next = 21;
                break;
              }
              if (!isErrorResult(result)) {
                _context14.next = 20;
                break;
              }
              throw result.error;
            case 20:
              return _context14.abrupt("return", {
                matches: [actionMatch],
                loaderData: {},
                actionData: _defineProperty({}, actionMatch.route.id, result.data),
                errors: null,
                // Note: statusCode + headers are unused here since queryRoute will
                // return the raw Response or value
                statusCode: 200,
                loaderHeaders: {},
                actionHeaders: {}
              });
            case 21:
              if (!isErrorResult(result)) {
                _context14.next = 27;
                break;
              }
              // Store off the pending error - we use it to determine which loaders
              // to call and will commit it when we complete the navigation
              boundaryMatch = findNearestBoundary(matches, actionMatch.route.id);
              _context14.next = 25;
              return loadRouteData(request, matches, requestContext, undefined, _defineProperty({}, boundaryMatch.route.id, result.error));
            case 25:
              _context13 = _context14.sent;
              return _context14.abrupt("return", router_extends({}, _context13, {
                statusCode: isRouteErrorResponse(result.error) ? result.error.status : 500,
                actionData: null,
                actionHeaders: router_extends({}, result.headers ? _defineProperty({}, actionMatch.route.id, result.headers) : {})
              }));
            case 27:
              // Create a GET request for the loaders
              loaderRequest = new Request(request.url, {
                headers: request.headers,
                redirect: request.redirect,
                signal: request.signal
              });
              _context14.next = 30;
              return loadRouteData(loaderRequest, matches, requestContext);
            case 30:
              context = _context14.sent;
              return _context14.abrupt("return", router_extends({}, context, result.statusCode ? {
                statusCode: result.statusCode
              } : {}, {
                actionData: _defineProperty({}, actionMatch.route.id, result.data),
                actionHeaders: router_extends({}, result.headers ? _defineProperty({}, actionMatch.route.id, result.headers) : {})
              }));
            case 32:
            case "end":
              return _context14.stop();
          }
        }
      }, _callee13);
    }));
    return _submit.apply(this, arguments);
  }
  function loadRouteData(_x54, _x55, _x56, _x57, _x58) {
    return _loadRouteData.apply(this, arguments);
  }
  function _loadRouteData() {
    _loadRouteData = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee14(request, matches, requestContext, routeMatch, pendingActionError) {
      var isRouteRequest, requestMatches, matchesToLoad, results, method, executedLoaders, context;
      return _regeneratorRuntime().wrap(function _callee14$(_context15) {
        while (1) {
          switch (_context15.prev = _context15.next) {
            case 0:
              isRouteRequest = routeMatch != null; // Short circuit if we have no loaders to run (queryRoute())
              if (!(isRouteRequest && !(routeMatch != null && routeMatch.route.loader))) {
                _context15.next = 3;
                break;
              }
              throw getInternalRouterError(400, {
                method: request.method,
                pathname: new URL(request.url).pathname,
                routeId: routeMatch == null ? void 0 : routeMatch.route.id
              });
            case 3:
              requestMatches = routeMatch ? [routeMatch] : getLoaderMatchesUntilBoundary(matches, Object.keys(pendingActionError || {})[0]);
              matchesToLoad = requestMatches.filter(function (m) {
                return m.route.loader;
              }); // Short circuit if we have no loaders to run (query())
              if (!(matchesToLoad.length === 0)) {
                _context15.next = 7;
                break;
              }
              return _context15.abrupt("return", {
                matches: matches,
                // Add a null for all matched routes for proper revalidation on the client
                loaderData: matches.reduce(function (acc, m) {
                  return Object.assign(acc, _defineProperty({}, m.route.id, null));
                }, {}),
                errors: pendingActionError || null,
                statusCode: 200,
                loaderHeaders: {}
              });
            case 7:
              _context15.next = 9;
              return Promise.all(_toConsumableArray(matchesToLoad.map(function (match) {
                return callLoaderOrAction("loader", request, match, matches, basename, true, isRouteRequest, requestContext);
              })));
            case 9:
              results = _context15.sent;
              if (!request.signal.aborted) {
                _context15.next = 13;
                break;
              }
              method = isRouteRequest ? "queryRoute" : "query";
              throw new Error(method + "() call aborted");
            case 13:
              executedLoaders = new Set();
              results.forEach(function (result, i) {
                executedLoaders.add(matchesToLoad[i].route.id); // Can't do anything with these without the Remix side of things, so just
                // cancel them for now

                if (isDeferredResult(result)) {
                  result.deferredData.cancel();
                }
              }); // Process and commit output from loaders
              context = processRouteLoaderData(matches, matchesToLoad, results, pendingActionError); // Add a null for any non-loader matches for proper revalidation on the client
              matches.forEach(function (match) {
                if (!executedLoaders.has(match.route.id)) {
                  context.loaderData[match.route.id] = null;
                }
              });
              return _context15.abrupt("return", router_extends({}, context, {
                matches: matches
              }));
            case 18:
            case "end":
              return _context15.stop();
          }
        }
      }, _callee14);
    }));
    return _loadRouteData.apply(this, arguments);
  }
  return {
    dataRoutes: dataRoutes,
    query: query,
    queryRoute: queryRoute
  };
} //#endregion
////////////////////////////////////////////////////////////////////////////////
//#region Helpers
////////////////////////////////////////////////////////////////////////////////

/**
 * Given an existing StaticHandlerContext and an error thrown at render time,
 * provide an updated StaticHandlerContext suitable for a second SSR render
 */

function getStaticContextFromError(routes, context, error) {
  var newContext = router_extends({}, context, {
    statusCode: 500,
    errors: _defineProperty({}, context._deepestRenderedBoundaryId || routes[0].id, error)
  });
  return newContext;
}
function isSubmissionNavigation(opts) {
  return opts != null && "formData" in opts;
} // Normalize navigation options by converting formMethod=GET formData objects to
// URLSearchParams so they behave identically to links with query params

function normalizeNavigateOptions(to, opts, isFetcher) {
  if (isFetcher === void 0) {
    isFetcher = false;
  }
  var path = typeof to === "string" ? to : router_createPath(to); // Return location verbatim on non-submission navigations

  if (!opts || !isSubmissionNavigation(opts)) {
    return {
      path: path
    };
  }
  if (opts.formMethod && !isValidMethod(opts.formMethod)) {
    return {
      path: path,
      error: getInternalRouterError(405, {
        method: opts.formMethod
      })
    };
  } // Create a Submission on non-GET navigations

  var submission;
  if (opts.formData) {
    submission = {
      formMethod: opts.formMethod || "get",
      formAction: stripHashFromPath(path),
      formEncType: opts && opts.formEncType || "application/x-www-form-urlencoded",
      formData: opts.formData
    };
    if (isMutationMethod(submission.formMethod)) {
      return {
        path: path,
        submission: submission
      };
    }
  } // Flatten submission onto URLSearchParams for GET submissions

  var parsedPath = parsePath(path);
  try {
    var searchParams = convertFormDataToSearchParams(opts.formData); // Since fetcher GET submissions only run a single loader (as opposed to
    // navigation GET submissions which run all loaders), we need to preserve
    // any incoming ?index params

    if (isFetcher && parsedPath.search && hasNakedIndexQuery(parsedPath.search)) {
      searchParams.append("index", "");
    }
    parsedPath.search = "?" + searchParams;
  } catch (e) {
    return {
      path: path,
      error: getInternalRouterError(400)
    };
  }
  return {
    path: router_createPath(parsedPath),
    submission: submission
  };
} // Filter out all routes below any caught error as they aren't going to
// render so we don't need to load them

function getLoaderMatchesUntilBoundary(matches, boundaryId) {
  var boundaryMatches = matches;
  if (boundaryId) {
    var index = matches.findIndex(function (m) {
      return m.route.id === boundaryId;
    });
    if (index >= 0) {
      boundaryMatches = matches.slice(0, index);
    }
  }
  return boundaryMatches;
}
function getMatchesToLoad(state, matches, submission, location, isRevalidationRequired, cancelledDeferredRoutes, cancelledFetcherLoads, pendingActionData, pendingError, fetchLoadMatches) {
  var actionResult = pendingError ? Object.values(pendingError)[0] : pendingActionData ? Object.values(pendingActionData)[0] : undefined; // Pick navigation matches that are net-new or qualify for revalidation

  var boundaryId = pendingError ? Object.keys(pendingError)[0] : undefined;
  var boundaryMatches = getLoaderMatchesUntilBoundary(matches, boundaryId);
  var navigationMatches = boundaryMatches.filter(function (match, index) {
    return match.route.loader != null && (isNewLoader(state.loaderData, state.matches[index], match) ||
    // If this route had a pending deferred cancelled it must be revalidated
    cancelledDeferredRoutes.some(function (id) {
      return id === match.route.id;
    }) || shouldRevalidateLoader(state.location, state.matches[index], submission, location, match, isRevalidationRequired, actionResult));
  }); // Pick fetcher.loads that need to be revalidated

  var revalidatingFetchers = [];
  fetchLoadMatches && fetchLoadMatches.forEach(function (_ref10, key) {
    var _ref27 = _slicedToArray(_ref10, 3),
      href = _ref27[0],
      match = _ref27[1],
      fetchMatches = _ref27[2];

    // This fetcher was cancelled from a prior action submission - force reload
    if (cancelledFetcherLoads.includes(key)) {
      revalidatingFetchers.push([key, href, match, fetchMatches]);
    } else if (isRevalidationRequired) {
      var shouldRevalidate = shouldRevalidateLoader(href, match, submission, href, match, isRevalidationRequired, actionResult);
      if (shouldRevalidate) {
        revalidatingFetchers.push([key, href, match, fetchMatches]);
      }
    }
  });
  return [navigationMatches, revalidatingFetchers];
}
function isNewLoader(currentLoaderData, currentMatch, match) {
  var isNew =
  // [a] -> [a, b]
  !currentMatch ||
  // [a, b] -> [a, c]
  match.route.id !== currentMatch.route.id; // Handle the case that we don't have data for a re-used route, potentially
  // from a prior error or from a cancelled pending deferred

  var isMissingData = currentLoaderData[match.route.id] === undefined; // Always load if this is a net-new route or we don't yet have data

  return isNew || isMissingData;
}
function isNewRouteInstance(currentMatch, match) {
  var currentPath = currentMatch.route.path;
  return (
    // param change for this match, /users/123 -> /users/456
    currentMatch.pathname !== match.pathname ||
    // splat param changed, which is not present in match.path
    // e.g. /files/images/avatar.jpg -> files/finances.xls
    currentPath && currentPath.endsWith("*") && currentMatch.params["*"] !== match.params["*"]
  );
}
function shouldRevalidateLoader(currentLocation, currentMatch, submission, location, match, isRevalidationRequired, actionResult) {
  var currentUrl = createClientSideURL(currentLocation);
  var currentParams = currentMatch.params;
  var nextUrl = createClientSideURL(location);
  var nextParams = match.params; // This is the default implementation as to when we revalidate.  If the route
  // provides it's own implementation, then we give them full control but
  // provide this value so they can leverage it if needed after they check
  // their own specific use cases
  // Note that fetchers always provide the same current/next locations so the
  // URL-based checks here don't apply to fetcher shouldRevalidate calls

  var defaultShouldRevalidate = isNewRouteInstance(currentMatch, match) ||
  // Clicked the same link, resubmitted a GET form
  currentUrl.toString() === nextUrl.toString() ||
  // Search params affect all loaders
  currentUrl.search !== nextUrl.search ||
  // Forced revalidation due to submission, useRevalidate, or X-Remix-Revalidate
  isRevalidationRequired;
  if (match.route.shouldRevalidate) {
    var routeChoice = match.route.shouldRevalidate(router_extends({
      currentUrl: currentUrl,
      currentParams: currentParams,
      nextUrl: nextUrl,
      nextParams: nextParams
    }, submission, {
      actionResult: actionResult,
      defaultShouldRevalidate: defaultShouldRevalidate
    }));
    if (typeof routeChoice === "boolean") {
      return routeChoice;
    }
  }
  return defaultShouldRevalidate;
}
function callLoaderOrAction(_x59, _x60, _x61, _x62, _x63, _x64, _x65, _x66) {
  return _callLoaderOrAction.apply(this, arguments);
} // Utility method for creating the Request instances for loaders/actions during
// client-side navigations and fetches.  During SSR we will always have a
// Request instance from the static handler (query/queryRoute)
function _callLoaderOrAction() {
  _callLoaderOrAction = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee15(type, request, match, matches, basename, isStaticRequest, isRouteRequest, requestContext) {
    var resultType, result, reject, abortPromise, onReject, handler, status, location, isAbsolute, activeMatches, routePathnames, resolvedLocation, path, data, contentType;
    return _regeneratorRuntime().wrap(function _callee15$(_context16) {
      while (1) {
        switch (_context16.prev = _context16.next) {
          case 0:
            if (basename === void 0) {
              basename = "/";
            }
            if (isStaticRequest === void 0) {
              isStaticRequest = false;
            }
            if (isRouteRequest === void 0) {
              isRouteRequest = false;
            }
            abortPromise = new Promise(function (_, r) {
              return reject = r;
            });
            onReject = function onReject() {
              return reject();
            };
            request.signal.addEventListener("abort", onReject);
            _context16.prev = 6;
            handler = match.route[type];
            router_invariant(handler, "Could not find the " + type + " to run on the \"" + match.route.id + "\" route");
            _context16.next = 11;
            return Promise.race([handler({
              request: request,
              params: match.params,
              context: requestContext
            }), abortPromise]);
          case 11:
            result = _context16.sent;
            router_invariant(result !== undefined, "You defined " + (type === "action" ? "an action" : "a loader") + " for route " + ("\"" + match.route.id + "\" but didn't return anything from your `" + type + "` ") + "function. Please return a value or `null`.");
            _context16.next = 19;
            break;
          case 15:
            _context16.prev = 15;
            _context16.t0 = _context16["catch"](6);
            resultType = ResultType.error;
            result = _context16.t0;
          case 19:
            _context16.prev = 19;
            request.signal.removeEventListener("abort", onReject);
            return _context16.finish(19);
          case 22:
            if (!isResponse(result)) {
              _context16.next = 48;
              break;
            }
            status = result.status; // Process redirects
            if (!redirectStatusCodes.has(status)) {
              _context16.next = 33;
              break;
            }
            location = result.headers.get("Location");
            router_invariant(location, "Redirects returned/thrown from loaders/actions must have a Location header");
            isAbsolute = /^[a-z+]+:\/\//i.test(location) || location.startsWith("//"); // Support relative routing in internal redirects
            if (!isAbsolute) {
              activeMatches = matches.slice(0, matches.indexOf(match) + 1);
              routePathnames = getPathContributingMatches(activeMatches).map(function (match) {
                return match.pathnameBase;
              });
              resolvedLocation = resolveTo(location, routePathnames, new URL(request.url).pathname);
              router_invariant(router_createPath(resolvedLocation), "Unable to resolve redirect location: " + location); // Prepend the basename to the redirect location if we have one

              if (basename) {
                path = resolvedLocation.pathname;
                resolvedLocation.pathname = path === "/" ? basename : router_joinPaths([basename, path]);
              }
              location = router_createPath(resolvedLocation);
            } // Don't process redirects in the router during static requests requests.
            // Instead, throw the Response and let the server handle it with an HTTP
            // redirect.  We also update the Location header in place in this flow so
            // basename and relative routing is taken into account
            if (!isStaticRequest) {
              _context16.next = 32;
              break;
            }
            result.headers.set("Location", location);
            throw result;
          case 32:
            return _context16.abrupt("return", {
              type: ResultType.redirect,
              status: status,
              location: location,
              revalidate: result.headers.get("X-Remix-Revalidate") !== null
            });
          case 33:
            if (!isRouteRequest) {
              _context16.next = 35;
              break;
            }
            throw {
              type: resultType || ResultType.data,
              response: result
            };
          case 35:
            contentType = result.headers.get("Content-Type"); // Check between word boundaries instead of startsWith() due to the last
            // paragraph of https://httpwg.org/specs/rfc9110.html#field.content-type
            if (!(contentType && /\bapplication\/json\b/.test(contentType))) {
              _context16.next = 42;
              break;
            }
            _context16.next = 39;
            return result.json();
          case 39:
            data = _context16.sent;
            _context16.next = 45;
            break;
          case 42:
            _context16.next = 44;
            return result.text();
          case 44:
            data = _context16.sent;
          case 45:
            if (!(resultType === ResultType.error)) {
              _context16.next = 47;
              break;
            }
            return _context16.abrupt("return", {
              type: resultType,
              error: new router_ErrorResponse(status, result.statusText, data),
              headers: result.headers
            });
          case 47:
            return _context16.abrupt("return", {
              type: ResultType.data,
              data: data,
              statusCode: result.status,
              headers: result.headers
            });
          case 48:
            if (!(resultType === ResultType.error)) {
              _context16.next = 50;
              break;
            }
            return _context16.abrupt("return", {
              type: resultType,
              error: result
            });
          case 50:
            if (!(result instanceof DeferredData)) {
              _context16.next = 52;
              break;
            }
            return _context16.abrupt("return", {
              type: ResultType.deferred,
              deferredData: result
            });
          case 52:
            return _context16.abrupt("return", {
              type: ResultType.data,
              data: result
            });
          case 53:
          case "end":
            return _context16.stop();
        }
      }
    }, _callee15, null, [[6, 15, 19, 22]]);
  }));
  return _callLoaderOrAction.apply(this, arguments);
}
function createClientSideRequest(location, signal, submission) {
  var url = createClientSideURL(stripHashFromPath(location)).toString();
  var init = {
    signal: signal
  };
  if (submission && isMutationMethod(submission.formMethod)) {
    var formMethod = submission.formMethod,
      formEncType = submission.formEncType,
      formData = submission.formData;
    init.method = formMethod.toUpperCase();
    init.body = formEncType === "application/x-www-form-urlencoded" ? convertFormDataToSearchParams(formData) : formData;
  } // Content-Type is inferred (https://fetch.spec.whatwg.org/#dom-request)

  return new Request(url, init);
}
function convertFormDataToSearchParams(formData) {
  var searchParams = new URLSearchParams();
  var _iterator5 = _createForOfIteratorHelper(formData.entries()),
    _step5;
  try {
    for (_iterator5.s(); !(_step5 = _iterator5.n()).done;) {
      var _step5$value = _slicedToArray(_step5.value, 2),
        key = _step5$value[0],
        value = _step5$value[1];
      router_invariant(typeof value === "string", 'File inputs are not supported with encType "application/x-www-form-urlencoded", ' + 'please use "multipart/form-data" instead.');
      searchParams.append(key, value);
    }
  } catch (err) {
    _iterator5.e(err);
  } finally {
    _iterator5.f();
  }
  return searchParams;
}
function processRouteLoaderData(matches, matchesToLoad, results, pendingError, activeDeferreds) {
  // Fill in loaderData/errors from our loaders
  var loaderData = {};
  var errors = null;
  var statusCode;
  var foundError = false;
  var loaderHeaders = {}; // Process loader results into state.loaderData/state.errors

  results.forEach(function (result, index) {
    var id = matchesToLoad[index].route.id;
    router_invariant(!isRedirectResult(result), "Cannot handle redirect results in processLoaderData");
    if (isErrorResult(result)) {
      // Look upwards from the matched route for the closest ancestor
      // error boundary, defaulting to the root match
      var boundaryMatch = findNearestBoundary(matches, id);
      var error = result.error; // If we have a pending action error, we report it at the highest-route
      // that throws a loader error, and then clear it out to indicate that
      // it was consumed

      if (pendingError) {
        error = Object.values(pendingError)[0];
        pendingError = undefined;
      }
      errors = errors || {}; // Prefer higher error values if lower errors bubble to the same boundary

      if (errors[boundaryMatch.route.id] == null) {
        errors[boundaryMatch.route.id] = error;
      } // Clear our any prior loaderData for the throwing route

      loaderData[id] = undefined; // Once we find our first (highest) error, we set the status code and
      // prevent deeper status codes from overriding

      if (!foundError) {
        foundError = true;
        statusCode = isRouteErrorResponse(result.error) ? result.error.status : 500;
      }
      if (result.headers) {
        loaderHeaders[id] = result.headers;
      }
    } else if (isDeferredResult(result)) {
      activeDeferreds && activeDeferreds.set(id, result.deferredData);
      loaderData[id] = result.deferredData.data; // TODO: Add statusCode/headers once we wire up streaming in Remix
    } else {
      loaderData[id] = result.data; // Error status codes always override success status codes, but if all
      // loaders are successful we take the deepest status code.

      if (result.statusCode != null && result.statusCode !== 200 && !foundError) {
        statusCode = result.statusCode;
      }
      if (result.headers) {
        loaderHeaders[id] = result.headers;
      }
    }
  }); // If we didn't consume the pending action error (i.e., all loaders
  // resolved), then consume it here.  Also clear out any loaderData for the
  // throwing route

  if (pendingError) {
    errors = pendingError;
    loaderData[Object.keys(pendingError)[0]] = undefined;
  }
  return {
    loaderData: loaderData,
    errors: errors,
    statusCode: statusCode || 200,
    loaderHeaders: loaderHeaders
  };
}
function processLoaderData(state, matches, matchesToLoad, results, pendingError, revalidatingFetchers, fetcherResults, activeDeferreds) {
  var _processRouteLoaderDa = processRouteLoaderData(matches, matchesToLoad, results, pendingError, activeDeferreds),
    loaderData = _processRouteLoaderDa.loaderData,
    errors = _processRouteLoaderDa.errors; // Process results from our revalidating fetchers

  for (var index = 0; index < revalidatingFetchers.length; index++) {
    var _revalidatingFetchers = _slicedToArray(revalidatingFetchers[index], 3),
      key = _revalidatingFetchers[0],
      match = _revalidatingFetchers[2];
    router_invariant(fetcherResults !== undefined && fetcherResults[index] !== undefined, "Did not find corresponding fetcher result");
    var result = fetcherResults[index]; // Process fetcher non-redirect errors

    if (isErrorResult(result)) {
      var boundaryMatch = findNearestBoundary(state.matches, match.route.id);
      if (!(errors && errors[boundaryMatch.route.id])) {
        errors = router_extends({}, errors, _defineProperty({}, boundaryMatch.route.id, result.error));
      }
      state.fetchers.delete(key);
    } else if (isRedirectResult(result)) {
      // Should never get here, redirects should get processed above, but we
      // keep this to type narrow to a success result in the else
      throw new Error("Unhandled fetcher revalidation redirect");
    } else if (isDeferredResult(result)) {
      // Should never get here, deferred data should be awaited for fetchers
      // in resolveDeferredResults
      throw new Error("Unhandled fetcher deferred data");
    } else {
      var doneFetcher = {
        state: "idle",
        data: result.data,
        formMethod: undefined,
        formAction: undefined,
        formEncType: undefined,
        formData: undefined,
        " _hasFetcherDoneAnything ": true
      };
      state.fetchers.set(key, doneFetcher);
    }
  }
  return {
    loaderData: loaderData,
    errors: errors
  };
}
function mergeLoaderData(loaderData, newLoaderData, matches, errors) {
  var mergedLoaderData = router_extends({}, newLoaderData);
  var _iterator6 = _createForOfIteratorHelper(matches),
    _step6;
  try {
    for (_iterator6.s(); !(_step6 = _iterator6.n()).done;) {
      var match = _step6.value;
      var id = match.route.id;
      if (newLoaderData.hasOwnProperty(id)) {
        if (newLoaderData[id] !== undefined) {
          mergedLoaderData[id] = newLoaderData[id];
        }
      } else if (loaderData[id] !== undefined) {
        mergedLoaderData[id] = loaderData[id];
      }
      if (errors && errors.hasOwnProperty(id)) {
        // Don't keep any loader data below the boundary
        break;
      }
    }
  } catch (err) {
    _iterator6.e(err);
  } finally {
    _iterator6.f();
  }
  return mergedLoaderData;
} // Find the nearest error boundary, looking upwards from the leaf route (or the
// route specified by routeId) for the closest ancestor error boundary,
// defaulting to the root match

function findNearestBoundary(matches, routeId) {
  var eligibleMatches = routeId ? matches.slice(0, matches.findIndex(function (m) {
    return m.route.id === routeId;
  }) + 1) : _toConsumableArray(matches);
  return eligibleMatches.reverse().find(function (m) {
    return m.route.hasErrorBoundary === true;
  }) || matches[0];
}
function getShortCircuitMatches(routes) {
  // Prefer a root layout route if present, otherwise shim in a route object
  var route = routes.find(function (r) {
    return r.index || !r.path || r.path === "/";
  }) || {
    id: "__shim-error-route__"
  };
  return {
    matches: [{
      params: {},
      pathname: "",
      pathnameBase: "",
      route: route
    }],
    route: route
  };
}
function getInternalRouterError(status, _temp4) {
  var _ref28 = _temp4 === void 0 ? {} : _temp4,
    pathname = _ref28.pathname,
    routeId = _ref28.routeId,
    method = _ref28.method;
  var statusText = "Unknown Server Error";
  var errorMessage = "Unknown @remix-run/router error";
  if (status === 400) {
    statusText = "Bad Request";
    if (method && pathname && routeId) {
      errorMessage = "You made a " + method + " request to \"" + pathname + "\" but " + ("did not provide a `loader` for route \"" + routeId + "\", ") + "so there is no way to handle the request.";
    } else {
      errorMessage = "Cannot submit binary form data using GET";
    }
  } else if (status === 403) {
    statusText = "Forbidden";
    errorMessage = "Route \"" + routeId + "\" does not match URL \"" + pathname + "\"";
  } else if (status === 404) {
    statusText = "Not Found";
    errorMessage = "No route matches URL \"" + pathname + "\"";
  } else if (status === 405) {
    statusText = "Method Not Allowed";
    if (method && pathname && routeId) {
      errorMessage = "You made a " + method.toUpperCase() + " request to \"" + pathname + "\" but " + ("did not provide an `action` for route \"" + routeId + "\", ") + "so there is no way to handle the request.";
    } else if (method) {
      errorMessage = "Invalid request method \"" + method.toUpperCase() + "\"";
    }
  }
  return new router_ErrorResponse(status || 500, statusText, new Error(errorMessage), true);
} // Find any returned redirect errors, starting from the lowest match

function findRedirect(results) {
  for (var i = results.length - 1; i >= 0; i--) {
    var result = results[i];
    if (isRedirectResult(result)) {
      return result;
    }
  }
}
function stripHashFromPath(path) {
  var parsedPath = typeof path === "string" ? parsePath(path) : path;
  return router_createPath(router_extends({}, parsedPath, {
    hash: ""
  }));
}
function isHashChangeOnly(a, b) {
  return a.pathname === b.pathname && a.search === b.search && a.hash !== b.hash;
}
function isDeferredResult(result) {
  return result.type === ResultType.deferred;
}
function isErrorResult(result) {
  return result.type === ResultType.error;
}
function isRedirectResult(result) {
  return (result && result.type) === ResultType.redirect;
}
function isResponse(value) {
  return value != null && typeof value.status === "number" && typeof value.statusText === "string" && typeof value.headers === "object" && typeof value.body !== "undefined";
}
function isRedirectResponse(result) {
  if (!isResponse(result)) {
    return false;
  }
  var status = result.status;
  var location = result.headers.get("Location");
  return status >= 300 && status <= 399 && location != null;
}
function isQueryRouteResponse(obj) {
  return obj && isResponse(obj.response) && (obj.type === ResultType.data || ResultType.error);
}
function isValidMethod(method) {
  return validRequestMethods.has(method);
}
function isMutationMethod(method) {
  return validMutationMethods.has(method);
}
function resolveDeferredResults(_x67, _x68, _x69, _x70, _x71, _x72) {
  return _resolveDeferredResults.apply(this, arguments);
}
function _resolveDeferredResults() {
  _resolveDeferredResults = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee16(currentMatches, matchesToLoad, results, signal, isFetcher, currentLoaderData) {
    var _loop, index;
    return _regeneratorRuntime().wrap(function _callee16$(_context18) {
      while (1) {
        switch (_context18.prev = _context18.next) {
          case 0:
            _loop = /*#__PURE__*/_regeneratorRuntime().mark(function _loop(index) {
              var result, match, currentMatch, isRevalidatingLoader;
              return _regeneratorRuntime().wrap(function _loop$(_context17) {
                while (1) {
                  switch (_context17.prev = _context17.next) {
                    case 0:
                      result = results[index];
                      match = matchesToLoad[index];
                      currentMatch = currentMatches.find(function (m) {
                        return m.route.id === match.route.id;
                      });
                      isRevalidatingLoader = currentMatch != null && !isNewRouteInstance(currentMatch, match) && (currentLoaderData && currentLoaderData[match.route.id]) !== undefined;
                      if (!(isDeferredResult(result) && (isFetcher || isRevalidatingLoader))) {
                        _context17.next = 7;
                        break;
                      }
                      _context17.next = 7;
                      return resolveDeferredData(result, signal, isFetcher).then(function (result) {
                        if (result) {
                          results[index] = result || results[index];
                        }
                      });
                    case 7:
                    case "end":
                      return _context17.stop();
                  }
                }
              }, _loop);
            });
            index = 0;
          case 2:
            if (!(index < results.length)) {
              _context18.next = 7;
              break;
            }
            return _context18.delegateYield(_loop(index), "t0", 4);
          case 4:
            index++;
            _context18.next = 2;
            break;
          case 7:
          case "end":
            return _context18.stop();
        }
      }
    }, _callee16);
  }));
  return _resolveDeferredResults.apply(this, arguments);
}
function resolveDeferredData(_x73, _x74, _x75) {
  return _resolveDeferredData.apply(this, arguments);
}
function _resolveDeferredData() {
  _resolveDeferredData = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee17(result, signal, unwrap) {
    var aborted;
    return _regeneratorRuntime().wrap(function _callee17$(_context19) {
      while (1) {
        switch (_context19.prev = _context19.next) {
          case 0:
            if (unwrap === void 0) {
              unwrap = false;
            }
            _context19.next = 3;
            return result.deferredData.resolveData(signal);
          case 3:
            aborted = _context19.sent;
            if (!aborted) {
              _context19.next = 6;
              break;
            }
            return _context19.abrupt("return");
          case 6:
            if (!unwrap) {
              _context19.next = 14;
              break;
            }
            _context19.prev = 7;
            return _context19.abrupt("return", {
              type: ResultType.data,
              data: result.deferredData.unwrappedData
            });
          case 11:
            _context19.prev = 11;
            _context19.t0 = _context19["catch"](7);
            return _context19.abrupt("return", {
              type: ResultType.error,
              error: _context19.t0
            });
          case 14:
            return _context19.abrupt("return", {
              type: ResultType.data,
              data: result.deferredData.data
            });
          case 15:
          case "end":
            return _context19.stop();
        }
      }
    }, _callee17, null, [[7, 11]]);
  }));
  return _resolveDeferredData.apply(this, arguments);
}
function hasNakedIndexQuery(search) {
  return new URLSearchParams(search).getAll("index").some(function (v) {
    return v === "";
  });
} // Note: This should match the format exported by useMatches, so if you change
// this please also change that :)  Eventually we'll DRY this up

function createUseMatchesMatch(match, loaderData) {
  var route = match.route,
    pathname = match.pathname,
    params = match.params;
  return {
    id: route.id,
    pathname: pathname,
    params: params,
    data: loaderData[route.id],
    handle: route.handle
  };
}
function getTargetMatch(matches, location) {
  var search = typeof location === "string" ? parsePath(location).search : location.search;
  if (matches[matches.length - 1].route.index && hasNakedIndexQuery(search || "")) {
    // Return the leaf index route when index is present
    return matches[matches.length - 1];
  } // Otherwise grab the deepest "path contributing" match (ignoring index and
  // pathless layout routes)

  var pathMatches = getPathContributingMatches(matches);
  return pathMatches[pathMatches.length - 1];
} //#endregion


;// CONCATENATED MODULE: ./node_modules/react-router/dist/index.js






/**
 * React Router v6.6.1
 *
 * Copyright (c) Remix Software Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE.md file in the root directory of this source tree.
 *
 * @license MIT
 */



function dist_extends() {
  dist_extends = Object.assign ? Object.assign.bind() : function (target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return dist_extends.apply(this, arguments);
}

/**
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
/**
 * inlined Object.is polyfill to avoid requiring consumers ship their own
 * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is
 */

function isPolyfill(x, y) {
  return x === y && (x !== 0 || 1 / x === 1 / y) || x !== x && y !== y // eslint-disable-line no-self-compare
  ;
}

var dist_is = typeof Object.is === "function" ? Object.is : isPolyfill; // Intentionally not using named imports because Rollup uses dynamic
// dispatch for CommonJS interop named imports.

var dist_useState = react.useState,
  useEffect = react.useEffect,
  useLayoutEffect = react.useLayoutEffect,
  useDebugValue = react.useDebugValue;
var didWarnOld18Alpha = false;
var didWarnUncachedGetSnapshot = false; // Disclaimer: This shim breaks many of the rules of React, and only works
// because of a very particular set of implementation details and assumptions
// -- change any one of them and it will break. The most important assumption
// is that updates are always synchronous, because concurrent rendering is
// only available in versions of React that also have a built-in
// useSyncExternalStore API. And we only use this shim when the built-in API
// does not exist.
//
// Do not assume that the clever hacks used by this hook also work in general.
// The point of this shim is to replace the need for hacks by other libraries.

function useSyncExternalStore$2(subscribe, getSnapshot,
// Note: The shim does not use getServerSnapshot, because pre-18 versions of
// React do not expose a way to check if we're hydrating. So users of the shim
// will need to track that themselves and return the correct value
// from `getSnapshot`.
getServerSnapshot) {
  if (false) {} // Read the current snapshot from the store on every render. Again, this
  // breaks the rules of React, and only works here because of specific
  // implementation details, most importantly that updates are
  // always synchronous.

  var value = getSnapshot();
  if (false) { var cachedValue; } // Because updates are synchronous, we don't queue them. Instead we force a
  // re-render whenever the subscribed state changes by updating an some
  // arbitrary useState hook. Then, during render, we call getSnapshot to read
  // the current value.
  //
  // Because we don't actually use the state returned by the useState hook, we
  // can save a bit of memory by storing other stuff in that slot.
  //
  // To implement the early bailout, we need to track some things on a mutable
  // object. Usually, we would put that in a useRef hook, but we can stash it in
  // our useState hook instead.
  //
  // To force a re-render, we call forceUpdate({inst}). That works because the
  // new object always fails an equality check.

  var _useState = dist_useState({
      inst: {
        value: value,
        getSnapshot: getSnapshot
      }
    }),
    _useState2 = (0,slicedToArray/* default */.Z)(_useState, 2),
    inst = _useState2[0].inst,
    forceUpdate = _useState2[1]; // Track the latest getSnapshot function with a ref. This needs to be updated
  // in the layout phase so we can access it during the tearing check that
  // happens on subscribe.

  useLayoutEffect(function () {
    inst.value = value;
    inst.getSnapshot = getSnapshot; // Whenever getSnapshot or subscribe changes, we need to check in the
    // commit phase if there was an interleaved mutation. In concurrent mode
    // this can happen all the time, but even in synchronous mode, an earlier
    // effect may have mutated the store.

    if (checkIfSnapshotChanged(inst)) {
      // Force a re-render.
      forceUpdate({
        inst: inst
      });
    } // eslint-disable-next-line react-hooks/exhaustive-deps
  }, [subscribe, value, getSnapshot]);
  useEffect(function () {
    // Check for changes right before subscribing. Subsequent changes will be
    // detected in the subscription handler.
    if (checkIfSnapshotChanged(inst)) {
      // Force a re-render.
      forceUpdate({
        inst: inst
      });
    }
    var handleStoreChange = function handleStoreChange() {
      // TODO: Because there is no cross-renderer API for batching updates, it's
      // up to the consumer of this library to wrap their subscription event
      // with unstable_batchedUpdates. Should we try to detect when this isn't
      // the case and print a warning in development?
      // The store changed. Check if the snapshot changed since the last time we
      // read from the store.
      if (checkIfSnapshotChanged(inst)) {
        // Force a re-render.
        forceUpdate({
          inst: inst
        });
      }
    }; // Subscribe to the store and return a clean-up function.

    return subscribe(handleStoreChange); // eslint-disable-next-line react-hooks/exhaustive-deps
  }, [subscribe]);
  useDebugValue(value);
  return value;
}
function checkIfSnapshotChanged(inst) {
  var latestGetSnapshot = inst.getSnapshot;
  var prevValue = inst.value;
  try {
    var nextValue = latestGetSnapshot();
    return !dist_is(prevValue, nextValue);
  } catch (error) {
    return true;
  }
}

/**
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * @flow
 */
function useSyncExternalStore$1(subscribe, getSnapshot, getServerSnapshot) {
  // Note: The shim does not use getServerSnapshot, because pre-18 versions of
  // React do not expose a way to check if we're hydrating. So users of the shim
  // will need to track that themselves and return the correct value
  // from `getSnapshot`.
  return getSnapshot();
}

/**
 * Inlined into the react-router repo since use-sync-external-store does not
 * provide a UMD-compatible package, so we need this to be able to distribute
 * UMD react-router bundles
 */
var canUseDOM = !!(typeof window !== "undefined" && typeof window.document !== "undefined" && typeof window.document.createElement !== "undefined");
var isServerEnvironment = !canUseDOM;
var shim = isServerEnvironment ? useSyncExternalStore$1 : useSyncExternalStore$2;
var useSyncExternalStore =  true ? function (module) {
  return module.useSyncExternalStore;
}(react_namespaceObject) : shim;

// Contexts for data routers
var DataStaticRouterContext = /*#__PURE__*/react.createContext(null);
if (false) {}
var DataRouterContext = /*#__PURE__*/react.createContext(null);
if (false) {}
var DataRouterStateContext = /*#__PURE__*/react.createContext(null);
if (false) {}
var AwaitContext = /*#__PURE__*/react.createContext(null);
if (false) {}
var NavigationContext = /*#__PURE__*/react.createContext(null);
if (false) {}
var LocationContext = /*#__PURE__*/react.createContext(null);
if (false) {}
var RouteContext = /*#__PURE__*/react.createContext({
  outlet: null,
  matches: []
});
if (false) {}
var RouteErrorContext = /*#__PURE__*/react.createContext(null);
if (false) {}

/**
 * Returns the full href for the given "to" value. This is useful for building
 * custom links that are also accessible and preserve right-click behavior.
 *
 * @see https://reactrouter.com/hooks/use-href
 */

function useHref(to, _temp) {
  var _ref8 = _temp === void 0 ? {} : _temp,
    relative = _ref8.relative;
  !useInRouterContext() ?  false ? 0 : router_invariant(false) : void 0;
  var _React$useContext = react.useContext(NavigationContext),
    basename = _React$useContext.basename,
    navigator = _React$useContext.navigator;
  var _useResolvedPath = dist_useResolvedPath(to, {
      relative: relative
    }),
    hash = _useResolvedPath.hash,
    pathname = _useResolvedPath.pathname,
    search = _useResolvedPath.search;
  var joinedPathname = pathname; // If we're operating within a basename, prepend it to the pathname prior
  // to creating the href.  If this is a root navigation, then just use the raw
  // basename which allows the basename to have full control over the presence
  // of a trailing slash on root links

  if (basename !== "/") {
    joinedPathname = pathname === "/" ? basename : router_joinPaths([basename, pathname]);
  }
  return navigator.createHref({
    pathname: joinedPathname,
    search: search,
    hash: hash
  });
}
/**
 * Returns true if this component is a descendant of a <Router>.
 *
 * @see https://reactrouter.com/hooks/use-in-router-context
 */

function useInRouterContext() {
  return react.useContext(LocationContext) != null;
}
/**
 * Returns the current location object, which represents the current URL in web
 * browsers.
 *
 * Note: If you're using this it may mean you're doing some of your own
 * "routing" in your app, and we'd like to know what your use case is. We may
 * be able to provide something higher-level to better suit your needs.
 *
 * @see https://reactrouter.com/hooks/use-location
 */

function dist_useLocation() {
  !useInRouterContext() ?  false ? 0 : router_invariant(false) : void 0;
  return react.useContext(LocationContext).location;
}
/**
 * Returns the current navigation action which describes how the router came to
 * the current location, either by a pop, push, or replace on the history stack.
 *
 * @see https://reactrouter.com/hooks/use-navigation-type
 */

function useNavigationType() {
  return React.useContext(LocationContext).navigationType;
}
/**
 * Returns a PathMatch object if the given pattern matches the current URL.
 * This is useful for components that need to know "active" state, e.g.
 * <NavLink>.
 *
 * @see https://reactrouter.com/hooks/use-match
 */

function useMatch(pattern) {
  !useInRouterContext() ?  false ? 0 : invariant(false) : void 0;
  var _useLocation = dist_useLocation(),
    pathname = _useLocation.pathname;
  return React.useMemo(function () {
    return matchPath(pattern, pathname);
  }, [pathname, pattern]);
}
/**
 * The interface for the navigate() function returned from useNavigate().
 */

/**
 * Returns an imperative method for changing the location. Used by <Link>s, but
 * may also be used by other elements to change the location.
 *
 * @see https://reactrouter.com/hooks/use-navigate
 */
function dist_useNavigate() {
  !useInRouterContext() ?  false ? 0 : router_invariant(false) : void 0;
  var _React$useContext2 = react.useContext(NavigationContext),
    basename = _React$useContext2.basename,
    navigator = _React$useContext2.navigator;
  var _React$useContext3 = react.useContext(RouteContext),
    matches = _React$useContext3.matches;
  var _useLocation2 = dist_useLocation(),
    locationPathname = _useLocation2.pathname;
  var routePathnamesJson = JSON.stringify(getPathContributingMatches(matches).map(function (match) {
    return match.pathnameBase;
  }));
  var activeRef = react.useRef(false);
  react.useEffect(function () {
    activeRef.current = true;
  });
  var navigate = react.useCallback(function (to, options) {
    if (options === void 0) {
      options = {};
    }
     false ? 0 : void 0;
    if (!activeRef.current) return;
    if (typeof to === "number") {
      navigator.go(to);
      return;
    }
    var path = resolveTo(to, JSON.parse(routePathnamesJson), locationPathname, options.relative === "path"); // If we're operating within a basename, prepend it to the pathname prior
    // to handing off to history.  If this is a root navigation, then we
    // navigate to the raw basename which allows the basename to have full
    // control over the presence of a trailing slash on root links

    if (basename !== "/") {
      path.pathname = path.pathname === "/" ? basename : router_joinPaths([basename, path.pathname]);
    }
    (!!options.replace ? navigator.replace : navigator.push)(path, options.state, options);
  }, [basename, navigator, routePathnamesJson, locationPathname]);
  return navigate;
}
var OutletContext = /*#__PURE__*/(/* unused pure expression or super */ null && (React.createContext(null)));
/**
 * Returns the context (if provided) for the child route at this level of the route
 * hierarchy.
 * @see https://reactrouter.com/hooks/use-outlet-context
 */

function useOutletContext() {
  return React.useContext(OutletContext);
}
/**
 * Returns the element for the child route at this level of the route
 * hierarchy. Used internally by <Outlet> to render child routes.
 *
 * @see https://reactrouter.com/hooks/use-outlet
 */

function useOutlet(context) {
  var outlet = React.useContext(RouteContext).outlet;
  if (outlet) {
    return /*#__PURE__*/React.createElement(OutletContext.Provider, {
      value: context
    }, outlet);
  }
  return outlet;
}
/**
 * Returns an object of key/value pairs of the dynamic params from the current
 * URL that were matched by the route path.
 *
 * @see https://reactrouter.com/hooks/use-params
 */

function useParams() {
  var _React$useContext4 = react.useContext(RouteContext),
    matches = _React$useContext4.matches;
  var routeMatch = matches[matches.length - 1];
  return routeMatch ? routeMatch.params : {};
}
/**
 * Resolves the pathname of the given `to` value against the current location.
 *
 * @see https://reactrouter.com/hooks/use-resolved-path
 */

function dist_useResolvedPath(to, _temp2) {
  var _ref9 = _temp2 === void 0 ? {} : _temp2,
    relative = _ref9.relative;
  var _React$useContext5 = react.useContext(RouteContext),
    matches = _React$useContext5.matches;
  var _useLocation3 = dist_useLocation(),
    locationPathname = _useLocation3.pathname;
  var routePathnamesJson = JSON.stringify(getPathContributingMatches(matches).map(function (match) {
    return match.pathnameBase;
  }));
  return react.useMemo(function () {
    return resolveTo(to, JSON.parse(routePathnamesJson), locationPathname, relative === "path");
  }, [to, routePathnamesJson, locationPathname, relative]);
}
/**
 * Returns the element of the route that matched the current location, prepared
 * with the correct context to render the remainder of the route tree. Route
 * elements in the tree must render an <Outlet> to render their child route's
 * element.
 *
 * @see https://reactrouter.com/hooks/use-routes
 */

function useRoutes(routes, locationArg) {
  !useInRouterContext() ?  false ? 0 : router_invariant(false) : void 0;
  var _React$useContext6 = react.useContext(NavigationContext),
    navigator = _React$useContext6.navigator;
  var dataRouterStateContext = react.useContext(DataRouterStateContext);
  var _React$useContext7 = react.useContext(RouteContext),
    parentMatches = _React$useContext7.matches;
  var routeMatch = parentMatches[parentMatches.length - 1];
  var parentParams = routeMatch ? routeMatch.params : {};
  var parentPathname = routeMatch ? routeMatch.pathname : "/";
  var parentPathnameBase = routeMatch ? routeMatch.pathnameBase : "/";
  var parentRoute = routeMatch && routeMatch.route;
  if (false) { var parentPath; }
  var locationFromContext = dist_useLocation();
  var location;
  if (locationArg) {
    var _parsedLocationArg$pa;
    var parsedLocationArg = typeof locationArg === "string" ? parsePath(locationArg) : locationArg;
    !(parentPathnameBase === "/" || ((_parsedLocationArg$pa = parsedLocationArg.pathname) == null ? void 0 : _parsedLocationArg$pa.startsWith(parentPathnameBase))) ?  false ? 0 : router_invariant(false) : void 0;
    location = parsedLocationArg;
  } else {
    location = locationFromContext;
  }
  var pathname = location.pathname || "/";
  var remainingPathname = parentPathnameBase === "/" ? pathname : pathname.slice(parentPathnameBase.length) || "/";
  var matches = matchRoutes(routes, {
    pathname: remainingPathname
  });
  if (false) {}
  var renderedMatches = _renderMatches(matches && matches.map(function (match) {
    return Object.assign({}, match, {
      params: Object.assign({}, parentParams, match.params),
      pathname: router_joinPaths([parentPathnameBase,
      // Re-encode pathnames that were decoded inside matchRoutes
      navigator.encodeLocation ? navigator.encodeLocation(match.pathname).pathname : match.pathname]),
      pathnameBase: match.pathnameBase === "/" ? parentPathnameBase : router_joinPaths([parentPathnameBase,
      // Re-encode pathnames that were decoded inside matchRoutes
      navigator.encodeLocation ? navigator.encodeLocation(match.pathnameBase).pathname : match.pathnameBase])
    });
  }), parentMatches, dataRouterStateContext || undefined); // When a user passes in a `locationArg`, the associated routes need to
  // be wrapped in a new `LocationContext.Provider` in order for `useLocation`
  // to use the scoped location instead of the global location.

  if (locationArg && renderedMatches) {
    return /*#__PURE__*/react.createElement(LocationContext.Provider, {
      value: {
        location: dist_extends({
          pathname: "/",
          search: "",
          hash: "",
          state: null,
          key: "default"
        }, location),
        navigationType: Action.Pop
      }
    }, renderedMatches);
  }
  return renderedMatches;
}
function DefaultErrorElement() {
  var error = useRouteError();
  var message = isRouteErrorResponse(error) ? error.status + " " + error.statusText : error instanceof Error ? error.message : JSON.stringify(error);
  var stack = error instanceof Error ? error.stack : null;
  var lightgrey = "rgba(200,200,200, 0.5)";
  var preStyles = {
    padding: "0.5rem",
    backgroundColor: lightgrey
  };
  var codeStyles = {
    padding: "2px 4px",
    backgroundColor: lightgrey
  };
  return /*#__PURE__*/react.createElement(react.Fragment, null, /*#__PURE__*/react.createElement("h2", null, "Unhandled Thrown Error!"), /*#__PURE__*/react.createElement("h3", {
    style: {
      fontStyle: "italic"
    }
  }, message), stack ? /*#__PURE__*/react.createElement("pre", {
    style: preStyles
  }, stack) : null, /*#__PURE__*/react.createElement("p", null, "\uD83D\uDCBF Hey developer \uD83D\uDC4B"), /*#__PURE__*/react.createElement("p", null, "You can provide a way better UX than this when your app throws errors by providing your own\xA0", /*#__PURE__*/react.createElement("code", {
    style: codeStyles
  }, "errorElement"), " props on\xA0", /*#__PURE__*/react.createElement("code", {
    style: codeStyles
  }, "<Route>")));
}
var RenderErrorBoundary = /*#__PURE__*/function (_React$Component) {
  inherits_inherits(RenderErrorBoundary, _React$Component);
  var _super = createSuper_createSuper(RenderErrorBoundary);
  function RenderErrorBoundary(props) {
    var _this;
    classCallCheck_classCallCheck(this, RenderErrorBoundary);
    _this = _super.call(this, props);
    _this.state = {
      location: props.location,
      error: props.error
    };
    return _this;
  }
  createClass_createClass(RenderErrorBoundary, [{
    key: "componentDidCatch",
    value: function componentDidCatch(error, errorInfo) {
      console.error("React Router caught the following error during render", error, errorInfo);
    }
  }, {
    key: "render",
    value: function render() {
      return this.state.error ? /*#__PURE__*/react.createElement(RouteContext.Provider, {
        value: this.props.routeContext
      }, /*#__PURE__*/react.createElement(RouteErrorContext.Provider, {
        value: this.state.error,
        children: this.props.component
      })) : this.props.children;
    }
  }], [{
    key: "getDerivedStateFromError",
    value: function getDerivedStateFromError(error) {
      return {
        error: error
      };
    }
  }, {
    key: "getDerivedStateFromProps",
    value: function getDerivedStateFromProps(props, state) {
      // When we get into an error state, the user will likely click "back" to the
      // previous page that didn't have an error. Because this wraps the entire
      // application, that will have no effect--the error page continues to display.
      // This gives us a mechanism to recover from the error when the location changes.
      //
      // Whether we're in an error state or not, we update the location in state
      // so that when we are in an error state, it gets reset when a new location
      // comes in and the user recovers from the error.
      if (state.location !== props.location) {
        return {
          error: props.error,
          location: props.location
        };
      } // If we're not changing locations, preserve the location but still surface
      // any new errors that may come through. We retain the existing error, we do
      // this because the error provided from the app state may be cleared without
      // the location changing.

      return {
        error: props.error || state.error,
        location: state.location
      };
    }
  }]);
  return RenderErrorBoundary;
}(react.Component);
function RenderedRoute(_ref) {
  var routeContext = _ref.routeContext,
    match = _ref.match,
    children = _ref.children;
  var dataStaticRouterContext = react.useContext(DataStaticRouterContext); // Track how deep we got in our render pass to emulate SSR componentDidCatch
  // in a DataStaticRouter

  if (dataStaticRouterContext && match.route.errorElement) {
    dataStaticRouterContext._deepestRenderedBoundaryId = match.route.id;
  }
  return /*#__PURE__*/react.createElement(RouteContext.Provider, {
    value: routeContext
  }, children);
}
function _renderMatches(matches, parentMatches, dataRouterState) {
  if (parentMatches === void 0) {
    parentMatches = [];
  }
  if (matches == null) {
    if (dataRouterState != null && dataRouterState.errors) {
      // Don't bail if we have data router errors so we can render them in the
      // boundary.  Use the pre-matched (or shimmed) matches
      matches = dataRouterState.matches;
    } else {
      return null;
    }
  }
  var renderedMatches = matches; // If we have data errors, trim matches to the highest error boundary

  var errors = dataRouterState == null ? void 0 : dataRouterState.errors;
  if (errors != null) {
    var errorIndex = renderedMatches.findIndex(function (m) {
      return m.route.id && (errors == null ? void 0 : errors[m.route.id]);
    });
    !(errorIndex >= 0) ?  false ? 0 : router_invariant(false) : void 0;
    renderedMatches = renderedMatches.slice(0, Math.min(renderedMatches.length, errorIndex + 1));
  }
  return renderedMatches.reduceRight(function (outlet, match, index) {
    var error = match.route.id ? errors == null ? void 0 : errors[match.route.id] : null; // Only data routers handle errors

    var errorElement = dataRouterState ? match.route.errorElement || /*#__PURE__*/react.createElement(DefaultErrorElement, null) : null;
    var matches = parentMatches.concat(renderedMatches.slice(0, index + 1));
    var getChildren = function getChildren() {
      return /*#__PURE__*/react.createElement(RenderedRoute, {
        match: match,
        routeContext: {
          outlet: outlet,
          matches: matches
        }
      }, error ? errorElement : match.route.element !== undefined ? match.route.element : outlet);
    }; // Only wrap in an error boundary within data router usages when we have an
    // errorElement on this route.  Otherwise let it bubble up to an ancestor
    // errorElement

    return dataRouterState && (match.route.errorElement || index === 0) ? /*#__PURE__*/react.createElement(RenderErrorBoundary, {
      location: dataRouterState.location,
      component: errorElement,
      error: error,
      children: getChildren(),
      routeContext: {
        outlet: null,
        matches: matches
      }
    }) : getChildren();
  }, null);
}
var DataRouterHook;
(function (DataRouterHook) {
  DataRouterHook["UseRevalidator"] = "useRevalidator";
})(DataRouterHook || (DataRouterHook = {}));
var DataRouterStateHook;
(function (DataRouterStateHook) {
  DataRouterStateHook["UseLoaderData"] = "useLoaderData";
  DataRouterStateHook["UseActionData"] = "useActionData";
  DataRouterStateHook["UseRouteError"] = "useRouteError";
  DataRouterStateHook["UseNavigation"] = "useNavigation";
  DataRouterStateHook["UseRouteLoaderData"] = "useRouteLoaderData";
  DataRouterStateHook["UseMatches"] = "useMatches";
  DataRouterStateHook["UseRevalidator"] = "useRevalidator";
})(DataRouterStateHook || (DataRouterStateHook = {}));
function getDataRouterConsoleError(hookName) {
  return hookName + " must be used within a data router.  See https://reactrouter.com/routers/picking-a-router.";
}
function useDataRouterContext(hookName) {
  var ctx = React.useContext(DataRouterContext);
  !ctx ?  false ? 0 : invariant(false) : void 0;
  return ctx;
}
function useDataRouterState(hookName) {
  var state = react.useContext(DataRouterStateContext);
  !state ?  false ? 0 : router_invariant(false) : void 0;
  return state;
}
function useRouteContext(hookName) {
  var route = react.useContext(RouteContext);
  !route ?  false ? 0 : router_invariant(false) : void 0;
  return route;
}
function useCurrentRouteId(hookName) {
  var route = useRouteContext(hookName);
  var thisRoute = route.matches[route.matches.length - 1];
  !thisRoute.route.id ?  false ? 0 : router_invariant(false) : void 0;
  return thisRoute.route.id;
}
/**
 * Returns the current navigation, defaulting to an "idle" navigation when
 * no navigation is in progress
 */

function dist_useNavigation() {
  var state = useDataRouterState(DataRouterStateHook.UseNavigation);
  return state.navigation;
}
/**
 * Returns a revalidate function for manually triggering revalidation, as well
 * as the current state of any manual revalidations
 */

function useRevalidator() {
  var dataRouterContext = useDataRouterContext(DataRouterHook.UseRevalidator);
  var state = useDataRouterState(DataRouterStateHook.UseRevalidator);
  return {
    revalidate: dataRouterContext.router.revalidate,
    state: state.revalidation
  };
}
/**
 * Returns the active route matches, useful for accessing loaderData for
 * parent/child routes or the route "handle" property
 */

function dist_useMatches() {
  var _useDataRouterState = useDataRouterState(DataRouterStateHook.UseMatches),
    matches = _useDataRouterState.matches,
    loaderData = _useDataRouterState.loaderData;
  return React.useMemo(function () {
    return matches.map(function (match) {
      var pathname = match.pathname,
        params = match.params; // Note: This structure matches that created by createUseMatchesMatch
      // in the @remix-run/router , so if you change this please also change
      // that :)  Eventually we'll DRY this up

      return {
        id: match.route.id,
        pathname: pathname,
        params: params,
        data: loaderData[match.route.id],
        handle: match.route.handle
      };
    });
  }, [matches, loaderData]);
}
/**
 * Returns the loader data for the nearest ancestor Route loader
 */

function useLoaderData() {
  var state = useDataRouterState(DataRouterStateHook.UseLoaderData);
  var routeId = useCurrentRouteId(DataRouterStateHook.UseLoaderData);
  if (state.errors && state.errors[routeId] != null) {
    console.error("You cannot `useLoaderData` in an errorElement (routeId: " + routeId + ")");
    return undefined;
  }
  return state.loaderData[routeId];
}
/**
 * Returns the loaderData for the given routeId
 */

function useRouteLoaderData(routeId) {
  var state = useDataRouterState(DataRouterStateHook.UseRouteLoaderData);
  return state.loaderData[routeId];
}
/**
 * Returns the action data for the nearest ancestor Route action
 */

function useActionData() {
  var state = useDataRouterState(DataRouterStateHook.UseActionData);
  var route = React.useContext(RouteContext);
  !route ?  false ? 0 : invariant(false) : void 0;
  return Object.values((state == null ? void 0 : state.actionData) || {})[0];
}
/**
 * Returns the nearest ancestor Route error, which could be a loader/action
 * error or a render error.  This is intended to be called from your
 * errorElement to display a proper error message.
 */

function useRouteError() {
  var _state$errors;
  var error = react.useContext(RouteErrorContext);
  var state = useDataRouterState(DataRouterStateHook.UseRouteError);
  var routeId = useCurrentRouteId(DataRouterStateHook.UseRouteError); // If this was a render error, we put it in a RouteError context inside
  // of RenderErrorBoundary

  if (error) {
    return error;
  } // Otherwise look for errors from our data router state

  return (_state$errors = state.errors) == null ? void 0 : _state$errors[routeId];
}
/**
 * Returns the happy-path data from the nearest ancestor <Await /> value
 */

function useAsyncValue() {
  var value = React.useContext(AwaitContext);
  return value == null ? void 0 : value._data;
}
/**
 * Returns the error from the nearest ancestor <Await /> value
 */

function useAsyncError() {
  var value = React.useContext(AwaitContext);
  return value == null ? void 0 : value._error;
}
var alreadyWarned = {};
function warningOnce(key, cond, message) {
  if (!cond && !alreadyWarned[key]) {
    alreadyWarned[key] = true;
     false ? 0 : void 0;
  }
}

/**
 * Given a Remix Router instance, render the appropriate UI
 */
function RouterProvider(_ref) {
  var fallbackElement = _ref.fallbackElement,
    router = _ref.router;
  // Sync router state to our component state to force re-renders
  var state = useSyncExternalStore(router.subscribe, function () {
    return router.state;
  },
  // We have to provide this so React@18 doesn't complain during hydration,
  // but we pass our serialized hydration data into the router so state here
  // is already synced with what the server saw
  function () {
    return router.state;
  });
  var navigator = React.useMemo(function () {
    return {
      createHref: router.createHref,
      encodeLocation: router.encodeLocation,
      go: function go(n) {
        return router.navigate(n);
      },
      push: function push(to, state, opts) {
        return router.navigate(to, {
          state: state,
          preventScrollReset: opts == null ? void 0 : opts.preventScrollReset
        });
      },
      replace: function replace(to, state, opts) {
        return router.navigate(to, {
          replace: true,
          state: state,
          preventScrollReset: opts == null ? void 0 : opts.preventScrollReset
        });
      }
    };
  }, [router]);
  var basename = router.basename || "/";
  return /*#__PURE__*/React.createElement(DataRouterContext.Provider, {
    value: {
      router: router,
      navigator: navigator,
      static: false,
      // Do we need this?
      basename: basename
    }
  }, /*#__PURE__*/React.createElement(DataRouterStateContext.Provider, {
    value: state
  }, /*#__PURE__*/React.createElement(dist_Router, {
    basename: router.basename,
    location: router.state.location,
    navigationType: router.state.historyAction,
    navigator: navigator
  }, router.state.initialized ? /*#__PURE__*/React.createElement(Routes, null) : fallbackElement)));
}

/**
 * A <Router> that stores all entries in memory.
 *
 * @see https://reactrouter.com/router-components/memory-router
 */
function MemoryRouter(_ref2) {
  var basename = _ref2.basename,
    children = _ref2.children,
    initialEntries = _ref2.initialEntries,
    initialIndex = _ref2.initialIndex;
  var historyRef = React.useRef();
  if (historyRef.current == null) {
    historyRef.current = createMemoryHistory({
      initialEntries: initialEntries,
      initialIndex: initialIndex,
      v5Compat: true
    });
  }
  var history = historyRef.current;
  var _React$useState = React.useState({
      action: history.action,
      location: history.location
    }),
    _React$useState2 = _slicedToArray(_React$useState, 2),
    state = _React$useState2[0],
    setState = _React$useState2[1];
  React.useLayoutEffect(function () {
    return history.listen(setState);
  }, [history]);
  return /*#__PURE__*/React.createElement(dist_Router, {
    basename: basename,
    children: children,
    location: state.location,
    navigationType: state.action,
    navigator: history
  });
}

/**
 * Changes the current location.
 *
 * Note: This API is mostly useful in React.Component subclasses that are not
 * able to use hooks. In functional components, we recommend you use the
 * `useNavigate` hook instead.
 *
 * @see https://reactrouter.com/components/navigate
 */
function Navigate(_ref3) {
  var to = _ref3.to,
    replace = _ref3.replace,
    state = _ref3.state,
    relative = _ref3.relative;
  !useInRouterContext() ?  false ? 0 : router_invariant(false) : void 0;
   false ? 0 : void 0;
  var dataRouterState = react.useContext(DataRouterStateContext);
  var navigate = dist_useNavigate();
  react.useEffect(function () {
    // Avoid kicking off multiple navigations if we're in the middle of a
    // data-router navigation, since components get re-rendered when we enter
    // a submitting/loading state
    if (dataRouterState && dataRouterState.navigation.state !== "idle") {
      return;
    }
    navigate(to, {
      replace: replace,
      state: state,
      relative: relative
    });
  });
  return null;
}

/**
 * Renders the child route's element, if there is one.
 *
 * @see https://reactrouter.com/components/outlet
 */
function Outlet(props) {
  return useOutlet(props.context);
}

/**
 * Declares an element that should be rendered at a certain URL path.
 *
 * @see https://reactrouter.com/components/route
 */
function Route(_props) {
   false ? 0 : router_invariant(false);
}

/**
 * Provides location context for the rest of the app.
 *
 * Note: You usually won't render a <Router> directly. Instead, you'll render a
 * router that is more specific to your environment such as a <BrowserRouter>
 * in web browsers or a <StaticRouter> for server rendering.
 *
 * @see https://reactrouter.com/router-components/router
 */
function dist_Router(_ref4) {
  var _ref4$basename = _ref4.basename,
    basenameProp = _ref4$basename === void 0 ? "/" : _ref4$basename,
    _ref4$children = _ref4.children,
    children = _ref4$children === void 0 ? null : _ref4$children,
    locationProp = _ref4.location,
    _ref4$navigationType = _ref4.navigationType,
    navigationType = _ref4$navigationType === void 0 ? Action.Pop : _ref4$navigationType,
    navigator = _ref4.navigator,
    _ref4$static = _ref4.static,
    staticProp = _ref4$static === void 0 ? false : _ref4$static;
  !!useInRouterContext() ?  false ? 0 : router_invariant(false) : void 0; // Preserve trailing slashes on basename, so we can let the user control
  // the enforcement of trailing slashes throughout the app

  var basename = basenameProp.replace(/^\/*/, "/");
  var navigationContext = react.useMemo(function () {
    return {
      basename: basename,
      navigator: navigator,
      static: staticProp
    };
  }, [basename, navigator, staticProp]);
  if (typeof locationProp === "string") {
    locationProp = parsePath(locationProp);
  }
  var _locationProp = locationProp,
    _locationProp$pathnam = _locationProp.pathname,
    pathname = _locationProp$pathnam === void 0 ? "/" : _locationProp$pathnam,
    _locationProp$search = _locationProp.search,
    search = _locationProp$search === void 0 ? "" : _locationProp$search,
    _locationProp$hash = _locationProp.hash,
    hash = _locationProp$hash === void 0 ? "" : _locationProp$hash,
    _locationProp$state = _locationProp.state,
    state = _locationProp$state === void 0 ? null : _locationProp$state,
    _locationProp$key = _locationProp.key,
    key = _locationProp$key === void 0 ? "default" : _locationProp$key;
  var location = react.useMemo(function () {
    var trailingPathname = stripBasename(pathname, basename);
    if (trailingPathname == null) {
      return null;
    }
    return {
      pathname: trailingPathname,
      search: search,
      hash: hash,
      state: state,
      key: key
    };
  }, [basename, pathname, search, hash, state, key]);
   false ? 0 : void 0;
  if (location == null) {
    return null;
  }
  return /*#__PURE__*/react.createElement(NavigationContext.Provider, {
    value: navigationContext
  }, /*#__PURE__*/react.createElement(LocationContext.Provider, {
    children: children,
    value: {
      location: location,
      navigationType: navigationType
    }
  }));
}

/**
 * A container for a nested tree of <Route> elements that renders the branch
 * that best matches the current location.
 *
 * @see https://reactrouter.com/components/routes
 */
function Routes(_ref5) {
  var children = _ref5.children,
    location = _ref5.location;
  var dataRouterContext = react.useContext(DataRouterContext); // When in a DataRouterContext _without_ children, we use the router routes
  // directly.  If we have children, then we're in a descendant tree and we
  // need to use child routes.

  var routes = dataRouterContext && !children ? dataRouterContext.router.routes : createRoutesFromChildren(children);
  return useRoutes(routes, location);
}

/**
 * Component to use for rendering lazily loaded data from returning defer()
 * in a loader function
 */
function Await(_ref6) {
  var children = _ref6.children,
    errorElement = _ref6.errorElement,
    resolve = _ref6.resolve;
  return /*#__PURE__*/React.createElement(AwaitErrorBoundary, {
    resolve: resolve,
    errorElement: errorElement
  }, /*#__PURE__*/React.createElement(ResolveAwait, null, children));
}
var AwaitRenderStatus;
(function (AwaitRenderStatus) {
  AwaitRenderStatus[AwaitRenderStatus["pending"] = 0] = "pending";
  AwaitRenderStatus[AwaitRenderStatus["success"] = 1] = "success";
  AwaitRenderStatus[AwaitRenderStatus["error"] = 2] = "error";
})(AwaitRenderStatus || (AwaitRenderStatus = {}));
var neverSettledPromise = new Promise(function () {});
var AwaitErrorBoundary = /*#__PURE__*/function (_React$Component2) {
  inherits_inherits(AwaitErrorBoundary, _React$Component2);
  var _super2 = createSuper_createSuper(AwaitErrorBoundary);
  function AwaitErrorBoundary(props) {
    var _this2;
    classCallCheck_classCallCheck(this, AwaitErrorBoundary);
    _this2 = _super2.call(this, props);
    _this2.state = {
      error: null
    };
    return _this2;
  }
  createClass_createClass(AwaitErrorBoundary, [{
    key: "componentDidCatch",
    value: function componentDidCatch(error, errorInfo) {
      console.error("<Await> caught the following error during render", error, errorInfo);
    }
  }, {
    key: "render",
    value: function render() {
      var _this$props = this.props,
        children = _this$props.children,
        errorElement = _this$props.errorElement,
        resolve = _this$props.resolve;
      var promise = null;
      var status = AwaitRenderStatus.pending;
      if (!(resolve instanceof Promise)) {
        // Didn't get a promise - provide as a resolved promise
        status = AwaitRenderStatus.success;
        promise = Promise.resolve();
        Object.defineProperty(promise, "_tracked", {
          get: function get() {
            return true;
          }
        });
        Object.defineProperty(promise, "_data", {
          get: function get() {
            return resolve;
          }
        });
      } else if (this.state.error) {
        // Caught a render error, provide it as a rejected promise
        status = AwaitRenderStatus.error;
        var renderError = this.state.error;
        promise = Promise.reject().catch(function () {}); // Avoid unhandled rejection warnings

        Object.defineProperty(promise, "_tracked", {
          get: function get() {
            return true;
          }
        });
        Object.defineProperty(promise, "_error", {
          get: function get() {
            return renderError;
          }
        });
      } else if (resolve._tracked) {
        // Already tracked promise - check contents
        promise = resolve;
        status = promise._error !== undefined ? AwaitRenderStatus.error : promise._data !== undefined ? AwaitRenderStatus.success : AwaitRenderStatus.pending;
      } else {
        // Raw (untracked) promise - track it
        status = AwaitRenderStatus.pending;
        Object.defineProperty(resolve, "_tracked", {
          get: function get() {
            return true;
          }
        });
        promise = resolve.then(function (data) {
          return Object.defineProperty(resolve, "_data", {
            get: function get() {
              return data;
            }
          });
        }, function (error) {
          return Object.defineProperty(resolve, "_error", {
            get: function get() {
              return error;
            }
          });
        });
      }
      if (status === AwaitRenderStatus.error && promise._error instanceof AbortedDeferredError) {
        // Freeze the UI by throwing a never resolved promise
        throw neverSettledPromise;
      }
      if (status === AwaitRenderStatus.error && !errorElement) {
        // No errorElement, throw to the nearest route-level error boundary
        throw promise._error;
      }
      if (status === AwaitRenderStatus.error) {
        // Render via our errorElement
        return /*#__PURE__*/react.createElement(AwaitContext.Provider, {
          value: promise,
          children: errorElement
        });
      }
      if (status === AwaitRenderStatus.success) {
        // Render children with resolved value
        return /*#__PURE__*/react.createElement(AwaitContext.Provider, {
          value: promise,
          children: children
        });
      } // Throw to the suspense boundary

      throw promise;
    }
  }], [{
    key: "getDerivedStateFromError",
    value: function getDerivedStateFromError(error) {
      return {
        error: error
      };
    }
  }]);
  return AwaitErrorBoundary;
}(react.Component);
/**
 * @private
 * Indirection to leverage useAsyncValue for a render-prop API on <Await>
 */
function ResolveAwait(_ref7) {
  var children = _ref7.children;
  var data = useAsyncValue();
  if (typeof children === "function") {
    return children(data);
  }
  return /*#__PURE__*/React.createElement(React.Fragment, null, children);
} ///////////////////////////////////////////////////////////////////////////////
// UTILS
///////////////////////////////////////////////////////////////////////////////

/**
 * Creates a route config from a React "children" object, which is usually
 * either a `<Route>` element or an array of them. Used internally by
 * `<Routes>` to create a route config from its children.
 *
 * @see https://reactrouter.com/utils/create-routes-from-children
 */

function createRoutesFromChildren(children, parentPath) {
  if (parentPath === void 0) {
    parentPath = [];
  }
  var routes = [];
  react.Children.forEach(children, function (element, index) {
    if (! /*#__PURE__*/react.isValidElement(element)) {
      // Ignore non-elements. This allows people to more easily inline
      // conditionals in their route config.
      return;
    }
    if (element.type === react.Fragment) {
      // Transparently support React.Fragment and its children.
      routes.push.apply(routes, createRoutesFromChildren(element.props.children, parentPath));
      return;
    }
    !(element.type === Route) ?  false ? 0 : router_invariant(false) : void 0;
    !(!element.props.index || !element.props.children) ?  false ? 0 : router_invariant(false) : void 0;
    var treePath = [].concat((0,toConsumableArray/* default */.Z)(parentPath), [index]);
    var route = {
      id: element.props.id || treePath.join("-"),
      caseSensitive: element.props.caseSensitive,
      element: element.props.element,
      index: element.props.index,
      path: element.props.path,
      loader: element.props.loader,
      action: element.props.action,
      errorElement: element.props.errorElement,
      hasErrorBoundary: element.props.errorElement != null,
      shouldRevalidate: element.props.shouldRevalidate,
      handle: element.props.handle
    };
    if (element.props.children) {
      route.children = createRoutesFromChildren(element.props.children, treePath);
    }
    routes.push(route);
  });
  return routes;
}
/**
 * Renders the result of `matchRoutes()` into a React element.
 */

function renderMatches(matches) {
  return _renderMatches(matches);
}
/**
 * @private
 * Walk the route tree and add hasErrorBoundary if it's not provided, so that
 * users providing manual route arrays can just specify errorElement
 */

function enhanceManualRouteObjects(routes) {
  return routes.map(function (route) {
    var routeClone = dist_extends({}, route);
    if (routeClone.hasErrorBoundary == null) {
      routeClone.hasErrorBoundary = routeClone.errorElement != null;
    }
    if (routeClone.children) {
      routeClone.children = enhanceManualRouteObjects(routeClone.children);
    }
    return routeClone;
  });
}
function createMemoryRouter(routes, opts) {
  return createRouter({
    basename: opts == null ? void 0 : opts.basename,
    history: createMemoryHistory({
      initialEntries: opts == null ? void 0 : opts.initialEntries,
      initialIndex: opts == null ? void 0 : opts.initialIndex
    }),
    hydrationData: opts == null ? void 0 : opts.hydrationData,
    routes: enhanceManualRouteObjects(routes)
  }).initialize();
} ///////////////////////////////////////////////////////////////////////////////


;// CONCATENATED MODULE: ./node_modules/react-router-dom/dist/index.js



/**
 * React Router DOM v6.6.1
 *
 * Copyright (c) Remix Software Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE.md file in the root directory of this source tree.
 *
 * @license MIT
 */




function react_router_dom_dist_extends() {
  react_router_dom_dist_extends = Object.assign ? Object.assign.bind() : function (target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return react_router_dom_dist_extends.apply(this, arguments);
}
function _objectWithoutPropertiesLoose(source, excluded) {
  if (source == null) return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i;
  for (i = 0; i < sourceKeys.length; i++) {
    key = sourceKeys[i];
    if (excluded.indexOf(key) >= 0) continue;
    target[key] = source[key];
  }
  return target;
}
var defaultMethod = "get";
var defaultEncType = "application/x-www-form-urlencoded";
function isHtmlElement(object) {
  return object != null && typeof object.tagName === "string";
}
function isButtonElement(object) {
  return isHtmlElement(object) && object.tagName.toLowerCase() === "button";
}
function isFormElement(object) {
  return isHtmlElement(object) && object.tagName.toLowerCase() === "form";
}
function isInputElement(object) {
  return isHtmlElement(object) && object.tagName.toLowerCase() === "input";
}
function isModifiedEvent(event) {
  return !!(event.metaKey || event.altKey || event.ctrlKey || event.shiftKey);
}
function shouldProcessLinkClick(event, target) {
  return event.button === 0 && (
  // Ignore everything but left clicks
  !target || target === "_self") &&
  // Let browser handle "target=_blank" etc.
  !isModifiedEvent(event) // Ignore clicks with modifier keys
  ;
}
/**
 * Creates a URLSearchParams object using the given initializer.
 *
 * This is identical to `new URLSearchParams(init)` except it also
 * supports arrays as values in the object form of the initializer
 * instead of just strings. This is convenient when you need multiple
 * values for a given key, but don't want to use an array initializer.
 *
 * For example, instead of:
 *
 *   let searchParams = new URLSearchParams([
 *     ['sort', 'name'],
 *     ['sort', 'price']
 *   ]);
 *
 * you can do:
 *
 *   let searchParams = createSearchParams({
 *     sort: ['name', 'price']
 *   });
 */

function createSearchParams(init) {
  if (init === void 0) {
    init = "";
  }
  return new URLSearchParams(typeof init === "string" || Array.isArray(init) || init instanceof URLSearchParams ? init : Object.keys(init).reduce(function (memo, key) {
    var value = init[key];
    return memo.concat(Array.isArray(value) ? value.map(function (v) {
      return [key, v];
    }) : [[key, value]]);
  }, []));
}
function getSearchParamsForLocation(locationSearch, defaultSearchParams) {
  var searchParams = createSearchParams(locationSearch);
  var _iterator = _createForOfIteratorHelper(defaultSearchParams.keys()),
    _step;
  try {
    var _loop = function _loop() {
      var key = _step.value;
      if (!searchParams.has(key)) {
        defaultSearchParams.getAll(key).forEach(function (value) {
          searchParams.append(key, value);
        });
      }
    };
    for (_iterator.s(); !(_step = _iterator.n()).done;) {
      _loop();
    }
  } catch (err) {
    _iterator.e(err);
  } finally {
    _iterator.f();
  }
  return searchParams;
}
function getFormSubmissionInfo(target, defaultAction, options) {
  var method;
  var action;
  var encType;
  var formData;
  if (isFormElement(target)) {
    var submissionTrigger = options.submissionTrigger;
    method = options.method || target.getAttribute("method") || defaultMethod;
    action = options.action || target.getAttribute("action") || defaultAction;
    encType = options.encType || target.getAttribute("enctype") || defaultEncType;
    formData = new FormData(target);
    if (submissionTrigger && submissionTrigger.name) {
      formData.append(submissionTrigger.name, submissionTrigger.value);
    }
  } else if (isButtonElement(target) || isInputElement(target) && (target.type === "submit" || target.type === "image")) {
    var form = target.form;
    if (form == null) {
      throw new Error("Cannot submit a <button> or <input type=\"submit\"> without a <form>");
    } // <button>/<input type="submit"> may override attributes of <form>

    method = options.method || target.getAttribute("formmethod") || form.getAttribute("method") || defaultMethod;
    action = options.action || target.getAttribute("formaction") || form.getAttribute("action") || defaultAction;
    encType = options.encType || target.getAttribute("formenctype") || form.getAttribute("enctype") || defaultEncType;
    formData = new FormData(form); // Include name + value from a <button>, appending in case the button name
    // matches an existing input name

    if (target.name) {
      formData.append(target.name, target.value);
    }
  } else if (isHtmlElement(target)) {
    throw new Error("Cannot submit element that is not <form>, <button>, or " + "<input type=\"submit|image\">");
  } else {
    method = options.method || defaultMethod;
    action = options.action || defaultAction;
    encType = options.encType || defaultEncType;
    if (target instanceof FormData) {
      formData = target;
    } else {
      formData = new FormData();
      if (target instanceof URLSearchParams) {
        var _iterator2 = _createForOfIteratorHelper(target),
          _step2;
        try {
          for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {
            var _step2$value = _slicedToArray(_step2.value, 2),
              name = _step2$value[0],
              value = _step2$value[1];
            formData.append(name, value);
          }
        } catch (err) {
          _iterator2.e(err);
        } finally {
          _iterator2.f();
        }
      } else if (target != null) {
        for (var _i = 0, _Object$keys = Object.keys(target); _i < _Object$keys.length; _i++) {
          var _name = _Object$keys[_i];
          formData.append(_name, target[_name]);
        }
      }
    }
  }
  var _window$location = window.location,
    protocol = _window$location.protocol,
    host = _window$location.host;
  var url = new URL(action, protocol + "//" + host);
  return {
    url: url,
    method: method.toLowerCase(),
    encType: encType,
    formData: formData
  };
}
var dist_excluded = ["onClick", "relative", "reloadDocument", "replace", "state", "target", "to", "preventScrollReset"],
  _excluded2 = (/* unused pure expression or super */ null && (["aria-current", "caseSensitive", "className", "end", "style", "to", "children"])),
  _excluded3 = (/* unused pure expression or super */ null && (["reloadDocument", "replace", "method", "action", "onSubmit", "fetcherKey", "routeId", "relative"]));
//#region Routers
////////////////////////////////////////////////////////////////////////////////

function createBrowserRouter(routes, opts) {
  return createRouter({
    basename: opts == null ? void 0 : opts.basename,
    history: createBrowserHistory({
      window: opts == null ? void 0 : opts.window
    }),
    hydrationData: (opts == null ? void 0 : opts.hydrationData) || parseHydrationData(),
    routes: UNSAFE_enhanceManualRouteObjects(routes)
  }).initialize();
}
function createHashRouter(routes, opts) {
  return createRouter({
    basename: opts == null ? void 0 : opts.basename,
    history: createHashHistory({
      window: opts == null ? void 0 : opts.window
    }),
    hydrationData: (opts == null ? void 0 : opts.hydrationData) || parseHydrationData(),
    routes: UNSAFE_enhanceManualRouteObjects(routes)
  }).initialize();
}
function parseHydrationData() {
  var _window;
  var state = (_window = window) == null ? void 0 : _window.__staticRouterHydrationData;
  if (state && state.errors) {
    state = react_router_dom_dist_extends({}, state, {
      errors: deserializeErrors(state.errors)
    });
  }
  return state;
}
function deserializeErrors(errors) {
  if (!errors) return null;
  var entries = Object.entries(errors);
  var serialized = {};
  for (var _i2 = 0, _entries = entries; _i2 < _entries.length; _i2++) {
    var _entries$_i = _slicedToArray(_entries[_i2], 2),
      key = _entries$_i[0],
      val = _entries$_i[1];
    // Hey you!  If you change this, please change the corresponding logic in
    // serializeErrors in react-router-dom/server.tsx :)
    if (val && val.__type === "RouteErrorResponse") {
      serialized[key] = new ErrorResponse(val.status, val.statusText, val.data, val.internal === true);
    } else if (val && val.__type === "Error") {
      var error = new Error(val.message); // Wipe away the client-side stack trace.  Nothing to fill it in with
      // because we don't serialize SSR stack traces for security reasons

      error.stack = "";
      serialized[key] = error;
    } else {
      serialized[key] = val;
    }
  }
  return serialized;
}
/**
 * A `<Router>` for use in web browsers. Provides the cleanest URLs.
 */

function BrowserRouter(_ref) {
  var basename = _ref.basename,
    children = _ref.children,
    window = _ref.window;
  var historyRef = react.useRef();
  if (historyRef.current == null) {
    historyRef.current = router_createBrowserHistory({
      window: window,
      v5Compat: true
    });
  }
  var history = historyRef.current;
  var _React$useState = react.useState({
      action: history.action,
      location: history.location
    }),
    _React$useState2 = (0,slicedToArray/* default */.Z)(_React$useState, 2),
    state = _React$useState2[0],
    setState = _React$useState2[1];
  react.useLayoutEffect(function () {
    return history.listen(setState);
  }, [history]);
  return /*#__PURE__*/react.createElement(dist_Router, {
    basename: basename,
    children: children,
    location: state.location,
    navigationType: state.action,
    navigator: history
  });
}
/**
 * A `<Router>` for use in web browsers. Stores the location in the hash
 * portion of the URL so it is not sent to the server.
 */

function HashRouter(_ref2) {
  var basename = _ref2.basename,
    children = _ref2.children,
    window = _ref2.window;
  var historyRef = React.useRef();
  if (historyRef.current == null) {
    historyRef.current = createHashHistory({
      window: window,
      v5Compat: true
    });
  }
  var history = historyRef.current;
  var _React$useState3 = React.useState({
      action: history.action,
      location: history.location
    }),
    _React$useState4 = _slicedToArray(_React$useState3, 2),
    state = _React$useState4[0],
    setState = _React$useState4[1];
  React.useLayoutEffect(function () {
    return history.listen(setState);
  }, [history]);
  return /*#__PURE__*/React.createElement(Router, {
    basename: basename,
    children: children,
    location: state.location,
    navigationType: state.action,
    navigator: history
  });
}
/**
 * A `<Router>` that accepts a pre-instantiated history object. It's important
 * to note that using your own history object is highly discouraged and may add
 * two versions of the history library to your bundles unless you use the same
 * version of the history library that React Router uses internally.
 */

function HistoryRouter(_ref3) {
  var basename = _ref3.basename,
    children = _ref3.children,
    history = _ref3.history;
  var _React$useState5 = React.useState({
      action: history.action,
      location: history.location
    }),
    _React$useState6 = _slicedToArray(_React$useState5, 2),
    state = _React$useState6[0],
    setState = _React$useState6[1];
  React.useLayoutEffect(function () {
    return history.listen(setState);
  }, [history]);
  return /*#__PURE__*/React.createElement(Router, {
    basename: basename,
    children: children,
    location: state.location,
    navigationType: state.action,
    navigator: history
  });
}
if (false) {}
/**
 * The public API for rendering a history-aware <a>.
 */

var Link = /*#__PURE__*/react.forwardRef(function LinkWithRef(_ref4, ref) {
  var onClick = _ref4.onClick,
    relative = _ref4.relative,
    reloadDocument = _ref4.reloadDocument,
    replace = _ref4.replace,
    state = _ref4.state,
    target = _ref4.target,
    to = _ref4.to,
    preventScrollReset = _ref4.preventScrollReset,
    rest = _objectWithoutPropertiesLoose(_ref4, dist_excluded);
  var href = useHref(to, {
    relative: relative
  });
  var internalOnClick = useLinkClickHandler(to, {
    replace: replace,
    state: state,
    target: target,
    preventScrollReset: preventScrollReset,
    relative: relative
  });
  function handleClick(event) {
    if (onClick) onClick(event);
    if (!event.defaultPrevented) {
      internalOnClick(event);
    }
  }
  return /*#__PURE__*/(
    // eslint-disable-next-line jsx-a11y/anchor-has-content
    react.createElement("a", react_router_dom_dist_extends({}, rest, {
      href: href,
      onClick: reloadDocument ? onClick : handleClick,
      ref: ref,
      target: target
    }))
  );
});
if (false) {}
/**
 * A <Link> wrapper that knows if it's "active" or not.
 */

var NavLink = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function NavLinkWithRef(_ref5, ref) {
  var _ref5$ariaCurrent = _ref5["aria-current"],
    ariaCurrentProp = _ref5$ariaCurrent === void 0 ? "page" : _ref5$ariaCurrent,
    _ref5$caseSensitive = _ref5.caseSensitive,
    caseSensitive = _ref5$caseSensitive === void 0 ? false : _ref5$caseSensitive,
    _ref5$className = _ref5.className,
    classNameProp = _ref5$className === void 0 ? "" : _ref5$className,
    _ref5$end = _ref5.end,
    end = _ref5$end === void 0 ? false : _ref5$end,
    styleProp = _ref5.style,
    to = _ref5.to,
    children = _ref5.children,
    rest = _objectWithoutPropertiesLoose(_ref5, _excluded2);
  var path = useResolvedPath(to, {
    relative: rest.relative
  });
  var location = useLocation();
  var routerState = React.useContext(UNSAFE_DataRouterStateContext);
  var _React$useContext = React.useContext(UNSAFE_NavigationContext),
    navigator = _React$useContext.navigator;
  var toPathname = navigator.encodeLocation ? navigator.encodeLocation(path).pathname : path.pathname;
  var locationPathname = location.pathname;
  var nextLocationPathname = routerState && routerState.navigation && routerState.navigation.location ? routerState.navigation.location.pathname : null;
  if (!caseSensitive) {
    locationPathname = locationPathname.toLowerCase();
    nextLocationPathname = nextLocationPathname ? nextLocationPathname.toLowerCase() : null;
    toPathname = toPathname.toLowerCase();
  }
  var isActive = locationPathname === toPathname || !end && locationPathname.startsWith(toPathname) && locationPathname.charAt(toPathname.length) === "/";
  var isPending = nextLocationPathname != null && (nextLocationPathname === toPathname || !end && nextLocationPathname.startsWith(toPathname) && nextLocationPathname.charAt(toPathname.length) === "/");
  var ariaCurrent = isActive ? ariaCurrentProp : undefined;
  var className;
  if (typeof classNameProp === "function") {
    className = classNameProp({
      isActive: isActive,
      isPending: isPending
    });
  } else {
    // If the className prop is not a function, we use a default `active`
    // class for <NavLink />s that are active. In v5 `active` was the default
    // value for `activeClassName`, but we are removing that API and can still
    // use the old default behavior for a cleaner upgrade path and keep the
    // simple styling rules working as they currently do.
    className = [classNameProp, isActive ? "active" : null, isPending ? "pending" : null].filter(Boolean).join(" ");
  }
  var style = typeof styleProp === "function" ? styleProp({
    isActive: isActive,
    isPending: isPending
  }) : styleProp;
  return /*#__PURE__*/React.createElement(Link, react_router_dom_dist_extends({}, rest, {
    "aria-current": ariaCurrent,
    className: className,
    ref: ref,
    style: style,
    to: to
  }), typeof children === "function" ? children({
    isActive: isActive,
    isPending: isPending
  }) : children);
})));
if (false) {}
/**
 * A `@remix-run/router`-aware `<form>`. It behaves like a normal form except
 * that the interaction with the server is with `fetch` instead of new document
 * requests, allowing components to add nicer UX to the page as the form is
 * submitted and returns with data.
 */

var Form = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function (props, ref) {
  return /*#__PURE__*/React.createElement(FormImpl, react_router_dom_dist_extends({}, props, {
    ref: ref
  }));
})));
if (false) {}
var FormImpl = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function (_ref6, forwardedRef) {
  var reloadDocument = _ref6.reloadDocument,
    replace = _ref6.replace,
    _ref6$method = _ref6.method,
    method = _ref6$method === void 0 ? defaultMethod : _ref6$method,
    action = _ref6.action,
    onSubmit = _ref6.onSubmit,
    fetcherKey = _ref6.fetcherKey,
    routeId = _ref6.routeId,
    relative = _ref6.relative,
    props = _objectWithoutPropertiesLoose(_ref6, _excluded3);
  var submit = useSubmitImpl(fetcherKey, routeId);
  var formMethod = method.toLowerCase() === "get" ? "get" : "post";
  var formAction = useFormAction(action, {
    relative: relative
  });
  var submitHandler = function submitHandler(event) {
    onSubmit && onSubmit(event);
    if (event.defaultPrevented) return;
    event.preventDefault();
    var submitter = event.nativeEvent.submitter;
    var submitMethod = (submitter == null ? void 0 : submitter.getAttribute("formmethod")) || method;
    submit(submitter || event.currentTarget, {
      method: submitMethod,
      replace: replace,
      relative: relative
    });
  };
  return /*#__PURE__*/React.createElement("form", react_router_dom_dist_extends({
    ref: forwardedRef,
    method: formMethod,
    action: formAction,
    onSubmit: reloadDocument ? onSubmit : submitHandler
  }, props));
})));
if (false) {}
/**
 * This component will emulate the browser's scroll restoration on location
 * changes.
 */

function ScrollRestoration(_ref7) {
  var getKey = _ref7.getKey,
    storageKey = _ref7.storageKey;
  useScrollRestoration({
    getKey: getKey,
    storageKey: storageKey
  });
  return null;
}
if (false) {} //#endregion
////////////////////////////////////////////////////////////////////////////////
//#region Hooks
////////////////////////////////////////////////////////////////////////////////

var dist_DataRouterHook;
(function (DataRouterHook) {
  DataRouterHook["UseScrollRestoration"] = "useScrollRestoration";
  DataRouterHook["UseSubmitImpl"] = "useSubmitImpl";
  DataRouterHook["UseFetcher"] = "useFetcher";
})(dist_DataRouterHook || (dist_DataRouterHook = {}));
var dist_DataRouterStateHook;
(function (DataRouterStateHook) {
  DataRouterStateHook["UseFetchers"] = "useFetchers";
  DataRouterStateHook["UseScrollRestoration"] = "useScrollRestoration";
})(dist_DataRouterStateHook || (dist_DataRouterStateHook = {}));
function dist_getDataRouterConsoleError(hookName) {
  return hookName + " must be used within a data router.  See https://reactrouter.com/routers/picking-a-router.";
}
function dist_useDataRouterContext(hookName) {
  var ctx = React.useContext(UNSAFE_DataRouterContext);
  !ctx ?  false ? 0 : invariant(false) : void 0;
  return ctx;
}
function dist_useDataRouterState(hookName) {
  var state = React.useContext(UNSAFE_DataRouterStateContext);
  !state ?  false ? 0 : invariant(false) : void 0;
  return state;
}
/**
 * Handles the click behavior for router `<Link>` components. This is useful if
 * you need to create custom `<Link>` components with the same click behavior we
 * use in our exported `<Link>`.
 */

function useLinkClickHandler(to, _temp) {
  var _ref8 = _temp === void 0 ? {} : _temp,
    target = _ref8.target,
    replaceProp = _ref8.replace,
    state = _ref8.state,
    preventScrollReset = _ref8.preventScrollReset,
    relative = _ref8.relative;
  var navigate = dist_useNavigate();
  var location = dist_useLocation();
  var path = dist_useResolvedPath(to, {
    relative: relative
  });
  return react.useCallback(function (event) {
    if (shouldProcessLinkClick(event, target)) {
      event.preventDefault(); // If the URL hasn't changed, a regular <a> will do a replace instead of
      // a push, so do the same here unless the replace prop is explicitly set

      var replace = replaceProp !== undefined ? replaceProp : router_createPath(location) === router_createPath(path);
      navigate(to, {
        replace: replace,
        state: state,
        preventScrollReset: preventScrollReset,
        relative: relative
      });
    }
  }, [location, navigate, path, replaceProp, state, target, to, preventScrollReset, relative]);
}
/**
 * A convenient wrapper for reading and writing search parameters via the
 * URLSearchParams interface.
 */

function useSearchParams(defaultInit) {
   false ? 0 : void 0;
  var defaultSearchParamsRef = React.useRef(createSearchParams(defaultInit));
  var location = useLocation();
  var searchParams = React.useMemo(function () {
    return getSearchParamsForLocation(location.search, defaultSearchParamsRef.current);
  }, [location.search]);
  var navigate = useNavigate();
  var setSearchParams = React.useCallback(function (nextInit, navigateOptions) {
    var newSearchParams = createSearchParams(typeof nextInit === "function" ? nextInit(searchParams) : nextInit);
    navigate("?" + newSearchParams, navigateOptions);
  }, [navigate, searchParams]);
  return [searchParams, setSearchParams];
}
/**
 * Returns a function that may be used to programmatically submit a form (or
 * some arbitrary data) to the server.
 */

function useSubmit() {
  return useSubmitImpl();
}
function useSubmitImpl(fetcherKey, routeId) {
  var _useDataRouterContext = dist_useDataRouterContext(dist_DataRouterHook.UseSubmitImpl),
    router = _useDataRouterContext.router;
  var defaultAction = useFormAction();
  return React.useCallback(function (target, options) {
    if (options === void 0) {
      options = {};
    }
    if (typeof document === "undefined") {
      throw new Error("You are calling submit during the server render. " + "Try calling submit within a `useEffect` or callback instead.");
    }
    var _getFormSubmissionInf = getFormSubmissionInfo(target, defaultAction, options),
      method = _getFormSubmissionInf.method,
      encType = _getFormSubmissionInf.encType,
      formData = _getFormSubmissionInf.formData,
      url = _getFormSubmissionInf.url;
    var href = url.pathname + url.search;
    var opts = {
      replace: options.replace,
      formData: formData,
      formMethod: method,
      formEncType: encType
    };
    if (fetcherKey) {
      !(routeId != null) ?  false ? 0 : invariant(false) : void 0;
      router.fetch(fetcherKey, routeId, href, opts);
    } else {
      router.navigate(href, opts);
    }
  }, [defaultAction, router, fetcherKey, routeId]);
}
function useFormAction(action, _temp2) {
  var _ref9 = _temp2 === void 0 ? {} : _temp2,
    relative = _ref9.relative;
  var _React$useContext2 = React.useContext(UNSAFE_NavigationContext),
    basename = _React$useContext2.basename;
  var routeContext = React.useContext(UNSAFE_RouteContext);
  !routeContext ?  false ? 0 : invariant(false) : void 0;
  var _routeContext$matches = routeContext.matches.slice(-1),
    _routeContext$matches2 = _slicedToArray(_routeContext$matches, 1),
    match = _routeContext$matches2[0]; // Shallow clone path so we can modify it below, otherwise we modify the
  // object referenced by useMemo inside useResolvedPath

  var path = react_router_dom_dist_extends({}, useResolvedPath(action ? action : ".", {
    relative: relative
  })); // Previously we set the default action to ".". The problem with this is that
  // `useResolvedPath(".")` excludes search params and the hash of the resolved
  // URL. This is the intended behavior of when "." is specifically provided as
  // the form action, but inconsistent w/ browsers when the action is omitted.
  // https://github.com/remix-run/remix/issues/927

  var location = useLocation();
  if (action == null) {
    // Safe to write to these directly here since if action was undefined, we
    // would have called useResolvedPath(".") which will never include a search
    // or hash
    path.search = location.search;
    path.hash = location.hash; // When grabbing search params from the URL, remove the automatically
    // inserted ?index param so we match the useResolvedPath search behavior
    // which would not include ?index

    if (match.route.index) {
      var params = new URLSearchParams(path.search);
      params.delete("index");
      path.search = params.toString() ? "?" + params.toString() : "";
    }
  }
  if ((!action || action === ".") && match.route.index) {
    path.search = path.search ? path.search.replace(/^\?/, "?index&") : "?index";
  } // If we're operating within a basename, prepend it to the pathname prior
  // to creating the form action.  If this is a root navigation, then just use
  // the raw basename which allows the basename to have full control over the
  // presence of a trailing slash on root actions

  if (basename !== "/") {
    path.pathname = path.pathname === "/" ? basename : joinPaths([basename, path.pathname]);
  }
  return createPath(path);
}
function createFetcherForm(fetcherKey, routeId) {
  var FetcherForm = /*#__PURE__*/React.forwardRef(function (props, ref) {
    return /*#__PURE__*/React.createElement(FormImpl, react_router_dom_dist_extends({}, props, {
      ref: ref,
      fetcherKey: fetcherKey,
      routeId: routeId
    }));
  });
  if (false) {}
  return FetcherForm;
}
var fetcherId = 0;
/**
 * Interacts with route loaders and actions without causing a navigation. Great
 * for any interaction that stays on the same page.
 */

function useFetcher() {
  var _route$matches;
  var _useDataRouterContext2 = dist_useDataRouterContext(dist_DataRouterHook.UseFetcher),
    router = _useDataRouterContext2.router;
  var route = React.useContext(UNSAFE_RouteContext);
  !route ?  false ? 0 : invariant(false) : void 0;
  var routeId = (_route$matches = route.matches[route.matches.length - 1]) == null ? void 0 : _route$matches.route.id;
  !(routeId != null) ?  false ? 0 : invariant(false) : void 0;
  var _React$useState7 = React.useState(function () {
      return String(++fetcherId);
    }),
    _React$useState8 = _slicedToArray(_React$useState7, 1),
    fetcherKey = _React$useState8[0];
  var _React$useState9 = React.useState(function () {
      !routeId ?  false ? 0 : invariant(false) : void 0;
      return createFetcherForm(fetcherKey, routeId);
    }),
    _React$useState10 = _slicedToArray(_React$useState9, 1),
    Form = _React$useState10[0];
  var _React$useState11 = React.useState(function () {
      return function (href) {
        !router ?  false ? 0 : invariant(false) : void 0;
        !routeId ?  false ? 0 : invariant(false) : void 0;
        router.fetch(fetcherKey, routeId, href);
      };
    }),
    _React$useState12 = _slicedToArray(_React$useState11, 1),
    load = _React$useState12[0];
  var submit = useSubmitImpl(fetcherKey, routeId);
  var fetcher = router.getFetcher(fetcherKey);
  var fetcherWithComponents = React.useMemo(function () {
    return react_router_dom_dist_extends({
      Form: Form,
      submit: submit,
      load: load
    }, fetcher);
  }, [fetcher, Form, submit, load]);
  React.useEffect(function () {
    // Is this busted when the React team gets real weird and calls effects
    // twice on mount?  We really just need to garbage collect here when this
    // fetcher is no longer around.
    return function () {
      if (!router) {
        console.warn("No fetcher available to clean up from useFetcher()");
        return;
      }
      router.deleteFetcher(fetcherKey);
    };
  }, [router, fetcherKey]);
  return fetcherWithComponents;
}
/**
 * Provides all fetchers currently on the page. Useful for layouts and parent
 * routes that need to provide pending/optimistic UI regarding the fetch.
 */

function useFetchers() {
  var state = dist_useDataRouterState(dist_DataRouterStateHook.UseFetchers);
  return _toConsumableArray(state.fetchers.values());
}
var SCROLL_RESTORATION_STORAGE_KEY = "react-router-scroll-positions";
var savedScrollPositions = {};
/**
 * When rendered inside a RouterProvider, will restore scroll positions on navigations
 */

function useScrollRestoration(_temp3) {
  var _ref10 = _temp3 === void 0 ? {} : _temp3,
    getKey = _ref10.getKey,
    storageKey = _ref10.storageKey;
  var _useDataRouterContext3 = dist_useDataRouterContext(dist_DataRouterHook.UseScrollRestoration),
    router = _useDataRouterContext3.router;
  var _useDataRouterState = dist_useDataRouterState(dist_DataRouterStateHook.UseScrollRestoration),
    restoreScrollPosition = _useDataRouterState.restoreScrollPosition,
    preventScrollReset = _useDataRouterState.preventScrollReset;
  var location = useLocation();
  var matches = useMatches();
  var navigation = useNavigation(); // Trigger manual scroll restoration while we're active

  React.useEffect(function () {
    window.history.scrollRestoration = "manual";
    return function () {
      window.history.scrollRestoration = "auto";
    };
  }, []); // Save positions on unload

  useBeforeUnload(React.useCallback(function () {
    if (navigation.state === "idle") {
      var key = (getKey ? getKey(location, matches) : null) || location.key;
      savedScrollPositions[key] = window.scrollY;
    }
    sessionStorage.setItem(storageKey || SCROLL_RESTORATION_STORAGE_KEY, JSON.stringify(savedScrollPositions));
    window.history.scrollRestoration = "auto";
  }, [storageKey, getKey, navigation.state, location, matches])); // Read in any saved scroll locations

  if (typeof document !== "undefined") {
    // eslint-disable-next-line react-hooks/rules-of-hooks
    React.useLayoutEffect(function () {
      try {
        var sessionPositions = sessionStorage.getItem(storageKey || SCROLL_RESTORATION_STORAGE_KEY);
        if (sessionPositions) {
          savedScrollPositions = JSON.parse(sessionPositions);
        }
      } catch (e) {// no-op, use default empty object
      }
    }, [storageKey]); // Enable scroll restoration in the router
    // eslint-disable-next-line react-hooks/rules-of-hooks

    React.useLayoutEffect(function () {
      var disableScrollRestoration = router == null ? void 0 : router.enableScrollRestoration(savedScrollPositions, function () {
        return window.scrollY;
      }, getKey);
      return function () {
        return disableScrollRestoration && disableScrollRestoration();
      };
    }, [router, getKey]); // Restore scrolling when state.restoreScrollPosition changes
    // eslint-disable-next-line react-hooks/rules-of-hooks

    React.useLayoutEffect(function () {
      // Explicit false means don't do anything (used for submissions)
      if (restoreScrollPosition === false) {
        return;
      } // been here before, scroll to it

      if (typeof restoreScrollPosition === "number") {
        window.scrollTo(0, restoreScrollPosition);
        return;
      } // try to scroll to the hash

      if (location.hash) {
        var el = document.getElementById(location.hash.slice(1));
        if (el) {
          el.scrollIntoView();
          return;
        }
      } // Opt out of scroll reset if this link requested it

      if (preventScrollReset === true) {
        return;
      } // otherwise go to the top on new locations

      window.scrollTo(0, 0);
    }, [location, restoreScrollPosition, preventScrollReset]);
  }
}
/**
 * Setup a callback to be fired on the window's `beforeunload` event. This is
 * useful for saving some data to `window.localStorage` just before the page
 * refreshes.
 *
 * Note: The `callback` argument should be a function created with
 * `React.useCallback()`.
 */

function useBeforeUnload(callback) {
  React.useEffect(function () {
    window.addEventListener("beforeunload", callback);
    return function () {
      window.removeEventListener("beforeunload", callback);
    };
  }, [callback]);
} //#endregion
////////////////////////////////////////////////////////////////////////////////
//#region Utils
////////////////////////////////////////////////////////////////////////////////

function dist_warning(cond, message) {
  if (!cond) {
    // eslint-disable-next-line no-console
    if (typeof console !== "undefined") console.warn(message);
    try {
      // Welcome to debugging React Router!
      //
      // This error is thrown as a convenience so you can more easily
      // find the source for a warning that appears in the console by
      // enabling "pause on exceptions" in your JavaScript debugger.
      throw new Error(message); // eslint-disable-next-line no-empty
    } catch (e) {}
  }
} //#endregion


// EXTERNAL MODULE: ./node_modules/@mui/material/utils/createSvgIcon.js + 2 modules
var createSvgIcon = __webpack_require__(9201);
;// CONCATENATED MODULE: ./node_modules/@mui/icons-material/esm/ShoppingCart.js


/* harmony default export */ var ShoppingCart = ((0,createSvgIcon/* default */.Z)( /*#__PURE__*/(0,jsx_runtime.jsx)("path", {
  d: "M7 18c-1.1 0-1.99.9-1.99 2S5.9 22 7 22s2-.9 2-2-.9-2-2-2zM1 2v2h2l3.6 7.59-1.35 2.45c-.16.28-.25.61-.25.96 0 1.1.9 2 2 2h12v-2H7.42c-.14 0-.25-.11-.25-.25l.03-.12.9-1.63h7.45c.75 0 1.41-.41 1.75-1.03l3.58-6.49c.08-.14.12-.31.12-.48 0-.55-.45-1-1-1H5.21l-.94-2H1zm16 16c-1.1 0-1.99.9-1.99 2s.89 2 1.99 2 2-.9 2-2-.9-2-2-2z"
}), 'ShoppingCart'));
// EXTERNAL MODULE: ./node_modules/@mui/system/esm/colorManipulator.js
var colorManipulator = __webpack_require__(2065);
// EXTERNAL MODULE: ./node_modules/@mui/material/utils/useForkRef.js
var useForkRef = __webpack_require__(2071);
// EXTERNAL MODULE: ./node_modules/@mui/material/utils/useEventCallback.js
var useEventCallback = __webpack_require__(9683);
// EXTERNAL MODULE: ./node_modules/@mui/material/utils/useIsFocusVisible.js + 1 modules
var useIsFocusVisible = __webpack_require__(3031);
;// CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js
function _taggedTemplateLiteral(strings, raw) {
  if (!raw) {
    raw = strings.slice(0);
  }
  return Object.freeze(Object.defineProperties(strings, {
    raw: {
      value: Object.freeze(raw)
    }
  }));
}
;// CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/esm/inheritsLoose.js

function inheritsLoose_inheritsLoose(subClass, superClass) {
  subClass.prototype = Object.create(superClass.prototype);
  subClass.prototype.constructor = subClass;
  setPrototypeOf_setPrototypeOf(subClass, superClass);
}
;// CONCATENATED MODULE: ./node_modules/react-transition-group/esm/TransitionGroupContext.js

/* harmony default export */ var TransitionGroupContext = (react.createContext(null));
;// CONCATENATED MODULE: ./node_modules/react-transition-group/esm/utils/ChildMapping.js

/**
 * Given `this.props.children`, return an object mapping key to child.
 *
 * @param {*} children `this.props.children`
 * @return {object} Mapping of key to child
 */

function getChildMapping(children, mapFn) {
  var mapper = function mapper(child) {
    return mapFn && (0,react.isValidElement)(child) ? mapFn(child) : child;
  };
  var result = Object.create(null);
  if (children) react.Children.map(children, function (c) {
    return c;
  }).forEach(function (child) {
    // run the map function here instead so that the key is the computed one
    result[child.key] = mapper(child);
  });
  return result;
}
/**
 * When you're adding or removing children some may be added or removed in the
 * same render pass. We want to show *both* since we want to simultaneously
 * animate elements in and out. This function takes a previous set of keys
 * and a new set of keys and merges them with its best guess of the correct
 * ordering. In the future we may expose some of the utilities in
 * ReactMultiChild to make this easy, but for now React itself does not
 * directly have this concept of the union of prevChildren and nextChildren
 * so we implement it here.
 *
 * @param {object} prev prev children as returned from
 * `ReactTransitionChildMapping.getChildMapping()`.
 * @param {object} next next children as returned from
 * `ReactTransitionChildMapping.getChildMapping()`.
 * @return {object} a key set that contains all keys in `prev` and all keys
 * in `next` in a reasonable order.
 */

function mergeChildMappings(prev, next) {
  prev = prev || {};
  next = next || {};
  function getValueForKey(key) {
    return key in next ? next[key] : prev[key];
  } // For each key of `next`, the list of keys to insert before that key in
  // the combined list

  var nextKeysPending = Object.create(null);
  var pendingKeys = [];
  for (var prevKey in prev) {
    if (prevKey in next) {
      if (pendingKeys.length) {
        nextKeysPending[prevKey] = pendingKeys;
        pendingKeys = [];
      }
    } else {
      pendingKeys.push(prevKey);
    }
  }
  var i;
  var childMapping = {};
  for (var nextKey in next) {
    if (nextKeysPending[nextKey]) {
      for (i = 0; i < nextKeysPending[nextKey].length; i++) {
        var pendingNextKey = nextKeysPending[nextKey][i];
        childMapping[nextKeysPending[nextKey][i]] = getValueForKey(pendingNextKey);
      }
    }
    childMapping[nextKey] = getValueForKey(nextKey);
  } // Finally, add the keys which didn't appear before any key in `next`

  for (i = 0; i < pendingKeys.length; i++) {
    childMapping[pendingKeys[i]] = getValueForKey(pendingKeys[i]);
  }
  return childMapping;
}
function getProp(child, prop, props) {
  return props[prop] != null ? props[prop] : child.props[prop];
}
function getInitialChildMapping(props, onExited) {
  return getChildMapping(props.children, function (child) {
    return (0,react.cloneElement)(child, {
      onExited: onExited.bind(null, child),
      in: true,
      appear: getProp(child, 'appear', props),
      enter: getProp(child, 'enter', props),
      exit: getProp(child, 'exit', props)
    });
  });
}
function getNextChildMapping(nextProps, prevChildMapping, onExited) {
  var nextChildMapping = getChildMapping(nextProps.children);
  var children = mergeChildMappings(prevChildMapping, nextChildMapping);
  Object.keys(children).forEach(function (key) {
    var child = children[key];
    if (!(0,react.isValidElement)(child)) return;
    var hasPrev = (key in prevChildMapping);
    var hasNext = (key in nextChildMapping);
    var prevChild = prevChildMapping[key];
    var isLeaving = (0,react.isValidElement)(prevChild) && !prevChild.props.in; // item is new (entering)

    if (hasNext && (!hasPrev || isLeaving)) {
      // console.log('entering', key)
      children[key] = (0,react.cloneElement)(child, {
        onExited: onExited.bind(null, child),
        in: true,
        exit: getProp(child, 'exit', nextProps),
        enter: getProp(child, 'enter', nextProps)
      });
    } else if (!hasNext && hasPrev && !isLeaving) {
      // item is old (exiting)
      // console.log('leaving', key)
      children[key] = (0,react.cloneElement)(child, {
        in: false
      });
    } else if (hasNext && hasPrev && (0,react.isValidElement)(prevChild)) {
      // item hasn't changed transition states
      // copy over the last transition props;
      // console.log('unchanged', key)
      children[key] = (0,react.cloneElement)(child, {
        onExited: onExited.bind(null, child),
        in: prevChild.props.in,
        exit: getProp(child, 'exit', nextProps),
        enter: getProp(child, 'enter', nextProps)
      });
    }
  });
  return children;
}
;// CONCATENATED MODULE: ./node_modules/react-transition-group/esm/TransitionGroup.js








var TransitionGroup_values = Object.values || function (obj) {
  return Object.keys(obj).map(function (k) {
    return obj[k];
  });
};
var defaultProps = {
  component: 'div',
  childFactory: function childFactory(child) {
    return child;
  }
};
/**
 * The `<TransitionGroup>` component manages a set of transition components
 * (`<Transition>` and `<CSSTransition>`) in a list. Like with the transition
 * components, `<TransitionGroup>` is a state machine for managing the mounting
 * and unmounting of components over time.
 *
 * Consider the example below. As items are removed or added to the TodoList the
 * `in` prop is toggled automatically by the `<TransitionGroup>`.
 *
 * Note that `<TransitionGroup>`  does not define any animation behavior!
 * Exactly _how_ a list item animates is up to the individual transition
 * component. This means you can mix and match animations across different list
 * items.
 */

var TransitionGroup = /*#__PURE__*/function (_React$Component) {
  inheritsLoose_inheritsLoose(TransitionGroup, _React$Component);
  function TransitionGroup(props, context) {
    var _this;
    _this = _React$Component.call(this, props, context) || this;
    var handleExited = _this.handleExited.bind(assertThisInitialized_assertThisInitialized(_this)); // Initial children should all be entering, dependent on appear

    _this.state = {
      contextValue: {
        isMounting: true
      },
      handleExited: handleExited,
      firstRender: true
    };
    return _this;
  }
  var _proto = TransitionGroup.prototype;
  _proto.componentDidMount = function componentDidMount() {
    this.mounted = true;
    this.setState({
      contextValue: {
        isMounting: false
      }
    });
  };
  _proto.componentWillUnmount = function componentWillUnmount() {
    this.mounted = false;
  };
  TransitionGroup.getDerivedStateFromProps = function getDerivedStateFromProps(nextProps, _ref) {
    var prevChildMapping = _ref.children,
      handleExited = _ref.handleExited,
      firstRender = _ref.firstRender;
    return {
      children: firstRender ? getInitialChildMapping(nextProps, handleExited) : getNextChildMapping(nextProps, prevChildMapping, handleExited),
      firstRender: false
    };
  } // node is `undefined` when user provided `nodeRef` prop
  ;

  _proto.handleExited = function handleExited(child, node) {
    var currentChildMapping = getChildMapping(this.props.children);
    if (child.key in currentChildMapping) return;
    if (child.props.onExited) {
      child.props.onExited(node);
    }
    if (this.mounted) {
      this.setState(function (state) {
        var children = (0,esm_extends/* default */.Z)({}, state.children);
        delete children[child.key];
        return {
          children: children
        };
      });
    }
  };
  _proto.render = function render() {
    var _this$props = this.props,
      Component = _this$props.component,
      childFactory = _this$props.childFactory,
      props = (0,objectWithoutPropertiesLoose/* default */.Z)(_this$props, ["component", "childFactory"]);
    var contextValue = this.state.contextValue;
    var children = TransitionGroup_values(this.state.children).map(childFactory);
    delete props.appear;
    delete props.enter;
    delete props.exit;
    if (Component === null) {
      return /*#__PURE__*/react.createElement(TransitionGroupContext.Provider, {
        value: contextValue
      }, children);
    }
    return /*#__PURE__*/react.createElement(TransitionGroupContext.Provider, {
      value: contextValue
    }, /*#__PURE__*/react.createElement(Component, props, children));
  };
  return TransitionGroup;
}(react.Component);
TransitionGroup.propTypes =  false ? 0 : {};
TransitionGroup.defaultProps = defaultProps;
/* harmony default export */ var esm_TransitionGroup = (TransitionGroup);
;// CONCATENATED MODULE: ./node_modules/@mui/material/ButtonBase/Ripple.js





/**
 * @ignore - internal component.
 */

function Ripple(props) {
  var className = props.className,
    classes = props.classes,
    _props$pulsate = props.pulsate,
    pulsate = _props$pulsate === void 0 ? false : _props$pulsate,
    rippleX = props.rippleX,
    rippleY = props.rippleY,
    rippleSize = props.rippleSize,
    inProp = props.in,
    onExited = props.onExited,
    timeout = props.timeout;
  var _React$useState = react.useState(false),
    _React$useState2 = (0,slicedToArray/* default */.Z)(_React$useState, 2),
    leaving = _React$useState2[0],
    setLeaving = _React$useState2[1];
  var rippleClassName = (0,clsx_m/* default */.Z)(className, classes.ripple, classes.rippleVisible, pulsate && classes.ripplePulsate);
  var rippleStyles = {
    width: rippleSize,
    height: rippleSize,
    top: -(rippleSize / 2) + rippleY,
    left: -(rippleSize / 2) + rippleX
  };
  var childClassName = (0,clsx_m/* default */.Z)(classes.child, leaving && classes.childLeaving, pulsate && classes.childPulsate);
  if (!inProp && !leaving) {
    setLeaving(true);
  }
  react.useEffect(function () {
    if (!inProp && onExited != null) {
      // react-transition-group#onExited
      var timeoutId = setTimeout(onExited, timeout);
      return function () {
        clearTimeout(timeoutId);
      };
    }
    return undefined;
  }, [onExited, inProp, timeout]);
  return /*#__PURE__*/(0,jsx_runtime.jsx)("span", {
    className: rippleClassName,
    style: rippleStyles,
    children: /*#__PURE__*/(0,jsx_runtime.jsx)("span", {
      className: childClassName
    })
  });
}
 false ? 0 : void 0;
/* harmony default export */ var ButtonBase_Ripple = (Ripple);
// EXTERNAL MODULE: ./node_modules/@mui/utils/esm/generateUtilityClasses/generateUtilityClasses.js
var generateUtilityClasses = __webpack_require__(5878);
;// CONCATENATED MODULE: ./node_modules/@mui/material/ButtonBase/touchRippleClasses.js


function getTouchRippleUtilityClass(slot) {
  return generateUtilityClass('MuiTouchRipple', slot);
}
var touchRippleClasses = (0,generateUtilityClasses/* default */.Z)('MuiTouchRipple', ['root', 'ripple', 'rippleVisible', 'ripplePulsate', 'child', 'childLeaving', 'childPulsate']);
/* harmony default export */ var ButtonBase_touchRippleClasses = (touchRippleClasses);
;// CONCATENATED MODULE: ./node_modules/@mui/material/ButtonBase/TouchRipple.js



var _templateObject, _templateObject2, _templateObject3, _templateObject4;


var TouchRipple_excluded = ["center", "classes", "className"];
var _ = function _(t) {
    return t;
  },
  TouchRipple_t,
  _t2,
  _t3,
  _t4;










var DURATION = 550;
var DELAY_RIPPLE = 80;
var enterKeyframe = keyframes(TouchRipple_t || (TouchRipple_t = _(_templateObject || (_templateObject = _taggedTemplateLiteral(["\n  0% {\n    transform: scale(0);\n    opacity: 0.1;\n  }\n\n  100% {\n    transform: scale(1);\n    opacity: 0.3;\n  }\n"])))));
var exitKeyframe = keyframes(_t2 || (_t2 = _(_templateObject2 || (_templateObject2 = _taggedTemplateLiteral(["\n  0% {\n    opacity: 1;\n  }\n\n  100% {\n    opacity: 0;\n  }\n"])))));
var pulsateKeyframe = keyframes(_t3 || (_t3 = _(_templateObject3 || (_templateObject3 = _taggedTemplateLiteral(["\n  0% {\n    transform: scale(1);\n  }\n\n  50% {\n    transform: scale(0.92);\n  }\n\n  100% {\n    transform: scale(1);\n  }\n"])))));
var TouchRippleRoot = (0,styles_styled/* default */.ZP)('span', {
  name: 'MuiTouchRipple',
  slot: 'Root'
})({
  overflow: 'hidden',
  pointerEvents: 'none',
  position: 'absolute',
  zIndex: 0,
  top: 0,
  right: 0,
  bottom: 0,
  left: 0,
  borderRadius: 'inherit'
});

// This `styled()` function invokes keyframes. `styled-components` only supports keyframes
// in string templates. Do not convert these styles in JS object as it will break.
var TouchRippleRipple = (0,styles_styled/* default */.ZP)(ButtonBase_Ripple, {
  name: 'MuiTouchRipple',
  slot: 'Ripple'
})(_t4 || (_t4 = _(_templateObject4 || (_templateObject4 = _taggedTemplateLiteral(["\n  opacity: 0;\n  position: absolute;\n\n  &.", " {\n    opacity: 0.3;\n    transform: scale(1);\n    animation-name: ", ";\n    animation-duration: ", "ms;\n    animation-timing-function: ", ";\n  }\n\n  &.", " {\n    animation-duration: ", "ms;\n  }\n\n  & .", " {\n    opacity: 1;\n    display: block;\n    width: 100%;\n    height: 100%;\n    border-radius: 50%;\n    background-color: currentColor;\n  }\n\n  & .", " {\n    opacity: 0;\n    animation-name: ", ";\n    animation-duration: ", "ms;\n    animation-timing-function: ", ";\n  }\n\n  & .", " {\n    position: absolute;\n    /* @noflip */\n    left: 0px;\n    top: 0;\n    animation-name: ", ";\n    animation-duration: 2500ms;\n    animation-timing-function: ", ";\n    animation-iteration-count: infinite;\n    animation-delay: 200ms;\n  }\n"])), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0)), ButtonBase_touchRippleClasses.rippleVisible, enterKeyframe, DURATION, function (_ref) {
  var theme = _ref.theme;
  return theme.transitions.easing.easeInOut;
}, ButtonBase_touchRippleClasses.ripplePulsate, function (_ref2) {
  var theme = _ref2.theme;
  return theme.transitions.duration.shorter;
}, ButtonBase_touchRippleClasses.child, ButtonBase_touchRippleClasses.childLeaving, exitKeyframe, DURATION, function (_ref3) {
  var theme = _ref3.theme;
  return theme.transitions.easing.easeInOut;
}, ButtonBase_touchRippleClasses.childPulsate, pulsateKeyframe, function (_ref4) {
  var theme = _ref4.theme;
  return theme.transitions.easing.easeInOut;
});

/**
 * @ignore - internal component.
 *
 * TODO v5: Make private
 */
var TouchRipple = /*#__PURE__*/react.forwardRef(function TouchRipple(inProps, ref) {
  var props = (0,styles_useThemeProps/* default */.Z)({
    props: inProps,
    name: 'MuiTouchRipple'
  });
  var _props$center = props.center,
    centerProp = _props$center === void 0 ? false : _props$center,
    _props$classes = props.classes,
    classes = _props$classes === void 0 ? {} : _props$classes,
    className = props.className,
    other = (0,objectWithoutPropertiesLoose/* default */.Z)(props, TouchRipple_excluded);
  var _React$useState = react.useState([]),
    _React$useState2 = (0,slicedToArray/* default */.Z)(_React$useState, 2),
    ripples = _React$useState2[0],
    setRipples = _React$useState2[1];
  var nextKey = react.useRef(0);
  var rippleCallback = react.useRef(null);
  react.useEffect(function () {
    if (rippleCallback.current) {
      rippleCallback.current();
      rippleCallback.current = null;
    }
  }, [ripples]);

  // Used to filter out mouse emulated events on mobile.
  var ignoringMouseDown = react.useRef(false);
  // We use a timer in order to only show the ripples for touch "click" like events.
  // We don't want to display the ripple for touch scroll events.
  var startTimer = react.useRef(null);

  // This is the hook called once the previous timeout is ready.
  var startTimerCommit = react.useRef(null);
  var container = react.useRef(null);
  react.useEffect(function () {
    return function () {
      clearTimeout(startTimer.current);
    };
  }, []);
  var startCommit = react.useCallback(function (params) {
    var pulsate = params.pulsate,
      rippleX = params.rippleX,
      rippleY = params.rippleY,
      rippleSize = params.rippleSize,
      cb = params.cb;
    setRipples(function (oldRipples) {
      return [].concat((0,toConsumableArray/* default */.Z)(oldRipples), [/*#__PURE__*/(0,jsx_runtime.jsx)(TouchRippleRipple, {
        classes: {
          ripple: (0,clsx_m/* default */.Z)(classes.ripple, ButtonBase_touchRippleClasses.ripple),
          rippleVisible: (0,clsx_m/* default */.Z)(classes.rippleVisible, ButtonBase_touchRippleClasses.rippleVisible),
          ripplePulsate: (0,clsx_m/* default */.Z)(classes.ripplePulsate, ButtonBase_touchRippleClasses.ripplePulsate),
          child: (0,clsx_m/* default */.Z)(classes.child, ButtonBase_touchRippleClasses.child),
          childLeaving: (0,clsx_m/* default */.Z)(classes.childLeaving, ButtonBase_touchRippleClasses.childLeaving),
          childPulsate: (0,clsx_m/* default */.Z)(classes.childPulsate, ButtonBase_touchRippleClasses.childPulsate)
        },
        timeout: DURATION,
        pulsate: pulsate,
        rippleX: rippleX,
        rippleY: rippleY,
        rippleSize: rippleSize
      }, nextKey.current)]);
    });
    nextKey.current += 1;
    rippleCallback.current = cb;
  }, [classes]);
  var start = react.useCallback(function () {
    var event = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
    var cb = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : function () {};
    var _options$pulsate = options.pulsate,
      pulsate = _options$pulsate === void 0 ? false : _options$pulsate,
      _options$center = options.center,
      center = _options$center === void 0 ? centerProp || options.pulsate : _options$center,
      _options$fakeElement = options.fakeElement,
      fakeElement = _options$fakeElement === void 0 ? false : _options$fakeElement;
    if ((event == null ? void 0 : event.type) === 'mousedown' && ignoringMouseDown.current) {
      ignoringMouseDown.current = false;
      return;
    }
    if ((event == null ? void 0 : event.type) === 'touchstart') {
      ignoringMouseDown.current = true;
    }
    var element = fakeElement ? null : container.current;
    var rect = element ? element.getBoundingClientRect() : {
      width: 0,
      height: 0,
      left: 0,
      top: 0
    };

    // Get the size of the ripple
    var rippleX;
    var rippleY;
    var rippleSize;
    if (center || event === undefined || event.clientX === 0 && event.clientY === 0 || !event.clientX && !event.touches) {
      rippleX = Math.round(rect.width / 2);
      rippleY = Math.round(rect.height / 2);
    } else {
      var _ref5 = event.touches && event.touches.length > 0 ? event.touches[0] : event,
        clientX = _ref5.clientX,
        clientY = _ref5.clientY;
      rippleX = Math.round(clientX - rect.left);
      rippleY = Math.round(clientY - rect.top);
    }
    if (center) {
      rippleSize = Math.sqrt((2 * Math.pow(rect.width, 2) + Math.pow(rect.height, 2)) / 3);

      // For some reason the animation is broken on Mobile Chrome if the size is even.
      if (rippleSize % 2 === 0) {
        rippleSize += 1;
      }
    } else {
      var sizeX = Math.max(Math.abs((element ? element.clientWidth : 0) - rippleX), rippleX) * 2 + 2;
      var sizeY = Math.max(Math.abs((element ? element.clientHeight : 0) - rippleY), rippleY) * 2 + 2;
      rippleSize = Math.sqrt(Math.pow(sizeX, 2) + Math.pow(sizeY, 2));
    }

    // Touche devices
    if (event != null && event.touches) {
      // check that this isn't another touchstart due to multitouch
      // otherwise we will only clear a single timer when unmounting while two
      // are running
      if (startTimerCommit.current === null) {
        // Prepare the ripple effect.
        startTimerCommit.current = function () {
          startCommit({
            pulsate: pulsate,
            rippleX: rippleX,
            rippleY: rippleY,
            rippleSize: rippleSize,
            cb: cb
          });
        };
        // Delay the execution of the ripple effect.
        startTimer.current = setTimeout(function () {
          if (startTimerCommit.current) {
            startTimerCommit.current();
            startTimerCommit.current = null;
          }
        }, DELAY_RIPPLE); // We have to make a tradeoff with this value.
      }
    } else {
      startCommit({
        pulsate: pulsate,
        rippleX: rippleX,
        rippleY: rippleY,
        rippleSize: rippleSize,
        cb: cb
      });
    }
  }, [centerProp, startCommit]);
  var pulsate = react.useCallback(function () {
    start({}, {
      pulsate: true
    });
  }, [start]);
  var stop = react.useCallback(function (event, cb) {
    clearTimeout(startTimer.current);

    // The touch interaction occurs too quickly.
    // We still want to show ripple effect.
    if ((event == null ? void 0 : event.type) === 'touchend' && startTimerCommit.current) {
      startTimerCommit.current();
      startTimerCommit.current = null;
      startTimer.current = setTimeout(function () {
        stop(event, cb);
      });
      return;
    }
    startTimerCommit.current = null;
    setRipples(function (oldRipples) {
      if (oldRipples.length > 0) {
        return oldRipples.slice(1);
      }
      return oldRipples;
    });
    rippleCallback.current = cb;
  }, []);
  react.useImperativeHandle(ref, function () {
    return {
      pulsate: pulsate,
      start: start,
      stop: stop
    };
  }, [pulsate, start, stop]);
  return /*#__PURE__*/(0,jsx_runtime.jsx)(TouchRippleRoot, (0,esm_extends/* default */.Z)({
    className: (0,clsx_m/* default */.Z)(ButtonBase_touchRippleClasses.root, classes.root, className),
    ref: container
  }, other, {
    children: /*#__PURE__*/(0,jsx_runtime.jsx)(esm_TransitionGroup, {
      component: null,
      exit: true,
      children: ripples
    })
  }));
});
 false ? 0 : void 0;
/* harmony default export */ var ButtonBase_TouchRipple = (TouchRipple);
;// CONCATENATED MODULE: ./node_modules/@mui/material/ButtonBase/buttonBaseClasses.js


function getButtonBaseUtilityClass(slot) {
  return (0,generateUtilityClass_generateUtilityClass/* default */.Z)('MuiButtonBase', slot);
}
var buttonBaseClasses = (0,generateUtilityClasses/* default */.Z)('MuiButtonBase', ['root', 'disabled', 'focusVisible']);
/* harmony default export */ var ButtonBase_buttonBaseClasses = (buttonBaseClasses);
;// CONCATENATED MODULE: ./node_modules/@mui/material/ButtonBase/ButtonBase.js


var _styled;


var ButtonBase_excluded = ["action", "centerRipple", "children", "className", "component", "disabled", "disableRipple", "disableTouchRipple", "focusRipple", "focusVisibleClassName", "LinkComponent", "onBlur", "onClick", "onContextMenu", "onDragLeave", "onFocus", "onFocusVisible", "onKeyDown", "onKeyUp", "onMouseDown", "onMouseLeave", "onMouseUp", "onTouchEnd", "onTouchMove", "onTouchStart", "tabIndex", "TouchRippleProps", "touchRippleRef", "type"];














var ButtonBase_useUtilityClasses = function useUtilityClasses(ownerState) {
  var disabled = ownerState.disabled,
    focusVisible = ownerState.focusVisible,
    focusVisibleClassName = ownerState.focusVisibleClassName,
    classes = ownerState.classes;
  var slots = {
    root: ['root', disabled && 'disabled', focusVisible && 'focusVisible']
  };
  var composedClasses = (0,composeClasses/* default */.Z)(slots, getButtonBaseUtilityClass, classes);
  if (focusVisible && focusVisibleClassName) {
    composedClasses.root += " ".concat(focusVisibleClassName);
  }
  return composedClasses;
};
var ButtonBaseRoot = (0,styles_styled/* default */.ZP)('button', {
  name: 'MuiButtonBase',
  slot: 'Root',
  overridesResolver: function overridesResolver(props, styles) {
    return styles.root;
  }
})((_styled = {
  display: 'inline-flex',
  alignItems: 'center',
  justifyContent: 'center',
  position: 'relative',
  boxSizing: 'border-box',
  WebkitTapHighlightColor: 'transparent',
  backgroundColor: 'transparent',
  // Reset default value
  // We disable the focus ring for mouse, touch and keyboard users.
  outline: 0,
  border: 0,
  margin: 0,
  // Remove the margin in Safari
  borderRadius: 0,
  padding: 0,
  // Remove the padding in Firefox
  cursor: 'pointer',
  userSelect: 'none',
  verticalAlign: 'middle',
  MozAppearance: 'none',
  // Reset
  WebkitAppearance: 'none',
  // Reset
  textDecoration: 'none',
  // So we take precedent over the style of a native <a /> element.
  color: 'inherit',
  '&::-moz-focus-inner': {
    borderStyle: 'none' // Remove Firefox dotted outline.
  }
}, (0,esm_defineProperty/* default */.Z)(_styled, "&.".concat(ButtonBase_buttonBaseClasses.disabled), {
  pointerEvents: 'none',
  // Disable link interactions
  cursor: 'default'
}), (0,esm_defineProperty/* default */.Z)(_styled, '@media print', {
  colorAdjust: 'exact'
}), _styled));

/**
 * `ButtonBase` contains as few styles as possible.
 * It aims to be a simple building block for creating a button.
 * It contains a load of style reset and some focus/ripple logic.
 */
var ButtonBase = /*#__PURE__*/react.forwardRef(function ButtonBase(inProps, ref) {
  var props = (0,styles_useThemeProps/* default */.Z)({
    props: inProps,
    name: 'MuiButtonBase'
  });
  var action = props.action,
    _props$centerRipple = props.centerRipple,
    centerRipple = _props$centerRipple === void 0 ? false : _props$centerRipple,
    children = props.children,
    className = props.className,
    _props$component = props.component,
    component = _props$component === void 0 ? 'button' : _props$component,
    _props$disabled = props.disabled,
    disabled = _props$disabled === void 0 ? false : _props$disabled,
    _props$disableRipple = props.disableRipple,
    disableRipple = _props$disableRipple === void 0 ? false : _props$disableRipple,
    _props$disableTouchRi = props.disableTouchRipple,
    disableTouchRipple = _props$disableTouchRi === void 0 ? false : _props$disableTouchRi,
    _props$focusRipple = props.focusRipple,
    focusRipple = _props$focusRipple === void 0 ? false : _props$focusRipple,
    _props$LinkComponent = props.LinkComponent,
    LinkComponent = _props$LinkComponent === void 0 ? 'a' : _props$LinkComponent,
    onBlur = props.onBlur,
    onClick = props.onClick,
    onContextMenu = props.onContextMenu,
    onDragLeave = props.onDragLeave,
    onFocus = props.onFocus,
    onFocusVisible = props.onFocusVisible,
    onKeyDown = props.onKeyDown,
    onKeyUp = props.onKeyUp,
    onMouseDown = props.onMouseDown,
    onMouseLeave = props.onMouseLeave,
    onMouseUp = props.onMouseUp,
    onTouchEnd = props.onTouchEnd,
    onTouchMove = props.onTouchMove,
    onTouchStart = props.onTouchStart,
    _props$tabIndex = props.tabIndex,
    tabIndex = _props$tabIndex === void 0 ? 0 : _props$tabIndex,
    TouchRippleProps = props.TouchRippleProps,
    touchRippleRef = props.touchRippleRef,
    type = props.type,
    other = (0,objectWithoutPropertiesLoose/* default */.Z)(props, ButtonBase_excluded);
  var buttonRef = react.useRef(null);
  var rippleRef = react.useRef(null);
  var handleRippleRef = (0,useForkRef/* default */.Z)(rippleRef, touchRippleRef);
  var _useIsFocusVisible = (0,useIsFocusVisible/* default */.Z)(),
    isFocusVisibleRef = _useIsFocusVisible.isFocusVisibleRef,
    handleFocusVisible = _useIsFocusVisible.onFocus,
    handleBlurVisible = _useIsFocusVisible.onBlur,
    focusVisibleRef = _useIsFocusVisible.ref;
  var _React$useState = react.useState(false),
    _React$useState2 = (0,slicedToArray/* default */.Z)(_React$useState, 2),
    focusVisible = _React$useState2[0],
    setFocusVisible = _React$useState2[1];
  if (disabled && focusVisible) {
    setFocusVisible(false);
  }
  react.useImperativeHandle(action, function () {
    return {
      focusVisible: function focusVisible() {
        setFocusVisible(true);
        buttonRef.current.focus();
      }
    };
  }, []);
  var _React$useState3 = react.useState(false),
    _React$useState4 = (0,slicedToArray/* default */.Z)(_React$useState3, 2),
    mountedState = _React$useState4[0],
    setMountedState = _React$useState4[1];
  react.useEffect(function () {
    setMountedState(true);
  }, []);
  var enableTouchRipple = mountedState && !disableRipple && !disabled;
  react.useEffect(function () {
    if (focusVisible && focusRipple && !disableRipple && mountedState) {
      rippleRef.current.pulsate();
    }
  }, [disableRipple, focusRipple, focusVisible, mountedState]);
  function useRippleHandler(rippleAction, eventCallback) {
    var skipRippleAction = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : disableTouchRipple;
    return (0,useEventCallback/* default */.Z)(function (event) {
      if (eventCallback) {
        eventCallback(event);
      }
      var ignore = skipRippleAction;
      if (!ignore && rippleRef.current) {
        rippleRef.current[rippleAction](event);
      }
      return true;
    });
  }
  var handleMouseDown = useRippleHandler('start', onMouseDown);
  var handleContextMenu = useRippleHandler('stop', onContextMenu);
  var handleDragLeave = useRippleHandler('stop', onDragLeave);
  var handleMouseUp = useRippleHandler('stop', onMouseUp);
  var handleMouseLeave = useRippleHandler('stop', function (event) {
    if (focusVisible) {
      event.preventDefault();
    }
    if (onMouseLeave) {
      onMouseLeave(event);
    }
  });
  var handleTouchStart = useRippleHandler('start', onTouchStart);
  var handleTouchEnd = useRippleHandler('stop', onTouchEnd);
  var handleTouchMove = useRippleHandler('stop', onTouchMove);
  var handleBlur = useRippleHandler('stop', function (event) {
    handleBlurVisible(event);
    if (isFocusVisibleRef.current === false) {
      setFocusVisible(false);
    }
    if (onBlur) {
      onBlur(event);
    }
  }, false);
  var handleFocus = (0,useEventCallback/* default */.Z)(function (event) {
    // Fix for https://github.com/facebook/react/issues/7769
    if (!buttonRef.current) {
      buttonRef.current = event.currentTarget;
    }
    handleFocusVisible(event);
    if (isFocusVisibleRef.current === true) {
      setFocusVisible(true);
      if (onFocusVisible) {
        onFocusVisible(event);
      }
    }
    if (onFocus) {
      onFocus(event);
    }
  });
  var isNonNativeButton = function isNonNativeButton() {
    var button = buttonRef.current;
    return component && component !== 'button' && !(button.tagName === 'A' && button.href);
  };

  /**
   * IE11 shim for https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/repeat
   */
  var keydownRef = react.useRef(false);
  var handleKeyDown = (0,useEventCallback/* default */.Z)(function (event) {
    // Check if key is already down to avoid repeats being counted as multiple activations
    if (focusRipple && !keydownRef.current && focusVisible && rippleRef.current && event.key === ' ') {
      keydownRef.current = true;
      rippleRef.current.stop(event, function () {
        rippleRef.current.start(event);
      });
    }
    if (event.target === event.currentTarget && isNonNativeButton() && event.key === ' ') {
      event.preventDefault();
    }
    if (onKeyDown) {
      onKeyDown(event);
    }

    // Keyboard accessibility for non interactive elements
    if (event.target === event.currentTarget && isNonNativeButton() && event.key === 'Enter' && !disabled) {
      event.preventDefault();
      if (onClick) {
        onClick(event);
      }
    }
  });
  var handleKeyUp = (0,useEventCallback/* default */.Z)(function (event) {
    // calling preventDefault in keyUp on a <button> will not dispatch a click event if Space is pressed
    // https://codesandbox.io/s/button-keyup-preventdefault-dn7f0
    if (focusRipple && event.key === ' ' && rippleRef.current && focusVisible && !event.defaultPrevented) {
      keydownRef.current = false;
      rippleRef.current.stop(event, function () {
        rippleRef.current.pulsate(event);
      });
    }
    if (onKeyUp) {
      onKeyUp(event);
    }

    // Keyboard accessibility for non interactive elements
    if (onClick && event.target === event.currentTarget && isNonNativeButton() && event.key === ' ' && !event.defaultPrevented) {
      onClick(event);
    }
  });
  var ComponentProp = component;
  if (ComponentProp === 'button' && (other.href || other.to)) {
    ComponentProp = LinkComponent;
  }
  var buttonProps = {};
  if (ComponentProp === 'button') {
    buttonProps.type = type === undefined ? 'button' : type;
    buttonProps.disabled = disabled;
  } else {
    if (!other.href && !other.to) {
      buttonProps.role = 'button';
    }
    if (disabled) {
      buttonProps['aria-disabled'] = disabled;
    }
  }
  var handleRef = (0,useForkRef/* default */.Z)(ref, focusVisibleRef, buttonRef);
  if (false) {}
  var ownerState = (0,esm_extends/* default */.Z)({}, props, {
    centerRipple: centerRipple,
    component: component,
    disabled: disabled,
    disableRipple: disableRipple,
    disableTouchRipple: disableTouchRipple,
    focusRipple: focusRipple,
    tabIndex: tabIndex,
    focusVisible: focusVisible
  });
  var classes = ButtonBase_useUtilityClasses(ownerState);
  return /*#__PURE__*/(0,jsx_runtime.jsxs)(ButtonBaseRoot, (0,esm_extends/* default */.Z)({
    as: ComponentProp,
    className: (0,clsx_m/* default */.Z)(classes.root, className),
    ownerState: ownerState,
    onBlur: handleBlur,
    onClick: onClick,
    onContextMenu: handleContextMenu,
    onFocus: handleFocus,
    onKeyDown: handleKeyDown,
    onKeyUp: handleKeyUp,
    onMouseDown: handleMouseDown,
    onMouseLeave: handleMouseLeave,
    onMouseUp: handleMouseUp,
    onDragLeave: handleDragLeave,
    onTouchEnd: handleTouchEnd,
    onTouchMove: handleTouchMove,
    onTouchStart: handleTouchStart,
    ref: handleRef,
    tabIndex: disabled ? -1 : tabIndex,
    type: type
  }, buttonProps, other, {
    children: [children, enableTouchRipple ? /*#__PURE__*/
    /* TouchRipple is only needed client-side, x2 boost on the server. */
    (0,jsx_runtime.jsx)(ButtonBase_TouchRipple, (0,esm_extends/* default */.Z)({
      ref: handleRippleRef,
      center: centerRipple
    }, TouchRippleProps)) : null]
  }));
});
 false ? 0 : void 0;
/* harmony default export */ var ButtonBase_ButtonBase = (ButtonBase);
;// CONCATENATED MODULE: ./node_modules/@mui/material/IconButton/iconButtonClasses.js


function getIconButtonUtilityClass(slot) {
  return (0,generateUtilityClass_generateUtilityClass/* default */.Z)('MuiIconButton', slot);
}
var iconButtonClasses = (0,generateUtilityClasses/* default */.Z)('MuiIconButton', ['root', 'disabled', 'colorInherit', 'colorPrimary', 'colorSecondary', 'colorError', 'colorInfo', 'colorSuccess', 'colorWarning', 'edgeStart', 'edgeEnd', 'sizeSmall', 'sizeMedium', 'sizeLarge']);
/* harmony default export */ var IconButton_iconButtonClasses = (iconButtonClasses);
;// CONCATENATED MODULE: ./node_modules/@mui/material/IconButton/IconButton.js



var IconButton_excluded = ["edge", "children", "className", "color", "disabled", "disableFocusRipple", "size"];












var IconButton_useUtilityClasses = function useUtilityClasses(ownerState) {
  var classes = ownerState.classes,
    disabled = ownerState.disabled,
    color = ownerState.color,
    edge = ownerState.edge,
    size = ownerState.size;
  var slots = {
    root: ['root', disabled && 'disabled', color !== 'default' && "color".concat((0,utils_capitalize/* default */.Z)(color)), edge && "edge".concat((0,utils_capitalize/* default */.Z)(edge)), "size".concat((0,utils_capitalize/* default */.Z)(size))]
  };
  return (0,composeClasses/* default */.Z)(slots, getIconButtonUtilityClass, classes);
};
var IconButtonRoot = (0,styles_styled/* default */.ZP)(ButtonBase_ButtonBase, {
  name: 'MuiIconButton',
  slot: 'Root',
  overridesResolver: function overridesResolver(props, styles) {
    var ownerState = props.ownerState;
    return [styles.root, ownerState.color !== 'default' && styles["color".concat((0,utils_capitalize/* default */.Z)(ownerState.color))], ownerState.edge && styles["edge".concat((0,utils_capitalize/* default */.Z)(ownerState.edge))], styles["size".concat((0,utils_capitalize/* default */.Z)(ownerState.size))]];
  }
})(function (_ref) {
  var theme = _ref.theme,
    ownerState = _ref.ownerState;
  return (0,esm_extends/* default */.Z)({
    textAlign: 'center',
    flex: '0 0 auto',
    fontSize: theme.typography.pxToRem(24),
    padding: 8,
    borderRadius: '50%',
    overflow: 'visible',
    // Explicitly set the default value to solve a bug on IE11.
    color: (theme.vars || theme).palette.action.active,
    transition: theme.transitions.create('background-color', {
      duration: theme.transitions.duration.shortest
    })
  }, !ownerState.disableRipple && {
    '&:hover': {
      backgroundColor: theme.vars ? "rgba(".concat(theme.vars.palette.action.activeChannel, " / ").concat(theme.vars.palette.action.hoverOpacity, ")") : (0,colorManipulator/* alpha */.Fq)(theme.palette.action.active, theme.palette.action.hoverOpacity),
      // Reset on touch devices, it doesn't add specificity
      '@media (hover: none)': {
        backgroundColor: 'transparent'
      }
    }
  }, ownerState.edge === 'start' && {
    marginLeft: ownerState.size === 'small' ? -3 : -12
  }, ownerState.edge === 'end' && {
    marginRight: ownerState.size === 'small' ? -3 : -12
  });
}, function (_ref2) {
  var theme = _ref2.theme,
    ownerState = _ref2.ownerState;
  var _palette;
  var palette = (_palette = (theme.vars || theme).palette) == null ? void 0 : _palette[ownerState.color];
  return (0,esm_extends/* default */.Z)({}, ownerState.color === 'inherit' && {
    color: 'inherit'
  }, ownerState.color !== 'inherit' && ownerState.color !== 'default' && (0,esm_extends/* default */.Z)({
    color: palette == null ? void 0 : palette.main
  }, !ownerState.disableRipple && {
    '&:hover': (0,esm_extends/* default */.Z)({}, palette && {
      backgroundColor: theme.vars ? "rgba(".concat(palette.mainChannel, " / ").concat(theme.vars.palette.action.hoverOpacity, ")") : (0,colorManipulator/* alpha */.Fq)(palette.main, theme.palette.action.hoverOpacity)
    }, {
      // Reset on touch devices, it doesn't add specificity
      '@media (hover: none)': {
        backgroundColor: 'transparent'
      }
    })
  }), ownerState.size === 'small' && {
    padding: 5,
    fontSize: theme.typography.pxToRem(18)
  }, ownerState.size === 'large' && {
    padding: 12,
    fontSize: theme.typography.pxToRem(28)
  }, (0,esm_defineProperty/* default */.Z)({}, "&.".concat(IconButton_iconButtonClasses.disabled), {
    backgroundColor: 'transparent',
    color: (theme.vars || theme).palette.action.disabled
  }));
});

/**
 * Refer to the [Icons](/material-ui/icons/) section of the documentation
 * regarding the available icon options.
 */
var IconButton = /*#__PURE__*/react.forwardRef(function IconButton(inProps, ref) {
  var props = (0,styles_useThemeProps/* default */.Z)({
    props: inProps,
    name: 'MuiIconButton'
  });
  var _props$edge = props.edge,
    edge = _props$edge === void 0 ? false : _props$edge,
    children = props.children,
    className = props.className,
    _props$color = props.color,
    color = _props$color === void 0 ? 'default' : _props$color,
    _props$disabled = props.disabled,
    disabled = _props$disabled === void 0 ? false : _props$disabled,
    _props$disableFocusRi = props.disableFocusRipple,
    disableFocusRipple = _props$disableFocusRi === void 0 ? false : _props$disableFocusRi,
    _props$size = props.size,
    size = _props$size === void 0 ? 'medium' : _props$size,
    other = (0,objectWithoutPropertiesLoose/* default */.Z)(props, IconButton_excluded);
  var ownerState = (0,esm_extends/* default */.Z)({}, props, {
    edge: edge,
    color: color,
    disabled: disabled,
    disableFocusRipple: disableFocusRipple,
    size: size
  });
  var classes = IconButton_useUtilityClasses(ownerState);
  return /*#__PURE__*/(0,jsx_runtime.jsx)(IconButtonRoot, (0,esm_extends/* default */.Z)({
    className: (0,clsx_m/* default */.Z)(classes.root, className),
    centerRipple: true,
    focusRipple: !disableFocusRipple,
    disabled: disabled,
    ref: ref,
    ownerState: ownerState
  }, other, {
    children: children
  }));
});
 false ? 0 : void 0;
/* harmony default export */ var IconButton_IconButton = (IconButton);
;// CONCATENATED MODULE: ./node_modules/@mui/icons-material/esm/ArrowBackOutlined.js


/* harmony default export */ var ArrowBackOutlined = ((0,createSvgIcon/* default */.Z)( /*#__PURE__*/(0,jsx_runtime.jsx)("path", {
  d: "M20 11H7.83l5.59-5.59L12 4l-8 8 8 8 1.41-1.41L7.83 13H20v-2z"
}), 'ArrowBackOutlined'));
;// CONCATENATED MODULE: ./src/components/backArrow.js
var BackArrow=function BackArrow(props){return/*#__PURE__*/(0,jsx_runtime.jsx)(IconButton_IconButton,_objectSpread2(_objectSpread2({},props),{},{color:"inherit",onClick:props.onClick,children:/*#__PURE__*/(0,jsx_runtime.jsx)(ArrowBackOutlined,{sx:{fontSize:'inherit'}})}));};/* harmony default export */ var backArrow = (BackArrow);
;// CONCATENATED MODULE: ./node_modules/@mui/material/Typography/typographyClasses.js


function getTypographyUtilityClass(slot) {
  return (0,generateUtilityClass_generateUtilityClass/* default */.Z)('MuiTypography', slot);
}
var typographyClasses = (0,generateUtilityClasses/* default */.Z)('MuiTypography', ['root', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'subtitle1', 'subtitle2', 'body1', 'body2', 'inherit', 'button', 'caption', 'overline', 'alignLeft', 'alignRight', 'alignCenter', 'alignJustify', 'noWrap', 'gutterBottom', 'paragraph']);
/* harmony default export */ var Typography_typographyClasses = ((/* unused pure expression or super */ null && (typographyClasses)));
;// CONCATENATED MODULE: ./node_modules/@mui/material/Typography/Typography.js


var Typography_excluded = ["align", "className", "component", "gutterBottom", "noWrap", "paragraph", "variant", "variantMapping"];










var Typography_useUtilityClasses = function useUtilityClasses(ownerState) {
  var align = ownerState.align,
    gutterBottom = ownerState.gutterBottom,
    noWrap = ownerState.noWrap,
    paragraph = ownerState.paragraph,
    variant = ownerState.variant,
    classes = ownerState.classes;
  var slots = {
    root: ['root', variant, ownerState.align !== 'inherit' && "align".concat((0,utils_capitalize/* default */.Z)(align)), gutterBottom && 'gutterBottom', noWrap && 'noWrap', paragraph && 'paragraph']
  };
  return (0,composeClasses/* default */.Z)(slots, getTypographyUtilityClass, classes);
};
var TypographyRoot = (0,styles_styled/* default */.ZP)('span', {
  name: 'MuiTypography',
  slot: 'Root',
  overridesResolver: function overridesResolver(props, styles) {
    var ownerState = props.ownerState;
    return [styles.root, ownerState.variant && styles[ownerState.variant], ownerState.align !== 'inherit' && styles["align".concat((0,utils_capitalize/* default */.Z)(ownerState.align))], ownerState.noWrap && styles.noWrap, ownerState.gutterBottom && styles.gutterBottom, ownerState.paragraph && styles.paragraph];
  }
})(function (_ref) {
  var theme = _ref.theme,
    ownerState = _ref.ownerState;
  return (0,esm_extends/* default */.Z)({
    margin: 0
  }, ownerState.variant && theme.typography[ownerState.variant], ownerState.align !== 'inherit' && {
    textAlign: ownerState.align
  }, ownerState.noWrap && {
    overflow: 'hidden',
    textOverflow: 'ellipsis',
    whiteSpace: 'nowrap'
  }, ownerState.gutterBottom && {
    marginBottom: '0.35em'
  }, ownerState.paragraph && {
    marginBottom: 16
  });
});
var defaultVariantMapping = {
  h1: 'h1',
  h2: 'h2',
  h3: 'h3',
  h4: 'h4',
  h5: 'h5',
  h6: 'h6',
  subtitle1: 'h6',
  subtitle2: 'h6',
  body1: 'p',
  body2: 'p',
  inherit: 'p'
};

// TODO v6: deprecate these color values in v5.x and remove the transformation in v6
var colorTransformations = {
  primary: 'primary.main',
  textPrimary: 'text.primary',
  secondary: 'secondary.main',
  textSecondary: 'text.secondary',
  error: 'error.main'
};
var transformDeprecatedColors = function transformDeprecatedColors(color) {
  return colorTransformations[color] || color;
};
var Typography = /*#__PURE__*/react.forwardRef(function Typography(inProps, ref) {
  var themeProps = (0,styles_useThemeProps/* default */.Z)({
    props: inProps,
    name: 'MuiTypography'
  });
  var color = transformDeprecatedColors(themeProps.color);
  var props = extendSxProp((0,esm_extends/* default */.Z)({}, themeProps, {
    color: color
  }));
  var _props$align = props.align,
    align = _props$align === void 0 ? 'inherit' : _props$align,
    className = props.className,
    component = props.component,
    _props$gutterBottom = props.gutterBottom,
    gutterBottom = _props$gutterBottom === void 0 ? false : _props$gutterBottom,
    _props$noWrap = props.noWrap,
    noWrap = _props$noWrap === void 0 ? false : _props$noWrap,
    _props$paragraph = props.paragraph,
    paragraph = _props$paragraph === void 0 ? false : _props$paragraph,
    _props$variant = props.variant,
    variant = _props$variant === void 0 ? 'body1' : _props$variant,
    _props$variantMapping = props.variantMapping,
    variantMapping = _props$variantMapping === void 0 ? defaultVariantMapping : _props$variantMapping,
    other = (0,objectWithoutPropertiesLoose/* default */.Z)(props, Typography_excluded);
  var ownerState = (0,esm_extends/* default */.Z)({}, props, {
    align: align,
    color: color,
    className: className,
    component: component,
    gutterBottom: gutterBottom,
    noWrap: noWrap,
    paragraph: paragraph,
    variant: variant,
    variantMapping: variantMapping
  });
  var Component = component || (paragraph ? 'p' : variantMapping[variant] || defaultVariantMapping[variant]) || 'span';
  var classes = Typography_useUtilityClasses(ownerState);
  return /*#__PURE__*/(0,jsx_runtime.jsx)(TypographyRoot, (0,esm_extends/* default */.Z)({
    as: Component,
    ref: ref,
    ownerState: ownerState,
    className: (0,clsx_m/* default */.Z)(classes.root, className)
  }, other));
});
 false ? 0 : void 0;
/* harmony default export */ var Typography_Typography = (Typography);
;// CONCATENATED MODULE: ./src/components/coins.js
var Coins=function Coins(props){var _useContext=(0,react.useContext)(RootStoreContext),_useContext2=(0,slicedToArray/* default */.Z)(_useContext,1),root=_useContext2[0];var textStyle={fontWeight:800,color:'gold'};return/*#__PURE__*/(0,jsx_runtime.jsxs)(Box_Box,{children:[/*#__PURE__*/(0,jsx_runtime.jsx)(Typography_Typography,{component:"span",sx:_objectSpread2(_objectSpread2({},textStyle),props.sx),children:"o"}),/*#__PURE__*/(0,jsx_runtime.jsx)(Typography_Typography,{component:"span",sx:textStyle,children:root.gameStore.purseBalance})]});};/* harmony default export */ var coins = (observer(Coins));
;// CONCATENATED MODULE: ./node_modules/react-transition-group/esm/config.js
/* harmony default export */ var config = ({
  disabled: false
});
;// CONCATENATED MODULE: ./node_modules/react-transition-group/esm/utils/reflow.js
var forceReflow = function forceReflow(node) {
  return node.scrollTop;
};
;// CONCATENATED MODULE: ./node_modules/react-transition-group/esm/Transition.js









var UNMOUNTED = 'unmounted';
var EXITED = 'exited';
var ENTERING = 'entering';
var ENTERED = 'entered';
var EXITING = 'exiting';
/**
 * The Transition component lets you describe a transition from one component
 * state to another _over time_ with a simple declarative API. Most commonly
 * it's used to animate the mounting and unmounting of a component, but can also
 * be used to describe in-place transition states as well.
 *
 * ---
 *
 * **Note**: `Transition` is a platform-agnostic base component. If you're using
 * transitions in CSS, you'll probably want to use
 * [`CSSTransition`](https://reactcommunity.org/react-transition-group/css-transition)
 * instead. It inherits all the features of `Transition`, but contains
 * additional features necessary to play nice with CSS transitions (hence the
 * name of the component).
 *
 * ---
 *
 * By default the `Transition` component does not alter the behavior of the
 * component it renders, it only tracks "enter" and "exit" states for the
 * components. It's up to you to give meaning and effect to those states. For
 * example we can add styles to a component when it enters or exits:
 *
 * ```jsx
 * import { Transition } from 'react-transition-group';
 *
 * const duration = 300;
 *
 * const defaultStyle = {
 *   transition: `opacity ${duration}ms ease-in-out`,
 *   opacity: 0,
 * }
 *
 * const transitionStyles = {
 *   entering: { opacity: 1 },
 *   entered:  { opacity: 1 },
 *   exiting:  { opacity: 0 },
 *   exited:  { opacity: 0 },
 * };
 *
 * const Fade = ({ in: inProp }) => (
 *   <Transition in={inProp} timeout={duration}>
 *     {state => (
 *       <div style={{
 *         ...defaultStyle,
 *         ...transitionStyles[state]
 *       }}>
 *         I'm a fade Transition!
 *       </div>
 *     )}
 *   </Transition>
 * );
 * ```
 *
 * There are 4 main states a Transition can be in:
 *  - `'entering'`
 *  - `'entered'`
 *  - `'exiting'`
 *  - `'exited'`
 *
 * Transition state is toggled via the `in` prop. When `true` the component
 * begins the "Enter" stage. During this stage, the component will shift from
 * its current transition state, to `'entering'` for the duration of the
 * transition and then to the `'entered'` stage once it's complete. Let's take
 * the following example (we'll use the
 * [useState](https://reactjs.org/docs/hooks-reference.html#usestate) hook):
 *
 * ```jsx
 * function App() {
 *   const [inProp, setInProp] = useState(false);
 *   return (
 *     <div>
 *       <Transition in={inProp} timeout={500}>
 *         {state => (
 *           // ...
 *         )}
 *       </Transition>
 *       <button onClick={() => setInProp(true)}>
 *         Click to Enter
 *       </button>
 *     </div>
 *   );
 * }
 * ```
 *
 * When the button is clicked the component will shift to the `'entering'` state
 * and stay there for 500ms (the value of `timeout`) before it finally switches
 * to `'entered'`.
 *
 * When `in` is `false` the same thing happens except the state moves from
 * `'exiting'` to `'exited'`.
 */

var Transition = /*#__PURE__*/function (_React$Component) {
  inheritsLoose_inheritsLoose(Transition, _React$Component);
  function Transition(props, context) {
    var _this;
    _this = _React$Component.call(this, props, context) || this;
    var parentGroup = context; // In the context of a TransitionGroup all enters are really appears

    var appear = parentGroup && !parentGroup.isMounting ? props.enter : props.appear;
    var initialStatus;
    _this.appearStatus = null;
    if (props.in) {
      if (appear) {
        initialStatus = EXITED;
        _this.appearStatus = ENTERING;
      } else {
        initialStatus = ENTERED;
      }
    } else {
      if (props.unmountOnExit || props.mountOnEnter) {
        initialStatus = UNMOUNTED;
      } else {
        initialStatus = EXITED;
      }
    }
    _this.state = {
      status: initialStatus
    };
    _this.nextCallback = null;
    return _this;
  }
  Transition.getDerivedStateFromProps = function getDerivedStateFromProps(_ref, prevState) {
    var nextIn = _ref.in;
    if (nextIn && prevState.status === UNMOUNTED) {
      return {
        status: EXITED
      };
    }
    return null;
  } // getSnapshotBeforeUpdate(prevProps) {
  //   let nextStatus = null
  //   if (prevProps !== this.props) {
  //     const { status } = this.state
  //     if (this.props.in) {
  //       if (status !== ENTERING && status !== ENTERED) {
  //         nextStatus = ENTERING
  //       }
  //     } else {
  //       if (status === ENTERING || status === ENTERED) {
  //         nextStatus = EXITING
  //       }
  //     }
  //   }
  //   return { nextStatus }
  // }
  ;

  var _proto = Transition.prototype;
  _proto.componentDidMount = function componentDidMount() {
    this.updateStatus(true, this.appearStatus);
  };
  _proto.componentDidUpdate = function componentDidUpdate(prevProps) {
    var nextStatus = null;
    if (prevProps !== this.props) {
      var status = this.state.status;
      if (this.props.in) {
        if (status !== ENTERING && status !== ENTERED) {
          nextStatus = ENTERING;
        }
      } else {
        if (status === ENTERING || status === ENTERED) {
          nextStatus = EXITING;
        }
      }
    }
    this.updateStatus(false, nextStatus);
  };
  _proto.componentWillUnmount = function componentWillUnmount() {
    this.cancelNextCallback();
  };
  _proto.getTimeouts = function getTimeouts() {
    var timeout = this.props.timeout;
    var exit, enter, appear;
    exit = enter = appear = timeout;
    if (timeout != null && typeof timeout !== 'number') {
      exit = timeout.exit;
      enter = timeout.enter; // TODO: remove fallback for next major

      appear = timeout.appear !== undefined ? timeout.appear : enter;
    }
    return {
      exit: exit,
      enter: enter,
      appear: appear
    };
  };
  _proto.updateStatus = function updateStatus(mounting, nextStatus) {
    if (mounting === void 0) {
      mounting = false;
    }
    if (nextStatus !== null) {
      // nextStatus will always be ENTERING or EXITING.
      this.cancelNextCallback();
      if (nextStatus === ENTERING) {
        if (this.props.unmountOnExit || this.props.mountOnEnter) {
          var node = this.props.nodeRef ? this.props.nodeRef.current : react_dom.findDOMNode(this); // https://github.com/reactjs/react-transition-group/pull/749
          // With unmountOnExit or mountOnEnter, the enter animation should happen at the transition between `exited` and `entering`.
          // To make the animation happen,  we have to separate each rendering and avoid being processed as batched.

          if (node) forceReflow(node);
        }
        this.performEnter(mounting);
      } else {
        this.performExit();
      }
    } else if (this.props.unmountOnExit && this.state.status === EXITED) {
      this.setState({
        status: UNMOUNTED
      });
    }
  };
  _proto.performEnter = function performEnter(mounting) {
    var _this2 = this;
    var enter = this.props.enter;
    var appearing = this.context ? this.context.isMounting : mounting;
    var _ref2 = this.props.nodeRef ? [appearing] : [react_dom.findDOMNode(this), appearing],
      maybeNode = _ref2[0],
      maybeAppearing = _ref2[1];
    var timeouts = this.getTimeouts();
    var enterTimeout = appearing ? timeouts.appear : timeouts.enter; // no enter animation skip right to ENTERED
    // if we are mounting and running this it means appear _must_ be set

    if (!mounting && !enter || config.disabled) {
      this.safeSetState({
        status: ENTERED
      }, function () {
        _this2.props.onEntered(maybeNode);
      });
      return;
    }
    this.props.onEnter(maybeNode, maybeAppearing);
    this.safeSetState({
      status: ENTERING
    }, function () {
      _this2.props.onEntering(maybeNode, maybeAppearing);
      _this2.onTransitionEnd(enterTimeout, function () {
        _this2.safeSetState({
          status: ENTERED
        }, function () {
          _this2.props.onEntered(maybeNode, maybeAppearing);
        });
      });
    });
  };
  _proto.performExit = function performExit() {
    var _this3 = this;
    var exit = this.props.exit;
    var timeouts = this.getTimeouts();
    var maybeNode = this.props.nodeRef ? undefined : react_dom.findDOMNode(this); // no exit animation skip right to EXITED

    if (!exit || config.disabled) {
      this.safeSetState({
        status: EXITED
      }, function () {
        _this3.props.onExited(maybeNode);
      });
      return;
    }
    this.props.onExit(maybeNode);
    this.safeSetState({
      status: EXITING
    }, function () {
      _this3.props.onExiting(maybeNode);
      _this3.onTransitionEnd(timeouts.exit, function () {
        _this3.safeSetState({
          status: EXITED
        }, function () {
          _this3.props.onExited(maybeNode);
        });
      });
    });
  };
  _proto.cancelNextCallback = function cancelNextCallback() {
    if (this.nextCallback !== null) {
      this.nextCallback.cancel();
      this.nextCallback = null;
    }
  };
  _proto.safeSetState = function safeSetState(nextState, callback) {
    // This shouldn't be necessary, but there are weird race conditions with
    // setState callbacks and unmounting in testing, so always make sure that
    // we can cancel any pending setState callbacks after we unmount.
    callback = this.setNextCallback(callback);
    this.setState(nextState, callback);
  };
  _proto.setNextCallback = function setNextCallback(callback) {
    var _this4 = this;
    var active = true;
    this.nextCallback = function (event) {
      if (active) {
        active = false;
        _this4.nextCallback = null;
        callback(event);
      }
    };
    this.nextCallback.cancel = function () {
      active = false;
    };
    return this.nextCallback;
  };
  _proto.onTransitionEnd = function onTransitionEnd(timeout, handler) {
    this.setNextCallback(handler);
    var node = this.props.nodeRef ? this.props.nodeRef.current : react_dom.findDOMNode(this);
    var doesNotHaveTimeoutOrListener = timeout == null && !this.props.addEndListener;
    if (!node || doesNotHaveTimeoutOrListener) {
      setTimeout(this.nextCallback, 0);
      return;
    }
    if (this.props.addEndListener) {
      var _ref3 = this.props.nodeRef ? [this.nextCallback] : [node, this.nextCallback],
        maybeNode = _ref3[0],
        maybeNextCallback = _ref3[1];
      this.props.addEndListener(maybeNode, maybeNextCallback);
    }
    if (timeout != null) {
      setTimeout(this.nextCallback, timeout);
    }
  };
  _proto.render = function render() {
    var status = this.state.status;
    if (status === UNMOUNTED) {
      return null;
    }
    var _this$props = this.props,
      children = _this$props.children,
      _in = _this$props.in,
      _mountOnEnter = _this$props.mountOnEnter,
      _unmountOnExit = _this$props.unmountOnExit,
      _appear = _this$props.appear,
      _enter = _this$props.enter,
      _exit = _this$props.exit,
      _timeout = _this$props.timeout,
      _addEndListener = _this$props.addEndListener,
      _onEnter = _this$props.onEnter,
      _onEntering = _this$props.onEntering,
      _onEntered = _this$props.onEntered,
      _onExit = _this$props.onExit,
      _onExiting = _this$props.onExiting,
      _onExited = _this$props.onExited,
      _nodeRef = _this$props.nodeRef,
      childProps = (0,objectWithoutPropertiesLoose/* default */.Z)(_this$props, ["children", "in", "mountOnEnter", "unmountOnExit", "appear", "enter", "exit", "timeout", "addEndListener", "onEnter", "onEntering", "onEntered", "onExit", "onExiting", "onExited", "nodeRef"]);
    return /*#__PURE__*/(
      // allows for nested Transitions
      react.createElement(TransitionGroupContext.Provider, {
        value: null
      }, typeof children === 'function' ? children(status, childProps) : react.cloneElement(react.Children.only(children), childProps))
    );
  };
  return Transition;
}(react.Component);
Transition.contextType = TransitionGroupContext;
Transition.propTypes =  false ? 0 : {}; // Name the function so it is clearer in the documentation

function Transition_noop() {}
Transition.defaultProps = {
  in: false,
  mountOnEnter: false,
  unmountOnExit: false,
  appear: false,
  enter: true,
  exit: true,
  onEnter: Transition_noop,
  onEntering: Transition_noop,
  onEntered: Transition_noop,
  onExit: Transition_noop,
  onExiting: Transition_noop,
  onExited: Transition_noop
};
Transition.UNMOUNTED = UNMOUNTED;
Transition.EXITED = EXITED;
Transition.ENTERING = ENTERING;
Transition.ENTERED = ENTERED;
Transition.EXITING = EXITING;
/* harmony default export */ var esm_Transition = (Transition);
;// CONCATENATED MODULE: ./node_modules/@mui/material/styles/useTheme.js



function useTheme_useTheme() {
  var theme = (0,esm_useTheme/* default */.Z)(defaultTheme/* default */.Z);
  if (false) {}
  return theme;
}
;// CONCATENATED MODULE: ./node_modules/@mui/material/transitions/utils.js
var reflow = function reflow(node) {
  return node.scrollTop;
};
function getTransitionProps(props, options) {
  var _style$transitionDura, _style$transitionTimi;
  var timeout = props.timeout,
    easing = props.easing,
    _props$style = props.style,
    style = _props$style === void 0 ? {} : _props$style;
  return {
    duration: (_style$transitionDura = style.transitionDuration) != null ? _style$transitionDura : typeof timeout === 'number' ? timeout : timeout[options.mode] || 0,
    easing: (_style$transitionTimi = style.transitionTimingFunction) != null ? _style$transitionTimi : typeof easing === 'object' ? easing[options.mode] : easing,
    delay: style.transitionDelay
  };
}
;// CONCATENATED MODULE: ./node_modules/@mui/material/Fade/Fade.js


var Fade_excluded = ["addEndListener", "appear", "children", "easing", "in", "onEnter", "onEntered", "onEntering", "onExit", "onExited", "onExiting", "style", "timeout", "TransitionComponent"];








var styles = {
  entering: {
    opacity: 1
  },
  entered: {
    opacity: 1
  }
};

/**
 * The Fade transition is used by the [Modal](/material-ui/react-modal/) component.
 * It uses [react-transition-group](https://github.com/reactjs/react-transition-group) internally.
 */
var Fade = /*#__PURE__*/react.forwardRef(function Fade(props, ref) {
  var theme = useTheme_useTheme();
  var defaultTimeout = {
    enter: theme.transitions.duration.enteringScreen,
    exit: theme.transitions.duration.leavingScreen
  };
  var addEndListener = props.addEndListener,
    _props$appear = props.appear,
    appear = _props$appear === void 0 ? true : _props$appear,
    _children = props.children,
    easing = props.easing,
    inProp = props.in,
    onEnter = props.onEnter,
    onEntered = props.onEntered,
    onEntering = props.onEntering,
    onExit = props.onExit,
    onExited = props.onExited,
    onExiting = props.onExiting,
    style = props.style,
    _props$timeout = props.timeout,
    timeout = _props$timeout === void 0 ? defaultTimeout : _props$timeout,
    _props$TransitionComp = props.TransitionComponent,
    TransitionComponent = _props$TransitionComp === void 0 ? esm_Transition : _props$TransitionComp,
    other = (0,objectWithoutPropertiesLoose/* default */.Z)(props, Fade_excluded);
  var enableStrictModeCompat = true;
  var nodeRef = react.useRef(null);
  var handleRef = (0,useForkRef/* default */.Z)(nodeRef, _children.ref, ref);
  var normalizedTransitionCallback = function normalizedTransitionCallback(callback) {
    return function (maybeIsAppearing) {
      if (callback) {
        var node = nodeRef.current;

        // onEnterXxx and onExitXxx callbacks have a different arguments.length value.
        if (maybeIsAppearing === undefined) {
          callback(node);
        } else {
          callback(node, maybeIsAppearing);
        }
      }
    };
  };
  var handleEntering = normalizedTransitionCallback(onEntering);
  var handleEnter = normalizedTransitionCallback(function (node, isAppearing) {
    reflow(node); // So the animation always start from the start.

    var transitionProps = getTransitionProps({
      style: style,
      timeout: timeout,
      easing: easing
    }, {
      mode: 'enter'
    });
    node.style.webkitTransition = theme.transitions.create('opacity', transitionProps);
    node.style.transition = theme.transitions.create('opacity', transitionProps);
    if (onEnter) {
      onEnter(node, isAppearing);
    }
  });
  var handleEntered = normalizedTransitionCallback(onEntered);
  var handleExiting = normalizedTransitionCallback(onExiting);
  var handleExit = normalizedTransitionCallback(function (node) {
    var transitionProps = getTransitionProps({
      style: style,
      timeout: timeout,
      easing: easing
    }, {
      mode: 'exit'
    });
    node.style.webkitTransition = theme.transitions.create('opacity', transitionProps);
    node.style.transition = theme.transitions.create('opacity', transitionProps);
    if (onExit) {
      onExit(node);
    }
  });
  var handleExited = normalizedTransitionCallback(onExited);
  var handleAddEndListener = function handleAddEndListener(next) {
    if (addEndListener) {
      // Old call signature before `react-transition-group` implemented `nodeRef`
      addEndListener(nodeRef.current, next);
    }
  };
  return /*#__PURE__*/(0,jsx_runtime.jsx)(TransitionComponent, (0,esm_extends/* default */.Z)({
    appear: appear,
    in: inProp,
    nodeRef: enableStrictModeCompat ? nodeRef : undefined,
    onEnter: handleEnter,
    onEntered: handleEntered,
    onEntering: handleEntering,
    onExit: handleExit,
    onExited: handleExited,
    onExiting: handleExiting,
    addEndListener: handleAddEndListener,
    timeout: timeout
  }, other, {
    children: function children(state, childProps) {
      return /*#__PURE__*/react.cloneElement(_children, (0,esm_extends/* default */.Z)({
        style: (0,esm_extends/* default */.Z)({
          opacity: 0,
          visibility: state === 'exited' && !inProp ? 'hidden' : undefined
        }, styles[state], style, _children.props.style),
        ref: handleRef
      }, childProps));
    }
  }));
});
 false ? 0 : void 0;
/* harmony default export */ var Fade_Fade = (Fade);
;// CONCATENATED MODULE: ./src/components/helper/delayed.js
var Delayed=function Delayed(_ref){var children=_ref.children,_ref$waitBeforeShow=_ref.waitBeforeShow,waitBeforeShow=_ref$waitBeforeShow===void 0?500:_ref$waitBeforeShow;var _useState=(0,react.useState)(false),_useState2=(0,slicedToArray/* default */.Z)(_useState,2),isShown=_useState2[0],setIsShown=_useState2[1];(0,react.useEffect)(function(){var timer=setTimeout(function(){setIsShown(true);},waitBeforeShow);return function(){return clearTimeout(timer);};},[waitBeforeShow]);return isShown?children:null;};/* harmony default export */ var delayed = (Delayed);
;// CONCATENATED MODULE: ./src/components/helper/delayedFade.js
var DelayedFade=function DelayedFade(props){var _props$appearDelay=props.appearDelay,appearDelay=_props$appearDelay===void 0?250:_props$appearDelay,_props$fadeoutAfter=props.fadeoutAfter,fadeoutAfter=_props$fadeoutAfter===void 0?0:_props$fadeoutAfter,_props$fadeSpeed=props.fadeSpeed,fadeSpeed=_props$fadeSpeed===void 0?250:_props$fadeSpeed,_props$onEntering=props.onEntering,onEntering=_props$onEntering===void 0?function(){}:_props$onEntering,_props$onEntered=props.onEntered,onEntered=_props$onEntered===void 0?function(){}:_props$onEntered;var fadeInSpeed=fadeSpeed;var fadeoutSpeed=fadeoutAfter?fadeSpeed:0;if(lib_utils_isObject(fadeSpeed)){fadeInSpeed=fadeSpeed.in;fadeoutSpeed=fadeSpeed.out;}var _useState=(0,react.useState)(false),_useState2=(0,slicedToArray/* default */.Z)(_useState,2),show=_useState2[0],setShow=_useState2[1];(0,react.useEffect)(function(){var timer1,timer2;timer1=setTimeout(function(){setShow(true);},appearDelay);if(fadeoutAfter){timer2=setTimeout(function(){setShow(false);},appearDelay+fadeoutAfter);}return function(){if(timer1)clearTimeout(timer1);if(timer2)clearTimeout(timer2);};},[appearDelay,fadeoutAfter]);return/*#__PURE__*/(0,jsx_runtime.jsx)(delayed,{waitBeforeShow:appearDelay,children:/*#__PURE__*/(0,jsx_runtime.jsx)(Fade_Fade,{in:show,timeout:{enter:fadeInSpeed,exit:fadeoutSpeed},onEntering:onEntering,onEntered:onEntered,children:props.children})});};/* harmony default export */ var delayedFade = (DelayedFade);
;// CONCATENATED MODULE: ./src/components/puzzleSource.js
var PuzzleSource=function PuzzleSource(props){var _useContext=(0,react.useContext)(RootStoreContext),_useContext2=(0,slicedToArray/* default */.Z)(_useContext,1),root=_useContext2[0];var boxStyle={};var textStyle={fontSize:['1.1rem','1.2rem','1.3rem'],fontWeight:600};return/*#__PURE__*/(0,jsx_runtime.jsx)(delayedFade,{fadeoutAfter:2000,fadeSpeed:{in:500,out:1000},children:/*#__PURE__*/(0,jsx_runtime.jsx)(Box_Box,{id:"puzzleSource",sx:_objectSpread2(_objectSpread2({},boxStyle),props.sx),children:/*#__PURE__*/(0,jsx_runtime.jsx)(Typography_Typography,{sx:textStyle,children:root.puzzleStore.puzzleSource})})});};/* harmony default export */ var puzzleSource = (PuzzleSource);
;// CONCATENATED MODULE: ./src/components/topBar.js
var TopBar=function TopBar(props){var _useContext=(0,react.useContext)(RootStoreContext),_useContext2=(0,slicedToArray/* default */.Z)(_useContext,1),root=_useContext2[0];var navigate=dist_useNavigate();var location=dist_useLocation();var hasPreviousState=location.key!=='default';var outerBarStyle={position:'fixed',top:0,left:0,right:0,height:"".concat(root.gameStore.topBarHeight,"px"),width:'100%',bgcolor:'transparentBackground',//'background.paper',
zIndex:2};var innerBarStyle={position:'relative',width:'600px',maxWidth:'100vw',height:'100%',left:'50%',transform:'translateX(-50%)',display:'flex',flexDirection:'row',justifyContent:'space-between',alignItems:'center',px:1,fontSize:['1.5rem','1.7rem','1.9rem']};var fontSizeStyle={fontSize:['1.2rem','1.4rem','1.6rem']};return/*#__PURE__*/(0,jsx_runtime.jsx)(Box_Box,{id:"topBar",sx:outerBarStyle,children:/*#__PURE__*/(0,jsx_runtime.jsxs)(Box_Box,{sx:innerBarStyle,children:[/*#__PURE__*/(0,jsx_runtime.jsx)(backArrow,{sx:fontSizeStyle,disabled:location.pathname==='/'&&!root.gameStore.showTutorial,onClick:root.gameStore.showTutorial?function(){root.gameStore.setShowTutorial(false);navigate('/');}:function(){hasPreviousState?navigate(-1):navigate('/');}}),root.puzzle&&root.puzzle.state==='playing'&&/*#__PURE__*/(0,jsx_runtime.jsx)(puzzleSource,{sx:{width:'100%',textAlign:'center'}}),/*#__PURE__*/(0,jsx_runtime.jsxs)(Box_Box,{sx:{display:'flex',flexDirection:'row',alignItems:'center',gap:1},children:[/*#__PURE__*/(0,jsx_runtime.jsx)(coins,{sx:fontSizeStyle}),/*#__PURE__*/(0,jsx_runtime.jsx)(ShoppingCart,{color:"wordIncorrect",sx:fontSizeStyle})]})]})});};/* harmony default export */ var topBar = (observer(TopBar));
// EXTERNAL MODULE: ./node_modules/@mui/utils/esm/resolveProps.js
var resolveProps = __webpack_require__(5735);
;// CONCATENATED MODULE: ./node_modules/@mui/material/Button/buttonClasses.js


function getButtonUtilityClass(slot) {
  return (0,generateUtilityClass_generateUtilityClass/* default */.Z)('MuiButton', slot);
}
var buttonClasses = (0,generateUtilityClasses/* default */.Z)('MuiButton', ['root', 'text', 'textInherit', 'textPrimary', 'textSecondary', 'textSuccess', 'textError', 'textInfo', 'textWarning', 'outlined', 'outlinedInherit', 'outlinedPrimary', 'outlinedSecondary', 'outlinedSuccess', 'outlinedError', 'outlinedInfo', 'outlinedWarning', 'contained', 'containedInherit', 'containedPrimary', 'containedSecondary', 'containedSuccess', 'containedError', 'containedInfo', 'containedWarning', 'disableElevation', 'focusVisible', 'disabled', 'colorInherit', 'textSizeSmall', 'textSizeMedium', 'textSizeLarge', 'outlinedSizeSmall', 'outlinedSizeMedium', 'outlinedSizeLarge', 'containedSizeSmall', 'containedSizeMedium', 'containedSizeLarge', 'sizeMedium', 'sizeSmall', 'sizeLarge', 'fullWidth', 'startIcon', 'endIcon', 'iconSizeSmall', 'iconSizeMedium', 'iconSizeLarge']);
/* harmony default export */ var Button_buttonClasses = (buttonClasses);
;// CONCATENATED MODULE: ./node_modules/@mui/material/ButtonGroup/ButtonGroupContext.js

/**
 * @ignore - internal component.
 */
var ButtonGroupContext = /*#__PURE__*/react.createContext({});
if (false) {}
/* harmony default export */ var ButtonGroup_ButtonGroupContext = (ButtonGroupContext);
;// CONCATENATED MODULE: ./node_modules/@mui/material/Button/Button.js



var Button_excluded = ["children", "color", "component", "className", "disabled", "disableElevation", "disableFocusRipple", "endIcon", "focusVisibleClassName", "fullWidth", "size", "startIcon", "type", "variant"];














var Button_useUtilityClasses = function useUtilityClasses(ownerState) {
  var color = ownerState.color,
    disableElevation = ownerState.disableElevation,
    fullWidth = ownerState.fullWidth,
    size = ownerState.size,
    variant = ownerState.variant,
    classes = ownerState.classes;
  var slots = {
    root: ['root', variant, "".concat(variant).concat((0,utils_capitalize/* default */.Z)(color)), "size".concat((0,utils_capitalize/* default */.Z)(size)), "".concat(variant, "Size").concat((0,utils_capitalize/* default */.Z)(size)), color === 'inherit' && 'colorInherit', disableElevation && 'disableElevation', fullWidth && 'fullWidth'],
    label: ['label'],
    startIcon: ['startIcon', "iconSize".concat((0,utils_capitalize/* default */.Z)(size))],
    endIcon: ['endIcon', "iconSize".concat((0,utils_capitalize/* default */.Z)(size))]
  };
  var composedClasses = (0,composeClasses/* default */.Z)(slots, getButtonUtilityClass, classes);
  return (0,esm_extends/* default */.Z)({}, classes, composedClasses);
};
var commonIconStyles = function commonIconStyles(ownerState) {
  return (0,esm_extends/* default */.Z)({}, ownerState.size === 'small' && {
    '& > *:nth-of-type(1)': {
      fontSize: 18
    }
  }, ownerState.size === 'medium' && {
    '& > *:nth-of-type(1)': {
      fontSize: 20
    }
  }, ownerState.size === 'large' && {
    '& > *:nth-of-type(1)': {
      fontSize: 22
    }
  });
};
var ButtonRoot = (0,styles_styled/* default */.ZP)(ButtonBase_ButtonBase, {
  shouldForwardProp: function shouldForwardProp(prop) {
    return (0,styles_styled/* rootShouldForwardProp */.FO)(prop) || prop === 'classes';
  },
  name: 'MuiButton',
  slot: 'Root',
  overridesResolver: function overridesResolver(props, styles) {
    var ownerState = props.ownerState;
    return [styles.root, styles[ownerState.variant], styles["".concat(ownerState.variant).concat((0,utils_capitalize/* default */.Z)(ownerState.color))], styles["size".concat((0,utils_capitalize/* default */.Z)(ownerState.size))], styles["".concat(ownerState.variant, "Size").concat((0,utils_capitalize/* default */.Z)(ownerState.size))], ownerState.color === 'inherit' && styles.colorInherit, ownerState.disableElevation && styles.disableElevation, ownerState.fullWidth && styles.fullWidth];
  }
})(function (_ref) {
  var _extends2;
  var theme = _ref.theme,
    ownerState = _ref.ownerState;
  var _theme$palette$getCon, _theme$palette;
  return (0,esm_extends/* default */.Z)({}, theme.typography.button, (_extends2 = {
    minWidth: 64,
    padding: '6px 16px',
    borderRadius: (theme.vars || theme).shape.borderRadius,
    transition: theme.transitions.create(['background-color', 'box-shadow', 'border-color', 'color'], {
      duration: theme.transitions.duration.short
    }),
    '&:hover': (0,esm_extends/* default */.Z)({
      textDecoration: 'none',
      backgroundColor: theme.vars ? "rgba(".concat(theme.vars.palette.text.primaryChannel, " / ").concat(theme.vars.palette.action.hoverOpacity, ")") : (0,colorManipulator/* alpha */.Fq)(theme.palette.text.primary, theme.palette.action.hoverOpacity),
      // Reset on touch devices, it doesn't add specificity
      '@media (hover: none)': {
        backgroundColor: 'transparent'
      }
    }, ownerState.variant === 'text' && ownerState.color !== 'inherit' && {
      backgroundColor: theme.vars ? "rgba(".concat(theme.vars.palette[ownerState.color].mainChannel, " / ").concat(theme.vars.palette.action.hoverOpacity, ")") : (0,colorManipulator/* alpha */.Fq)(theme.palette[ownerState.color].main, theme.palette.action.hoverOpacity),
      // Reset on touch devices, it doesn't add specificity
      '@media (hover: none)': {
        backgroundColor: 'transparent'
      }
    }, ownerState.variant === 'outlined' && ownerState.color !== 'inherit' && {
      border: "1px solid ".concat((theme.vars || theme).palette[ownerState.color].main),
      backgroundColor: theme.vars ? "rgba(".concat(theme.vars.palette[ownerState.color].mainChannel, " / ").concat(theme.vars.palette.action.hoverOpacity, ")") : (0,colorManipulator/* alpha */.Fq)(theme.palette[ownerState.color].main, theme.palette.action.hoverOpacity),
      // Reset on touch devices, it doesn't add specificity
      '@media (hover: none)': {
        backgroundColor: 'transparent'
      }
    }, ownerState.variant === 'contained' && {
      backgroundColor: (theme.vars || theme).palette.grey.A100,
      boxShadow: (theme.vars || theme).shadows[4],
      // Reset on touch devices, it doesn't add specificity
      '@media (hover: none)': {
        boxShadow: (theme.vars || theme).shadows[2],
        backgroundColor: (theme.vars || theme).palette.grey[300]
      }
    }, ownerState.variant === 'contained' && ownerState.color !== 'inherit' && {
      backgroundColor: (theme.vars || theme).palette[ownerState.color].dark,
      // Reset on touch devices, it doesn't add specificity
      '@media (hover: none)': {
        backgroundColor: (theme.vars || theme).palette[ownerState.color].main
      }
    }),
    '&:active': (0,esm_extends/* default */.Z)({}, ownerState.variant === 'contained' && {
      boxShadow: (theme.vars || theme).shadows[8]
    })
  }, (0,esm_defineProperty/* default */.Z)(_extends2, "&.".concat(Button_buttonClasses.focusVisible), (0,esm_extends/* default */.Z)({}, ownerState.variant === 'contained' && {
    boxShadow: (theme.vars || theme).shadows[6]
  })), (0,esm_defineProperty/* default */.Z)(_extends2, "&.".concat(Button_buttonClasses.disabled), (0,esm_extends/* default */.Z)({
    color: (theme.vars || theme).palette.action.disabled
  }, ownerState.variant === 'outlined' && {
    border: "1px solid ".concat((theme.vars || theme).palette.action.disabledBackground)
  }, ownerState.variant === 'outlined' && ownerState.color === 'secondary' && {
    border: "1px solid ".concat((theme.vars || theme).palette.action.disabled)
  }, ownerState.variant === 'contained' && {
    color: (theme.vars || theme).palette.action.disabled,
    boxShadow: (theme.vars || theme).shadows[0],
    backgroundColor: (theme.vars || theme).palette.action.disabledBackground
  })), _extends2), ownerState.variant === 'text' && {
    padding: '6px 8px'
  }, ownerState.variant === 'text' && ownerState.color !== 'inherit' && {
    color: (theme.vars || theme).palette[ownerState.color].main
  }, ownerState.variant === 'outlined' && {
    padding: '5px 15px',
    border: '1px solid currentColor'
  }, ownerState.variant === 'outlined' && ownerState.color !== 'inherit' && {
    color: (theme.vars || theme).palette[ownerState.color].main,
    border: theme.vars ? "1px solid rgba(".concat(theme.vars.palette[ownerState.color].mainChannel, " / 0.5)") : "1px solid ".concat((0,colorManipulator/* alpha */.Fq)(theme.palette[ownerState.color].main, 0.5))
  }, ownerState.variant === 'contained' && {
    color: theme.vars ?
    // this is safe because grey does not change between default light/dark mode
    theme.vars.palette.text.primary : (_theme$palette$getCon = (_theme$palette = theme.palette).getContrastText) == null ? void 0 : _theme$palette$getCon.call(_theme$palette, theme.palette.grey[300]),
    backgroundColor: (theme.vars || theme).palette.grey[300],
    boxShadow: (theme.vars || theme).shadows[2]
  }, ownerState.variant === 'contained' && ownerState.color !== 'inherit' && {
    color: (theme.vars || theme).palette[ownerState.color].contrastText,
    backgroundColor: (theme.vars || theme).palette[ownerState.color].main
  }, ownerState.color === 'inherit' && {
    color: 'inherit',
    borderColor: 'currentColor'
  }, ownerState.size === 'small' && ownerState.variant === 'text' && {
    padding: '4px 5px',
    fontSize: theme.typography.pxToRem(13)
  }, ownerState.size === 'large' && ownerState.variant === 'text' && {
    padding: '8px 11px',
    fontSize: theme.typography.pxToRem(15)
  }, ownerState.size === 'small' && ownerState.variant === 'outlined' && {
    padding: '3px 9px',
    fontSize: theme.typography.pxToRem(13)
  }, ownerState.size === 'large' && ownerState.variant === 'outlined' && {
    padding: '7px 21px',
    fontSize: theme.typography.pxToRem(15)
  }, ownerState.size === 'small' && ownerState.variant === 'contained' && {
    padding: '4px 10px',
    fontSize: theme.typography.pxToRem(13)
  }, ownerState.size === 'large' && ownerState.variant === 'contained' && {
    padding: '8px 22px',
    fontSize: theme.typography.pxToRem(15)
  }, ownerState.fullWidth && {
    width: '100%'
  });
}, function (_ref2) {
  var _ref3;
  var ownerState = _ref2.ownerState;
  return ownerState.disableElevation && (_ref3 = {
    boxShadow: 'none',
    '&:hover': {
      boxShadow: 'none'
    }
  }, (0,esm_defineProperty/* default */.Z)(_ref3, "&.".concat(Button_buttonClasses.focusVisible), {
    boxShadow: 'none'
  }), (0,esm_defineProperty/* default */.Z)(_ref3, '&:active', {
    boxShadow: 'none'
  }), (0,esm_defineProperty/* default */.Z)(_ref3, "&.".concat(Button_buttonClasses.disabled), {
    boxShadow: 'none'
  }), _ref3);
});
var ButtonStartIcon = (0,styles_styled/* default */.ZP)('span', {
  name: 'MuiButton',
  slot: 'StartIcon',
  overridesResolver: function overridesResolver(props, styles) {
    var ownerState = props.ownerState;
    return [styles.startIcon, styles["iconSize".concat((0,utils_capitalize/* default */.Z)(ownerState.size))]];
  }
})(function (_ref4) {
  var ownerState = _ref4.ownerState;
  return (0,esm_extends/* default */.Z)({
    display: 'inherit',
    marginRight: 8,
    marginLeft: -4
  }, ownerState.size === 'small' && {
    marginLeft: -2
  }, commonIconStyles(ownerState));
});
var ButtonEndIcon = (0,styles_styled/* default */.ZP)('span', {
  name: 'MuiButton',
  slot: 'EndIcon',
  overridesResolver: function overridesResolver(props, styles) {
    var ownerState = props.ownerState;
    return [styles.endIcon, styles["iconSize".concat((0,utils_capitalize/* default */.Z)(ownerState.size))]];
  }
})(function (_ref5) {
  var ownerState = _ref5.ownerState;
  return (0,esm_extends/* default */.Z)({
    display: 'inherit',
    marginRight: -4,
    marginLeft: 8
  }, ownerState.size === 'small' && {
    marginRight: -2
  }, commonIconStyles(ownerState));
});
var Button = /*#__PURE__*/react.forwardRef(function Button(inProps, ref) {
  // props priority: `inProps` > `contextProps` > `themeDefaultProps`
  var contextProps = react.useContext(ButtonGroup_ButtonGroupContext);
  var resolvedProps = (0,resolveProps/* default */.Z)(contextProps, inProps);
  var props = (0,styles_useThemeProps/* default */.Z)({
    props: resolvedProps,
    name: 'MuiButton'
  });
  var children = props.children,
    _props$color = props.color,
    color = _props$color === void 0 ? 'primary' : _props$color,
    _props$component = props.component,
    component = _props$component === void 0 ? 'button' : _props$component,
    className = props.className,
    _props$disabled = props.disabled,
    disabled = _props$disabled === void 0 ? false : _props$disabled,
    _props$disableElevati = props.disableElevation,
    disableElevation = _props$disableElevati === void 0 ? false : _props$disableElevati,
    _props$disableFocusRi = props.disableFocusRipple,
    disableFocusRipple = _props$disableFocusRi === void 0 ? false : _props$disableFocusRi,
    endIconProp = props.endIcon,
    focusVisibleClassName = props.focusVisibleClassName,
    _props$fullWidth = props.fullWidth,
    fullWidth = _props$fullWidth === void 0 ? false : _props$fullWidth,
    _props$size = props.size,
    size = _props$size === void 0 ? 'medium' : _props$size,
    startIconProp = props.startIcon,
    type = props.type,
    _props$variant = props.variant,
    variant = _props$variant === void 0 ? 'text' : _props$variant,
    other = (0,objectWithoutPropertiesLoose/* default */.Z)(props, Button_excluded);
  var ownerState = (0,esm_extends/* default */.Z)({}, props, {
    color: color,
    component: component,
    disabled: disabled,
    disableElevation: disableElevation,
    disableFocusRipple: disableFocusRipple,
    fullWidth: fullWidth,
    size: size,
    type: type,
    variant: variant
  });
  var classes = Button_useUtilityClasses(ownerState);
  var startIcon = startIconProp && /*#__PURE__*/(0,jsx_runtime.jsx)(ButtonStartIcon, {
    className: classes.startIcon,
    ownerState: ownerState,
    children: startIconProp
  });
  var endIcon = endIconProp && /*#__PURE__*/(0,jsx_runtime.jsx)(ButtonEndIcon, {
    className: classes.endIcon,
    ownerState: ownerState,
    children: endIconProp
  });
  return /*#__PURE__*/(0,jsx_runtime.jsxs)(ButtonRoot, (0,esm_extends/* default */.Z)({
    ownerState: ownerState,
    className: (0,clsx_m/* default */.Z)(contextProps.className, classes.root, className),
    component: component,
    disabled: disabled,
    focusRipple: !disableFocusRipple,
    focusVisibleClassName: (0,clsx_m/* default */.Z)(classes.focusVisible, focusVisibleClassName),
    ref: ref,
    type: type
  }, other, {
    classes: classes,
    children: [startIcon, children, endIcon]
  }));
});
 false ? 0 : void 0;
/* harmony default export */ var Button_Button = (Button);
// EXTERNAL MODULE: ./node_modules/@mui/utils/esm/useId.js
var useId = __webpack_require__(6248);
// EXTERNAL MODULE: ./node_modules/@mui/utils/esm/formatMuiErrorMessage.js
var formatMuiErrorMessage = __webpack_require__(6189);
// EXTERNAL MODULE: ./node_modules/@mui/utils/esm/useForkRef.js
var esm_useForkRef = __webpack_require__(7563);
// EXTERNAL MODULE: ./node_modules/@mui/utils/esm/ownerWindow.js
var ownerWindow = __webpack_require__(7979);
// EXTERNAL MODULE: ./node_modules/@mui/utils/esm/debounce.js
var debounce = __webpack_require__(3981);
// EXTERNAL MODULE: ./node_modules/@mui/utils/esm/useEnhancedEffect.js
var esm_useEnhancedEffect = __webpack_require__(5721);
;// CONCATENATED MODULE: ./node_modules/@mui/base/TextareaAutosize/TextareaAutosize.js



var TextareaAutosize_excluded = ["onChange", "maxRows", "minRows", "style", "value"];






function getStyleValue(computedStyle, property) {
  return parseInt(computedStyle[property], 10) || 0;
}
var TextareaAutosize_styles = {
  shadow: {
    // Visibility needed to hide the extra text area on iPads
    visibility: 'hidden',
    // Remove from the content flow
    position: 'absolute',
    // Ignore the scrollbar width
    overflow: 'hidden',
    height: 0,
    top: 0,
    left: 0,
    // Create a new layer, increase the isolation of the computed values
    transform: 'translateZ(0)'
  }
};
function TextareaAutosize_isEmpty(obj) {
  return obj === undefined || obj === null || Object.keys(obj).length === 0;
}
var TextareaAutosize = /*#__PURE__*/react.forwardRef(function TextareaAutosize(props, ref) {
  var onChange = props.onChange,
    maxRows = props.maxRows,
    _props$minRows = props.minRows,
    minRows = _props$minRows === void 0 ? 1 : _props$minRows,
    style = props.style,
    value = props.value,
    other = (0,objectWithoutPropertiesLoose/* default */.Z)(props, TextareaAutosize_excluded);
  var _React$useRef = react.useRef(value != null),
    isControlled = _React$useRef.current;
  var inputRef = react.useRef(null);
  var handleRef = (0,esm_useForkRef/* default */.Z)(ref, inputRef);
  var shadowRef = react.useRef(null);
  var renders = react.useRef(0);
  var _React$useState = react.useState({}),
    _React$useState2 = (0,slicedToArray/* default */.Z)(_React$useState, 2),
    state = _React$useState2[0],
    setState = _React$useState2[1];
  var getUpdatedState = react.useCallback(function () {
    var input = inputRef.current;
    var containerWindow = (0,ownerWindow/* default */.Z)(input);
    var computedStyle = containerWindow.getComputedStyle(input);

    // If input's width is shrunk and it's not visible, don't sync height.
    if (computedStyle.width === '0px') {
      return {};
    }
    var inputShallow = shadowRef.current;
    inputShallow.style.width = computedStyle.width;
    inputShallow.value = input.value || props.placeholder || 'x';
    if (inputShallow.value.slice(-1) === '\n') {
      // Certain fonts which overflow the line height will cause the textarea
      // to report a different scrollHeight depending on whether the last line
      // is empty. Make it non-empty to avoid this issue.
      inputShallow.value += ' ';
    }
    var boxSizing = computedStyle['box-sizing'];
    var padding = getStyleValue(computedStyle, 'padding-bottom') + getStyleValue(computedStyle, 'padding-top');
    var border = getStyleValue(computedStyle, 'border-bottom-width') + getStyleValue(computedStyle, 'border-top-width');

    // The height of the inner content
    var innerHeight = inputShallow.scrollHeight;

    // Measure height of a textarea with a single row
    inputShallow.value = 'x';
    var singleRowHeight = inputShallow.scrollHeight;

    // The height of the outer content
    var outerHeight = innerHeight;
    if (minRows) {
      outerHeight = Math.max(Number(minRows) * singleRowHeight, outerHeight);
    }
    if (maxRows) {
      outerHeight = Math.min(Number(maxRows) * singleRowHeight, outerHeight);
    }
    outerHeight = Math.max(outerHeight, singleRowHeight);

    // Take the box sizing into account for applying this value as a style.
    var outerHeightStyle = outerHeight + (boxSizing === 'border-box' ? padding + border : 0);
    var overflow = Math.abs(outerHeight - innerHeight) <= 1;
    return {
      outerHeightStyle: outerHeightStyle,
      overflow: overflow
    };
  }, [maxRows, minRows, props.placeholder]);
  var updateState = function updateState(prevState, newState) {
    var outerHeightStyle = newState.outerHeightStyle,
      overflow = newState.overflow;
    // Need a large enough difference to update the height.
    // This prevents infinite rendering loop.
    if (renders.current < 20 && (outerHeightStyle > 0 && Math.abs((prevState.outerHeightStyle || 0) - outerHeightStyle) > 1 || prevState.overflow !== overflow)) {
      renders.current += 1;
      return {
        overflow: overflow,
        outerHeightStyle: outerHeightStyle
      };
    }
    if (false) {}
    return prevState;
  };
  var syncHeight = react.useCallback(function () {
    var newState = getUpdatedState();
    if (TextareaAutosize_isEmpty(newState)) {
      return;
    }
    setState(function (prevState) {
      return updateState(prevState, newState);
    });
  }, [getUpdatedState]);
  var syncHeightWithFlushSycn = function syncHeightWithFlushSycn() {
    var newState = getUpdatedState();
    if (TextareaAutosize_isEmpty(newState)) {
      return;
    }

    // In React 18, state updates in a ResizeObserver's callback are happening after the paint which causes flickering
    // when doing some visual updates in it. Using flushSync ensures that the dom will be painted after the states updates happen
    // Related issue - https://github.com/facebook/react/issues/24331
    (0,react_dom.flushSync)(function () {
      setState(function (prevState) {
        return updateState(prevState, newState);
      });
    });
  };
  react.useEffect(function () {
    var handleResize = (0,debounce/* default */.Z)(function () {
      renders.current = 0;

      // If the TextareaAutosize component is replaced by Suspense with a fallback, the last
      // ResizeObserver's handler that runs because of the change in the layout is trying to
      // access a dom node that is no longer there (as the fallback component is being shown instead).
      // See https://github.com/mui/material-ui/issues/32640
      if (inputRef.current) {
        syncHeightWithFlushSycn();
      }
    });
    var containerWindow = (0,ownerWindow/* default */.Z)(inputRef.current);
    containerWindow.addEventListener('resize', handleResize);
    var resizeObserver;
    if (typeof ResizeObserver !== 'undefined') {
      resizeObserver = new ResizeObserver(handleResize);
      resizeObserver.observe(inputRef.current);
    }
    return function () {
      handleResize.clear();
      containerWindow.removeEventListener('resize', handleResize);
      if (resizeObserver) {
        resizeObserver.disconnect();
      }
    };
  });
  (0,esm_useEnhancedEffect/* default */.Z)(function () {
    syncHeight();
  });
  react.useEffect(function () {
    renders.current = 0;
  }, [value]);
  var handleChange = function handleChange(event) {
    renders.current = 0;
    if (!isControlled) {
      syncHeight();
    }
    if (onChange) {
      onChange(event);
    }
  };
  return /*#__PURE__*/(0,jsx_runtime.jsxs)(react.Fragment, {
    children: [/*#__PURE__*/(0,jsx_runtime.jsx)("textarea", (0,esm_extends/* default */.Z)({
      value: value,
      onChange: handleChange,
      ref: handleRef
      // Apply the rows prop to get a "correct" first SSR paint
      ,

      rows: minRows,
      style: (0,esm_extends/* default */.Z)({
        height: state.outerHeightStyle,
        // Need a large enough difference to allow scrolling.
        // This prevents infinite rendering loop.
        overflow: state.overflow ? 'hidden' : null
      }, style)
    }, other)), /*#__PURE__*/(0,jsx_runtime.jsx)("textarea", {
      "aria-hidden": true,
      className: props.className,
      readOnly: true,
      ref: shadowRef,
      tabIndex: -1,
      style: (0,esm_extends/* default */.Z)({}, TextareaAutosize_styles.shadow, style, {
        padding: 0
      })
    })]
  });
});
 false ? 0 : void 0;
/* harmony default export */ var TextareaAutosize_TextareaAutosize = (TextareaAutosize);
;// CONCATENATED MODULE: ./node_modules/@mui/base/utils/isHostComponent.js
/**
 * Determines if a given element is a DOM element name (i.e. not a React component).
 */
function isHostComponent(element) {
  return typeof element === 'string';
}
/* harmony default export */ var utils_isHostComponent = (isHostComponent);
;// CONCATENATED MODULE: ./node_modules/@mui/material/FormControl/formControlState.js
function formControlState(_ref) {
  var props = _ref.props,
    states = _ref.states,
    muiFormControl = _ref.muiFormControl;
  return states.reduce(function (acc, state) {
    acc[state] = props[state];
    if (muiFormControl) {
      if (typeof props[state] === 'undefined') {
        acc[state] = muiFormControl[state];
      }
    }
    return acc;
  }, {});
}
;// CONCATENATED MODULE: ./node_modules/@mui/material/FormControl/FormControlContext.js

/**
 * @ignore - internal component.
 */
var FormControlContext = /*#__PURE__*/react.createContext(undefined);
if (false) {}
/* harmony default export */ var FormControl_FormControlContext = (FormControlContext);
;// CONCATENATED MODULE: ./node_modules/@mui/material/FormControl/useFormControl.js


function useFormControl() {
  return react.useContext(FormControl_FormControlContext);
}
;// CONCATENATED MODULE: ./node_modules/@mui/material/InputBase/utils.js
// Supports determination of isControlled().
// Controlled input accepts its current value as a prop.
//
// @see https://facebook.github.io/react/docs/forms.html#controlled-components
// @param value
// @returns {boolean} true if string (including '') or number (including zero)
function hasValue(value) {
  return value != null && !(Array.isArray(value) && value.length === 0);
}

// Determine if field is empty or filled.
// Response determines if label is presented above field or as placeholder.
//
// @param obj
// @param SSR
// @returns {boolean} False when not present or empty string.
//                    True when any number or string with length.
function isFilled(obj) {
  var SSR = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
  return obj && (hasValue(obj.value) && obj.value !== '' || SSR && hasValue(obj.defaultValue) && obj.defaultValue !== '');
}

// Determine if an Input is adorned on start.
// It's corresponding to the left with LTR.
//
// @param obj
// @returns {boolean} False when no adornments.
//                    True when adorned at the start.
function isAdornedStart(obj) {
  return obj.startAdornment;
}
;// CONCATENATED MODULE: ./node_modules/@mui/material/InputBase/inputBaseClasses.js


function getInputBaseUtilityClass(slot) {
  return (0,generateUtilityClass_generateUtilityClass/* default */.Z)('MuiInputBase', slot);
}
var inputBaseClasses = (0,generateUtilityClasses/* default */.Z)('MuiInputBase', ['root', 'formControl', 'focused', 'disabled', 'adornedStart', 'adornedEnd', 'error', 'sizeSmall', 'multiline', 'colorSecondary', 'fullWidth', 'hiddenLabel', 'readOnly', 'input', 'inputSizeSmall', 'inputMultiline', 'inputTypeSearch', 'inputAdornedStart', 'inputAdornedEnd', 'inputHiddenLabel']);
/* harmony default export */ var InputBase_inputBaseClasses = (inputBaseClasses);
;// CONCATENATED MODULE: ./node_modules/@mui/material/InputBase/InputBase.js





var InputBase_excluded = ["aria-describedby", "autoComplete", "autoFocus", "className", "color", "components", "componentsProps", "defaultValue", "disabled", "disableInjectingGlobalStyles", "endAdornment", "error", "fullWidth", "id", "inputComponent", "inputProps", "inputRef", "margin", "maxRows", "minRows", "multiline", "name", "onBlur", "onChange", "onClick", "onFocus", "onKeyDown", "onKeyUp", "placeholder", "readOnly", "renderSuffix", "rows", "size", "slotProps", "slots", "startAdornment", "type", "value"];


















var rootOverridesResolver = function rootOverridesResolver(props, styles) {
  var ownerState = props.ownerState;
  return [styles.root, ownerState.formControl && styles.formControl, ownerState.startAdornment && styles.adornedStart, ownerState.endAdornment && styles.adornedEnd, ownerState.error && styles.error, ownerState.size === 'small' && styles.sizeSmall, ownerState.multiline && styles.multiline, ownerState.color && styles["color".concat((0,utils_capitalize/* default */.Z)(ownerState.color))], ownerState.fullWidth && styles.fullWidth, ownerState.hiddenLabel && styles.hiddenLabel];
};
var inputOverridesResolver = function inputOverridesResolver(props, styles) {
  var ownerState = props.ownerState;
  return [styles.input, ownerState.size === 'small' && styles.inputSizeSmall, ownerState.multiline && styles.inputMultiline, ownerState.type === 'search' && styles.inputTypeSearch, ownerState.startAdornment && styles.inputAdornedStart, ownerState.endAdornment && styles.inputAdornedEnd, ownerState.hiddenLabel && styles.inputHiddenLabel];
};
var InputBase_useUtilityClasses = function useUtilityClasses(ownerState) {
  var classes = ownerState.classes,
    color = ownerState.color,
    disabled = ownerState.disabled,
    error = ownerState.error,
    endAdornment = ownerState.endAdornment,
    focused = ownerState.focused,
    formControl = ownerState.formControl,
    fullWidth = ownerState.fullWidth,
    hiddenLabel = ownerState.hiddenLabel,
    multiline = ownerState.multiline,
    readOnly = ownerState.readOnly,
    size = ownerState.size,
    startAdornment = ownerState.startAdornment,
    type = ownerState.type;
  var slots = {
    root: ['root', "color".concat((0,utils_capitalize/* default */.Z)(color)), disabled && 'disabled', error && 'error', fullWidth && 'fullWidth', focused && 'focused', formControl && 'formControl', size === 'small' && 'sizeSmall', multiline && 'multiline', startAdornment && 'adornedStart', endAdornment && 'adornedEnd', hiddenLabel && 'hiddenLabel', readOnly && 'readOnly'],
    input: ['input', disabled && 'disabled', type === 'search' && 'inputTypeSearch', multiline && 'inputMultiline', size === 'small' && 'inputSizeSmall', hiddenLabel && 'inputHiddenLabel', startAdornment && 'inputAdornedStart', endAdornment && 'inputAdornedEnd', readOnly && 'readOnly']
  };
  return (0,composeClasses/* default */.Z)(slots, getInputBaseUtilityClass, classes);
};
var InputBaseRoot = (0,styles_styled/* default */.ZP)('div', {
  name: 'MuiInputBase',
  slot: 'Root',
  overridesResolver: rootOverridesResolver
})(function (_ref) {
  var theme = _ref.theme,
    ownerState = _ref.ownerState;
  return (0,esm_extends/* default */.Z)({}, theme.typography.body1, (0,esm_defineProperty/* default */.Z)({
    color: (theme.vars || theme).palette.text.primary,
    lineHeight: '1.4375em',
    // 23px
    boxSizing: 'border-box',
    // Prevent padding issue with fullWidth.
    position: 'relative',
    cursor: 'text',
    display: 'inline-flex',
    alignItems: 'center'
  }, "&.".concat(InputBase_inputBaseClasses.disabled), {
    color: (theme.vars || theme).palette.text.disabled,
    cursor: 'default'
  }), ownerState.multiline && (0,esm_extends/* default */.Z)({
    padding: '4px 0 5px'
  }, ownerState.size === 'small' && {
    paddingTop: 1
  }), ownerState.fullWidth && {
    width: '100%'
  });
});
var InputBaseComponent = (0,styles_styled/* default */.ZP)('input', {
  name: 'MuiInputBase',
  slot: 'Input',
  overridesResolver: inputOverridesResolver
})(function (_ref2) {
  var _extends3;
  var theme = _ref2.theme,
    ownerState = _ref2.ownerState;
  var light = theme.palette.mode === 'light';
  var placeholder = (0,esm_extends/* default */.Z)({
    color: 'currentColor'
  }, theme.vars ? {
    opacity: theme.vars.opacity.inputPlaceholder
  } : {
    opacity: light ? 0.42 : 0.5
  }, {
    transition: theme.transitions.create('opacity', {
      duration: theme.transitions.duration.shorter
    })
  });
  var placeholderHidden = {
    opacity: '0 !important'
  };
  var placeholderVisible = theme.vars ? {
    opacity: theme.vars.opacity.inputPlaceholder
  } : {
    opacity: light ? 0.42 : 0.5
  };
  return (0,esm_extends/* default */.Z)((_extends3 = {
    font: 'inherit',
    letterSpacing: 'inherit',
    color: 'currentColor',
    padding: '4px 0 5px',
    border: 0,
    boxSizing: 'content-box',
    background: 'none',
    height: '1.4375em',
    // Reset 23pxthe native input line-height
    margin: 0,
    // Reset for Safari
    WebkitTapHighlightColor: 'transparent',
    display: 'block',
    // Make the flex item shrink with Firefox
    minWidth: 0,
    width: '100%',
    // Fix IE11 width issue
    animationName: 'mui-auto-fill-cancel',
    animationDuration: '10ms',
    '&::-webkit-input-placeholder': placeholder,
    '&::-moz-placeholder': placeholder,
    // Firefox 19+
    '&:-ms-input-placeholder': placeholder,
    // IE11
    '&::-ms-input-placeholder': placeholder,
    // Edge
    '&:focus': {
      outline: 0
    },
    // Reset Firefox invalid required input style
    '&:invalid': {
      boxShadow: 'none'
    },
    '&::-webkit-search-decoration': {
      // Remove the padding when type=search.
      WebkitAppearance: 'none'
    }
  }, (0,esm_defineProperty/* default */.Z)(_extends3, "label[data-shrink=false] + .".concat(InputBase_inputBaseClasses.formControl, " &"), {
    '&::-webkit-input-placeholder': placeholderHidden,
    '&::-moz-placeholder': placeholderHidden,
    // Firefox 19+
    '&:-ms-input-placeholder': placeholderHidden,
    // IE11
    '&::-ms-input-placeholder': placeholderHidden,
    // Edge
    '&:focus::-webkit-input-placeholder': placeholderVisible,
    '&:focus::-moz-placeholder': placeholderVisible,
    // Firefox 19+
    '&:focus:-ms-input-placeholder': placeholderVisible,
    // IE11
    '&:focus::-ms-input-placeholder': placeholderVisible // Edge
  }), (0,esm_defineProperty/* default */.Z)(_extends3, "&.".concat(InputBase_inputBaseClasses.disabled), {
    opacity: 1,
    // Reset iOS opacity
    WebkitTextFillColor: (theme.vars || theme).palette.text.disabled // Fix opacity Safari bug
  }), (0,esm_defineProperty/* default */.Z)(_extends3, '&:-webkit-autofill', {
    animationDuration: '5000s',
    animationName: 'mui-auto-fill'
  }), _extends3), ownerState.size === 'small' && {
    paddingTop: 1
  }, ownerState.multiline && {
    height: 'auto',
    resize: 'none',
    padding: 0,
    paddingTop: 0
  }, ownerState.type === 'search' && {
    // Improve type search style.
    MozAppearance: 'textfield'
  });
});
var inputGlobalStyles = /*#__PURE__*/(0,jsx_runtime.jsx)(material_GlobalStyles_GlobalStyles, {
  styles: {
    '@keyframes mui-auto-fill': {
      from: {
        display: 'block'
      }
    },
    '@keyframes mui-auto-fill-cancel': {
      from: {
        display: 'block'
      }
    }
  }
});

/**
 * `InputBase` contains as few styles as possible.
 * It aims to be a simple building block for creating an input.
 * It contains a load of style reset and some state logic.
 */
var InputBase = /*#__PURE__*/react.forwardRef(function InputBase(inProps, ref) {
  var _slotProps$input;
  var props = (0,styles_useThemeProps/* default */.Z)({
    props: inProps,
    name: 'MuiInputBase'
  });
  var ariaDescribedby = props['aria-describedby'],
    autoComplete = props.autoComplete,
    autoFocus = props.autoFocus,
    className = props.className,
    _props$components = props.components,
    components = _props$components === void 0 ? {} : _props$components,
    _props$componentsProp = props.componentsProps,
    componentsProps = _props$componentsProp === void 0 ? {} : _props$componentsProp,
    defaultValue = props.defaultValue,
    disabled = props.disabled,
    disableInjectingGlobalStyles = props.disableInjectingGlobalStyles,
    endAdornment = props.endAdornment,
    _props$fullWidth = props.fullWidth,
    fullWidth = _props$fullWidth === void 0 ? false : _props$fullWidth,
    id = props.id,
    _props$inputComponent = props.inputComponent,
    inputComponent = _props$inputComponent === void 0 ? 'input' : _props$inputComponent,
    _props$inputProps = props.inputProps,
    inputPropsProp = _props$inputProps === void 0 ? {} : _props$inputProps,
    inputRefProp = props.inputRef,
    maxRows = props.maxRows,
    minRows = props.minRows,
    _props$multiline = props.multiline,
    multiline = _props$multiline === void 0 ? false : _props$multiline,
    name = props.name,
    onBlur = props.onBlur,
    onChange = props.onChange,
    onClick = props.onClick,
    onFocus = props.onFocus,
    onKeyDown = props.onKeyDown,
    onKeyUp = props.onKeyUp,
    placeholder = props.placeholder,
    readOnly = props.readOnly,
    renderSuffix = props.renderSuffix,
    rows = props.rows,
    _props$slotProps = props.slotProps,
    slotProps = _props$slotProps === void 0 ? {} : _props$slotProps,
    _props$slots = props.slots,
    slots = _props$slots === void 0 ? {} : _props$slots,
    startAdornment = props.startAdornment,
    _props$type = props.type,
    type = _props$type === void 0 ? 'text' : _props$type,
    valueProp = props.value,
    other = (0,objectWithoutPropertiesLoose/* default */.Z)(props, InputBase_excluded);
  var value = inputPropsProp.value != null ? inputPropsProp.value : valueProp;
  var _React$useRef = react.useRef(value != null),
    isControlled = _React$useRef.current;
  var inputRef = react.useRef();
  var handleInputRefWarning = react.useCallback(function (instance) {
    if (false) {}
  }, []);
  var handleInputRef = (0,useForkRef/* default */.Z)(inputRef, inputRefProp, inputPropsProp.ref, handleInputRefWarning);
  var _React$useState = react.useState(false),
    _React$useState2 = (0,slicedToArray/* default */.Z)(_React$useState, 2),
    focused = _React$useState2[0],
    setFocused = _React$useState2[1];
  var muiFormControl = useFormControl();
  if (false) {}
  var fcs = formControlState({
    props: props,
    muiFormControl: muiFormControl,
    states: ['color', 'disabled', 'error', 'hiddenLabel', 'size', 'required', 'filled']
  });
  fcs.focused = muiFormControl ? muiFormControl.focused : focused;

  // The blur won't fire when the disabled state is set on a focused input.
  // We need to book keep the focused state manually.
  react.useEffect(function () {
    if (!muiFormControl && disabled && focused) {
      setFocused(false);
      if (onBlur) {
        onBlur();
      }
    }
  }, [muiFormControl, disabled, focused, onBlur]);
  var onFilled = muiFormControl && muiFormControl.onFilled;
  var onEmpty = muiFormControl && muiFormControl.onEmpty;
  var checkDirty = react.useCallback(function (obj) {
    if (isFilled(obj)) {
      if (onFilled) {
        onFilled();
      }
    } else if (onEmpty) {
      onEmpty();
    }
  }, [onFilled, onEmpty]);
  (0,useEnhancedEffect/* default */.Z)(function () {
    if (isControlled) {
      checkDirty({
        value: value
      });
    }
  }, [value, checkDirty, isControlled]);
  var handleFocus = function handleFocus(event) {
    // Fix a bug with IE11 where the focus/blur events are triggered
    // while the component is disabled.
    if (fcs.disabled) {
      event.stopPropagation();
      return;
    }
    if (onFocus) {
      onFocus(event);
    }
    if (inputPropsProp.onFocus) {
      inputPropsProp.onFocus(event);
    }
    if (muiFormControl && muiFormControl.onFocus) {
      muiFormControl.onFocus(event);
    } else {
      setFocused(true);
    }
  };
  var handleBlur = function handleBlur(event) {
    if (onBlur) {
      onBlur(event);
    }
    if (inputPropsProp.onBlur) {
      inputPropsProp.onBlur(event);
    }
    if (muiFormControl && muiFormControl.onBlur) {
      muiFormControl.onBlur(event);
    } else {
      setFocused(false);
    }
  };
  var handleChange = function handleChange(event) {
    if (!isControlled) {
      var element = event.target || inputRef.current;
      if (element == null) {
        throw new Error( false ? 0 : (0,formatMuiErrorMessage/* default */.Z)(1));
      }
      checkDirty({
        value: element.value
      });
    }
    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
      args[_key - 1] = arguments[_key];
    }
    if (inputPropsProp.onChange) {
      inputPropsProp.onChange.apply(inputPropsProp, [event].concat(args));
    }

    // Perform in the willUpdate
    if (onChange) {
      onChange.apply(void 0, [event].concat(args));
    }
  };

  // Check the input state on mount, in case it was filled by the user
  // or auto filled by the browser before the hydration (for SSR).
  react.useEffect(function () {
    checkDirty(inputRef.current);
    // eslint-disable-next-line react-hooks/exhaustive-deps
  }, []);
  var handleClick = function handleClick(event) {
    if (inputRef.current && event.currentTarget === event.target) {
      inputRef.current.focus();
    }
    if (onClick) {
      onClick(event);
    }
  };
  var InputComponent = inputComponent;
  var inputProps = inputPropsProp;
  if (multiline && InputComponent === 'input') {
    if (rows) {
      if (false) {}
      inputProps = (0,esm_extends/* default */.Z)({
        type: undefined,
        minRows: rows,
        maxRows: rows
      }, inputProps);
    } else {
      inputProps = (0,esm_extends/* default */.Z)({
        type: undefined,
        maxRows: maxRows,
        minRows: minRows
      }, inputProps);
    }
    InputComponent = TextareaAutosize_TextareaAutosize;
  }
  var handleAutoFill = function handleAutoFill(event) {
    // Provide a fake value as Chrome might not let you access it for security reasons.
    checkDirty(event.animationName === 'mui-auto-fill-cancel' ? inputRef.current : {
      value: 'x'
    });
  };
  react.useEffect(function () {
    if (muiFormControl) {
      muiFormControl.setAdornedStart(Boolean(startAdornment));
    }
  }, [muiFormControl, startAdornment]);
  var ownerState = (0,esm_extends/* default */.Z)({}, props, {
    color: fcs.color || 'primary',
    disabled: fcs.disabled,
    endAdornment: endAdornment,
    error: fcs.error,
    focused: fcs.focused,
    formControl: muiFormControl,
    fullWidth: fullWidth,
    hiddenLabel: fcs.hiddenLabel,
    multiline: multiline,
    size: fcs.size,
    startAdornment: startAdornment,
    type: type
  });
  var classes = InputBase_useUtilityClasses(ownerState);
  var Root = slots.root || components.Root || InputBaseRoot;
  var rootProps = slotProps.root || componentsProps.root || {};
  var Input = slots.input || components.Input || InputBaseComponent;
  inputProps = (0,esm_extends/* default */.Z)({}, inputProps, (_slotProps$input = slotProps.input) != null ? _slotProps$input : componentsProps.input);
  return /*#__PURE__*/(0,jsx_runtime.jsxs)(react.Fragment, {
    children: [!disableInjectingGlobalStyles && inputGlobalStyles, /*#__PURE__*/(0,jsx_runtime.jsxs)(Root, (0,esm_extends/* default */.Z)({}, rootProps, !utils_isHostComponent(Root) && {
      ownerState: (0,esm_extends/* default */.Z)({}, ownerState, rootProps.ownerState)
    }, {
      ref: ref,
      onClick: handleClick
    }, other, {
      className: (0,clsx_m/* default */.Z)(classes.root, rootProps.className, className),
      children: [startAdornment, /*#__PURE__*/(0,jsx_runtime.jsx)(FormControl_FormControlContext.Provider, {
        value: null,
        children: /*#__PURE__*/(0,jsx_runtime.jsx)(Input, (0,esm_extends/* default */.Z)({
          ownerState: ownerState,
          "aria-invalid": fcs.error,
          "aria-describedby": ariaDescribedby,
          autoComplete: autoComplete,
          autoFocus: autoFocus,
          defaultValue: defaultValue,
          disabled: fcs.disabled,
          id: id,
          onAnimationStart: handleAutoFill,
          name: name,
          placeholder: placeholder,
          readOnly: readOnly,
          required: fcs.required,
          rows: rows,
          value: value,
          onKeyDown: onKeyDown,
          onKeyUp: onKeyUp,
          type: type
        }, inputProps, !utils_isHostComponent(Input) && {
          as: InputComponent,
          ownerState: (0,esm_extends/* default */.Z)({}, ownerState, inputProps.ownerState)
        }, {
          ref: handleInputRef,
          className: (0,clsx_m/* default */.Z)(classes.input, inputProps.className),
          onBlur: handleBlur,
          onChange: handleChange,
          onFocus: handleFocus
        }))
      }), endAdornment, renderSuffix ? renderSuffix((0,esm_extends/* default */.Z)({}, fcs, {
        startAdornment: startAdornment
      })) : null]
    }))]
  });
});
 false ? 0 : void 0;
/* harmony default export */ var InputBase_InputBase = (InputBase);
;// CONCATENATED MODULE: ./node_modules/@mui/material/Input/inputClasses.js




function getInputUtilityClass(slot) {
  return (0,generateUtilityClass_generateUtilityClass/* default */.Z)('MuiInput', slot);
}
var inputClasses = (0,esm_extends/* default */.Z)({}, InputBase_inputBaseClasses, (0,generateUtilityClasses/* default */.Z)('MuiInput', ['root', 'underline', 'input']));
/* harmony default export */ var Input_inputClasses = (inputClasses);
;// CONCATENATED MODULE: ./node_modules/@mui/material/Input/Input.js




var Input_excluded = ["disableUnderline", "components", "componentsProps", "fullWidth", "inputComponent", "multiline", "slotProps", "slots", "type"];










var Input_useUtilityClasses = function useUtilityClasses(ownerState) {
  var classes = ownerState.classes,
    disableUnderline = ownerState.disableUnderline;
  var slots = {
    root: ['root', !disableUnderline && 'underline'],
    input: ['input']
  };
  var composedClasses = (0,composeClasses/* default */.Z)(slots, getInputUtilityClass, classes);
  return (0,esm_extends/* default */.Z)({}, classes, composedClasses);
};
var InputRoot = (0,styles_styled/* default */.ZP)(InputBaseRoot, {
  shouldForwardProp: function shouldForwardProp(prop) {
    return (0,styles_styled/* rootShouldForwardProp */.FO)(prop) || prop === 'classes';
  },
  name: 'MuiInput',
  slot: 'Root',
  overridesResolver: function overridesResolver(props, styles) {
    var ownerState = props.ownerState;
    return [].concat((0,toConsumableArray/* default */.Z)(rootOverridesResolver(props, styles)), [!ownerState.disableUnderline && styles.underline]);
  }
})(function (_ref3) {
  var _ref4;
  var theme = _ref3.theme,
    ownerState = _ref3.ownerState;
  var light = theme.palette.mode === 'light';
  var bottomLineColor = light ? 'rgba(0, 0, 0, 0.42)' : 'rgba(255, 255, 255, 0.7)';
  if (theme.vars) {
    bottomLineColor = "rgba(".concat(theme.vars.palette.common.onBackgroundChannel, " / ").concat(theme.vars.opacity.inputUnderline, ")");
  }
  return (0,esm_extends/* default */.Z)({
    position: 'relative'
  }, ownerState.formControl && {
    'label + &': {
      marginTop: 16
    }
  }, !ownerState.disableUnderline && (_ref4 = {
    '&:after': {
      borderBottom: "2px solid ".concat((theme.vars || theme).palette[ownerState.color].main),
      left: 0,
      bottom: 0,
      // Doing the other way around crash on IE11 "''" https://github.com/cssinjs/jss/issues/242
      content: '""',
      position: 'absolute',
      right: 0,
      transform: 'scaleX(0)',
      transition: theme.transitions.create('transform', {
        duration: theme.transitions.duration.shorter,
        easing: theme.transitions.easing.easeOut
      }),
      pointerEvents: 'none' // Transparent to the hover style.
    }
  }, (0,esm_defineProperty/* default */.Z)(_ref4, "&.".concat(Input_inputClasses.focused, ":after"), {
    // translateX(0) is a workaround for Safari transform scale bug
    // See https://github.com/mui/material-ui/issues/31766
    transform: 'scaleX(1) translateX(0)'
  }), (0,esm_defineProperty/* default */.Z)(_ref4, "&.".concat(Input_inputClasses.error, ":after"), {
    borderBottomColor: (theme.vars || theme).palette.error.main,
    transform: 'scaleX(1)' // error is always underlined in red
  }), (0,esm_defineProperty/* default */.Z)(_ref4, '&:before', {
    borderBottom: "1px solid ".concat(bottomLineColor),
    left: 0,
    bottom: 0,
    // Doing the other way around crash on IE11 "''" https://github.com/cssinjs/jss/issues/242
    content: '"\\00a0"',
    position: 'absolute',
    right: 0,
    transition: theme.transitions.create('border-bottom-color', {
      duration: theme.transitions.duration.shorter
    }),
    pointerEvents: 'none' // Transparent to the hover style.
  }), (0,esm_defineProperty/* default */.Z)(_ref4, "&:hover:not(.".concat(Input_inputClasses.disabled, "):before"), {
    borderBottom: "2px solid ".concat((theme.vars || theme).palette.text.primary),
    // Reset on touch devices, it doesn't add specificity
    '@media (hover: none)': {
      borderBottom: "1px solid ".concat(bottomLineColor)
    }
  }), (0,esm_defineProperty/* default */.Z)(_ref4, "&.".concat(Input_inputClasses.disabled, ":before"), {
    borderBottomStyle: 'dotted'
  }), _ref4));
});
var InputInput = (0,styles_styled/* default */.ZP)(InputBaseComponent, {
  name: 'MuiInput',
  slot: 'Input',
  overridesResolver: inputOverridesResolver
})({});
var Input = /*#__PURE__*/react.forwardRef(function Input(inProps, ref) {
  var _ref, _slots$root, _ref2, _slots$input;
  var props = (0,styles_useThemeProps/* default */.Z)({
    props: inProps,
    name: 'MuiInput'
  });
  var disableUnderline = props.disableUnderline,
    _props$components = props.components,
    components = _props$components === void 0 ? {} : _props$components,
    componentsPropsProp = props.componentsProps,
    _props$fullWidth = props.fullWidth,
    fullWidth = _props$fullWidth === void 0 ? false : _props$fullWidth,
    _props$inputComponent = props.inputComponent,
    inputComponent = _props$inputComponent === void 0 ? 'input' : _props$inputComponent,
    _props$multiline = props.multiline,
    multiline = _props$multiline === void 0 ? false : _props$multiline,
    slotProps = props.slotProps,
    _props$slots = props.slots,
    slots = _props$slots === void 0 ? {} : _props$slots,
    _props$type = props.type,
    type = _props$type === void 0 ? 'text' : _props$type,
    other = (0,objectWithoutPropertiesLoose/* default */.Z)(props, Input_excluded);
  var classes = Input_useUtilityClasses(props);
  var ownerState = {
    disableUnderline: disableUnderline
  };
  var inputComponentsProps = {
    root: {
      ownerState: ownerState
    }
  };
  var componentsProps = (slotProps != null ? slotProps : componentsPropsProp) ? (0,deepmerge/* default */.Z)(slotProps != null ? slotProps : componentsPropsProp, inputComponentsProps) : inputComponentsProps;
  var RootSlot = (_ref = (_slots$root = slots.root) != null ? _slots$root : components.Root) != null ? _ref : InputRoot;
  var InputSlot = (_ref2 = (_slots$input = slots.input) != null ? _slots$input : components.Input) != null ? _ref2 : InputInput;
  return /*#__PURE__*/(0,jsx_runtime.jsx)(InputBase_InputBase, (0,esm_extends/* default */.Z)({
    slots: {
      root: RootSlot,
      input: InputSlot
    },
    slotProps: componentsProps,
    fullWidth: fullWidth,
    inputComponent: inputComponent,
    multiline: multiline,
    ref: ref,
    type: type
  }, other, {
    classes: classes
  }));
});
 false ? 0 : void 0;
Input.muiName = 'Input';
/* harmony default export */ var Input_Input = (Input);
;// CONCATENATED MODULE: ./node_modules/@mui/material/FilledInput/filledInputClasses.js




function getFilledInputUtilityClass(slot) {
  return (0,generateUtilityClass_generateUtilityClass/* default */.Z)('MuiFilledInput', slot);
}
var filledInputClasses = (0,esm_extends/* default */.Z)({}, InputBase_inputBaseClasses, (0,generateUtilityClasses/* default */.Z)('MuiFilledInput', ['root', 'underline', 'input']));
/* harmony default export */ var FilledInput_filledInputClasses = (filledInputClasses);
;// CONCATENATED MODULE: ./node_modules/@mui/material/FilledInput/FilledInput.js




var FilledInput_excluded = ["disableUnderline", "components", "componentsProps", "fullWidth", "hiddenLabel", "inputComponent", "multiline", "slotProps", "slots", "type"];










var FilledInput_useUtilityClasses = function useUtilityClasses(ownerState) {
  var classes = ownerState.classes,
    disableUnderline = ownerState.disableUnderline;
  var slots = {
    root: ['root', !disableUnderline && 'underline'],
    input: ['input']
  };
  var composedClasses = (0,composeClasses/* default */.Z)(slots, getFilledInputUtilityClass, classes);
  return (0,esm_extends/* default */.Z)({}, classes, composedClasses);
};
var FilledInputRoot = (0,styles_styled/* default */.ZP)(InputBaseRoot, {
  shouldForwardProp: function shouldForwardProp(prop) {
    return (0,styles_styled/* rootShouldForwardProp */.FO)(prop) || prop === 'classes';
  },
  name: 'MuiFilledInput',
  slot: 'Root',
  overridesResolver: function overridesResolver(props, styles) {
    var ownerState = props.ownerState;
    return [].concat((0,toConsumableArray/* default */.Z)(rootOverridesResolver(props, styles)), [!ownerState.disableUnderline && styles.underline]);
  }
})(function (_ref3) {
  var _extends2, _ref4;
  var theme = _ref3.theme,
    ownerState = _ref3.ownerState;
  var _palette;
  var light = theme.palette.mode === 'light';
  var bottomLineColor = light ? 'rgba(0, 0, 0, 0.42)' : 'rgba(255, 255, 255, 0.7)';
  var backgroundColor = light ? 'rgba(0, 0, 0, 0.06)' : 'rgba(255, 255, 255, 0.09)';
  var hoverBackground = light ? 'rgba(0, 0, 0, 0.09)' : 'rgba(255, 255, 255, 0.13)';
  var disabledBackground = light ? 'rgba(0, 0, 0, 0.12)' : 'rgba(255, 255, 255, 0.12)';
  return (0,esm_extends/* default */.Z)((_extends2 = {
    position: 'relative',
    backgroundColor: theme.vars ? theme.vars.palette.FilledInput.bg : backgroundColor,
    borderTopLeftRadius: (theme.vars || theme).shape.borderRadius,
    borderTopRightRadius: (theme.vars || theme).shape.borderRadius,
    transition: theme.transitions.create('background-color', {
      duration: theme.transitions.duration.shorter,
      easing: theme.transitions.easing.easeOut
    }),
    '&:hover': {
      backgroundColor: theme.vars ? theme.vars.palette.FilledInput.hoverBg : hoverBackground,
      // Reset on touch devices, it doesn't add specificity
      '@media (hover: none)': {
        backgroundColor: theme.vars ? theme.vars.palette.FilledInput.bg : backgroundColor
      }
    }
  }, (0,esm_defineProperty/* default */.Z)(_extends2, "&.".concat(FilledInput_filledInputClasses.focused), {
    backgroundColor: theme.vars ? theme.vars.palette.FilledInput.bg : backgroundColor
  }), (0,esm_defineProperty/* default */.Z)(_extends2, "&.".concat(FilledInput_filledInputClasses.disabled), {
    backgroundColor: theme.vars ? theme.vars.palette.FilledInput.disabledBg : disabledBackground
  }), _extends2), !ownerState.disableUnderline && (_ref4 = {
    '&:after': {
      borderBottom: "2px solid ".concat((_palette = (theme.vars || theme).palette[ownerState.color || 'primary']) == null ? void 0 : _palette.main),
      left: 0,
      bottom: 0,
      // Doing the other way around crash on IE11 "''" https://github.com/cssinjs/jss/issues/242
      content: '""',
      position: 'absolute',
      right: 0,
      transform: 'scaleX(0)',
      transition: theme.transitions.create('transform', {
        duration: theme.transitions.duration.shorter,
        easing: theme.transitions.easing.easeOut
      }),
      pointerEvents: 'none' // Transparent to the hover style.
    }
  }, (0,esm_defineProperty/* default */.Z)(_ref4, "&.".concat(FilledInput_filledInputClasses.focused, ":after"), {
    // translateX(0) is a workaround for Safari transform scale bug
    // See https://github.com/mui/material-ui/issues/31766
    transform: 'scaleX(1) translateX(0)'
  }), (0,esm_defineProperty/* default */.Z)(_ref4, "&.".concat(FilledInput_filledInputClasses.error, ":after"), {
    borderBottomColor: (theme.vars || theme).palette.error.main,
    transform: 'scaleX(1)' // error is always underlined in red
  }), (0,esm_defineProperty/* default */.Z)(_ref4, '&:before', {
    borderBottom: "1px solid ".concat(theme.vars ? "rgba(".concat(theme.vars.palette.common.onBackgroundChannel, " / ").concat(theme.vars.opacity.inputUnderline, ")") : bottomLineColor),
    left: 0,
    bottom: 0,
    // Doing the other way around crash on IE11 "''" https://github.com/cssinjs/jss/issues/242
    content: '"\\00a0"',
    position: 'absolute',
    right: 0,
    transition: theme.transitions.create('border-bottom-color', {
      duration: theme.transitions.duration.shorter
    }),
    pointerEvents: 'none' // Transparent to the hover style.
  }), (0,esm_defineProperty/* default */.Z)(_ref4, "&:hover:not(.".concat(FilledInput_filledInputClasses.disabled, "):before"), {
    borderBottom: "1px solid ".concat((theme.vars || theme).palette.text.primary)
  }), (0,esm_defineProperty/* default */.Z)(_ref4, "&.".concat(FilledInput_filledInputClasses.disabled, ":before"), {
    borderBottomStyle: 'dotted'
  }), _ref4), ownerState.startAdornment && {
    paddingLeft: 12
  }, ownerState.endAdornment && {
    paddingRight: 12
  }, ownerState.multiline && (0,esm_extends/* default */.Z)({
    padding: '25px 12px 8px'
  }, ownerState.size === 'small' && {
    paddingTop: 21,
    paddingBottom: 4
  }, ownerState.hiddenLabel && {
    paddingTop: 16,
    paddingBottom: 17
  }));
});
var FilledInputInput = (0,styles_styled/* default */.ZP)(InputBaseComponent, {
  name: 'MuiFilledInput',
  slot: 'Input',
  overridesResolver: inputOverridesResolver
})(function (_ref5) {
  var theme = _ref5.theme,
    ownerState = _ref5.ownerState;
  return (0,esm_extends/* default */.Z)({
    paddingTop: 25,
    paddingRight: 12,
    paddingBottom: 8,
    paddingLeft: 12
  }, !theme.vars && {
    '&:-webkit-autofill': {
      WebkitBoxShadow: theme.palette.mode === 'light' ? null : '0 0 0 100px #266798 inset',
      WebkitTextFillColor: theme.palette.mode === 'light' ? null : '#fff',
      caretColor: theme.palette.mode === 'light' ? null : '#fff',
      borderTopLeftRadius: 'inherit',
      borderTopRightRadius: 'inherit'
    }
  }, theme.vars && (0,esm_defineProperty/* default */.Z)({
    '&:-webkit-autofill': {
      borderTopLeftRadius: 'inherit',
      borderTopRightRadius: 'inherit'
    }
  }, theme.getColorSchemeSelector('dark'), {
    '&:-webkit-autofill': {
      WebkitBoxShadow: '0 0 0 100px #266798 inset',
      WebkitTextFillColor: '#fff',
      caretColor: '#fff'
    }
  }), ownerState.size === 'small' && {
    paddingTop: 21,
    paddingBottom: 4
  }, ownerState.hiddenLabel && {
    paddingTop: 16,
    paddingBottom: 17
  }, ownerState.multiline && {
    paddingTop: 0,
    paddingBottom: 0,
    paddingLeft: 0,
    paddingRight: 0
  }, ownerState.startAdornment && {
    paddingLeft: 0
  }, ownerState.endAdornment && {
    paddingRight: 0
  }, ownerState.hiddenLabel && ownerState.size === 'small' && {
    paddingTop: 8,
    paddingBottom: 9
  });
});
var FilledInput = /*#__PURE__*/react.forwardRef(function FilledInput(inProps, ref) {
  var _ref, _slots$root, _ref2, _slots$input;
  var props = (0,styles_useThemeProps/* default */.Z)({
    props: inProps,
    name: 'MuiFilledInput'
  });
  var _props$components = props.components,
    components = _props$components === void 0 ? {} : _props$components,
    componentsPropsProp = props.componentsProps,
    _props$fullWidth = props.fullWidth,
    fullWidth = _props$fullWidth === void 0 ? false : _props$fullWidth,
    _props$inputComponent = props.inputComponent,
    inputComponent = _props$inputComponent === void 0 ? 'input' : _props$inputComponent,
    _props$multiline = props.multiline,
    multiline = _props$multiline === void 0 ? false : _props$multiline,
    slotProps = props.slotProps,
    _props$slots = props.slots,
    slots = _props$slots === void 0 ? {} : _props$slots,
    _props$type = props.type,
    type = _props$type === void 0 ? 'text' : _props$type,
    other = (0,objectWithoutPropertiesLoose/* default */.Z)(props, FilledInput_excluded);
  var ownerState = (0,esm_extends/* default */.Z)({}, props, {
    fullWidth: fullWidth,
    inputComponent: inputComponent,
    multiline: multiline,
    type: type
  });
  var classes = FilledInput_useUtilityClasses(props);
  var filledInputComponentsProps = {
    root: {
      ownerState: ownerState
    },
    input: {
      ownerState: ownerState
    }
  };
  var componentsProps = (slotProps != null ? slotProps : componentsPropsProp) ? (0,deepmerge/* default */.Z)(slotProps != null ? slotProps : componentsPropsProp, filledInputComponentsProps) : filledInputComponentsProps;
  var RootSlot = (_ref = (_slots$root = slots.root) != null ? _slots$root : components.Root) != null ? _ref : FilledInputRoot;
  var InputSlot = (_ref2 = (_slots$input = slots.input) != null ? _slots$input : components.Input) != null ? _ref2 : FilledInputInput;
  return /*#__PURE__*/(0,jsx_runtime.jsx)(InputBase_InputBase, (0,esm_extends/* default */.Z)({
    slots: {
      root: RootSlot,
      input: InputSlot
    },
    componentsProps: componentsProps,
    fullWidth: fullWidth,
    inputComponent: inputComponent,
    multiline: multiline,
    ref: ref,
    type: type
  }, other, {
    classes: classes
  }));
});
 false ? 0 : void 0;
FilledInput.muiName = 'Input';
/* harmony default export */ var FilledInput_FilledInput = (FilledInput);
;// CONCATENATED MODULE: ./node_modules/@mui/material/OutlinedInput/NotchedOutline.js


var _span;
var NotchedOutline_excluded = ["children", "classes", "className", "label", "notched"];




var NotchedOutlineRoot = (0,styles_styled/* default */.ZP)('fieldset')({
  textAlign: 'left',
  position: 'absolute',
  bottom: 0,
  right: 0,
  top: -5,
  left: 0,
  margin: 0,
  padding: '0 8px',
  pointerEvents: 'none',
  borderRadius: 'inherit',
  borderStyle: 'solid',
  borderWidth: 1,
  overflow: 'hidden',
  minWidth: '0%'
});
var NotchedOutlineLegend = (0,styles_styled/* default */.ZP)('legend')(function (_ref) {
  var ownerState = _ref.ownerState,
    theme = _ref.theme;
  return (0,esm_extends/* default */.Z)({
    float: 'unset',
    // Fix conflict with bootstrap
    width: 'auto',
    // Fix conflict with bootstrap
    overflow: 'hidden'
  }, !ownerState.withLabel && {
    padding: 0,
    lineHeight: '11px',
    // sync with `height` in `legend` styles
    transition: theme.transitions.create('width', {
      duration: 150,
      easing: theme.transitions.easing.easeOut
    })
  }, ownerState.withLabel && (0,esm_extends/* default */.Z)({
    display: 'block',
    // Fix conflict with normalize.css and sanitize.css
    padding: 0,
    height: 11,
    // sync with `lineHeight` in `legend` styles
    fontSize: '0.75em',
    visibility: 'hidden',
    maxWidth: 0.01,
    transition: theme.transitions.create('max-width', {
      duration: 50,
      easing: theme.transitions.easing.easeOut
    }),
    whiteSpace: 'nowrap',
    '& > span': {
      paddingLeft: 5,
      paddingRight: 5,
      display: 'inline-block',
      opacity: 0,
      visibility: 'visible'
    }
  }, ownerState.notched && {
    maxWidth: '100%',
    transition: theme.transitions.create('max-width', {
      duration: 100,
      easing: theme.transitions.easing.easeOut,
      delay: 50
    })
  }));
});

/**
 * @ignore - internal component.
 */
function NotchedOutline(props) {
  var className = props.className,
    label = props.label,
    notched = props.notched,
    other = (0,objectWithoutPropertiesLoose/* default */.Z)(props, NotchedOutline_excluded);
  var withLabel = label != null && label !== '';
  var ownerState = (0,esm_extends/* default */.Z)({}, props, {
    notched: notched,
    withLabel: withLabel
  });
  return /*#__PURE__*/(0,jsx_runtime.jsx)(NotchedOutlineRoot, (0,esm_extends/* default */.Z)({
    "aria-hidden": true,
    className: className,
    ownerState: ownerState
  }, other, {
    children: /*#__PURE__*/(0,jsx_runtime.jsx)(NotchedOutlineLegend, {
      ownerState: ownerState,
      children: withLabel ? /*#__PURE__*/(0,jsx_runtime.jsx)("span", {
        children: label
      }) :
      // notranslate needed while Google Translate will not fix zero-width space issue
      _span || (_span = /*#__PURE__*/(0,jsx_runtime.jsx)("span", {
        className: "notranslate",
        children: "\u200B"
      }))
    })
  }));
}
 false ? 0 : void 0;
;// CONCATENATED MODULE: ./node_modules/@mui/material/OutlinedInput/outlinedInputClasses.js




function getOutlinedInputUtilityClass(slot) {
  return (0,generateUtilityClass_generateUtilityClass/* default */.Z)('MuiOutlinedInput', slot);
}
var outlinedInputClasses = (0,esm_extends/* default */.Z)({}, InputBase_inputBaseClasses, (0,generateUtilityClasses/* default */.Z)('MuiOutlinedInput', ['root', 'notchedOutline', 'input']));
/* harmony default export */ var OutlinedInput_outlinedInputClasses = (outlinedInputClasses);
;// CONCATENATED MODULE: ./node_modules/@mui/material/OutlinedInput/OutlinedInput.js



var OutlinedInput_excluded = ["components", "fullWidth", "inputComponent", "label", "multiline", "notched", "slots", "type"];













var OutlinedInput_useUtilityClasses = function useUtilityClasses(ownerState) {
  var classes = ownerState.classes;
  var slots = {
    root: ['root'],
    notchedOutline: ['notchedOutline'],
    input: ['input']
  };
  var composedClasses = (0,composeClasses/* default */.Z)(slots, getOutlinedInputUtilityClass, classes);
  return (0,esm_extends/* default */.Z)({}, classes, composedClasses);
};
var OutlinedInputRoot = (0,styles_styled/* default */.ZP)(InputBaseRoot, {
  shouldForwardProp: function shouldForwardProp(prop) {
    return (0,styles_styled/* rootShouldForwardProp */.FO)(prop) || prop === 'classes';
  },
  name: 'MuiOutlinedInput',
  slot: 'Root',
  overridesResolver: rootOverridesResolver
})(function (_ref3) {
  var _extends2;
  var theme = _ref3.theme,
    ownerState = _ref3.ownerState;
  var borderColor = theme.palette.mode === 'light' ? 'rgba(0, 0, 0, 0.23)' : 'rgba(255, 255, 255, 0.23)';
  return (0,esm_extends/* default */.Z)((_extends2 = {
    position: 'relative',
    borderRadius: (theme.vars || theme).shape.borderRadius
  }, (0,esm_defineProperty/* default */.Z)(_extends2, "&:hover .".concat(OutlinedInput_outlinedInputClasses.notchedOutline), {
    borderColor: (theme.vars || theme).palette.text.primary
  }), (0,esm_defineProperty/* default */.Z)(_extends2, '@media (hover: none)', (0,esm_defineProperty/* default */.Z)({}, "&:hover .".concat(OutlinedInput_outlinedInputClasses.notchedOutline), {
    borderColor: theme.vars ? "rgba(".concat(theme.vars.palette.common.onBackgroundChannel, " / 0.23)") : borderColor
  })), (0,esm_defineProperty/* default */.Z)(_extends2, "&.".concat(OutlinedInput_outlinedInputClasses.focused, " .").concat(OutlinedInput_outlinedInputClasses.notchedOutline), {
    borderColor: (theme.vars || theme).palette[ownerState.color].main,
    borderWidth: 2
  }), (0,esm_defineProperty/* default */.Z)(_extends2, "&.".concat(OutlinedInput_outlinedInputClasses.error, " .").concat(OutlinedInput_outlinedInputClasses.notchedOutline), {
    borderColor: (theme.vars || theme).palette.error.main
  }), (0,esm_defineProperty/* default */.Z)(_extends2, "&.".concat(OutlinedInput_outlinedInputClasses.disabled, " .").concat(OutlinedInput_outlinedInputClasses.notchedOutline), {
    borderColor: (theme.vars || theme).palette.action.disabled
  }), _extends2), ownerState.startAdornment && {
    paddingLeft: 14
  }, ownerState.endAdornment && {
    paddingRight: 14
  }, ownerState.multiline && (0,esm_extends/* default */.Z)({
    padding: '16.5px 14px'
  }, ownerState.size === 'small' && {
    padding: '8.5px 14px'
  }));
});
var OutlinedInput_NotchedOutlineRoot = (0,styles_styled/* default */.ZP)(NotchedOutline, {
  name: 'MuiOutlinedInput',
  slot: 'NotchedOutline',
  overridesResolver: function overridesResolver(props, styles) {
    return styles.notchedOutline;
  }
})(function (_ref4) {
  var theme = _ref4.theme;
  var borderColor = theme.palette.mode === 'light' ? 'rgba(0, 0, 0, 0.23)' : 'rgba(255, 255, 255, 0.23)';
  return {
    borderColor: theme.vars ? "rgba(".concat(theme.vars.palette.common.onBackgroundChannel, " / 0.23)") : borderColor
  };
});
var OutlinedInputInput = (0,styles_styled/* default */.ZP)(InputBaseComponent, {
  name: 'MuiOutlinedInput',
  slot: 'Input',
  overridesResolver: inputOverridesResolver
})(function (_ref5) {
  var theme = _ref5.theme,
    ownerState = _ref5.ownerState;
  return (0,esm_extends/* default */.Z)({
    padding: '16.5px 14px'
  }, !theme.vars && {
    '&:-webkit-autofill': {
      WebkitBoxShadow: theme.palette.mode === 'light' ? null : '0 0 0 100px #266798 inset',
      WebkitTextFillColor: theme.palette.mode === 'light' ? null : '#fff',
      caretColor: theme.palette.mode === 'light' ? null : '#fff',
      borderRadius: 'inherit'
    }
  }, theme.vars && (0,esm_defineProperty/* default */.Z)({
    '&:-webkit-autofill': {
      borderRadius: 'inherit'
    }
  }, theme.getColorSchemeSelector('dark'), {
    '&:-webkit-autofill': {
      WebkitBoxShadow: '0 0 0 100px #266798 inset',
      WebkitTextFillColor: '#fff',
      caretColor: '#fff'
    }
  }), ownerState.size === 'small' && {
    padding: '8.5px 14px'
  }, ownerState.multiline && {
    padding: 0
  }, ownerState.startAdornment && {
    paddingLeft: 0
  }, ownerState.endAdornment && {
    paddingRight: 0
  });
});
var OutlinedInput = /*#__PURE__*/react.forwardRef(function OutlinedInput(inProps, ref) {
  var _ref, _slots$root, _ref2, _slots$input, _React$Fragment;
  var props = (0,styles_useThemeProps/* default */.Z)({
    props: inProps,
    name: 'MuiOutlinedInput'
  });
  var _props$components = props.components,
    components = _props$components === void 0 ? {} : _props$components,
    _props$fullWidth = props.fullWidth,
    fullWidth = _props$fullWidth === void 0 ? false : _props$fullWidth,
    _props$inputComponent = props.inputComponent,
    inputComponent = _props$inputComponent === void 0 ? 'input' : _props$inputComponent,
    label = props.label,
    _props$multiline = props.multiline,
    multiline = _props$multiline === void 0 ? false : _props$multiline,
    notched = props.notched,
    _props$slots = props.slots,
    slots = _props$slots === void 0 ? {} : _props$slots,
    _props$type = props.type,
    type = _props$type === void 0 ? 'text' : _props$type,
    other = (0,objectWithoutPropertiesLoose/* default */.Z)(props, OutlinedInput_excluded);
  var classes = OutlinedInput_useUtilityClasses(props);
  var muiFormControl = useFormControl();
  var fcs = formControlState({
    props: props,
    muiFormControl: muiFormControl,
    states: ['required']
  });
  var ownerState = (0,esm_extends/* default */.Z)({}, props, {
    color: fcs.color || 'primary',
    disabled: fcs.disabled,
    error: fcs.error,
    focused: fcs.focused,
    formControl: muiFormControl,
    fullWidth: fullWidth,
    hiddenLabel: fcs.hiddenLabel,
    multiline: multiline,
    size: fcs.size,
    type: type
  });
  var RootSlot = (_ref = (_slots$root = slots.root) != null ? _slots$root : components.Root) != null ? _ref : OutlinedInputRoot;
  var InputSlot = (_ref2 = (_slots$input = slots.input) != null ? _slots$input : components.Input) != null ? _ref2 : OutlinedInputInput;
  return /*#__PURE__*/(0,jsx_runtime.jsx)(InputBase_InputBase, (0,esm_extends/* default */.Z)({
    slots: {
      root: RootSlot,
      input: InputSlot
    },
    renderSuffix: function renderSuffix(state) {
      return /*#__PURE__*/(0,jsx_runtime.jsx)(OutlinedInput_NotchedOutlineRoot, {
        ownerState: ownerState,
        className: classes.notchedOutline,
        label: label != null && label !== '' && fcs.required ? _React$Fragment || (_React$Fragment = /*#__PURE__*/(0,jsx_runtime.jsxs)(react.Fragment, {
          children: [label, "\xA0", '*']
        })) : label,
        notched: typeof notched !== 'undefined' ? notched : Boolean(state.startAdornment || state.filled || state.focused)
      });
    },
    fullWidth: fullWidth,
    inputComponent: inputComponent,
    multiline: multiline,
    ref: ref,
    type: type
  }, other, {
    classes: (0,esm_extends/* default */.Z)({}, classes, {
      notchedOutline: null
    })
  }));
});
 false ? 0 : void 0;
OutlinedInput.muiName = 'Input';
/* harmony default export */ var OutlinedInput_OutlinedInput = (OutlinedInput);
;// CONCATENATED MODULE: ./node_modules/@mui/material/FormLabel/formLabelClasses.js


function getFormLabelUtilityClasses(slot) {
  return (0,generateUtilityClass_generateUtilityClass/* default */.Z)('MuiFormLabel', slot);
}
var formLabelClasses = (0,generateUtilityClasses/* default */.Z)('MuiFormLabel', ['root', 'colorSecondary', 'focused', 'disabled', 'error', 'filled', 'required', 'asterisk']);
/* harmony default export */ var FormLabel_formLabelClasses = (formLabelClasses);
;// CONCATENATED MODULE: ./node_modules/@mui/material/FormLabel/FormLabel.js



var FormLabel_excluded = ["children", "className", "color", "component", "disabled", "error", "filled", "focused", "required"];











var FormLabel_useUtilityClasses = function useUtilityClasses(ownerState) {
  var classes = ownerState.classes,
    color = ownerState.color,
    focused = ownerState.focused,
    disabled = ownerState.disabled,
    error = ownerState.error,
    filled = ownerState.filled,
    required = ownerState.required;
  var slots = {
    root: ['root', "color".concat((0,utils_capitalize/* default */.Z)(color)), disabled && 'disabled', error && 'error', filled && 'filled', focused && 'focused', required && 'required'],
    asterisk: ['asterisk', error && 'error']
  };
  return (0,composeClasses/* default */.Z)(slots, getFormLabelUtilityClasses, classes);
};
var FormLabelRoot = (0,styles_styled/* default */.ZP)('label', {
  name: 'MuiFormLabel',
  slot: 'Root',
  overridesResolver: function overridesResolver(_ref, styles) {
    var ownerState = _ref.ownerState;
    return (0,esm_extends/* default */.Z)({}, styles.root, ownerState.color === 'secondary' && styles.colorSecondary, ownerState.filled && styles.filled);
  }
})(function (_ref2) {
  var _extends2;
  var theme = _ref2.theme,
    ownerState = _ref2.ownerState;
  return (0,esm_extends/* default */.Z)({
    color: (theme.vars || theme).palette.text.secondary
  }, theme.typography.body1, (_extends2 = {
    lineHeight: '1.4375em',
    padding: 0,
    position: 'relative'
  }, (0,esm_defineProperty/* default */.Z)(_extends2, "&.".concat(FormLabel_formLabelClasses.focused), {
    color: (theme.vars || theme).palette[ownerState.color].main
  }), (0,esm_defineProperty/* default */.Z)(_extends2, "&.".concat(FormLabel_formLabelClasses.disabled), {
    color: (theme.vars || theme).palette.text.disabled
  }), (0,esm_defineProperty/* default */.Z)(_extends2, "&.".concat(FormLabel_formLabelClasses.error), {
    color: (theme.vars || theme).palette.error.main
  }), _extends2));
});
var AsteriskComponent = (0,styles_styled/* default */.ZP)('span', {
  name: 'MuiFormLabel',
  slot: 'Asterisk',
  overridesResolver: function overridesResolver(props, styles) {
    return styles.asterisk;
  }
})(function (_ref3) {
  var theme = _ref3.theme;
  return (0,esm_defineProperty/* default */.Z)({}, "&.".concat(FormLabel_formLabelClasses.error), {
    color: (theme.vars || theme).palette.error.main
  });
});
var FormLabel = /*#__PURE__*/react.forwardRef(function FormLabel(inProps, ref) {
  var props = (0,styles_useThemeProps/* default */.Z)({
    props: inProps,
    name: 'MuiFormLabel'
  });
  var children = props.children,
    className = props.className,
    _props$component = props.component,
    component = _props$component === void 0 ? 'label' : _props$component,
    other = (0,objectWithoutPropertiesLoose/* default */.Z)(props, FormLabel_excluded);
  var muiFormControl = useFormControl();
  var fcs = formControlState({
    props: props,
    muiFormControl: muiFormControl,
    states: ['color', 'required', 'focused', 'disabled', 'error', 'filled']
  });
  var ownerState = (0,esm_extends/* default */.Z)({}, props, {
    color: fcs.color || 'primary',
    component: component,
    disabled: fcs.disabled,
    error: fcs.error,
    filled: fcs.filled,
    focused: fcs.focused,
    required: fcs.required
  });
  var classes = FormLabel_useUtilityClasses(ownerState);
  return /*#__PURE__*/(0,jsx_runtime.jsxs)(FormLabelRoot, (0,esm_extends/* default */.Z)({
    as: component,
    ownerState: ownerState,
    className: (0,clsx_m/* default */.Z)(classes.root, className),
    ref: ref
  }, other, {
    children: [children, fcs.required && /*#__PURE__*/(0,jsx_runtime.jsxs)(AsteriskComponent, {
      ownerState: ownerState,
      "aria-hidden": true,
      className: classes.asterisk,
      children: ["\u2009", '*']
    })]
  }));
});
 false ? 0 : void 0;
/* harmony default export */ var FormLabel_FormLabel = (FormLabel);
;// CONCATENATED MODULE: ./node_modules/@mui/material/InputLabel/inputLabelClasses.js


function getInputLabelUtilityClasses(slot) {
  return (0,generateUtilityClass_generateUtilityClass/* default */.Z)('MuiInputLabel', slot);
}
var inputLabelClasses = (0,generateUtilityClasses/* default */.Z)('MuiInputLabel', ['root', 'focused', 'disabled', 'error', 'required', 'asterisk', 'formControl', 'sizeSmall', 'shrink', 'animated', 'standard', 'filled', 'outlined']);
/* harmony default export */ var InputLabel_inputLabelClasses = ((/* unused pure expression or super */ null && (inputLabelClasses)));
;// CONCATENATED MODULE: ./node_modules/@mui/material/InputLabel/InputLabel.js



var InputLabel_excluded = ["disableAnimation", "margin", "shrink", "variant", "className"];











var InputLabel_useUtilityClasses = function useUtilityClasses(ownerState) {
  var classes = ownerState.classes,
    formControl = ownerState.formControl,
    size = ownerState.size,
    shrink = ownerState.shrink,
    disableAnimation = ownerState.disableAnimation,
    variant = ownerState.variant,
    required = ownerState.required;
  var slots = {
    root: ['root', formControl && 'formControl', !disableAnimation && 'animated', shrink && 'shrink', size === 'small' && 'sizeSmall', variant],
    asterisk: [required && 'asterisk']
  };
  var composedClasses = (0,composeClasses/* default */.Z)(slots, getInputLabelUtilityClasses, classes);
  return (0,esm_extends/* default */.Z)({}, classes, composedClasses);
};
var InputLabelRoot = (0,styles_styled/* default */.ZP)(FormLabel_FormLabel, {
  shouldForwardProp: function shouldForwardProp(prop) {
    return (0,styles_styled/* rootShouldForwardProp */.FO)(prop) || prop === 'classes';
  },
  name: 'MuiInputLabel',
  slot: 'Root',
  overridesResolver: function overridesResolver(props, styles) {
    var ownerState = props.ownerState;
    return [(0,esm_defineProperty/* default */.Z)({}, "& .".concat(FormLabel_formLabelClasses.asterisk), styles.asterisk), styles.root, ownerState.formControl && styles.formControl, ownerState.size === 'small' && styles.sizeSmall, ownerState.shrink && styles.shrink, !ownerState.disableAnimation && styles.animated, styles[ownerState.variant]];
  }
})(function (_ref2) {
  var theme = _ref2.theme,
    ownerState = _ref2.ownerState;
  return (0,esm_extends/* default */.Z)({
    display: 'block',
    transformOrigin: 'top left',
    whiteSpace: 'nowrap',
    overflow: 'hidden',
    textOverflow: 'ellipsis',
    maxWidth: '100%'
  }, ownerState.formControl && {
    position: 'absolute',
    left: 0,
    top: 0,
    // slight alteration to spec spacing to match visual spec result
    transform: 'translate(0, 20px) scale(1)'
  }, ownerState.size === 'small' && {
    // Compensation for the `Input.inputSizeSmall` style.
    transform: 'translate(0, 17px) scale(1)'
  }, ownerState.shrink && {
    transform: 'translate(0, -1.5px) scale(0.75)',
    transformOrigin: 'top left',
    maxWidth: '133%'
  }, !ownerState.disableAnimation && {
    transition: theme.transitions.create(['color', 'transform', 'max-width'], {
      duration: theme.transitions.duration.shorter,
      easing: theme.transitions.easing.easeOut
    })
  }, ownerState.variant === 'filled' && (0,esm_extends/* default */.Z)({
    // Chrome's autofill feature gives the input field a yellow background.
    // Since the input field is behind the label in the HTML tree,
    // the input field is drawn last and hides the label with an opaque background color.
    // zIndex: 1 will raise the label above opaque background-colors of input.
    zIndex: 1,
    pointerEvents: 'none',
    transform: 'translate(12px, 16px) scale(1)',
    maxWidth: 'calc(100% - 24px)'
  }, ownerState.size === 'small' && {
    transform: 'translate(12px, 13px) scale(1)'
  }, ownerState.shrink && (0,esm_extends/* default */.Z)({
    userSelect: 'none',
    pointerEvents: 'auto',
    transform: 'translate(12px, 7px) scale(0.75)',
    maxWidth: 'calc(133% - 24px)'
  }, ownerState.size === 'small' && {
    transform: 'translate(12px, 4px) scale(0.75)'
  })), ownerState.variant === 'outlined' && (0,esm_extends/* default */.Z)({
    // see comment above on filled.zIndex
    zIndex: 1,
    pointerEvents: 'none',
    transform: 'translate(14px, 16px) scale(1)',
    maxWidth: 'calc(100% - 24px)'
  }, ownerState.size === 'small' && {
    transform: 'translate(14px, 9px) scale(1)'
  }, ownerState.shrink && {
    userSelect: 'none',
    pointerEvents: 'auto',
    maxWidth: 'calc(133% - 24px)',
    transform: 'translate(14px, -9px) scale(0.75)'
  }));
});
var InputLabel = /*#__PURE__*/react.forwardRef(function InputLabel(inProps, ref) {
  var props = (0,styles_useThemeProps/* default */.Z)({
    name: 'MuiInputLabel',
    props: inProps
  });
  var _props$disableAnimati = props.disableAnimation,
    disableAnimation = _props$disableAnimati === void 0 ? false : _props$disableAnimati,
    shrinkProp = props.shrink,
    className = props.className,
    other = (0,objectWithoutPropertiesLoose/* default */.Z)(props, InputLabel_excluded);
  var muiFormControl = useFormControl();
  var shrink = shrinkProp;
  if (typeof shrink === 'undefined' && muiFormControl) {
    shrink = muiFormControl.filled || muiFormControl.focused || muiFormControl.adornedStart;
  }
  var fcs = formControlState({
    props: props,
    muiFormControl: muiFormControl,
    states: ['size', 'variant', 'required']
  });
  var ownerState = (0,esm_extends/* default */.Z)({}, props, {
    disableAnimation: disableAnimation,
    formControl: muiFormControl,
    shrink: shrink,
    size: fcs.size,
    variant: fcs.variant,
    required: fcs.required
  });
  var classes = InputLabel_useUtilityClasses(ownerState);
  return /*#__PURE__*/(0,jsx_runtime.jsx)(InputLabelRoot, (0,esm_extends/* default */.Z)({
    "data-shrink": shrink,
    ownerState: ownerState,
    ref: ref,
    className: (0,clsx_m/* default */.Z)(classes.root, className)
  }, other, {
    classes: classes
  }));
});
 false ? 0 : void 0;
/* harmony default export */ var InputLabel_InputLabel = (InputLabel);
// EXTERNAL MODULE: ./node_modules/@mui/material/utils/isMuiElement.js + 1 modules
var isMuiElement = __webpack_require__(9103);
;// CONCATENATED MODULE: ./node_modules/@mui/material/FormControl/formControlClasses.js


function getFormControlUtilityClasses(slot) {
  return (0,generateUtilityClass_generateUtilityClass/* default */.Z)('MuiFormControl', slot);
}
var formControlClasses = (0,generateUtilityClasses/* default */.Z)('MuiFormControl', ['root', 'marginNone', 'marginNormal', 'marginDense', 'fullWidth', 'disabled']);
/* harmony default export */ var FormControl_formControlClasses = ((/* unused pure expression or super */ null && (formControlClasses)));
;// CONCATENATED MODULE: ./node_modules/@mui/material/FormControl/FormControl.js



var FormControl_excluded = ["children", "className", "color", "component", "disabled", "error", "focused", "fullWidth", "hiddenLabel", "margin", "required", "size", "variant"];












var FormControl_useUtilityClasses = function useUtilityClasses(ownerState) {
  var classes = ownerState.classes,
    margin = ownerState.margin,
    fullWidth = ownerState.fullWidth;
  var slots = {
    root: ['root', margin !== 'none' && "margin".concat((0,utils_capitalize/* default */.Z)(margin)), fullWidth && 'fullWidth']
  };
  return (0,composeClasses/* default */.Z)(slots, getFormControlUtilityClasses, classes);
};
var FormControlRoot = (0,styles_styled/* default */.ZP)('div', {
  name: 'MuiFormControl',
  slot: 'Root',
  overridesResolver: function overridesResolver(_ref, styles) {
    var ownerState = _ref.ownerState;
    return (0,esm_extends/* default */.Z)({}, styles.root, styles["margin".concat((0,utils_capitalize/* default */.Z)(ownerState.margin))], ownerState.fullWidth && styles.fullWidth);
  }
})(function (_ref2) {
  var ownerState = _ref2.ownerState;
  return (0,esm_extends/* default */.Z)({
    display: 'inline-flex',
    flexDirection: 'column',
    position: 'relative',
    // Reset fieldset default style.
    minWidth: 0,
    padding: 0,
    margin: 0,
    border: 0,
    verticalAlign: 'top'
  }, ownerState.margin === 'normal' && {
    marginTop: 16,
    marginBottom: 8
  }, ownerState.margin === 'dense' && {
    marginTop: 8,
    marginBottom: 4
  }, ownerState.fullWidth && {
    width: '100%'
  });
});

/**
 * Provides context such as filled/focused/error/required for form inputs.
 * Relying on the context provides high flexibility and ensures that the state always stays
 * consistent across the children of the `FormControl`.
 * This context is used by the following components:
 *
 *  - FormLabel
 *  - FormHelperText
 *  - Input
 *  - InputLabel
 *
 * You can find one composition example below and more going to [the demos](/material-ui/react-text-field/#components).
 *
 * ```jsx
 * <FormControl>
 *   <InputLabel htmlFor="my-input">Email address</InputLabel>
 *   <Input id="my-input" aria-describedby="my-helper-text" />
 *   <FormHelperText id="my-helper-text">We'll never share your email.</FormHelperText>
 * </FormControl>
 * ```
 *
 * ⚠️ Only one `InputBase` can be used within a FormControl because it creates visual inconsistencies.
 * For instance, only one input can be focused at the same time, the state shouldn't be shared.
 */
var FormControl = /*#__PURE__*/react.forwardRef(function FormControl(inProps, ref) {
  var props = (0,styles_useThemeProps/* default */.Z)({
    props: inProps,
    name: 'MuiFormControl'
  });
  var children = props.children,
    className = props.className,
    _props$color = props.color,
    color = _props$color === void 0 ? 'primary' : _props$color,
    _props$component = props.component,
    component = _props$component === void 0 ? 'div' : _props$component,
    _props$disabled = props.disabled,
    disabled = _props$disabled === void 0 ? false : _props$disabled,
    _props$error = props.error,
    error = _props$error === void 0 ? false : _props$error,
    visuallyFocused = props.focused,
    _props$fullWidth = props.fullWidth,
    fullWidth = _props$fullWidth === void 0 ? false : _props$fullWidth,
    _props$hiddenLabel = props.hiddenLabel,
    hiddenLabel = _props$hiddenLabel === void 0 ? false : _props$hiddenLabel,
    _props$margin = props.margin,
    margin = _props$margin === void 0 ? 'none' : _props$margin,
    _props$required = props.required,
    required = _props$required === void 0 ? false : _props$required,
    _props$size = props.size,
    size = _props$size === void 0 ? 'medium' : _props$size,
    _props$variant = props.variant,
    variant = _props$variant === void 0 ? 'outlined' : _props$variant,
    other = (0,objectWithoutPropertiesLoose/* default */.Z)(props, FormControl_excluded);
  var ownerState = (0,esm_extends/* default */.Z)({}, props, {
    color: color,
    component: component,
    disabled: disabled,
    error: error,
    fullWidth: fullWidth,
    hiddenLabel: hiddenLabel,
    margin: margin,
    required: required,
    size: size,
    variant: variant
  });
  var classes = FormControl_useUtilityClasses(ownerState);
  var _React$useState = react.useState(function () {
      // We need to iterate through the children and find the Input in order
      // to fully support server-side rendering.
      var initialAdornedStart = false;
      if (children) {
        react.Children.forEach(children, function (child) {
          if (!(0,isMuiElement/* default */.Z)(child, ['Input', 'Select'])) {
            return;
          }
          var input = (0,isMuiElement/* default */.Z)(child, ['Select']) ? child.props.input : child;
          if (input && isAdornedStart(input.props)) {
            initialAdornedStart = true;
          }
        });
      }
      return initialAdornedStart;
    }),
    _React$useState2 = (0,slicedToArray/* default */.Z)(_React$useState, 2),
    adornedStart = _React$useState2[0],
    setAdornedStart = _React$useState2[1];
  var _React$useState3 = react.useState(function () {
      // We need to iterate through the children and find the Input in order
      // to fully support server-side rendering.
      var initialFilled = false;
      if (children) {
        react.Children.forEach(children, function (child) {
          if (!(0,isMuiElement/* default */.Z)(child, ['Input', 'Select'])) {
            return;
          }
          if (isFilled(child.props, true)) {
            initialFilled = true;
          }
        });
      }
      return initialFilled;
    }),
    _React$useState4 = (0,slicedToArray/* default */.Z)(_React$useState3, 2),
    filled = _React$useState4[0],
    setFilled = _React$useState4[1];
  var _React$useState5 = react.useState(false),
    _React$useState6 = (0,slicedToArray/* default */.Z)(_React$useState5, 2),
    focusedState = _React$useState6[0],
    setFocused = _React$useState6[1];
  if (disabled && focusedState) {
    setFocused(false);
  }
  var focused = visuallyFocused !== undefined && !disabled ? visuallyFocused : focusedState;
  var registerEffect;
  if (false) { var registeredInput; }
  var childContext = react.useMemo(function () {
    return {
      adornedStart: adornedStart,
      setAdornedStart: setAdornedStart,
      color: color,
      disabled: disabled,
      error: error,
      filled: filled,
      focused: focused,
      fullWidth: fullWidth,
      hiddenLabel: hiddenLabel,
      size: size,
      onBlur: function onBlur() {
        setFocused(false);
      },
      onEmpty: function onEmpty() {
        setFilled(false);
      },
      onFilled: function onFilled() {
        setFilled(true);
      },
      onFocus: function onFocus() {
        setFocused(true);
      },
      registerEffect: registerEffect,
      required: required,
      variant: variant
    };
  }, [adornedStart, color, disabled, error, filled, focused, fullWidth, hiddenLabel, registerEffect, required, size, variant]);
  return /*#__PURE__*/(0,jsx_runtime.jsx)(FormControl_FormControlContext.Provider, {
    value: childContext,
    children: /*#__PURE__*/(0,jsx_runtime.jsx)(FormControlRoot, (0,esm_extends/* default */.Z)({
      as: component,
      ownerState: ownerState,
      className: (0,clsx_m/* default */.Z)(classes.root, className),
      ref: ref
    }, other, {
      children: children
    }))
  });
});
 false ? 0 : void 0;
/* harmony default export */ var FormControl_FormControl = (FormControl);
;// CONCATENATED MODULE: ./node_modules/@mui/material/FormHelperText/formHelperTextClasses.js


function getFormHelperTextUtilityClasses(slot) {
  return (0,generateUtilityClass_generateUtilityClass/* default */.Z)('MuiFormHelperText', slot);
}
var formHelperTextClasses = (0,generateUtilityClasses/* default */.Z)('MuiFormHelperText', ['root', 'error', 'disabled', 'sizeSmall', 'sizeMedium', 'contained', 'focused', 'filled', 'required']);
/* harmony default export */ var FormHelperText_formHelperTextClasses = (formHelperTextClasses);
;// CONCATENATED MODULE: ./node_modules/@mui/material/FormHelperText/FormHelperText.js



var FormHelperText_span;
var FormHelperText_excluded = ["children", "className", "component", "disabled", "error", "filled", "focused", "margin", "required", "variant"];











var FormHelperText_useUtilityClasses = function useUtilityClasses(ownerState) {
  var classes = ownerState.classes,
    contained = ownerState.contained,
    size = ownerState.size,
    disabled = ownerState.disabled,
    error = ownerState.error,
    filled = ownerState.filled,
    focused = ownerState.focused,
    required = ownerState.required;
  var slots = {
    root: ['root', disabled && 'disabled', error && 'error', size && "size".concat((0,utils_capitalize/* default */.Z)(size)), contained && 'contained', focused && 'focused', filled && 'filled', required && 'required']
  };
  return (0,composeClasses/* default */.Z)(slots, getFormHelperTextUtilityClasses, classes);
};
var FormHelperTextRoot = (0,styles_styled/* default */.ZP)('p', {
  name: 'MuiFormHelperText',
  slot: 'Root',
  overridesResolver: function overridesResolver(props, styles) {
    var ownerState = props.ownerState;
    return [styles.root, ownerState.size && styles["size".concat((0,utils_capitalize/* default */.Z)(ownerState.size))], ownerState.contained && styles.contained, ownerState.filled && styles.filled];
  }
})(function (_ref) {
  var _extends2;
  var theme = _ref.theme,
    ownerState = _ref.ownerState;
  return (0,esm_extends/* default */.Z)({
    color: (theme.vars || theme).palette.text.secondary
  }, theme.typography.caption, (_extends2 = {
    textAlign: 'left',
    marginTop: 3,
    marginRight: 0,
    marginBottom: 0,
    marginLeft: 0
  }, (0,esm_defineProperty/* default */.Z)(_extends2, "&.".concat(FormHelperText_formHelperTextClasses.disabled), {
    color: (theme.vars || theme).palette.text.disabled
  }), (0,esm_defineProperty/* default */.Z)(_extends2, "&.".concat(FormHelperText_formHelperTextClasses.error), {
    color: (theme.vars || theme).palette.error.main
  }), _extends2), ownerState.size === 'small' && {
    marginTop: 4
  }, ownerState.contained && {
    marginLeft: 14,
    marginRight: 14
  });
});
var FormHelperText = /*#__PURE__*/react.forwardRef(function FormHelperText(inProps, ref) {
  var props = (0,styles_useThemeProps/* default */.Z)({
    props: inProps,
    name: 'MuiFormHelperText'
  });
  var children = props.children,
    className = props.className,
    _props$component = props.component,
    component = _props$component === void 0 ? 'p' : _props$component,
    other = (0,objectWithoutPropertiesLoose/* default */.Z)(props, FormHelperText_excluded);
  var muiFormControl = useFormControl();
  var fcs = formControlState({
    props: props,
    muiFormControl: muiFormControl,
    states: ['variant', 'size', 'disabled', 'error', 'filled', 'focused', 'required']
  });
  var ownerState = (0,esm_extends/* default */.Z)({}, props, {
    component: component,
    contained: fcs.variant === 'filled' || fcs.variant === 'outlined',
    variant: fcs.variant,
    size: fcs.size,
    disabled: fcs.disabled,
    error: fcs.error,
    filled: fcs.filled,
    focused: fcs.focused,
    required: fcs.required
  });
  var classes = FormHelperText_useUtilityClasses(ownerState);
  return /*#__PURE__*/(0,jsx_runtime.jsx)(FormHelperTextRoot, (0,esm_extends/* default */.Z)({
    as: component,
    ownerState: ownerState,
    className: (0,clsx_m/* default */.Z)(classes.root, className),
    ref: ref
  }, other, {
    children: children === ' ' ?
    // notranslate needed while Google Translate will not fix zero-width space issue
    FormHelperText_span || (FormHelperText_span = /*#__PURE__*/(0,jsx_runtime.jsx)("span", {
      className: "notranslate",
      children: "\u200B"
    })) : children
  }));
});
 false ? 0 : void 0;
/* harmony default export */ var FormHelperText_FormHelperText = (FormHelperText);
// EXTERNAL MODULE: ./node_modules/react-is/index.js
var react_is = __webpack_require__(7441);
// EXTERNAL MODULE: ./node_modules/@mui/material/utils/ownerDocument.js
var ownerDocument = __webpack_require__(8301);
;// CONCATENATED MODULE: ./node_modules/@mui/material/List/ListContext.js


/**
 * @ignore - internal component.
 */
var ListContext = /*#__PURE__*/react.createContext({});
if (false) {}
/* harmony default export */ var List_ListContext = (ListContext);
;// CONCATENATED MODULE: ./node_modules/@mui/material/List/listClasses.js


function getListUtilityClass(slot) {
  return (0,generateUtilityClass_generateUtilityClass/* default */.Z)('MuiList', slot);
}
var listClasses = (0,generateUtilityClasses/* default */.Z)('MuiList', ['root', 'padding', 'dense', 'subheader']);
/* harmony default export */ var List_listClasses = ((/* unused pure expression or super */ null && (listClasses)));
;// CONCATENATED MODULE: ./node_modules/@mui/material/List/List.js


var List_excluded = ["children", "className", "component", "dense", "disablePadding", "subheader"];










var List_useUtilityClasses = function useUtilityClasses(ownerState) {
  var classes = ownerState.classes,
    disablePadding = ownerState.disablePadding,
    dense = ownerState.dense,
    subheader = ownerState.subheader;
  var slots = {
    root: ['root', !disablePadding && 'padding', dense && 'dense', subheader && 'subheader']
  };
  return (0,composeClasses/* default */.Z)(slots, getListUtilityClass, classes);
};
var ListRoot = (0,styles_styled/* default */.ZP)('ul', {
  name: 'MuiList',
  slot: 'Root',
  overridesResolver: function overridesResolver(props, styles) {
    var ownerState = props.ownerState;
    return [styles.root, !ownerState.disablePadding && styles.padding, ownerState.dense && styles.dense, ownerState.subheader && styles.subheader];
  }
})(function (_ref) {
  var ownerState = _ref.ownerState;
  return (0,esm_extends/* default */.Z)({
    listStyle: 'none',
    margin: 0,
    padding: 0,
    position: 'relative'
  }, !ownerState.disablePadding && {
    paddingTop: 8,
    paddingBottom: 8
  }, ownerState.subheader && {
    paddingTop: 0
  });
});
var List = /*#__PURE__*/react.forwardRef(function List(inProps, ref) {
  var props = (0,styles_useThemeProps/* default */.Z)({
    props: inProps,
    name: 'MuiList'
  });
  var children = props.children,
    className = props.className,
    _props$component = props.component,
    component = _props$component === void 0 ? 'ul' : _props$component,
    _props$dense = props.dense,
    dense = _props$dense === void 0 ? false : _props$dense,
    _props$disablePadding = props.disablePadding,
    disablePadding = _props$disablePadding === void 0 ? false : _props$disablePadding,
    subheader = props.subheader,
    other = (0,objectWithoutPropertiesLoose/* default */.Z)(props, List_excluded);
  var context = react.useMemo(function () {
    return {
      dense: dense
    };
  }, [dense]);
  var ownerState = (0,esm_extends/* default */.Z)({}, props, {
    component: component,
    dense: dense,
    disablePadding: disablePadding
  });
  var classes = List_useUtilityClasses(ownerState);
  return /*#__PURE__*/(0,jsx_runtime.jsx)(List_ListContext.Provider, {
    value: context,
    children: /*#__PURE__*/(0,jsx_runtime.jsxs)(ListRoot, (0,esm_extends/* default */.Z)({
      as: component,
      className: (0,clsx_m/* default */.Z)(classes.root, className),
      ref: ref,
      ownerState: ownerState
    }, other, {
      children: [subheader, children]
    }))
  });
});
 false ? 0 : void 0;
/* harmony default export */ var List_List = (List);
;// CONCATENATED MODULE: ./node_modules/@mui/utils/esm/getScrollbarSize.js
// A change of the browser zoom change the scrollbar size.
// Credit https://github.com/twbs/bootstrap/blob/488fd8afc535ca3a6ad4dc581f5e89217b6a36ac/js/src/util/scrollbar.js#L14-L18
function getScrollbarSize(doc) {
  // https://developer.mozilla.org/en-US/docs/Web/API/Window/innerWidth#usage_notes
  var documentWidth = doc.documentElement.clientWidth;
  return Math.abs(window.innerWidth - documentWidth);
}
;// CONCATENATED MODULE: ./node_modules/@mui/material/utils/getScrollbarSize.js

/* harmony default export */ var utils_getScrollbarSize = (getScrollbarSize);
;// CONCATENATED MODULE: ./node_modules/@mui/material/MenuList/MenuList.js


var MenuList_excluded = ["actions", "autoFocus", "autoFocusItem", "children", "className", "disabledItemsFocusable", "disableListWrap", "onKeyDown", "variant"];









function nextItem(list, item, disableListWrap) {
  if (list === item) {
    return list.firstChild;
  }
  if (item && item.nextElementSibling) {
    return item.nextElementSibling;
  }
  return disableListWrap ? null : list.firstChild;
}
function previousItem(list, item, disableListWrap) {
  if (list === item) {
    return disableListWrap ? list.firstChild : list.lastChild;
  }
  if (item && item.previousElementSibling) {
    return item.previousElementSibling;
  }
  return disableListWrap ? null : list.lastChild;
}
function textCriteriaMatches(nextFocus, textCriteria) {
  if (textCriteria === undefined) {
    return true;
  }
  var text = nextFocus.innerText;
  if (text === undefined) {
    // jsdom doesn't support innerText
    text = nextFocus.textContent;
  }
  text = text.trim().toLowerCase();
  if (text.length === 0) {
    return false;
  }
  if (textCriteria.repeating) {
    return text[0] === textCriteria.keys[0];
  }
  return text.indexOf(textCriteria.keys.join('')) === 0;
}
function moveFocus(list, currentFocus, disableListWrap, disabledItemsFocusable, traversalFunction, textCriteria) {
  var wrappedOnce = false;
  var nextFocus = traversalFunction(list, currentFocus, currentFocus ? disableListWrap : false);
  while (nextFocus) {
    // Prevent infinite loop.
    if (nextFocus === list.firstChild) {
      if (wrappedOnce) {
        return false;
      }
      wrappedOnce = true;
    }

    // Same logic as useAutocomplete.js
    var nextFocusDisabled = disabledItemsFocusable ? false : nextFocus.disabled || nextFocus.getAttribute('aria-disabled') === 'true';
    if (!nextFocus.hasAttribute('tabindex') || !textCriteriaMatches(nextFocus, textCriteria) || nextFocusDisabled) {
      // Move to the next element.
      nextFocus = traversalFunction(list, nextFocus, disableListWrap);
    } else {
      nextFocus.focus();
      return true;
    }
  }
  return false;
}

/**
 * A permanently displayed menu following https://www.w3.org/WAI/ARIA/apg/patterns/menubutton/.
 * It's exposed to help customization of the [`Menu`](/material-ui/api/menu/) component if you
 * use it separately you need to move focus into the component manually. Once
 * the focus is placed inside the component it is fully keyboard accessible.
 */
var MenuList = /*#__PURE__*/react.forwardRef(function MenuList(props, ref) {
  var actions = props.actions,
    _props$autoFocus = props.autoFocus,
    autoFocus = _props$autoFocus === void 0 ? false : _props$autoFocus,
    _props$autoFocusItem = props.autoFocusItem,
    autoFocusItem = _props$autoFocusItem === void 0 ? false : _props$autoFocusItem,
    children = props.children,
    className = props.className,
    _props$disabledItemsF = props.disabledItemsFocusable,
    disabledItemsFocusable = _props$disabledItemsF === void 0 ? false : _props$disabledItemsF,
    _props$disableListWra = props.disableListWrap,
    disableListWrap = _props$disableListWra === void 0 ? false : _props$disableListWra,
    onKeyDown = props.onKeyDown,
    _props$variant = props.variant,
    variant = _props$variant === void 0 ? 'selectedMenu' : _props$variant,
    other = (0,objectWithoutPropertiesLoose/* default */.Z)(props, MenuList_excluded);
  var listRef = react.useRef(null);
  var textCriteriaRef = react.useRef({
    keys: [],
    repeating: true,
    previousKeyMatched: true,
    lastTime: null
  });
  (0,useEnhancedEffect/* default */.Z)(function () {
    if (autoFocus) {
      listRef.current.focus();
    }
  }, [autoFocus]);
  react.useImperativeHandle(actions, function () {
    return {
      adjustStyleForScrollbar: function adjustStyleForScrollbar(containerElement, theme) {
        // Let's ignore that piece of logic if users are already overriding the width
        // of the menu.
        var noExplicitWidth = !listRef.current.style.width;
        if (containerElement.clientHeight < listRef.current.clientHeight && noExplicitWidth) {
          var scrollbarSize = "".concat(utils_getScrollbarSize((0,ownerDocument/* default */.Z)(containerElement)), "px");
          listRef.current.style[theme.direction === 'rtl' ? 'paddingLeft' : 'paddingRight'] = scrollbarSize;
          listRef.current.style.width = "calc(100% + ".concat(scrollbarSize, ")");
        }
        return listRef.current;
      }
    };
  }, []);
  var handleKeyDown = function handleKeyDown(event) {
    var list = listRef.current;
    var key = event.key;
    /**
     * @type {Element} - will always be defined since we are in a keydown handler
     * attached to an element. A keydown event is either dispatched to the activeElement
     * or document.body or document.documentElement. Only the first case will
     * trigger this specific handler.
     */
    var currentFocus = (0,ownerDocument/* default */.Z)(list).activeElement;
    if (key === 'ArrowDown') {
      // Prevent scroll of the page
      event.preventDefault();
      moveFocus(list, currentFocus, disableListWrap, disabledItemsFocusable, nextItem);
    } else if (key === 'ArrowUp') {
      event.preventDefault();
      moveFocus(list, currentFocus, disableListWrap, disabledItemsFocusable, previousItem);
    } else if (key === 'Home') {
      event.preventDefault();
      moveFocus(list, null, disableListWrap, disabledItemsFocusable, nextItem);
    } else if (key === 'End') {
      event.preventDefault();
      moveFocus(list, null, disableListWrap, disabledItemsFocusable, previousItem);
    } else if (key.length === 1) {
      var criteria = textCriteriaRef.current;
      var lowerKey = key.toLowerCase();
      var currTime = performance.now();
      if (criteria.keys.length > 0) {
        // Reset
        if (currTime - criteria.lastTime > 500) {
          criteria.keys = [];
          criteria.repeating = true;
          criteria.previousKeyMatched = true;
        } else if (criteria.repeating && lowerKey !== criteria.keys[0]) {
          criteria.repeating = false;
        }
      }
      criteria.lastTime = currTime;
      criteria.keys.push(lowerKey);
      var keepFocusOnCurrent = currentFocus && !criteria.repeating && textCriteriaMatches(currentFocus, criteria);
      if (criteria.previousKeyMatched && (keepFocusOnCurrent || moveFocus(list, currentFocus, false, disabledItemsFocusable, nextItem, criteria))) {
        event.preventDefault();
      } else {
        criteria.previousKeyMatched = false;
      }
    }
    if (onKeyDown) {
      onKeyDown(event);
    }
  };
  var handleRef = (0,useForkRef/* default */.Z)(listRef, ref);

  /**
   * the index of the item should receive focus
   * in a `variant="selectedMenu"` it's the first `selected` item
   * otherwise it's the very first item.
   */
  var activeItemIndex = -1;
  // since we inject focus related props into children we have to do a lookahead
  // to check if there is a `selected` item. We're looking for the last `selected`
  // item and use the first valid item as a fallback
  react.Children.forEach(children, function (child, index) {
    if (! /*#__PURE__*/react.isValidElement(child)) {
      return;
    }
    if (false) {}
    if (!child.props.disabled) {
      if (variant === 'selectedMenu' && child.props.selected) {
        activeItemIndex = index;
      } else if (activeItemIndex === -1) {
        activeItemIndex = index;
      }
    }
  });
  var items = react.Children.map(children, function (child, index) {
    if (index === activeItemIndex) {
      var newChildProps = {};
      if (autoFocusItem) {
        newChildProps.autoFocus = true;
      }
      if (child.props.tabIndex === undefined && variant === 'selectedMenu') {
        newChildProps.tabIndex = 0;
      }
      return /*#__PURE__*/react.cloneElement(child, newChildProps);
    }
    return child;
  });
  return /*#__PURE__*/(0,jsx_runtime.jsx)(List_List, (0,esm_extends/* default */.Z)({
    role: "menu",
    ref: handleRef,
    className: className,
    onKeyDown: handleKeyDown,
    tabIndex: autoFocus ? 0 : -1
  }, other, {
    children: items
  }));
});
 false ? 0 : void 0;
/* harmony default export */ var MenuList_MenuList = (MenuList);
;// CONCATENATED MODULE: ./node_modules/@mui/material/styles/getOverlayAlpha.js
// Inspired by https://github.com/material-components/material-components-ios/blob/bca36107405594d5b7b16265a5b0ed698f85a5ee/components/Elevation/src/UIColor%2BMaterialElevation.m#L61
var getOverlayAlpha = function getOverlayAlpha(elevation) {
  var alphaValue;
  if (elevation < 1) {
    alphaValue = 5.11916 * Math.pow(elevation, 2);
  } else {
    alphaValue = 4.5 * Math.log(elevation + 1) + 2;
  }
  return (alphaValue / 100).toFixed(2);
};
/* harmony default export */ var styles_getOverlayAlpha = (getOverlayAlpha);
;// CONCATENATED MODULE: ./node_modules/@mui/material/Paper/paperClasses.js


function getPaperUtilityClass(slot) {
  return (0,generateUtilityClass_generateUtilityClass/* default */.Z)('MuiPaper', slot);
}
var paperClasses = (0,generateUtilityClasses/* default */.Z)('MuiPaper', ['root', 'rounded', 'outlined', 'elevation', 'elevation0', 'elevation1', 'elevation2', 'elevation3', 'elevation4', 'elevation5', 'elevation6', 'elevation7', 'elevation8', 'elevation9', 'elevation10', 'elevation11', 'elevation12', 'elevation13', 'elevation14', 'elevation15', 'elevation16', 'elevation17', 'elevation18', 'elevation19', 'elevation20', 'elevation21', 'elevation22', 'elevation23', 'elevation24']);
/* harmony default export */ var Paper_paperClasses = ((/* unused pure expression or super */ null && (paperClasses)));
;// CONCATENATED MODULE: ./node_modules/@mui/material/Paper/Paper.js


var Paper_excluded = ["className", "component", "elevation", "square", "variant"];












var Paper_useUtilityClasses = function useUtilityClasses(ownerState) {
  var square = ownerState.square,
    elevation = ownerState.elevation,
    variant = ownerState.variant,
    classes = ownerState.classes;
  var slots = {
    root: ['root', variant, !square && 'rounded', variant === 'elevation' && "elevation".concat(elevation)]
  };
  return (0,composeClasses/* default */.Z)(slots, getPaperUtilityClass, classes);
};
var PaperRoot = (0,styles_styled/* default */.ZP)('div', {
  name: 'MuiPaper',
  slot: 'Root',
  overridesResolver: function overridesResolver(props, styles) {
    var ownerState = props.ownerState;
    return [styles.root, styles[ownerState.variant], !ownerState.square && styles.rounded, ownerState.variant === 'elevation' && styles["elevation".concat(ownerState.elevation)]];
  }
})(function (_ref) {
  var theme = _ref.theme,
    ownerState = _ref.ownerState;
  var _theme$vars$overlays;
  return (0,esm_extends/* default */.Z)({
    backgroundColor: (theme.vars || theme).palette.background.paper,
    color: (theme.vars || theme).palette.text.primary,
    transition: theme.transitions.create('box-shadow')
  }, !ownerState.square && {
    borderRadius: theme.shape.borderRadius
  }, ownerState.variant === 'outlined' && {
    border: "1px solid ".concat((theme.vars || theme).palette.divider)
  }, ownerState.variant === 'elevation' && (0,esm_extends/* default */.Z)({
    boxShadow: (theme.vars || theme).shadows[ownerState.elevation]
  }, !theme.vars && theme.palette.mode === 'dark' && {
    backgroundImage: "linear-gradient(".concat((0,colorManipulator/* alpha */.Fq)('#fff', styles_getOverlayAlpha(ownerState.elevation)), ", ").concat((0,colorManipulator/* alpha */.Fq)('#fff', styles_getOverlayAlpha(ownerState.elevation)), ")")
  }, theme.vars && {
    backgroundImage: (_theme$vars$overlays = theme.vars.overlays) == null ? void 0 : _theme$vars$overlays[ownerState.elevation]
  }));
});
var Paper = /*#__PURE__*/react.forwardRef(function Paper(inProps, ref) {
  var props = (0,styles_useThemeProps/* default */.Z)({
    props: inProps,
    name: 'MuiPaper'
  });
  var className = props.className,
    _props$component = props.component,
    component = _props$component === void 0 ? 'div' : _props$component,
    _props$elevation = props.elevation,
    elevation = _props$elevation === void 0 ? 1 : _props$elevation,
    _props$square = props.square,
    square = _props$square === void 0 ? false : _props$square,
    _props$variant = props.variant,
    variant = _props$variant === void 0 ? 'elevation' : _props$variant,
    other = (0,objectWithoutPropertiesLoose/* default */.Z)(props, Paper_excluded);
  var ownerState = (0,esm_extends/* default */.Z)({}, props, {
    component: component,
    elevation: elevation,
    square: square,
    variant: variant
  });
  var classes = Paper_useUtilityClasses(ownerState);
  if (false) { var theme; }
  return /*#__PURE__*/(0,jsx_runtime.jsx)(PaperRoot, (0,esm_extends/* default */.Z)({
    as: component,
    ownerState: ownerState,
    className: (0,clsx_m/* default */.Z)(classes.root, className),
    ref: ref
  }, other));
});
 false ? 0 : void 0;
/* harmony default export */ var Paper_Paper = (Paper);
// EXTERNAL MODULE: ./node_modules/@mui/material/utils/debounce.js
var utils_debounce = __webpack_require__(3199);
// EXTERNAL MODULE: ./node_modules/@mui/material/utils/ownerWindow.js
var utils_ownerWindow = __webpack_require__(7602);
;// CONCATENATED MODULE: ./node_modules/@mui/material/Grow/Grow.js


var Grow_excluded = ["addEndListener", "appear", "children", "easing", "in", "onEnter", "onEntered", "onEntering", "onExit", "onExited", "onExiting", "style", "timeout", "TransitionComponent"];








function getScale(value) {
  return "scale(".concat(value, ", ").concat(Math.pow(value, 2), ")");
}
var Grow_styles = {
  entering: {
    opacity: 1,
    transform: getScale(1)
  },
  entered: {
    opacity: 1,
    transform: 'none'
  }
};

/*
 TODO v6: remove
 Conditionally apply a workaround for the CSS transition bug in Safari 15.4 / WebKit browsers.
 */
var isWebKit154 = typeof navigator !== 'undefined' && /^((?!chrome|android).)*(safari|mobile)/i.test(navigator.userAgent) && /(os |version\/)15(.|_)4/i.test(navigator.userAgent);

/**
 * The Grow transition is used by the [Tooltip](/material-ui/react-tooltip/) and
 * [Popover](/material-ui/react-popover/) components.
 * It uses [react-transition-group](https://github.com/reactjs/react-transition-group) internally.
 */
var Grow = /*#__PURE__*/react.forwardRef(function Grow(props, ref) {
  var addEndListener = props.addEndListener,
    _props$appear = props.appear,
    appear = _props$appear === void 0 ? true : _props$appear,
    _children = props.children,
    easing = props.easing,
    inProp = props.in,
    onEnter = props.onEnter,
    onEntered = props.onEntered,
    onEntering = props.onEntering,
    onExit = props.onExit,
    onExited = props.onExited,
    onExiting = props.onExiting,
    style = props.style,
    _props$timeout = props.timeout,
    timeout = _props$timeout === void 0 ? 'auto' : _props$timeout,
    _props$TransitionComp = props.TransitionComponent,
    TransitionComponent = _props$TransitionComp === void 0 ? esm_Transition : _props$TransitionComp,
    other = (0,objectWithoutPropertiesLoose/* default */.Z)(props, Grow_excluded);
  var timer = react.useRef();
  var autoTimeout = react.useRef();
  var theme = useTheme_useTheme();
  var nodeRef = react.useRef(null);
  var handleRef = (0,useForkRef/* default */.Z)(nodeRef, _children.ref, ref);
  var normalizedTransitionCallback = function normalizedTransitionCallback(callback) {
    return function (maybeIsAppearing) {
      if (callback) {
        var node = nodeRef.current;

        // onEnterXxx and onExitXxx callbacks have a different arguments.length value.
        if (maybeIsAppearing === undefined) {
          callback(node);
        } else {
          callback(node, maybeIsAppearing);
        }
      }
    };
  };
  var handleEntering = normalizedTransitionCallback(onEntering);
  var handleEnter = normalizedTransitionCallback(function (node, isAppearing) {
    reflow(node); // So the animation always start from the start.

    var _getTransitionProps = getTransitionProps({
        style: style,
        timeout: timeout,
        easing: easing
      }, {
        mode: 'enter'
      }),
      transitionDuration = _getTransitionProps.duration,
      delay = _getTransitionProps.delay,
      transitionTimingFunction = _getTransitionProps.easing;
    var duration;
    if (timeout === 'auto') {
      duration = theme.transitions.getAutoHeightDuration(node.clientHeight);
      autoTimeout.current = duration;
    } else {
      duration = transitionDuration;
    }
    node.style.transition = [theme.transitions.create('opacity', {
      duration: duration,
      delay: delay
    }), theme.transitions.create('transform', {
      duration: isWebKit154 ? duration : duration * 0.666,
      delay: delay,
      easing: transitionTimingFunction
    })].join(',');
    if (onEnter) {
      onEnter(node, isAppearing);
    }
  });
  var handleEntered = normalizedTransitionCallback(onEntered);
  var handleExiting = normalizedTransitionCallback(onExiting);
  var handleExit = normalizedTransitionCallback(function (node) {
    var _getTransitionProps2 = getTransitionProps({
        style: style,
        timeout: timeout,
        easing: easing
      }, {
        mode: 'exit'
      }),
      transitionDuration = _getTransitionProps2.duration,
      delay = _getTransitionProps2.delay,
      transitionTimingFunction = _getTransitionProps2.easing;
    var duration;
    if (timeout === 'auto') {
      duration = theme.transitions.getAutoHeightDuration(node.clientHeight);
      autoTimeout.current = duration;
    } else {
      duration = transitionDuration;
    }
    node.style.transition = [theme.transitions.create('opacity', {
      duration: duration,
      delay: delay
    }), theme.transitions.create('transform', {
      duration: isWebKit154 ? duration : duration * 0.666,
      delay: isWebKit154 ? delay : delay || duration * 0.333,
      easing: transitionTimingFunction
    })].join(',');
    node.style.opacity = 0;
    node.style.transform = getScale(0.75);
    if (onExit) {
      onExit(node);
    }
  });
  var handleExited = normalizedTransitionCallback(onExited);
  var handleAddEndListener = function handleAddEndListener(next) {
    if (timeout === 'auto') {
      timer.current = setTimeout(next, autoTimeout.current || 0);
    }
    if (addEndListener) {
      // Old call signature before `react-transition-group` implemented `nodeRef`
      addEndListener(nodeRef.current, next);
    }
  };
  react.useEffect(function () {
    return function () {
      clearTimeout(timer.current);
    };
  }, []);
  return /*#__PURE__*/(0,jsx_runtime.jsx)(TransitionComponent, (0,esm_extends/* default */.Z)({
    appear: appear,
    in: inProp,
    nodeRef: nodeRef,
    onEnter: handleEnter,
    onEntered: handleEntered,
    onEntering: handleEntering,
    onExit: handleExit,
    onExited: handleExited,
    onExiting: handleExiting,
    addEndListener: handleAddEndListener,
    timeout: timeout === 'auto' ? null : timeout
  }, other, {
    children: function children(state, childProps) {
      return /*#__PURE__*/react.cloneElement(_children, (0,esm_extends/* default */.Z)({
        style: (0,esm_extends/* default */.Z)({
          opacity: 0,
          transform: getScale(0.75),
          visibility: state === 'exited' && !inProp ? 'hidden' : undefined
        }, Grow_styles[state], style, _children.props.style),
        ref: handleRef
      }, childProps));
    }
  }));
});
 false ? 0 : void 0;
Grow.muiSupportAuto = true;
/* harmony default export */ var Grow_Grow = (Grow);
// EXTERNAL MODULE: ./node_modules/@mui/utils/esm/ownerDocument.js
var esm_ownerDocument = __webpack_require__(9723);
// EXTERNAL MODULE: ./node_modules/@mui/utils/esm/useEventCallback.js
var esm_useEventCallback = __webpack_require__(8956);
// EXTERNAL MODULE: ./node_modules/@mui/utils/esm/createChainedFunction.js
var createChainedFunction = __webpack_require__(8949);
// EXTERNAL MODULE: ./node_modules/@mui/utils/esm/setRef.js
var setRef = __webpack_require__(2971);
;// CONCATENATED MODULE: ./node_modules/@mui/base/Portal/Portal.js






function getContainer(container) {
  return typeof container === 'function' ? container() : container;
}

/**
 * Portals provide a first-class way to render children into a DOM node
 * that exists outside the DOM hierarchy of the parent component.
 */
var Portal = /*#__PURE__*/react.forwardRef(function Portal(props, ref) {
  var children = props.children,
    container = props.container,
    _props$disablePortal = props.disablePortal,
    disablePortal = _props$disablePortal === void 0 ? false : _props$disablePortal;
  var _React$useState = react.useState(null),
    _React$useState2 = (0,slicedToArray/* default */.Z)(_React$useState, 2),
    mountNode = _React$useState2[0],
    setMountNode = _React$useState2[1];
  var handleRef = (0,esm_useForkRef/* default */.Z)( /*#__PURE__*/react.isValidElement(children) ? children.ref : null, ref);
  (0,esm_useEnhancedEffect/* default */.Z)(function () {
    if (!disablePortal) {
      setMountNode(getContainer(container) || document.body);
    }
  }, [container, disablePortal]);
  (0,esm_useEnhancedEffect/* default */.Z)(function () {
    if (mountNode && !disablePortal) {
      (0,setRef/* default */.Z)(ref, mountNode);
      return function () {
        (0,setRef/* default */.Z)(ref, null);
      };
    }
    return undefined;
  }, [ref, mountNode, disablePortal]);
  if (disablePortal) {
    if ( /*#__PURE__*/react.isValidElement(children)) {
      return /*#__PURE__*/react.cloneElement(children, {
        ref: handleRef
      });
    }
    return children;
  }
  return /*#__PURE__*/(0,jsx_runtime.jsx)(react.Fragment, {
    children: mountNode ? /*#__PURE__*/react_dom.createPortal(children, mountNode) : mountNode
  });
});
 false ? 0 : void 0;
if (false) {}
/* harmony default export */ var Portal_Portal = (Portal);
;// CONCATENATED MODULE: ./node_modules/@mui/base/ModalUnstyled/ModalManager.js




// Is a vertical scrollbar displayed?
function isOverflowing(container) {
  var doc = (0,esm_ownerDocument/* default */.Z)(container);
  if (doc.body === container) {
    return (0,ownerWindow/* default */.Z)(container).innerWidth > doc.documentElement.clientWidth;
  }
  return container.scrollHeight > container.clientHeight;
}
function ariaHidden(element, show) {
  if (show) {
    element.setAttribute('aria-hidden', 'true');
  } else {
    element.removeAttribute('aria-hidden');
  }
}
function getPaddingRight(element) {
  return parseInt((0,ownerWindow/* default */.Z)(element).getComputedStyle(element).paddingRight, 10) || 0;
}
function isAriaHiddenForbiddenOnElement(element) {
  // The forbidden HTML tags are the ones from ARIA specification that
  // can be children of body and can't have aria-hidden attribute.
  // cf. https://www.w3.org/TR/html-aria/#docconformance
  var forbiddenTagNames = ['TEMPLATE', 'SCRIPT', 'STYLE', 'LINK', 'MAP', 'META', 'NOSCRIPT', 'PICTURE', 'COL', 'COLGROUP', 'PARAM', 'SLOT', 'SOURCE', 'TRACK'];
  var isForbiddenTagName = forbiddenTagNames.indexOf(element.tagName) !== -1;
  var isInputHidden = element.tagName === 'INPUT' && element.getAttribute('type') === 'hidden';
  return isForbiddenTagName || isInputHidden;
}
function ariaHiddenSiblings(container, mountElement, currentElement, elementsToExclude, show) {
  var blacklist = [mountElement, currentElement].concat((0,toConsumableArray/* default */.Z)(elementsToExclude));
  [].forEach.call(container.children, function (element) {
    var isNotExcludedElement = blacklist.indexOf(element) === -1;
    var isNotForbiddenElement = !isAriaHiddenForbiddenOnElement(element);
    if (isNotExcludedElement && isNotForbiddenElement) {
      ariaHidden(element, show);
    }
  });
}
function findIndexOf(items, callback) {
  var idx = -1;
  items.some(function (item, index) {
    if (callback(item)) {
      idx = index;
      return true;
    }
    return false;
  });
  return idx;
}
function handleContainer(containerInfo, props) {
  var restoreStyle = [];
  var container = containerInfo.container;
  if (!props.disableScrollLock) {
    if (isOverflowing(container)) {
      // Compute the size before applying overflow hidden to avoid any scroll jumps.
      var scrollbarSize = getScrollbarSize((0,esm_ownerDocument/* default */.Z)(container));
      restoreStyle.push({
        value: container.style.paddingRight,
        property: 'padding-right',
        el: container
      });
      // Use computed style, here to get the real padding to add our scrollbar width.
      container.style.paddingRight = "".concat(getPaddingRight(container) + scrollbarSize, "px");

      // .mui-fixed is a global helper.
      var fixedElements = (0,esm_ownerDocument/* default */.Z)(container).querySelectorAll('.mui-fixed');
      [].forEach.call(fixedElements, function (element) {
        restoreStyle.push({
          value: element.style.paddingRight,
          property: 'padding-right',
          el: element
        });
        element.style.paddingRight = "".concat(getPaddingRight(element) + scrollbarSize, "px");
      });
    }
    var scrollContainer;
    if (container.parentNode instanceof DocumentFragment) {
      scrollContainer = (0,esm_ownerDocument/* default */.Z)(container).body;
    } else {
      // Improve Gatsby support
      // https://css-tricks.com/snippets/css/force-vertical-scrollbar/
      var parent = container.parentElement;
      var containerWindow = (0,ownerWindow/* default */.Z)(container);
      scrollContainer = (parent == null ? void 0 : parent.nodeName) === 'HTML' && containerWindow.getComputedStyle(parent).overflowY === 'scroll' ? parent : container;
    }

    // Block the scroll even if no scrollbar is visible to account for mobile keyboard
    // screensize shrink.
    restoreStyle.push({
      value: scrollContainer.style.overflow,
      property: 'overflow',
      el: scrollContainer
    }, {
      value: scrollContainer.style.overflowX,
      property: 'overflow-x',
      el: scrollContainer
    }, {
      value: scrollContainer.style.overflowY,
      property: 'overflow-y',
      el: scrollContainer
    });
    scrollContainer.style.overflow = 'hidden';
  }
  var restore = function restore() {
    restoreStyle.forEach(function (_ref) {
      var value = _ref.value,
        el = _ref.el,
        property = _ref.property;
      if (value) {
        el.style.setProperty(property, value);
      } else {
        el.style.removeProperty(property);
      }
    });
  };
  return restore;
}
function getHiddenSiblings(container) {
  var hiddenSiblings = [];
  [].forEach.call(container.children, function (element) {
    if (element.getAttribute('aria-hidden') === 'true') {
      hiddenSiblings.push(element);
    }
  });
  return hiddenSiblings;
}
/**
 * @ignore - do not document.
 *
 * Proper state management for containers and the modals in those containers.
 * Simplified, but inspired by react-overlay's ModalManager class.
 * Used by the Modal to ensure proper styling of containers.
 */
var ModalManager = /*#__PURE__*/function () {
  function ModalManager() {
    classCallCheck_classCallCheck(this, ModalManager);
    this.containers = void 0;
    this.modals = void 0;
    this.modals = [];
    this.containers = [];
  }
  createClass_createClass(ModalManager, [{
    key: "add",
    value: function add(modal, container) {
      var modalIndex = this.modals.indexOf(modal);
      if (modalIndex !== -1) {
        return modalIndex;
      }
      modalIndex = this.modals.length;
      this.modals.push(modal);

      // If the modal we are adding is already in the DOM.
      if (modal.modalRef) {
        ariaHidden(modal.modalRef, false);
      }
      var hiddenSiblings = getHiddenSiblings(container);
      ariaHiddenSiblings(container, modal.mount, modal.modalRef, hiddenSiblings, true);
      var containerIndex = findIndexOf(this.containers, function (item) {
        return item.container === container;
      });
      if (containerIndex !== -1) {
        this.containers[containerIndex].modals.push(modal);
        return modalIndex;
      }
      this.containers.push({
        modals: [modal],
        container: container,
        restore: null,
        hiddenSiblings: hiddenSiblings
      });
      return modalIndex;
    }
  }, {
    key: "mount",
    value: function mount(modal, props) {
      var containerIndex = findIndexOf(this.containers, function (item) {
        return item.modals.indexOf(modal) !== -1;
      });
      var containerInfo = this.containers[containerIndex];
      if (!containerInfo.restore) {
        containerInfo.restore = handleContainer(containerInfo, props);
      }
    }
  }, {
    key: "remove",
    value: function remove(modal) {
      var ariaHiddenState = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;
      var modalIndex = this.modals.indexOf(modal);
      if (modalIndex === -1) {
        return modalIndex;
      }
      var containerIndex = findIndexOf(this.containers, function (item) {
        return item.modals.indexOf(modal) !== -1;
      });
      var containerInfo = this.containers[containerIndex];
      containerInfo.modals.splice(containerInfo.modals.indexOf(modal), 1);
      this.modals.splice(modalIndex, 1);

      // If that was the last modal in a container, clean up the container.
      if (containerInfo.modals.length === 0) {
        // The modal might be closed before it had the chance to be mounted in the DOM.
        if (containerInfo.restore) {
          containerInfo.restore();
        }
        if (modal.modalRef) {
          // In case the modal wasn't in the DOM yet.
          ariaHidden(modal.modalRef, ariaHiddenState);
        }
        ariaHiddenSiblings(containerInfo.container, modal.mount, modal.modalRef, containerInfo.hiddenSiblings, false);
        this.containers.splice(containerIndex, 1);
      } else {
        // Otherwise make sure the next top modal is visible to a screen reader.
        var nextTop = containerInfo.modals[containerInfo.modals.length - 1];
        // as soon as a modal is adding its modalRef is undefined. it can't set
        // aria-hidden because the dom element doesn't exist either
        // when modal was unmounted before modalRef gets null
        if (nextTop.modalRef) {
          ariaHidden(nextTop.modalRef, false);
        }
      }
      return modalIndex;
    }
  }, {
    key: "isTopModal",
    value: function isTopModal(modal) {
      return this.modals.length > 0 && this.modals[this.modals.length - 1] === modal;
    }
  }]);
  return ModalManager;
}();

;// CONCATENATED MODULE: ./node_modules/@mui/base/FocusTrap/FocusTrap.js
/* eslint-disable consistent-return, jsx-a11y/no-noninteractive-tabindex */




// Inspired by https://github.com/focus-trap/tabbable


var candidatesSelector = ['input', 'select', 'textarea', 'a[href]', 'button', '[tabindex]', 'audio[controls]', 'video[controls]', '[contenteditable]:not([contenteditable="false"])'].join(',');
function getTabIndex(node) {
  var tabindexAttr = parseInt(node.getAttribute('tabindex'), 10);
  if (!Number.isNaN(tabindexAttr)) {
    return tabindexAttr;
  }

  // Browsers do not return `tabIndex` correctly for contentEditable nodes;
  // https://bugs.chromium.org/p/chromium/issues/detail?id=661108&q=contenteditable%20tabindex&can=2
  // so if they don't have a tabindex attribute specifically set, assume it's 0.
  // in Chrome, <details/>, <audio controls/> and <video controls/> elements get a default
  //  `tabIndex` of -1 when the 'tabindex' attribute isn't specified in the DOM,
  //  yet they are still part of the regular tab order; in FF, they get a default
  //  `tabIndex` of 0; since Chrome still puts those elements in the regular tab
  //  order, consider their tab index to be 0.
  if (node.contentEditable === 'true' || (node.nodeName === 'AUDIO' || node.nodeName === 'VIDEO' || node.nodeName === 'DETAILS') && node.getAttribute('tabindex') === null) {
    return 0;
  }
  return node.tabIndex;
}
function isNonTabbableRadio(node) {
  if (node.tagName !== 'INPUT' || node.type !== 'radio') {
    return false;
  }
  if (!node.name) {
    return false;
  }
  var getRadio = function getRadio(selector) {
    return node.ownerDocument.querySelector("input[type=\"radio\"]".concat(selector));
  };
  var roving = getRadio("[name=\"".concat(node.name, "\"]:checked"));
  if (!roving) {
    roving = getRadio("[name=\"".concat(node.name, "\"]"));
  }
  return roving !== node;
}
function isNodeMatchingSelectorFocusable(node) {
  if (node.disabled || node.tagName === 'INPUT' && node.type === 'hidden' || isNonTabbableRadio(node)) {
    return false;
  }
  return true;
}
function defaultGetTabbable(root) {
  var regularTabNodes = [];
  var orderedTabNodes = [];
  Array.from(root.querySelectorAll(candidatesSelector)).forEach(function (node, i) {
    var nodeTabIndex = getTabIndex(node);
    if (nodeTabIndex === -1 || !isNodeMatchingSelectorFocusable(node)) {
      return;
    }
    if (nodeTabIndex === 0) {
      regularTabNodes.push(node);
    } else {
      orderedTabNodes.push({
        documentOrder: i,
        tabIndex: nodeTabIndex,
        node: node
      });
    }
  });
  return orderedTabNodes.sort(function (a, b) {
    return a.tabIndex === b.tabIndex ? a.documentOrder - b.documentOrder : a.tabIndex - b.tabIndex;
  }).map(function (a) {
    return a.node;
  }).concat(regularTabNodes);
}
function defaultIsEnabled() {
  return true;
}

/**
 * Utility component that locks focus inside the component.
 */
function FocusTrap(props) {
  var children = props.children,
    _props$disableAutoFoc = props.disableAutoFocus,
    disableAutoFocus = _props$disableAutoFoc === void 0 ? false : _props$disableAutoFoc,
    _props$disableEnforce = props.disableEnforceFocus,
    disableEnforceFocus = _props$disableEnforce === void 0 ? false : _props$disableEnforce,
    _props$disableRestore = props.disableRestoreFocus,
    disableRestoreFocus = _props$disableRestore === void 0 ? false : _props$disableRestore,
    _props$getTabbable = props.getTabbable,
    getTabbable = _props$getTabbable === void 0 ? defaultGetTabbable : _props$getTabbable,
    _props$isEnabled = props.isEnabled,
    isEnabled = _props$isEnabled === void 0 ? defaultIsEnabled : _props$isEnabled,
    open = props.open;
  var ignoreNextEnforceFocus = react.useRef();
  var sentinelStart = react.useRef(null);
  var sentinelEnd = react.useRef(null);
  var nodeToRestore = react.useRef(null);
  var reactFocusEventTarget = react.useRef(null);
  // This variable is useful when disableAutoFocus is true.
  // It waits for the active element to move into the component to activate.
  var activated = react.useRef(false);
  var rootRef = react.useRef(null);
  var handleRef = (0,esm_useForkRef/* default */.Z)(children.ref, rootRef);
  var lastKeydown = react.useRef(null);
  react.useEffect(function () {
    // We might render an empty child.
    if (!open || !rootRef.current) {
      return;
    }
    activated.current = !disableAutoFocus;
  }, [disableAutoFocus, open]);
  react.useEffect(function () {
    // We might render an empty child.
    if (!open || !rootRef.current) {
      return;
    }
    var doc = (0,esm_ownerDocument/* default */.Z)(rootRef.current);
    if (!rootRef.current.contains(doc.activeElement)) {
      if (!rootRef.current.hasAttribute('tabIndex')) {
        if (false) {}
        rootRef.current.setAttribute('tabIndex', -1);
      }
      if (activated.current) {
        rootRef.current.focus();
      }
    }
    return function () {
      // restoreLastFocus()
      if (!disableRestoreFocus) {
        // In IE11 it is possible for document.activeElement to be null resulting
        // in nodeToRestore.current being null.
        // Not all elements in IE11 have a focus method.
        // Once IE11 support is dropped the focus() call can be unconditional.
        if (nodeToRestore.current && nodeToRestore.current.focus) {
          ignoreNextEnforceFocus.current = true;
          nodeToRestore.current.focus();
        }
        nodeToRestore.current = null;
      }
    };
    // Missing `disableRestoreFocus` which is fine.
    // We don't support changing that prop on an open FocusTrap
    // eslint-disable-next-line react-hooks/exhaustive-deps
  }, [open]);
  react.useEffect(function () {
    // We might render an empty child.
    if (!open || !rootRef.current) {
      return;
    }
    var doc = (0,esm_ownerDocument/* default */.Z)(rootRef.current);
    var contain = function contain(nativeEvent) {
      var rootElement = rootRef.current;
      // Cleanup functions are executed lazily in React 17.
      // Contain can be called between the component being unmounted and its cleanup function being run.
      if (rootElement === null) {
        return;
      }
      if (!doc.hasFocus() || disableEnforceFocus || !isEnabled() || ignoreNextEnforceFocus.current) {
        ignoreNextEnforceFocus.current = false;
        return;
      }
      if (!rootElement.contains(doc.activeElement)) {
        // if the focus event is not coming from inside the children's react tree, reset the refs
        if (nativeEvent && reactFocusEventTarget.current !== nativeEvent.target || doc.activeElement !== reactFocusEventTarget.current) {
          reactFocusEventTarget.current = null;
        } else if (reactFocusEventTarget.current !== null) {
          return;
        }
        if (!activated.current) {
          return;
        }
        var tabbable = [];
        if (doc.activeElement === sentinelStart.current || doc.activeElement === sentinelEnd.current) {
          tabbable = getTabbable(rootRef.current);
        }
        if (tabbable.length > 0) {
          var _lastKeydown$current, _lastKeydown$current2;
          var isShiftTab = Boolean(((_lastKeydown$current = lastKeydown.current) == null ? void 0 : _lastKeydown$current.shiftKey) && ((_lastKeydown$current2 = lastKeydown.current) == null ? void 0 : _lastKeydown$current2.key) === 'Tab');
          var focusNext = tabbable[0];
          var focusPrevious = tabbable[tabbable.length - 1];
          if (isShiftTab) {
            focusPrevious.focus();
          } else {
            focusNext.focus();
          }
        } else {
          rootElement.focus();
        }
      }
    };
    var loopFocus = function loopFocus(nativeEvent) {
      lastKeydown.current = nativeEvent;
      if (disableEnforceFocus || !isEnabled() || nativeEvent.key !== 'Tab') {
        return;
      }

      // Make sure the next tab starts from the right place.
      // doc.activeElement referes to the origin.
      if (doc.activeElement === rootRef.current && nativeEvent.shiftKey) {
        // We need to ignore the next contain as
        // it will try to move the focus back to the rootRef element.
        ignoreNextEnforceFocus.current = true;
        sentinelEnd.current.focus();
      }
    };
    doc.addEventListener('focusin', contain);
    doc.addEventListener('keydown', loopFocus, true);

    // With Edge, Safari and Firefox, no focus related events are fired when the focused area stops being a focused area.
    // e.g. https://bugzilla.mozilla.org/show_bug.cgi?id=559561.
    // Instead, we can look if the active element was restored on the BODY element.
    //
    // The whatwg spec defines how the browser should behave but does not explicitly mention any events:
    // https://html.spec.whatwg.org/multipage/interaction.html#focus-fixup-rule.
    var interval = setInterval(function () {
      if (doc.activeElement.tagName === 'BODY') {
        contain();
      }
    }, 50);
    return function () {
      clearInterval(interval);
      doc.removeEventListener('focusin', contain);
      doc.removeEventListener('keydown', loopFocus, true);
    };
  }, [disableAutoFocus, disableEnforceFocus, disableRestoreFocus, isEnabled, open, getTabbable]);
  var onFocus = function onFocus(event) {
    if (nodeToRestore.current === null) {
      nodeToRestore.current = event.relatedTarget;
    }
    activated.current = true;
    reactFocusEventTarget.current = event.target;
    var childrenPropsHandler = children.props.onFocus;
    if (childrenPropsHandler) {
      childrenPropsHandler(event);
    }
  };
  var handleFocusSentinel = function handleFocusSentinel(event) {
    if (nodeToRestore.current === null) {
      nodeToRestore.current = event.relatedTarget;
    }
    activated.current = true;
  };
  return /*#__PURE__*/(0,jsx_runtime.jsxs)(react.Fragment, {
    children: [/*#__PURE__*/(0,jsx_runtime.jsx)("div", {
      tabIndex: open ? 0 : -1,
      onFocus: handleFocusSentinel,
      ref: sentinelStart,
      "data-testid": "sentinelStart"
    }), /*#__PURE__*/react.cloneElement(children, {
      ref: handleRef,
      onFocus: onFocus
    }), /*#__PURE__*/(0,jsx_runtime.jsx)("div", {
      tabIndex: open ? 0 : -1,
      onFocus: handleFocusSentinel,
      ref: sentinelEnd,
      "data-testid": "sentinelEnd"
    })]
  });
}
 false ? 0 : void 0;
if (false) {}
/* harmony default export */ var FocusTrap_FocusTrap = (FocusTrap);
;// CONCATENATED MODULE: ./node_modules/@mui/base/ModalUnstyled/modalUnstyledClasses.js


function getModalUtilityClass(slot) {
  return (0,generateUtilityClass_generateUtilityClass/* default */.Z)('MuiModal', slot);
}
var modalUnstyledClasses_modalUnstyledClasses = (0,generateUtilityClasses/* default */.Z)('MuiModal', ['root', 'hidden']);
/* harmony default export */ var ModalUnstyled_modalUnstyledClasses = ((/* unused pure expression or super */ null && (modalUnstyledClasses_modalUnstyledClasses)));
;// CONCATENATED MODULE: ./node_modules/@mui/base/utils/appendOwnerState.js



/**
 * Type of the ownerState based on the type of an element it applies to.
 * This resolves to the provided OwnerState for React components and `undefined` for host components.
 * Falls back to `OwnerState | undefined` when the exact type can't be determined in development time.
 */

/**
 * Appends the ownerState object to the props, merging with the existing one if necessary.
 *
 * @param elementType Type of the element that owns the `existingProps`. If the element is a DOM node or undefined, `ownerState` is not applied.
 * @param otherProps Props of the element.
 * @param ownerState
 */
function appendOwnerState(elementType, otherProps, ownerState) {
  if (elementType === undefined || utils_isHostComponent(elementType)) {
    return otherProps;
  }
  return (0,esm_extends/* default */.Z)({}, otherProps, {
    ownerState: (0,esm_extends/* default */.Z)({}, otherProps.ownerState, ownerState)
  });
}
;// CONCATENATED MODULE: ./node_modules/@mui/base/utils/extractEventHandlers.js
/**
 * Extracts event handlers from a given object.
 * A prop is considered an event handler if it is a function and its name starts with `on`.
 *
 * @param object An object to extract event handlers from.
 * @param excludeKeys An array of keys to exclude from the returned object.
 */
function extractEventHandlers(object) {
  var excludeKeys = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];
  if (object === undefined) {
    return {};
  }
  var result = {};
  Object.keys(object).filter(function (prop) {
    return prop.match(/^on[A-Z]/) && typeof object[prop] === 'function' && !excludeKeys.includes(prop);
  }).forEach(function (prop) {
    result[prop] = object[prop];
  });
  return result;
}
;// CONCATENATED MODULE: ./node_modules/@mui/base/utils/omitEventHandlers.js
/**
 * Removes event handlers from the given object.
 * A field is considered an event handler if it is a function with a name beginning with `on`.
 *
 * @param object Object to remove event handlers from.
 * @returns Object with event handlers removed.
 */
function omitEventHandlers(object) {
  if (object === undefined) {
    return {};
  }
  var result = {};
  Object.keys(object).filter(function (prop) {
    return !(prop.match(/^on[A-Z]/) && typeof object[prop] === 'function');
  }).forEach(function (prop) {
    result[prop] = object[prop];
  });
  return result;
}
;// CONCATENATED MODULE: ./node_modules/@mui/base/utils/mergeSlotProps.js




/**
 * Merges the slot component internal props (usually coming from a hook)
 * with the externally provided ones.
 *
 * The merge order is (the latter overrides the former):
 * 1. The internal props (specified as a getter function to work with get*Props hook result)
 * 2. Additional props (specified internally on an unstyled component)
 * 3. External props specified on the owner component. These should only be used on a root slot.
 * 4. External props specified in the `slotProps.*` prop.
 * 5. The `className` prop - combined from all the above.
 * @param parameters
 * @returns
 */
function mergeSlotProps(parameters) {
  var getSlotProps = parameters.getSlotProps,
    additionalProps = parameters.additionalProps,
    externalSlotProps = parameters.externalSlotProps,
    externalForwardedProps = parameters.externalForwardedProps,
    className = parameters.className;
  if (!getSlotProps) {
    // The simpler case - getSlotProps is not defined, so no internal event handlers are defined,
    // so we can simply merge all the props without having to worry about extracting event handlers.
    var _joinedClasses = (0,clsx_m/* default */.Z)(externalForwardedProps == null ? void 0 : externalForwardedProps.className, externalSlotProps == null ? void 0 : externalSlotProps.className, className, additionalProps == null ? void 0 : additionalProps.className);
    var _mergedStyle = (0,esm_extends/* default */.Z)({}, additionalProps == null ? void 0 : additionalProps.style, externalForwardedProps == null ? void 0 : externalForwardedProps.style, externalSlotProps == null ? void 0 : externalSlotProps.style);
    var _props = (0,esm_extends/* default */.Z)({}, additionalProps, externalForwardedProps, externalSlotProps);
    if (_joinedClasses.length > 0) {
      _props.className = _joinedClasses;
    }
    if (Object.keys(_mergedStyle).length > 0) {
      _props.style = _mergedStyle;
    }
    return {
      props: _props,
      internalRef: undefined
    };
  }

  // In this case, getSlotProps is responsible for calling the external event handlers.
  // We don't need to include them in the merged props because of this.

  var eventHandlers = extractEventHandlers((0,esm_extends/* default */.Z)({}, externalForwardedProps, externalSlotProps));
  var componentsPropsWithoutEventHandlers = omitEventHandlers(externalSlotProps);
  var otherPropsWithoutEventHandlers = omitEventHandlers(externalForwardedProps);
  var internalSlotProps = getSlotProps(eventHandlers);

  // The order of classes is important here.
  // Emotion (that we use in libraries consuming MUI Base) depends on this order
  // to properly override style. It requires the most important classes to be last
  // (see https://github.com/mui/material-ui/pull/33205) for the related discussion.
  var joinedClasses = (0,clsx_m/* default */.Z)(internalSlotProps == null ? void 0 : internalSlotProps.className, additionalProps == null ? void 0 : additionalProps.className, className, externalForwardedProps == null ? void 0 : externalForwardedProps.className, externalSlotProps == null ? void 0 : externalSlotProps.className);
  var mergedStyle = (0,esm_extends/* default */.Z)({}, internalSlotProps == null ? void 0 : internalSlotProps.style, additionalProps == null ? void 0 : additionalProps.style, externalForwardedProps == null ? void 0 : externalForwardedProps.style, externalSlotProps == null ? void 0 : externalSlotProps.style);
  var props = (0,esm_extends/* default */.Z)({}, internalSlotProps, additionalProps, otherPropsWithoutEventHandlers, componentsPropsWithoutEventHandlers);
  if (joinedClasses.length > 0) {
    props.className = joinedClasses;
  }
  if (Object.keys(mergedStyle).length > 0) {
    props.style = mergedStyle;
  }
  return {
    props: props,
    internalRef: internalSlotProps.ref
  };
}
;// CONCATENATED MODULE: ./node_modules/@mui/base/utils/resolveComponentProps.js
/**
 * If `componentProps` is a function, calls it with the provided `ownerState`.
 * Otherwise, just returns `componentProps`.
 */
function resolveComponentProps(componentProps, ownerState) {
  if (typeof componentProps === 'function') {
    return componentProps(ownerState);
  }
  return componentProps;
}
;// CONCATENATED MODULE: ./node_modules/@mui/base/utils/useSlotProps.js


var useSlotProps_excluded = ["elementType", "externalSlotProps", "ownerState"];




/**
 * Builds the props to be passed into the slot of an unstyled component.
 * It merges the internal props of the component with the ones supplied by the user, allowing to customize the behavior.
 * If the slot component is not a host component, it also merges in the `ownerState`.
 *
 * @param parameters.getSlotProps - A function that returns the props to be passed to the slot component.
 */
function useSlotProps(parameters) {
  var _parameters$additiona;
  var elementType = parameters.elementType,
    externalSlotProps = parameters.externalSlotProps,
    ownerState = parameters.ownerState,
    rest = (0,objectWithoutPropertiesLoose/* default */.Z)(parameters, useSlotProps_excluded);
  var resolvedComponentsProps = resolveComponentProps(externalSlotProps, ownerState);
  var _mergeSlotProps = mergeSlotProps((0,esm_extends/* default */.Z)({}, rest, {
      externalSlotProps: resolvedComponentsProps
    })),
    mergedProps = _mergeSlotProps.props,
    internalRef = _mergeSlotProps.internalRef;
  var ref = (0,esm_useForkRef/* default */.Z)(internalRef, resolvedComponentsProps == null ? void 0 : resolvedComponentsProps.ref, (_parameters$additiona = parameters.additionalProps) == null ? void 0 : _parameters$additiona.ref);
  var props = appendOwnerState(elementType, (0,esm_extends/* default */.Z)({}, mergedProps, {
    ref: ref
  }), ownerState);
  return props;
}
;// CONCATENATED MODULE: ./node_modules/@mui/base/ModalUnstyled/ModalUnstyled.js



var ModalUnstyled_excluded = ["children", "classes", "closeAfterTransition", "component", "container", "disableAutoFocus", "disableEnforceFocus", "disableEscapeKeyDown", "disablePortal", "disableRestoreFocus", "disableScrollLock", "hideBackdrop", "keepMounted", "manager", "onBackdropClick", "onClose", "onKeyDown", "open", "onTransitionEnter", "onTransitionExited", "slotProps", "slots"];











var ModalUnstyled_useUtilityClasses = function useUtilityClasses(ownerState) {
  var open = ownerState.open,
    exited = ownerState.exited,
    classes = ownerState.classes;
  var slots = {
    root: ['root', !open && exited && 'hidden']
  };
  return (0,composeClasses/* default */.Z)(slots, getModalUtilityClass, classes);
};
function ModalUnstyled_getContainer(container) {
  return typeof container === 'function' ? container() : container;
}
function getHasTransition(props) {
  return props.children ? props.children.props.hasOwnProperty('in') : false;
}

// A modal manager used to track and manage the state of open Modals.
// Modals don't open on the server so this won't conflict with concurrent requests.
var defaultManager = new ModalManager();

/**
 * Modal is a lower-level construct that is leveraged by the following components:
 *
 * - [Dialog](/material-ui/api/dialog/)
 * - [Drawer](/material-ui/api/drawer/)
 * - [Menu](/material-ui/api/menu/)
 * - [Popover](/material-ui/api/popover/)
 *
 * If you are creating a modal dialog, you probably want to use the [Dialog](/material-ui/api/dialog/) component
 * rather than directly using Modal.
 *
 * This component shares many concepts with [react-overlays](https://react-bootstrap.github.io/react-overlays/#modals).
 */
var ModalUnstyled = /*#__PURE__*/react.forwardRef(function ModalUnstyled(props, ref) {
  var _props$ariaHidden, _ref;
  var children = props.children,
    classesProp = props.classes,
    _props$closeAfterTran = props.closeAfterTransition,
    closeAfterTransition = _props$closeAfterTran === void 0 ? false : _props$closeAfterTran,
    component = props.component,
    container = props.container,
    _props$disableAutoFoc = props.disableAutoFocus,
    disableAutoFocus = _props$disableAutoFoc === void 0 ? false : _props$disableAutoFoc,
    _props$disableEnforce = props.disableEnforceFocus,
    disableEnforceFocus = _props$disableEnforce === void 0 ? false : _props$disableEnforce,
    _props$disableEscapeK = props.disableEscapeKeyDown,
    disableEscapeKeyDown = _props$disableEscapeK === void 0 ? false : _props$disableEscapeK,
    _props$disablePortal = props.disablePortal,
    disablePortal = _props$disablePortal === void 0 ? false : _props$disablePortal,
    _props$disableRestore = props.disableRestoreFocus,
    disableRestoreFocus = _props$disableRestore === void 0 ? false : _props$disableRestore,
    _props$disableScrollL = props.disableScrollLock,
    disableScrollLock = _props$disableScrollL === void 0 ? false : _props$disableScrollL,
    _props$hideBackdrop = props.hideBackdrop,
    hideBackdrop = _props$hideBackdrop === void 0 ? false : _props$hideBackdrop,
    _props$keepMounted = props.keepMounted,
    keepMounted = _props$keepMounted === void 0 ? false : _props$keepMounted,
    _props$manager = props.manager,
    manager = _props$manager === void 0 ? defaultManager : _props$manager,
    onBackdropClick = props.onBackdropClick,
    onClose = props.onClose,
    onKeyDown = props.onKeyDown,
    open = props.open,
    onTransitionEnter = props.onTransitionEnter,
    onTransitionExited = props.onTransitionExited,
    _props$slotProps = props.slotProps,
    slotProps = _props$slotProps === void 0 ? {} : _props$slotProps,
    _props$slots = props.slots,
    slots = _props$slots === void 0 ? {} : _props$slots,
    other = (0,objectWithoutPropertiesLoose/* default */.Z)(props, ModalUnstyled_excluded);
  var _React$useState = react.useState(!open),
    _React$useState2 = (0,slicedToArray/* default */.Z)(_React$useState, 2),
    exited = _React$useState2[0],
    setExited = _React$useState2[1];
  var modal = react.useRef({});
  var mountNodeRef = react.useRef(null);
  var modalRef = react.useRef(null);
  var handleRef = (0,esm_useForkRef/* default */.Z)(modalRef, ref);
  var hasTransition = getHasTransition(props);
  var ariaHiddenProp = (_props$ariaHidden = props['aria-hidden']) != null ? _props$ariaHidden : true;
  var getDoc = function getDoc() {
    return (0,esm_ownerDocument/* default */.Z)(mountNodeRef.current);
  };
  var getModal = function getModal() {
    modal.current.modalRef = modalRef.current;
    modal.current.mountNode = mountNodeRef.current;
    return modal.current;
  };
  var handleMounted = function handleMounted() {
    manager.mount(getModal(), {
      disableScrollLock: disableScrollLock
    });

    // Fix a bug on Chrome where the scroll isn't initially 0.
    modalRef.current.scrollTop = 0;
  };
  var handleOpen = (0,esm_useEventCallback/* default */.Z)(function () {
    var resolvedContainer = ModalUnstyled_getContainer(container) || getDoc().body;
    manager.add(getModal(), resolvedContainer);

    // The element was already mounted.
    if (modalRef.current) {
      handleMounted();
    }
  });
  var isTopModal = react.useCallback(function () {
    return manager.isTopModal(getModal());
  }, [manager]);
  var handlePortalRef = (0,esm_useEventCallback/* default */.Z)(function (node) {
    mountNodeRef.current = node;
    if (!node) {
      return;
    }
    if (open && isTopModal()) {
      handleMounted();
    } else {
      ariaHidden(modalRef.current, ariaHiddenProp);
    }
  });
  var handleClose = react.useCallback(function () {
    manager.remove(getModal(), ariaHiddenProp);
  }, [manager, ariaHiddenProp]);
  react.useEffect(function () {
    return function () {
      handleClose();
    };
  }, [handleClose]);
  react.useEffect(function () {
    if (open) {
      handleOpen();
    } else if (!hasTransition || !closeAfterTransition) {
      handleClose();
    }
  }, [open, handleClose, hasTransition, closeAfterTransition, handleOpen]);
  var ownerState = (0,esm_extends/* default */.Z)({}, props, {
    classes: classesProp,
    closeAfterTransition: closeAfterTransition,
    disableAutoFocus: disableAutoFocus,
    disableEnforceFocus: disableEnforceFocus,
    disableEscapeKeyDown: disableEscapeKeyDown,
    disablePortal: disablePortal,
    disableRestoreFocus: disableRestoreFocus,
    disableScrollLock: disableScrollLock,
    exited: exited,
    hideBackdrop: hideBackdrop,
    keepMounted: keepMounted
  });
  var classes = ModalUnstyled_useUtilityClasses(ownerState);
  var handleEnter = function handleEnter() {
    setExited(false);
    if (onTransitionEnter) {
      onTransitionEnter();
    }
  };
  var handleExited = function handleExited() {
    setExited(true);
    if (onTransitionExited) {
      onTransitionExited();
    }
    if (closeAfterTransition) {
      handleClose();
    }
  };
  var handleBackdropClick = function handleBackdropClick(event) {
    if (event.target !== event.currentTarget) {
      return;
    }
    if (onBackdropClick) {
      onBackdropClick(event);
    }
    if (onClose) {
      onClose(event, 'backdropClick');
    }
  };
  var handleKeyDown = function handleKeyDown(event) {
    if (onKeyDown) {
      onKeyDown(event);
    }

    // The handler doesn't take event.defaultPrevented into account:
    //
    // event.preventDefault() is meant to stop default behaviors like
    // clicking a checkbox to check it, hitting a button to submit a form,
    // and hitting left arrow to move the cursor in a text input etc.
    // Only special HTML elements have these default behaviors.
    if (event.key !== 'Escape' || !isTopModal()) {
      return;
    }
    if (!disableEscapeKeyDown) {
      // Swallow the event, in case someone is listening for the escape key on the body.
      event.stopPropagation();
      if (onClose) {
        onClose(event, 'escapeKeyDown');
      }
    }
  };
  var childProps = {};
  if (children.props.tabIndex === undefined) {
    childProps.tabIndex = '-1';
  }

  // It's a Transition like component
  if (hasTransition) {
    childProps.onEnter = (0,createChainedFunction/* default */.Z)(handleEnter, children.props.onEnter);
    childProps.onExited = (0,createChainedFunction/* default */.Z)(handleExited, children.props.onExited);
  }
  var Root = (_ref = component != null ? component : slots.root) != null ? _ref : 'div';
  var rootProps = useSlotProps({
    elementType: Root,
    externalSlotProps: slotProps.root,
    externalForwardedProps: other,
    additionalProps: {
      ref: handleRef,
      role: 'presentation',
      onKeyDown: handleKeyDown
    },
    className: classes.root,
    ownerState: ownerState
  });
  var BackdropComponent = slots.backdrop;
  var backdropProps = useSlotProps({
    elementType: BackdropComponent,
    externalSlotProps: slotProps.backdrop,
    additionalProps: {
      'aria-hidden': true,
      onClick: handleBackdropClick,
      open: open
    },
    className: classes.backdrop,
    ownerState: ownerState
  });
  if (!keepMounted && !open && (!hasTransition || exited)) {
    return null;
  }
  return /*#__PURE__*/(0,jsx_runtime.jsx)(Portal_Portal, {
    ref: handlePortalRef,
    container: container,
    disablePortal: disablePortal,
    children: /*#__PURE__*/(0,jsx_runtime.jsxs)(Root, (0,esm_extends/* default */.Z)({}, rootProps, {
      children: [!hideBackdrop && BackdropComponent ? /*#__PURE__*/(0,jsx_runtime.jsx)(BackdropComponent, (0,esm_extends/* default */.Z)({}, backdropProps)) : null, /*#__PURE__*/(0,jsx_runtime.jsx)(FocusTrap_FocusTrap, {
        disableEnforceFocus: disableEnforceFocus,
        disableAutoFocus: disableAutoFocus,
        disableRestoreFocus: disableRestoreFocus,
        isEnabled: isTopModal,
        open: open,
        children: /*#__PURE__*/react.cloneElement(children, childProps)
      })]
    }))
  });
});
 false ? 0 : void 0;
/* harmony default export */ var ModalUnstyled_ModalUnstyled = (ModalUnstyled);
;// CONCATENATED MODULE: ./node_modules/@mui/material/Backdrop/backdropClasses.js


function getBackdropUtilityClass(slot) {
  return (0,generateUtilityClass_generateUtilityClass/* default */.Z)('MuiBackdrop', slot);
}
var backdropClasses = (0,generateUtilityClasses/* default */.Z)('MuiBackdrop', ['root', 'invisible']);
/* harmony default export */ var Backdrop_backdropClasses = ((/* unused pure expression or super */ null && (backdropClasses)));
;// CONCATENATED MODULE: ./node_modules/@mui/material/Backdrop/Backdrop.js


var Backdrop_excluded = ["children", "component", "components", "componentsProps", "className", "invisible", "open", "slotProps", "slots", "transitionDuration", "TransitionComponent"];









var Backdrop_useUtilityClasses = function useUtilityClasses(ownerState) {
  var classes = ownerState.classes,
    invisible = ownerState.invisible;
  var slots = {
    root: ['root', invisible && 'invisible']
  };
  return (0,composeClasses/* default */.Z)(slots, getBackdropUtilityClass, classes);
};
var BackdropRoot = (0,styles_styled/* default */.ZP)('div', {
  name: 'MuiBackdrop',
  slot: 'Root',
  overridesResolver: function overridesResolver(props, styles) {
    var ownerState = props.ownerState;
    return [styles.root, ownerState.invisible && styles.invisible];
  }
})(function (_ref2) {
  var ownerState = _ref2.ownerState;
  return (0,esm_extends/* default */.Z)({
    position: 'fixed',
    display: 'flex',
    alignItems: 'center',
    justifyContent: 'center',
    right: 0,
    bottom: 0,
    top: 0,
    left: 0,
    backgroundColor: 'rgba(0, 0, 0, 0.5)',
    WebkitTapHighlightColor: 'transparent'
  }, ownerState.invisible && {
    backgroundColor: 'transparent'
  });
});
var Backdrop = /*#__PURE__*/react.forwardRef(function Backdrop(inProps, ref) {
  var _slotProps$root, _ref, _slots$root;
  var props = (0,styles_useThemeProps/* default */.Z)({
    props: inProps,
    name: 'MuiBackdrop'
  });
  var children = props.children,
    _props$component = props.component,
    component = _props$component === void 0 ? 'div' : _props$component,
    _props$components = props.components,
    components = _props$components === void 0 ? {} : _props$components,
    _props$componentsProp = props.componentsProps,
    componentsProps = _props$componentsProp === void 0 ? {} : _props$componentsProp,
    className = props.className,
    _props$invisible = props.invisible,
    invisible = _props$invisible === void 0 ? false : _props$invisible,
    open = props.open,
    _props$slotProps = props.slotProps,
    slotProps = _props$slotProps === void 0 ? {} : _props$slotProps,
    _props$slots = props.slots,
    slots = _props$slots === void 0 ? {} : _props$slots,
    transitionDuration = props.transitionDuration,
    _props$TransitionComp = props.TransitionComponent,
    TransitionComponent = _props$TransitionComp === void 0 ? Fade_Fade : _props$TransitionComp,
    other = (0,objectWithoutPropertiesLoose/* default */.Z)(props, Backdrop_excluded);
  var ownerState = (0,esm_extends/* default */.Z)({}, props, {
    component: component,
    invisible: invisible
  });
  var classes = Backdrop_useUtilityClasses(ownerState);
  var rootSlotProps = (_slotProps$root = slotProps.root) != null ? _slotProps$root : componentsProps.root;
  return /*#__PURE__*/(0,jsx_runtime.jsx)(TransitionComponent, (0,esm_extends/* default */.Z)({
    in: open,
    timeout: transitionDuration
  }, other, {
    children: /*#__PURE__*/(0,jsx_runtime.jsx)(BackdropRoot, (0,esm_extends/* default */.Z)({
      "aria-hidden": true
    }, rootSlotProps, {
      as: (_ref = (_slots$root = slots.root) != null ? _slots$root : components.Root) != null ? _ref : component,
      className: (0,clsx_m/* default */.Z)(classes.root, className, rootSlotProps == null ? void 0 : rootSlotProps.className),
      ownerState: (0,esm_extends/* default */.Z)({}, ownerState, rootSlotProps == null ? void 0 : rootSlotProps.ownerState),
      classes: classes,
      ref: ref,
      children: children
    }))
  }));
});
 false ? 0 : void 0;
/* harmony default export */ var Backdrop_Backdrop = (Backdrop);
;// CONCATENATED MODULE: ./node_modules/@mui/material/Modal/Modal.js



var Modal_excluded = ["BackdropComponent", "BackdropProps", "closeAfterTransition", "children", "component", "components", "componentsProps", "disableAutoFocus", "disableEnforceFocus", "disableEscapeKeyDown", "disablePortal", "disableRestoreFocus", "disableScrollLock", "hideBackdrop", "keepMounted", "slotProps", "slots", "theme"];









var modalClasses = (/* unused pure expression or super */ null && (modalUnstyledClasses));
var extendUtilityClasses = function extendUtilityClasses(ownerState) {
  return ownerState.classes;
};
var ModalRoot = (0,styles_styled/* default */.ZP)('div', {
  name: 'MuiModal',
  slot: 'Root',
  overridesResolver: function overridesResolver(props, styles) {
    var ownerState = props.ownerState;
    return [styles.root, !ownerState.open && ownerState.exited && styles.hidden];
  }
})(function (_ref3) {
  var theme = _ref3.theme,
    ownerState = _ref3.ownerState;
  return (0,esm_extends/* default */.Z)({
    position: 'fixed',
    zIndex: (theme.vars || theme).zIndex.modal,
    right: 0,
    bottom: 0,
    top: 0,
    left: 0
  }, !ownerState.open && ownerState.exited && {
    visibility: 'hidden'
  });
});
var ModalBackdrop = (0,styles_styled/* default */.ZP)(Backdrop_Backdrop, {
  name: 'MuiModal',
  slot: 'Backdrop',
  overridesResolver: function overridesResolver(props, styles) {
    return styles.backdrop;
  }
})({
  zIndex: -1
});

/**
 * Modal is a lower-level construct that is leveraged by the following components:
 *
 * - [Dialog](/material-ui/api/dialog/)
 * - [Drawer](/material-ui/api/drawer/)
 * - [Menu](/material-ui/api/menu/)
 * - [Popover](/material-ui/api/popover/)
 *
 * If you are creating a modal dialog, you probably want to use the [Dialog](/material-ui/api/dialog/) component
 * rather than directly using Modal.
 *
 * This component shares many concepts with [react-overlays](https://react-bootstrap.github.io/react-overlays/#modals).
 */
var Modal = /*#__PURE__*/react.forwardRef(function Modal(inProps, ref) {
  var _ref, _slots$root, _ref2, _slots$backdrop, _slotProps$root, _slotProps$backdrop;
  var props = (0,styles_useThemeProps/* default */.Z)({
    name: 'MuiModal',
    props: inProps
  });
  var _props$BackdropCompon = props.BackdropComponent,
    BackdropComponent = _props$BackdropCompon === void 0 ? ModalBackdrop : _props$BackdropCompon,
    BackdropProps = props.BackdropProps,
    _props$closeAfterTran = props.closeAfterTransition,
    closeAfterTransition = _props$closeAfterTran === void 0 ? false : _props$closeAfterTran,
    children = props.children,
    component = props.component,
    _props$components = props.components,
    components = _props$components === void 0 ? {} : _props$components,
    _props$componentsProp = props.componentsProps,
    componentsProps = _props$componentsProp === void 0 ? {} : _props$componentsProp,
    _props$disableAutoFoc = props.disableAutoFocus,
    disableAutoFocus = _props$disableAutoFoc === void 0 ? false : _props$disableAutoFoc,
    _props$disableEnforce = props.disableEnforceFocus,
    disableEnforceFocus = _props$disableEnforce === void 0 ? false : _props$disableEnforce,
    _props$disableEscapeK = props.disableEscapeKeyDown,
    disableEscapeKeyDown = _props$disableEscapeK === void 0 ? false : _props$disableEscapeK,
    _props$disablePortal = props.disablePortal,
    disablePortal = _props$disablePortal === void 0 ? false : _props$disablePortal,
    _props$disableRestore = props.disableRestoreFocus,
    disableRestoreFocus = _props$disableRestore === void 0 ? false : _props$disableRestore,
    _props$disableScrollL = props.disableScrollLock,
    disableScrollLock = _props$disableScrollL === void 0 ? false : _props$disableScrollL,
    _props$hideBackdrop = props.hideBackdrop,
    hideBackdrop = _props$hideBackdrop === void 0 ? false : _props$hideBackdrop,
    _props$keepMounted = props.keepMounted,
    keepMounted = _props$keepMounted === void 0 ? false : _props$keepMounted,
    slotProps = props.slotProps,
    slots = props.slots,
    theme = props.theme,
    other = (0,objectWithoutPropertiesLoose/* default */.Z)(props, Modal_excluded);
  var _React$useState = react.useState(true),
    _React$useState2 = (0,slicedToArray/* default */.Z)(_React$useState, 2),
    exited = _React$useState2[0],
    setExited = _React$useState2[1];
  var commonProps = {
    closeAfterTransition: closeAfterTransition,
    disableAutoFocus: disableAutoFocus,
    disableEnforceFocus: disableEnforceFocus,
    disableEscapeKeyDown: disableEscapeKeyDown,
    disablePortal: disablePortal,
    disableRestoreFocus: disableRestoreFocus,
    disableScrollLock: disableScrollLock,
    hideBackdrop: hideBackdrop,
    keepMounted: keepMounted
  };
  var ownerState = (0,esm_extends/* default */.Z)({}, props, commonProps, {
    exited: exited
  });
  var classes = extendUtilityClasses(ownerState);
  var RootSlot = (_ref = (_slots$root = slots == null ? void 0 : slots.root) != null ? _slots$root : components.Root) != null ? _ref : ModalRoot;
  var BackdropSlot = (_ref2 = (_slots$backdrop = slots == null ? void 0 : slots.backdrop) != null ? _slots$backdrop : components.Backdrop) != null ? _ref2 : BackdropComponent;
  var rootSlotProps = (_slotProps$root = slotProps == null ? void 0 : slotProps.root) != null ? _slotProps$root : componentsProps.root;
  var backdropSlotProps = (_slotProps$backdrop = slotProps == null ? void 0 : slotProps.backdrop) != null ? _slotProps$backdrop : componentsProps.backdrop;
  return /*#__PURE__*/(0,jsx_runtime.jsx)(ModalUnstyled_ModalUnstyled, (0,esm_extends/* default */.Z)({
    slots: {
      root: RootSlot,
      backdrop: BackdropSlot
    },
    slotProps: {
      root: function root() {
        return (0,esm_extends/* default */.Z)({}, resolveComponentProps(rootSlotProps, ownerState), !utils_isHostComponent(RootSlot) && {
          as: component,
          theme: theme
        });
      },
      backdrop: function backdrop() {
        return (0,esm_extends/* default */.Z)({}, BackdropProps, resolveComponentProps(backdropSlotProps, ownerState));
      }
    },
    onTransitionEnter: function onTransitionEnter() {
      return setExited(false);
    },
    onTransitionExited: function onTransitionExited() {
      return setExited(true);
    },
    ref: ref
  }, other, {
    classes: classes
  }, commonProps, {
    children: children
  }));
});
 false ? 0 : void 0;
/* harmony default export */ var Modal_Modal = (Modal);
;// CONCATENATED MODULE: ./node_modules/@mui/material/Popover/popoverClasses.js


function getPopoverUtilityClass(slot) {
  return (0,generateUtilityClass_generateUtilityClass/* default */.Z)('MuiPopover', slot);
}
var popoverClasses = (0,generateUtilityClasses/* default */.Z)('MuiPopover', ['root', 'paper']);
/* harmony default export */ var Popover_popoverClasses = ((/* unused pure expression or super */ null && (popoverClasses)));
;// CONCATENATED MODULE: ./node_modules/@mui/material/Popover/Popover.js



var Popover_excluded = ["onEntering"],
  Popover_excluded2 = ["action", "anchorEl", "anchorOrigin", "anchorPosition", "anchorReference", "children", "className", "container", "elevation", "marginThreshold", "open", "PaperProps", "transformOrigin", "TransitionComponent", "transitionDuration", "TransitionProps"];
















function getOffsetTop(rect, vertical) {
  var offset = 0;
  if (typeof vertical === 'number') {
    offset = vertical;
  } else if (vertical === 'center') {
    offset = rect.height / 2;
  } else if (vertical === 'bottom') {
    offset = rect.height;
  }
  return offset;
}
function getOffsetLeft(rect, horizontal) {
  var offset = 0;
  if (typeof horizontal === 'number') {
    offset = horizontal;
  } else if (horizontal === 'center') {
    offset = rect.width / 2;
  } else if (horizontal === 'right') {
    offset = rect.width;
  }
  return offset;
}
function getTransformOriginValue(transformOrigin) {
  return [transformOrigin.horizontal, transformOrigin.vertical].map(function (n) {
    return typeof n === 'number' ? "".concat(n, "px") : n;
  }).join(' ');
}
function resolveAnchorEl(anchorEl) {
  return typeof anchorEl === 'function' ? anchorEl() : anchorEl;
}
var Popover_useUtilityClasses = function useUtilityClasses(ownerState) {
  var classes = ownerState.classes;
  var slots = {
    root: ['root'],
    paper: ['paper']
  };
  return (0,composeClasses/* default */.Z)(slots, getPopoverUtilityClass, classes);
};
var PopoverRoot = (0,styles_styled/* default */.ZP)(Modal_Modal, {
  name: 'MuiPopover',
  slot: 'Root',
  overridesResolver: function overridesResolver(props, styles) {
    return styles.root;
  }
})({});
var PopoverPaper = (0,styles_styled/* default */.ZP)(Paper_Paper, {
  name: 'MuiPopover',
  slot: 'Paper',
  overridesResolver: function overridesResolver(props, styles) {
    return styles.paper;
  }
})({
  position: 'absolute',
  overflowY: 'auto',
  overflowX: 'hidden',
  // So we see the popover when it's empty.
  // It's most likely on issue on userland.
  minWidth: 16,
  minHeight: 16,
  maxWidth: 'calc(100% - 32px)',
  maxHeight: 'calc(100% - 32px)',
  // We disable the focus ring for mouse, touch and keyboard users.
  outline: 0
});
var Popover = /*#__PURE__*/react.forwardRef(function Popover(inProps, ref) {
  var props = (0,styles_useThemeProps/* default */.Z)({
    props: inProps,
    name: 'MuiPopover'
  });
  var action = props.action,
    anchorEl = props.anchorEl,
    _props$anchorOrigin = props.anchorOrigin,
    anchorOrigin = _props$anchorOrigin === void 0 ? {
      vertical: 'top',
      horizontal: 'left'
    } : _props$anchorOrigin,
    anchorPosition = props.anchorPosition,
    _props$anchorReferenc = props.anchorReference,
    anchorReference = _props$anchorReferenc === void 0 ? 'anchorEl' : _props$anchorReferenc,
    children = props.children,
    className = props.className,
    containerProp = props.container,
    _props$elevation = props.elevation,
    elevation = _props$elevation === void 0 ? 8 : _props$elevation,
    _props$marginThreshol = props.marginThreshold,
    marginThreshold = _props$marginThreshol === void 0 ? 16 : _props$marginThreshol,
    open = props.open,
    _props$PaperProps = props.PaperProps,
    PaperProps = _props$PaperProps === void 0 ? {} : _props$PaperProps,
    _props$transformOrigi = props.transformOrigin,
    transformOrigin = _props$transformOrigi === void 0 ? {
      vertical: 'top',
      horizontal: 'left'
    } : _props$transformOrigi,
    _props$TransitionComp = props.TransitionComponent,
    TransitionComponent = _props$TransitionComp === void 0 ? Grow_Grow : _props$TransitionComp,
    _props$transitionDura = props.transitionDuration,
    transitionDurationProp = _props$transitionDura === void 0 ? 'auto' : _props$transitionDura,
    _props$TransitionProp = props.TransitionProps;
  _props$TransitionProp = _props$TransitionProp === void 0 ? {} : _props$TransitionProp;
  var onEntering = _props$TransitionProp.onEntering,
    TransitionProps = (0,objectWithoutPropertiesLoose/* default */.Z)(props.TransitionProps, Popover_excluded),
    other = (0,objectWithoutPropertiesLoose/* default */.Z)(props, Popover_excluded2);
  var paperRef = react.useRef();
  var handlePaperRef = (0,useForkRef/* default */.Z)(paperRef, PaperProps.ref);
  var ownerState = (0,esm_extends/* default */.Z)({}, props, {
    anchorOrigin: anchorOrigin,
    anchorReference: anchorReference,
    elevation: elevation,
    marginThreshold: marginThreshold,
    PaperProps: PaperProps,
    transformOrigin: transformOrigin,
    TransitionComponent: TransitionComponent,
    transitionDuration: transitionDurationProp,
    TransitionProps: TransitionProps
  });
  var classes = Popover_useUtilityClasses(ownerState);

  // Returns the top/left offset of the position
  // to attach to on the anchor element (or body if none is provided)
  var getAnchorOffset = react.useCallback(function () {
    if (anchorReference === 'anchorPosition') {
      if (false) {}
      return anchorPosition;
    }
    var resolvedAnchorEl = resolveAnchorEl(anchorEl);

    // If an anchor element wasn't provided, just use the parent body element of this Popover
    var anchorElement = resolvedAnchorEl && resolvedAnchorEl.nodeType === 1 ? resolvedAnchorEl : (0,ownerDocument/* default */.Z)(paperRef.current).body;
    var anchorRect = anchorElement.getBoundingClientRect();
    if (false) { var box; }
    return {
      top: anchorRect.top + getOffsetTop(anchorRect, anchorOrigin.vertical),
      left: anchorRect.left + getOffsetLeft(anchorRect, anchorOrigin.horizontal)
    };
  }, [anchorEl, anchorOrigin.horizontal, anchorOrigin.vertical, anchorPosition, anchorReference]);

  // Returns the base transform origin using the element
  var getTransformOrigin = react.useCallback(function (elemRect) {
    return {
      vertical: getOffsetTop(elemRect, transformOrigin.vertical),
      horizontal: getOffsetLeft(elemRect, transformOrigin.horizontal)
    };
  }, [transformOrigin.horizontal, transformOrigin.vertical]);
  var getPositioningStyle = react.useCallback(function (element) {
    var elemRect = {
      width: element.offsetWidth,
      height: element.offsetHeight
    };

    // Get the transform origin point on the element itself
    var elemTransformOrigin = getTransformOrigin(elemRect);
    if (anchorReference === 'none') {
      return {
        top: null,
        left: null,
        transformOrigin: getTransformOriginValue(elemTransformOrigin)
      };
    }

    // Get the offset of the anchoring element
    var anchorOffset = getAnchorOffset();

    // Calculate element positioning
    var top = anchorOffset.top - elemTransformOrigin.vertical;
    var left = anchorOffset.left - elemTransformOrigin.horizontal;
    var bottom = top + elemRect.height;
    var right = left + elemRect.width;

    // Use the parent window of the anchorEl if provided
    var containerWindow = (0,utils_ownerWindow/* default */.Z)(resolveAnchorEl(anchorEl));

    // Window thresholds taking required margin into account
    var heightThreshold = containerWindow.innerHeight - marginThreshold;
    var widthThreshold = containerWindow.innerWidth - marginThreshold;

    // Check if the vertical axis needs shifting
    if (top < marginThreshold) {
      var diff = top - marginThreshold;
      top -= diff;
      elemTransformOrigin.vertical += diff;
    } else if (bottom > heightThreshold) {
      var _diff = bottom - heightThreshold;
      top -= _diff;
      elemTransformOrigin.vertical += _diff;
    }
    if (false) {}

    // Check if the horizontal axis needs shifting
    if (left < marginThreshold) {
      var _diff2 = left - marginThreshold;
      left -= _diff2;
      elemTransformOrigin.horizontal += _diff2;
    } else if (right > widthThreshold) {
      var _diff3 = right - widthThreshold;
      left -= _diff3;
      elemTransformOrigin.horizontal += _diff3;
    }
    return {
      top: "".concat(Math.round(top), "px"),
      left: "".concat(Math.round(left), "px"),
      transformOrigin: getTransformOriginValue(elemTransformOrigin)
    };
  }, [anchorEl, anchorReference, getAnchorOffset, getTransformOrigin, marginThreshold]);
  var _React$useState = react.useState(open),
    _React$useState2 = (0,slicedToArray/* default */.Z)(_React$useState, 2),
    isPositioned = _React$useState2[0],
    setIsPositioned = _React$useState2[1];
  var setPositioningStyles = react.useCallback(function () {
    var element = paperRef.current;
    if (!element) {
      return;
    }
    var positioning = getPositioningStyle(element);
    if (positioning.top !== null) {
      element.style.top = positioning.top;
    }
    if (positioning.left !== null) {
      element.style.left = positioning.left;
    }
    element.style.transformOrigin = positioning.transformOrigin;
    setIsPositioned(true);
  }, [getPositioningStyle]);
  var handleEntering = function handleEntering(element, isAppearing) {
    if (onEntering) {
      onEntering(element, isAppearing);
    }
    setPositioningStyles();
  };
  var handleExited = function handleExited() {
    setIsPositioned(false);
  };
  react.useEffect(function () {
    if (open) {
      setPositioningStyles();
    }
  });
  react.useImperativeHandle(action, function () {
    return open ? {
      updatePosition: function updatePosition() {
        setPositioningStyles();
      }
    } : null;
  }, [open, setPositioningStyles]);
  react.useEffect(function () {
    if (!open) {
      return undefined;
    }
    var handleResize = (0,utils_debounce/* default */.Z)(function () {
      setPositioningStyles();
    });
    var containerWindow = (0,utils_ownerWindow/* default */.Z)(anchorEl);
    containerWindow.addEventListener('resize', handleResize);
    return function () {
      handleResize.clear();
      containerWindow.removeEventListener('resize', handleResize);
    };
  }, [anchorEl, open, setPositioningStyles]);
  var transitionDuration = transitionDurationProp;
  if (transitionDurationProp === 'auto' && !TransitionComponent.muiSupportAuto) {
    transitionDuration = undefined;
  }

  // If the container prop is provided, use that
  // If the anchorEl prop is provided, use its parent body element as the container
  // If neither are provided let the Modal take care of choosing the container
  var container = containerProp || (anchorEl ? (0,ownerDocument/* default */.Z)(resolveAnchorEl(anchorEl)).body : undefined);
  return /*#__PURE__*/(0,jsx_runtime.jsx)(PopoverRoot, (0,esm_extends/* default */.Z)({
    BackdropProps: {
      invisible: true
    },
    className: (0,clsx_m/* default */.Z)(classes.root, className),
    container: container,
    open: open,
    ref: ref,
    ownerState: ownerState
  }, other, {
    children: /*#__PURE__*/(0,jsx_runtime.jsx)(TransitionComponent, (0,esm_extends/* default */.Z)({
      appear: true,
      in: open,
      onEntering: handleEntering,
      onExited: handleExited,
      timeout: transitionDuration
    }, TransitionProps, {
      children: /*#__PURE__*/(0,jsx_runtime.jsx)(PopoverPaper, (0,esm_extends/* default */.Z)({
        elevation: elevation
      }, PaperProps, {
        ref: handlePaperRef,
        className: (0,clsx_m/* default */.Z)(classes.paper, PaperProps.className)
      }, isPositioned ? undefined : {
        style: (0,esm_extends/* default */.Z)({}, PaperProps.style, {
          opacity: 0
        })
      }, {
        ownerState: ownerState,
        children: children
      }))
    }))
  }));
});
 false ? 0 : void 0;
/* harmony default export */ var Popover_Popover = (Popover);
;// CONCATENATED MODULE: ./node_modules/@mui/material/Menu/menuClasses.js


function getMenuUtilityClass(slot) {
  return (0,generateUtilityClass_generateUtilityClass/* default */.Z)('MuiMenu', slot);
}
var menuClasses = (0,generateUtilityClasses/* default */.Z)('MuiMenu', ['root', 'paper', 'list']);
/* harmony default export */ var Menu_menuClasses = ((/* unused pure expression or super */ null && (menuClasses)));
;// CONCATENATED MODULE: ./node_modules/@mui/material/Menu/Menu.js


var Menu_excluded = ["onEntering"],
  Menu_excluded2 = ["autoFocus", "children", "disableAutoFocusItem", "MenuListProps", "onClose", "open", "PaperProps", "PopoverClasses", "transitionDuration", "TransitionProps", "variant"];














var RTL_ORIGIN = {
  vertical: 'top',
  horizontal: 'right'
};
var LTR_ORIGIN = {
  vertical: 'top',
  horizontal: 'left'
};
var Menu_useUtilityClasses = function useUtilityClasses(ownerState) {
  var classes = ownerState.classes;
  var slots = {
    root: ['root'],
    paper: ['paper'],
    list: ['list']
  };
  return (0,composeClasses/* default */.Z)(slots, getMenuUtilityClass, classes);
};
var MenuRoot = (0,styles_styled/* default */.ZP)(Popover_Popover, {
  shouldForwardProp: function shouldForwardProp(prop) {
    return (0,styles_styled/* rootShouldForwardProp */.FO)(prop) || prop === 'classes';
  },
  name: 'MuiMenu',
  slot: 'Root',
  overridesResolver: function overridesResolver(props, styles) {
    return styles.root;
  }
})({});
var MenuPaper = (0,styles_styled/* default */.ZP)(Paper_Paper, {
  name: 'MuiMenu',
  slot: 'Paper',
  overridesResolver: function overridesResolver(props, styles) {
    return styles.paper;
  }
})({
  // specZ: The maximum height of a simple menu should be one or more rows less than the view
  // height. This ensures a tapable area outside of the simple menu with which to dismiss
  // the menu.
  maxHeight: 'calc(100% - 96px)',
  // Add iOS momentum scrolling for iOS < 13.0
  WebkitOverflowScrolling: 'touch'
});
var MenuMenuList = (0,styles_styled/* default */.ZP)(MenuList_MenuList, {
  name: 'MuiMenu',
  slot: 'List',
  overridesResolver: function overridesResolver(props, styles) {
    return styles.list;
  }
})({
  // We disable the focus ring for mouse, touch and keyboard users.
  outline: 0
});
var Menu = /*#__PURE__*/react.forwardRef(function Menu(inProps, ref) {
  var props = (0,styles_useThemeProps/* default */.Z)({
    props: inProps,
    name: 'MuiMenu'
  });
  var _props$autoFocus = props.autoFocus,
    autoFocus = _props$autoFocus === void 0 ? true : _props$autoFocus,
    children = props.children,
    _props$disableAutoFoc = props.disableAutoFocusItem,
    disableAutoFocusItem = _props$disableAutoFoc === void 0 ? false : _props$disableAutoFoc,
    _props$MenuListProps = props.MenuListProps,
    MenuListProps = _props$MenuListProps === void 0 ? {} : _props$MenuListProps,
    onClose = props.onClose,
    open = props.open,
    _props$PaperProps = props.PaperProps,
    PaperProps = _props$PaperProps === void 0 ? {} : _props$PaperProps,
    PopoverClasses = props.PopoverClasses,
    _props$transitionDura = props.transitionDuration,
    transitionDuration = _props$transitionDura === void 0 ? 'auto' : _props$transitionDura,
    _props$TransitionProp = props.TransitionProps;
  _props$TransitionProp = _props$TransitionProp === void 0 ? {} : _props$TransitionProp;
  var onEntering = _props$TransitionProp.onEntering,
    _props$variant = props.variant,
    variant = _props$variant === void 0 ? 'selectedMenu' : _props$variant,
    TransitionProps = (0,objectWithoutPropertiesLoose/* default */.Z)(props.TransitionProps, Menu_excluded),
    other = (0,objectWithoutPropertiesLoose/* default */.Z)(props, Menu_excluded2);
  var theme = useTheme_useTheme();
  var isRtl = theme.direction === 'rtl';
  var ownerState = (0,esm_extends/* default */.Z)({}, props, {
    autoFocus: autoFocus,
    disableAutoFocusItem: disableAutoFocusItem,
    MenuListProps: MenuListProps,
    onEntering: onEntering,
    PaperProps: PaperProps,
    transitionDuration: transitionDuration,
    TransitionProps: TransitionProps,
    variant: variant
  });
  var classes = Menu_useUtilityClasses(ownerState);
  var autoFocusItem = autoFocus && !disableAutoFocusItem && open;
  var menuListActionsRef = react.useRef(null);
  var handleEntering = function handleEntering(element, isAppearing) {
    if (menuListActionsRef.current) {
      menuListActionsRef.current.adjustStyleForScrollbar(element, theme);
    }
    if (onEntering) {
      onEntering(element, isAppearing);
    }
  };
  var handleListKeyDown = function handleListKeyDown(event) {
    if (event.key === 'Tab') {
      event.preventDefault();
      if (onClose) {
        onClose(event, 'tabKeyDown');
      }
    }
  };

  /**
   * the index of the item should receive focus
   * in a `variant="selectedMenu"` it's the first `selected` item
   * otherwise it's the very first item.
   */
  var activeItemIndex = -1;
  // since we inject focus related props into children we have to do a lookahead
  // to check if there is a `selected` item. We're looking for the last `selected`
  // item and use the first valid item as a fallback
  react.Children.map(children, function (child, index) {
    if (! /*#__PURE__*/react.isValidElement(child)) {
      return;
    }
    if (false) {}
    if (!child.props.disabled) {
      if (variant === 'selectedMenu' && child.props.selected) {
        activeItemIndex = index;
      } else if (activeItemIndex === -1) {
        activeItemIndex = index;
      }
    }
  });
  return /*#__PURE__*/(0,jsx_runtime.jsx)(MenuRoot, (0,esm_extends/* default */.Z)({
    onClose: onClose,
    anchorOrigin: {
      vertical: 'bottom',
      horizontal: isRtl ? 'right' : 'left'
    },
    transformOrigin: isRtl ? RTL_ORIGIN : LTR_ORIGIN,
    PaperProps: (0,esm_extends/* default */.Z)({
      component: MenuPaper
    }, PaperProps, {
      classes: (0,esm_extends/* default */.Z)({}, PaperProps.classes, {
        root: classes.paper
      })
    }),
    className: classes.root,
    open: open,
    ref: ref,
    transitionDuration: transitionDuration,
    TransitionProps: (0,esm_extends/* default */.Z)({
      onEntering: handleEntering
    }, TransitionProps),
    ownerState: ownerState
  }, other, {
    classes: PopoverClasses,
    children: /*#__PURE__*/(0,jsx_runtime.jsx)(MenuMenuList, (0,esm_extends/* default */.Z)({
      onKeyDown: handleListKeyDown,
      actions: menuListActionsRef,
      autoFocus: autoFocus && (activeItemIndex === -1 || disableAutoFocusItem),
      autoFocusItem: autoFocusItem,
      variant: variant
    }, MenuListProps, {
      className: (0,clsx_m/* default */.Z)(classes.list, MenuListProps.className),
      children: children
    }))
  }));
});
 false ? 0 : void 0;
/* harmony default export */ var Menu_Menu = (Menu);
;// CONCATENATED MODULE: ./node_modules/@mui/material/NativeSelect/nativeSelectClasses.js


function getNativeSelectUtilityClasses(slot) {
  return (0,generateUtilityClass_generateUtilityClass/* default */.Z)('MuiNativeSelect', slot);
}
var nativeSelectClasses = (0,generateUtilityClasses/* default */.Z)('MuiNativeSelect', ['root', 'select', 'multiple', 'filled', 'outlined', 'standard', 'disabled', 'icon', 'iconOpen', 'iconFilled', 'iconOutlined', 'iconStandard', 'nativeInput']);
/* harmony default export */ var NativeSelect_nativeSelectClasses = (nativeSelectClasses);
;// CONCATENATED MODULE: ./node_modules/@mui/material/NativeSelect/NativeSelectInput.js



var NativeSelectInput_excluded = ["className", "disabled", "IconComponent", "inputRef", "variant"];










var NativeSelectInput_useUtilityClasses = function useUtilityClasses(ownerState) {
  var classes = ownerState.classes,
    variant = ownerState.variant,
    disabled = ownerState.disabled,
    multiple = ownerState.multiple,
    open = ownerState.open;
  var slots = {
    select: ['select', variant, disabled && 'disabled', multiple && 'multiple'],
    icon: ['icon', "icon".concat((0,utils_capitalize/* default */.Z)(variant)), open && 'iconOpen', disabled && 'disabled']
  };
  return (0,composeClasses/* default */.Z)(slots, getNativeSelectUtilityClasses, classes);
};
var nativeSelectSelectStyles = function nativeSelectSelectStyles(_ref) {
  var _extends2;
  var ownerState = _ref.ownerState,
    theme = _ref.theme;
  return (0,esm_extends/* default */.Z)((_extends2 = {
    MozAppearance: 'none',
    // Reset
    WebkitAppearance: 'none',
    // Reset
    // When interacting quickly, the text can end up selected.
    // Native select can't be selected either.
    userSelect: 'none',
    borderRadius: 0,
    // Reset
    cursor: 'pointer',
    '&:focus': (0,esm_extends/* default */.Z)({}, theme.vars ? {
      backgroundColor: "rgba(".concat(theme.vars.palette.common.onBackgroundChannel, " / 0.05)")
    } : {
      backgroundColor: theme.palette.mode === 'light' ? 'rgba(0, 0, 0, 0.05)' : 'rgba(255, 255, 255, 0.05)'
    }, {
      borderRadius: 0 // Reset Chrome style
    }),

    // Remove IE11 arrow
    '&::-ms-expand': {
      display: 'none'
    }
  }, (0,esm_defineProperty/* default */.Z)(_extends2, "&.".concat(NativeSelect_nativeSelectClasses.disabled), {
    cursor: 'default'
  }), (0,esm_defineProperty/* default */.Z)(_extends2, '&[multiple]', {
    height: 'auto'
  }), (0,esm_defineProperty/* default */.Z)(_extends2, '&:not([multiple]) option, &:not([multiple]) optgroup', {
    backgroundColor: (theme.vars || theme).palette.background.paper
  }), (0,esm_defineProperty/* default */.Z)(_extends2, '&&&', {
    paddingRight: 24,
    minWidth: 16 // So it doesn't collapse.
  }), _extends2), ownerState.variant === 'filled' && {
    '&&&': {
      paddingRight: 32
    }
  }, ownerState.variant === 'outlined' && {
    borderRadius: (theme.vars || theme).shape.borderRadius,
    '&:focus': {
      borderRadius: (theme.vars || theme).shape.borderRadius // Reset the reset for Chrome style
    },

    '&&&': {
      paddingRight: 32
    }
  });
};
var NativeSelectSelect = (0,styles_styled/* default */.ZP)('select', {
  name: 'MuiNativeSelect',
  slot: 'Select',
  shouldForwardProp: styles_styled/* rootShouldForwardProp */.FO,
  overridesResolver: function overridesResolver(props, styles) {
    var ownerState = props.ownerState;
    return [styles.select, styles[ownerState.variant], (0,esm_defineProperty/* default */.Z)({}, "&.".concat(NativeSelect_nativeSelectClasses.multiple), styles.multiple)];
  }
})(nativeSelectSelectStyles);
var nativeSelectIconStyles = function nativeSelectIconStyles(_ref3) {
  var ownerState = _ref3.ownerState,
    theme = _ref3.theme;
  return (0,esm_extends/* default */.Z)((0,esm_defineProperty/* default */.Z)({
    // We use a position absolute over a flexbox in order to forward the pointer events
    // to the input and to support wrapping tags..
    position: 'absolute',
    right: 0,
    top: 'calc(50% - .5em)',
    // Center vertically, height is 1em
    pointerEvents: 'none',
    // Don't block pointer events on the select under the icon.
    color: (theme.vars || theme).palette.action.active
  }, "&.".concat(NativeSelect_nativeSelectClasses.disabled), {
    color: (theme.vars || theme).palette.action.disabled
  }), ownerState.open && {
    transform: 'rotate(180deg)'
  }, ownerState.variant === 'filled' && {
    right: 7
  }, ownerState.variant === 'outlined' && {
    right: 7
  });
};
var NativeSelectIcon = (0,styles_styled/* default */.ZP)('svg', {
  name: 'MuiNativeSelect',
  slot: 'Icon',
  overridesResolver: function overridesResolver(props, styles) {
    var ownerState = props.ownerState;
    return [styles.icon, ownerState.variant && styles["icon".concat((0,utils_capitalize/* default */.Z)(ownerState.variant))], ownerState.open && styles.iconOpen];
  }
})(nativeSelectIconStyles);

/**
 * @ignore - internal component.
 */
var NativeSelectInput = /*#__PURE__*/react.forwardRef(function NativeSelectInput(props, ref) {
  var className = props.className,
    disabled = props.disabled,
    IconComponent = props.IconComponent,
    inputRef = props.inputRef,
    _props$variant = props.variant,
    variant = _props$variant === void 0 ? 'standard' : _props$variant,
    other = (0,objectWithoutPropertiesLoose/* default */.Z)(props, NativeSelectInput_excluded);
  var ownerState = (0,esm_extends/* default */.Z)({}, props, {
    disabled: disabled,
    variant: variant
  });
  var classes = NativeSelectInput_useUtilityClasses(ownerState);
  return /*#__PURE__*/(0,jsx_runtime.jsxs)(react.Fragment, {
    children: [/*#__PURE__*/(0,jsx_runtime.jsx)(NativeSelectSelect, (0,esm_extends/* default */.Z)({
      ownerState: ownerState,
      className: (0,clsx_m/* default */.Z)(classes.select, className),
      disabled: disabled,
      ref: inputRef || ref
    }, other)), props.multiple ? null : /*#__PURE__*/(0,jsx_runtime.jsx)(NativeSelectIcon, {
      as: IconComponent,
      ownerState: ownerState,
      className: classes.icon
    })]
  });
});
 false ? 0 : void 0;
/* harmony default export */ var NativeSelect_NativeSelectInput = (NativeSelectInput);
// EXTERNAL MODULE: ./node_modules/@mui/material/utils/useControlled.js + 1 modules
var useControlled = __webpack_require__(8744);
;// CONCATENATED MODULE: ./node_modules/@mui/material/Select/selectClasses.js


function getSelectUtilityClasses(slot) {
  return (0,generateUtilityClass_generateUtilityClass/* default */.Z)('MuiSelect', slot);
}
var selectClasses = (0,generateUtilityClasses/* default */.Z)('MuiSelect', ['select', 'multiple', 'filled', 'outlined', 'standard', 'disabled', 'focused', 'icon', 'iconOpen', 'iconFilled', 'iconOutlined', 'iconStandard', 'nativeInput']);
/* harmony default export */ var Select_selectClasses = (selectClasses);
;// CONCATENATED MODULE: ./node_modules/@mui/material/Select/SelectInput.js





var SelectInput_span;
var SelectInput_excluded = ["aria-describedby", "aria-label", "autoFocus", "autoWidth", "children", "className", "defaultOpen", "defaultValue", "disabled", "displayEmpty", "IconComponent", "inputRef", "labelId", "MenuProps", "multiple", "name", "onBlur", "onChange", "onClose", "onFocus", "onOpen", "open", "readOnly", "renderValue", "SelectDisplayProps", "tabIndex", "type", "value", "variant"];

















var SelectSelect = (0,styles_styled/* default */.ZP)('div', {
  name: 'MuiSelect',
  slot: 'Select',
  overridesResolver: function overridesResolver(props, styles) {
    var ownerState = props.ownerState;
    return [// Win specificity over the input base
    (0,esm_defineProperty/* default */.Z)({}, "&.".concat(Select_selectClasses.select), styles.select), (0,esm_defineProperty/* default */.Z)({}, "&.".concat(Select_selectClasses.select), styles[ownerState.variant]), (0,esm_defineProperty/* default */.Z)({}, "&.".concat(Select_selectClasses.multiple), styles.multiple)];
  }
})(nativeSelectSelectStyles, (0,esm_defineProperty/* default */.Z)({}, "&.".concat(Select_selectClasses.select), {
  height: 'auto',
  // Resets for multiple select with chips
  minHeight: '1.4375em',
  // Required for select\text-field height consistency
  textOverflow: 'ellipsis',
  whiteSpace: 'nowrap',
  overflow: 'hidden'
}));
var SelectIcon = (0,styles_styled/* default */.ZP)('svg', {
  name: 'MuiSelect',
  slot: 'Icon',
  overridesResolver: function overridesResolver(props, styles) {
    var ownerState = props.ownerState;
    return [styles.icon, ownerState.variant && styles["icon".concat((0,utils_capitalize/* default */.Z)(ownerState.variant))], ownerState.open && styles.iconOpen];
  }
})(nativeSelectIconStyles);
var SelectNativeInput = (0,styles_styled/* default */.ZP)('input', {
  shouldForwardProp: function shouldForwardProp(prop) {
    return (0,styles_styled/* slotShouldForwardProp */.Dz)(prop) && prop !== 'classes';
  },
  name: 'MuiSelect',
  slot: 'NativeInput',
  overridesResolver: function overridesResolver(props, styles) {
    return styles.nativeInput;
  }
})({
  bottom: 0,
  left: 0,
  position: 'absolute',
  opacity: 0,
  pointerEvents: 'none',
  width: '100%',
  boxSizing: 'border-box'
});
function areEqualValues(a, b) {
  if (typeof b === 'object' && b !== null) {
    return a === b;
  }

  // The value could be a number, the DOM will stringify it anyway.
  return String(a) === String(b);
}
function SelectInput_isEmpty(display) {
  return display == null || typeof display === 'string' && !display.trim();
}
var SelectInput_useUtilityClasses = function useUtilityClasses(ownerState) {
  var classes = ownerState.classes,
    variant = ownerState.variant,
    disabled = ownerState.disabled,
    multiple = ownerState.multiple,
    open = ownerState.open;
  var slots = {
    select: ['select', variant, disabled && 'disabled', multiple && 'multiple'],
    icon: ['icon', "icon".concat((0,utils_capitalize/* default */.Z)(variant)), open && 'iconOpen', disabled && 'disabled'],
    nativeInput: ['nativeInput']
  };
  return (0,composeClasses/* default */.Z)(slots, getSelectUtilityClasses, classes);
};

/**
 * @ignore - internal component.
 */
var SelectInput = /*#__PURE__*/react.forwardRef(function SelectInput(props, ref) {
  var ariaDescribedby = props['aria-describedby'],
    ariaLabel = props['aria-label'],
    autoFocus = props.autoFocus,
    autoWidth = props.autoWidth,
    children = props.children,
    className = props.className,
    defaultOpen = props.defaultOpen,
    defaultValue = props.defaultValue,
    disabled = props.disabled,
    displayEmpty = props.displayEmpty,
    IconComponent = props.IconComponent,
    inputRefProp = props.inputRef,
    labelId = props.labelId,
    _props$MenuProps = props.MenuProps,
    MenuProps = _props$MenuProps === void 0 ? {} : _props$MenuProps,
    multiple = props.multiple,
    name = props.name,
    onBlur = props.onBlur,
    onChange = props.onChange,
    onClose = props.onClose,
    onFocus = props.onFocus,
    onOpen = props.onOpen,
    openProp = props.open,
    readOnly = props.readOnly,
    renderValue = props.renderValue,
    _props$SelectDisplayP = props.SelectDisplayProps,
    SelectDisplayProps = _props$SelectDisplayP === void 0 ? {} : _props$SelectDisplayP,
    tabIndexProp = props.tabIndex,
    valueProp = props.value,
    _props$variant = props.variant,
    variant = _props$variant === void 0 ? 'standard' : _props$variant,
    other = (0,objectWithoutPropertiesLoose/* default */.Z)(props, SelectInput_excluded);
  var _useControlled = (0,useControlled/* default */.Z)({
      controlled: valueProp,
      default: defaultValue,
      name: 'Select'
    }),
    _useControlled2 = (0,slicedToArray/* default */.Z)(_useControlled, 2),
    value = _useControlled2[0],
    setValueState = _useControlled2[1];
  var _useControlled3 = (0,useControlled/* default */.Z)({
      controlled: openProp,
      default: defaultOpen,
      name: 'Select'
    }),
    _useControlled4 = (0,slicedToArray/* default */.Z)(_useControlled3, 2),
    openState = _useControlled4[0],
    setOpenState = _useControlled4[1];
  var inputRef = react.useRef(null);
  var displayRef = react.useRef(null);
  var _React$useState = react.useState(null),
    _React$useState2 = (0,slicedToArray/* default */.Z)(_React$useState, 2),
    displayNode = _React$useState2[0],
    setDisplayNode = _React$useState2[1];
  var _React$useRef = react.useRef(openProp != null),
    isOpenControlled = _React$useRef.current;
  var _React$useState3 = react.useState(),
    _React$useState4 = (0,slicedToArray/* default */.Z)(_React$useState3, 2),
    menuMinWidthState = _React$useState4[0],
    setMenuMinWidthState = _React$useState4[1];
  var handleRef = (0,useForkRef/* default */.Z)(ref, inputRefProp);
  var handleDisplayRef = react.useCallback(function (node) {
    displayRef.current = node;
    if (node) {
      setDisplayNode(node);
    }
  }, []);
  react.useImperativeHandle(handleRef, function () {
    return {
      focus: function focus() {
        displayRef.current.focus();
      },
      node: inputRef.current,
      value: value
    };
  }, [value]);

  // Resize menu on `defaultOpen` automatic toggle.
  react.useEffect(function () {
    if (defaultOpen && openState && displayNode && !isOpenControlled) {
      setMenuMinWidthState(autoWidth ? null : displayNode.clientWidth);
      displayRef.current.focus();
    }
    // eslint-disable-next-line react-hooks/exhaustive-deps
  }, [displayNode, autoWidth]);
  // `isOpenControlled` is ignored because the component should never switch between controlled and uncontrolled modes.
  // `defaultOpen` and `openState` are ignored to avoid unnecessary callbacks.
  react.useEffect(function () {
    if (autoFocus) {
      displayRef.current.focus();
    }
  }, [autoFocus]);
  react.useEffect(function () {
    if (!labelId) {
      return undefined;
    }
    var label = (0,ownerDocument/* default */.Z)(displayRef.current).getElementById(labelId);
    if (label) {
      var handler = function handler() {
        if (getSelection().isCollapsed) {
          displayRef.current.focus();
        }
      };
      label.addEventListener('click', handler);
      return function () {
        label.removeEventListener('click', handler);
      };
    }
    return undefined;
  }, [labelId]);
  var update = function update(open, event) {
    if (open) {
      if (onOpen) {
        onOpen(event);
      }
    } else if (onClose) {
      onClose(event);
    }
    if (!isOpenControlled) {
      setMenuMinWidthState(autoWidth ? null : displayNode.clientWidth);
      setOpenState(open);
    }
  };
  var handleMouseDown = function handleMouseDown(event) {
    // Ignore everything but left-click
    if (event.button !== 0) {
      return;
    }
    // Hijack the default focus behavior.
    event.preventDefault();
    displayRef.current.focus();
    update(true, event);
  };
  var handleClose = function handleClose(event) {
    update(false, event);
  };
  var childrenArray = react.Children.toArray(children);

  // Support autofill.
  var handleChange = function handleChange(event) {
    var index = childrenArray.map(function (child) {
      return child.props.value;
    }).indexOf(event.target.value);
    if (index === -1) {
      return;
    }
    var child = childrenArray[index];
    setValueState(child.props.value);
    if (onChange) {
      onChange(event, child);
    }
  };
  var handleItemClick = function handleItemClick(child) {
    return function (event) {
      var newValue;

      // We use the tabindex attribute to signal the available options.
      if (!event.currentTarget.hasAttribute('tabindex')) {
        return;
      }
      if (multiple) {
        newValue = Array.isArray(value) ? value.slice() : [];
        var itemIndex = value.indexOf(child.props.value);
        if (itemIndex === -1) {
          newValue.push(child.props.value);
        } else {
          newValue.splice(itemIndex, 1);
        }
      } else {
        newValue = child.props.value;
      }
      if (child.props.onClick) {
        child.props.onClick(event);
      }
      if (value !== newValue) {
        setValueState(newValue);
        if (onChange) {
          // Redefine target to allow name and value to be read.
          // This allows seamless integration with the most popular form libraries.
          // https://github.com/mui/material-ui/issues/13485#issuecomment-676048492
          // Clone the event to not override `target` of the original event.
          var nativeEvent = event.nativeEvent || event;
          var clonedEvent = new nativeEvent.constructor(nativeEvent.type, nativeEvent);
          Object.defineProperty(clonedEvent, 'target', {
            writable: true,
            value: {
              value: newValue,
              name: name
            }
          });
          onChange(clonedEvent, child);
        }
      }
      if (!multiple) {
        update(false, event);
      }
    };
  };
  var handleKeyDown = function handleKeyDown(event) {
    if (!readOnly) {
      var validKeys = [' ', 'ArrowUp', 'ArrowDown',
      // The native select doesn't respond to enter on macOS, but it's recommended by
      // https://www.w3.org/WAI/ARIA/apg/example-index/combobox/combobox-select-only.html
      'Enter'];
      if (validKeys.indexOf(event.key) !== -1) {
        event.preventDefault();
        update(true, event);
      }
    }
  };
  var open = displayNode !== null && openState;
  var handleBlur = function handleBlur(event) {
    // if open event.stopImmediatePropagation
    if (!open && onBlur) {
      // Preact support, target is read only property on a native event.
      Object.defineProperty(event, 'target', {
        writable: true,
        value: {
          value: value,
          name: name
        }
      });
      onBlur(event);
    }
  };
  delete other['aria-invalid'];
  var display;
  var displaySingle;
  var displayMultiple = [];
  var computeDisplay = false;
  var foundMatch = false;

  // No need to display any value if the field is empty.
  if (isFilled({
    value: value
  }) || displayEmpty) {
    if (renderValue) {
      display = renderValue(value);
    } else {
      computeDisplay = true;
    }
  }
  var items = childrenArray.map(function (child, index, arr) {
    if (! /*#__PURE__*/react.isValidElement(child)) {
      return null;
    }
    if (false) {}
    var selected;
    if (multiple) {
      if (!Array.isArray(value)) {
        throw new Error( false ? 0 : (0,formatMuiErrorMessage/* default */.Z)(2));
      }
      selected = value.some(function (v) {
        return areEqualValues(v, child.props.value);
      });
      if (selected && computeDisplay) {
        displayMultiple.push(child.props.children);
      }
    } else {
      selected = areEqualValues(value, child.props.value);
      if (selected && computeDisplay) {
        displaySingle = child.props.children;
      }
    }
    if (selected) {
      foundMatch = true;
    }
    if (child.props.value === undefined) {
      return /*#__PURE__*/react.cloneElement(child, {
        'aria-readonly': true,
        role: 'option'
      });
    }
    var isFirstSelectableElement = function isFirstSelectableElement() {
      if (value) {
        return selected;
      }
      var firstSelectableElement = arr.find(function (item) {
        return item.props.value !== undefined && item.props.disabled !== true;
      });
      if (child === firstSelectableElement) {
        return true;
      }
      return selected;
    };
    return /*#__PURE__*/react.cloneElement(child, {
      'aria-selected': selected ? 'true' : 'false',
      onClick: handleItemClick(child),
      onKeyUp: function onKeyUp(event) {
        if (event.key === ' ') {
          // otherwise our MenuItems dispatches a click event
          // it's not behavior of the native <option> and causes
          // the select to close immediately since we open on space keydown
          event.preventDefault();
        }
        if (child.props.onKeyUp) {
          child.props.onKeyUp(event);
        }
      },
      role: 'option',
      selected: arr[0].props.value === undefined || arr[0].props.disabled === true ? isFirstSelectableElement() : selected,
      value: undefined,
      // The value is most likely not a valid HTML attribute.
      'data-value': child.props.value // Instead, we provide it as a data attribute.
    });
  });

  if (false) {}
  if (computeDisplay) {
    if (multiple) {
      if (displayMultiple.length === 0) {
        display = null;
      } else {
        display = displayMultiple.reduce(function (output, child, index) {
          output.push(child);
          if (index < displayMultiple.length - 1) {
            output.push(', ');
          }
          return output;
        }, []);
      }
    } else {
      display = displaySingle;
    }
  }

  // Avoid performing a layout computation in the render method.
  var menuMinWidth = menuMinWidthState;
  if (!autoWidth && isOpenControlled && displayNode) {
    menuMinWidth = displayNode.clientWidth;
  }
  var tabIndex;
  if (typeof tabIndexProp !== 'undefined') {
    tabIndex = tabIndexProp;
  } else {
    tabIndex = disabled ? null : 0;
  }
  var buttonId = SelectDisplayProps.id || (name ? "mui-component-select-".concat(name) : undefined);
  var ownerState = (0,esm_extends/* default */.Z)({}, props, {
    variant: variant,
    value: value,
    open: open
  });
  var classes = SelectInput_useUtilityClasses(ownerState);
  return /*#__PURE__*/(0,jsx_runtime.jsxs)(react.Fragment, {
    children: [/*#__PURE__*/(0,jsx_runtime.jsx)(SelectSelect, (0,esm_extends/* default */.Z)({
      ref: handleDisplayRef,
      tabIndex: tabIndex,
      role: "button",
      "aria-disabled": disabled ? 'true' : undefined,
      "aria-expanded": open ? 'true' : 'false',
      "aria-haspopup": "listbox",
      "aria-label": ariaLabel,
      "aria-labelledby": [labelId, buttonId].filter(Boolean).join(' ') || undefined,
      "aria-describedby": ariaDescribedby,
      onKeyDown: handleKeyDown,
      onMouseDown: disabled || readOnly ? null : handleMouseDown,
      onBlur: handleBlur,
      onFocus: onFocus
    }, SelectDisplayProps, {
      ownerState: ownerState,
      className: (0,clsx_m/* default */.Z)(SelectDisplayProps.className, classes.select, className)
      // The id is required for proper a11y
      ,

      id: buttonId,
      children: SelectInput_isEmpty(display) ?
      // notranslate needed while Google Translate will not fix zero-width space issue
      SelectInput_span || (SelectInput_span = /*#__PURE__*/(0,jsx_runtime.jsx)("span", {
        className: "notranslate",
        children: "\u200B"
      })) : display
    })), /*#__PURE__*/(0,jsx_runtime.jsx)(SelectNativeInput, (0,esm_extends/* default */.Z)({
      value: Array.isArray(value) ? value.join(',') : value,
      name: name,
      ref: inputRef,
      "aria-hidden": true,
      onChange: handleChange,
      tabIndex: -1,
      disabled: disabled,
      className: classes.nativeInput,
      autoFocus: autoFocus,
      ownerState: ownerState
    }, other)), /*#__PURE__*/(0,jsx_runtime.jsx)(SelectIcon, {
      as: IconComponent,
      className: classes.icon,
      ownerState: ownerState
    }), /*#__PURE__*/(0,jsx_runtime.jsx)(Menu_Menu, (0,esm_extends/* default */.Z)({
      id: "menu-".concat(name || ''),
      anchorEl: displayNode,
      open: open,
      onClose: handleClose,
      anchorOrigin: {
        vertical: 'bottom',
        horizontal: 'center'
      },
      transformOrigin: {
        vertical: 'top',
        horizontal: 'center'
      }
    }, MenuProps, {
      MenuListProps: (0,esm_extends/* default */.Z)({
        'aria-labelledby': labelId,
        role: 'listbox',
        disableListWrap: true
      }, MenuProps.MenuListProps),
      PaperProps: (0,esm_extends/* default */.Z)({}, MenuProps.PaperProps, {
        style: (0,esm_extends/* default */.Z)({
          minWidth: menuMinWidth
        }, MenuProps.PaperProps != null ? MenuProps.PaperProps.style : null)
      }),
      children: items
    }))]
  });
});
 false ? 0 : void 0;
/* harmony default export */ var Select_SelectInput = (SelectInput);
;// CONCATENATED MODULE: ./node_modules/@mui/material/internal/svg-icons/ArrowDropDown.js



/**
 * @ignore - internal component.
 */

/* harmony default export */ var ArrowDropDown = ((0,createSvgIcon/* default */.Z)( /*#__PURE__*/(0,jsx_runtime.jsx)("path", {
  d: "M7 10l5 5 5-5z"
}), 'ArrowDropDown'));
;// CONCATENATED MODULE: ./node_modules/@mui/material/Select/Select.js


var _StyledInput, _StyledFilledInput;
var Select_excluded = ["autoWidth", "children", "classes", "className", "defaultOpen", "displayEmpty", "IconComponent", "id", "input", "inputProps", "label", "labelId", "MenuProps", "multiple", "native", "onClose", "onOpen", "open", "renderValue", "SelectDisplayProps", "variant"];
















var Select_useUtilityClasses = function useUtilityClasses(ownerState) {
  var classes = ownerState.classes;
  return classes;
};
var styledRootConfig = {
  name: 'MuiSelect',
  overridesResolver: function overridesResolver(props, styles) {
    return styles.root;
  },
  shouldForwardProp: function shouldForwardProp(prop) {
    return (0,styles_styled/* rootShouldForwardProp */.FO)(prop) && prop !== 'variant';
  },
  slot: 'Root'
};
var StyledInput = (0,styles_styled/* default */.ZP)(Input_Input, styledRootConfig)('');
var StyledOutlinedInput = (0,styles_styled/* default */.ZP)(OutlinedInput_OutlinedInput, styledRootConfig)('');
var StyledFilledInput = (0,styles_styled/* default */.ZP)(FilledInput_FilledInput, styledRootConfig)('');
var Select = /*#__PURE__*/react.forwardRef(function Select(inProps, ref) {
  var props = (0,styles_useThemeProps/* default */.Z)({
    name: 'MuiSelect',
    props: inProps
  });
  var _props$autoWidth = props.autoWidth,
    autoWidth = _props$autoWidth === void 0 ? false : _props$autoWidth,
    children = props.children,
    _props$classes = props.classes,
    classesProp = _props$classes === void 0 ? {} : _props$classes,
    className = props.className,
    _props$defaultOpen = props.defaultOpen,
    defaultOpen = _props$defaultOpen === void 0 ? false : _props$defaultOpen,
    _props$displayEmpty = props.displayEmpty,
    displayEmpty = _props$displayEmpty === void 0 ? false : _props$displayEmpty,
    _props$IconComponent = props.IconComponent,
    IconComponent = _props$IconComponent === void 0 ? ArrowDropDown : _props$IconComponent,
    id = props.id,
    input = props.input,
    inputProps = props.inputProps,
    label = props.label,
    labelId = props.labelId,
    MenuProps = props.MenuProps,
    _props$multiple = props.multiple,
    multiple = _props$multiple === void 0 ? false : _props$multiple,
    _props$native = props.native,
    native = _props$native === void 0 ? false : _props$native,
    onClose = props.onClose,
    onOpen = props.onOpen,
    open = props.open,
    renderValue = props.renderValue,
    SelectDisplayProps = props.SelectDisplayProps,
    _props$variant = props.variant,
    variantProp = _props$variant === void 0 ? 'outlined' : _props$variant,
    other = (0,objectWithoutPropertiesLoose/* default */.Z)(props, Select_excluded);
  var inputComponent = native ? NativeSelect_NativeSelectInput : Select_SelectInput;
  var muiFormControl = useFormControl();
  var fcs = formControlState({
    props: props,
    muiFormControl: muiFormControl,
    states: ['variant']
  });
  var variant = fcs.variant || variantProp;
  var InputComponent = input || {
    standard: _StyledInput || (_StyledInput = /*#__PURE__*/(0,jsx_runtime.jsx)(StyledInput, {})),
    outlined: /*#__PURE__*/(0,jsx_runtime.jsx)(StyledOutlinedInput, {
      label: label
    }),
    filled: _StyledFilledInput || (_StyledFilledInput = /*#__PURE__*/(0,jsx_runtime.jsx)(StyledFilledInput, {}))
  }[variant];
  var ownerState = (0,esm_extends/* default */.Z)({}, props, {
    variant: variant,
    classes: classesProp
  });
  var classes = Select_useUtilityClasses(ownerState);
  var inputComponentRef = (0,useForkRef/* default */.Z)(ref, InputComponent.ref);
  return /*#__PURE__*/(0,jsx_runtime.jsx)(react.Fragment, {
    children: /*#__PURE__*/react.cloneElement(InputComponent, (0,esm_extends/* default */.Z)({
      // Most of the logic is implemented in `SelectInput`.
      // The `Select` component is a simple API wrapper to expose something better to play with.
      inputComponent: inputComponent,
      inputProps: (0,esm_extends/* default */.Z)({
        children: children,
        IconComponent: IconComponent,
        variant: variant,
        type: undefined,
        // We render a select. We can ignore the type provided by the `Input`.
        multiple: multiple
      }, native ? {
        id: id
      } : {
        autoWidth: autoWidth,
        defaultOpen: defaultOpen,
        displayEmpty: displayEmpty,
        labelId: labelId,
        MenuProps: MenuProps,
        onClose: onClose,
        onOpen: onOpen,
        open: open,
        renderValue: renderValue,
        SelectDisplayProps: (0,esm_extends/* default */.Z)({
          id: id
        }, SelectDisplayProps)
      }, inputProps, {
        classes: inputProps ? (0,deepmerge/* default */.Z)(classes, inputProps.classes) : classes
      }, input ? input.props.inputProps : {})
    }, multiple && native && variant === 'outlined' ? {
      notched: true
    } : {}, {
      ref: inputComponentRef,
      className: (0,clsx_m/* default */.Z)(InputComponent.props.className, className)
    }, !input && {
      variant: variant
    }, other))
  });
});
 false ? 0 : void 0;
Select.muiName = 'Select';
/* harmony default export */ var Select_Select = (Select);
;// CONCATENATED MODULE: ./node_modules/@mui/material/TextField/textFieldClasses.js


function getTextFieldUtilityClass(slot) {
  return (0,generateUtilityClass_generateUtilityClass/* default */.Z)('MuiTextField', slot);
}
var textFieldClasses = (0,generateUtilityClasses/* default */.Z)('MuiTextField', ['root']);
/* harmony default export */ var TextField_textFieldClasses = ((/* unused pure expression or super */ null && (textFieldClasses)));
;// CONCATENATED MODULE: ./node_modules/@mui/material/TextField/TextField.js


var TextField_excluded = ["autoComplete", "autoFocus", "children", "className", "color", "defaultValue", "disabled", "error", "FormHelperTextProps", "fullWidth", "helperText", "id", "InputLabelProps", "inputProps", "InputProps", "inputRef", "label", "maxRows", "minRows", "multiline", "name", "onBlur", "onChange", "onFocus", "placeholder", "required", "rows", "select", "SelectProps", "type", "value", "variant"];

















var variantComponent = {
  standard: Input_Input,
  filled: FilledInput_FilledInput,
  outlined: OutlinedInput_OutlinedInput
};
var TextField_useUtilityClasses = function useUtilityClasses(ownerState) {
  var classes = ownerState.classes;
  var slots = {
    root: ['root']
  };
  return (0,composeClasses/* default */.Z)(slots, getTextFieldUtilityClass, classes);
};
var TextFieldRoot = (0,styles_styled/* default */.ZP)(FormControl_FormControl, {
  name: 'MuiTextField',
  slot: 'Root',
  overridesResolver: function overridesResolver(props, styles) {
    return styles.root;
  }
})({});

/**
 * The `TextField` is a convenience wrapper for the most common cases (80%).
 * It cannot be all things to all people, otherwise the API would grow out of control.
 *
 * ## Advanced Configuration
 *
 * It's important to understand that the text field is a simple abstraction
 * on top of the following components:
 *
 * - [FormControl](/material-ui/api/form-control/)
 * - [InputLabel](/material-ui/api/input-label/)
 * - [FilledInput](/material-ui/api/filled-input/)
 * - [OutlinedInput](/material-ui/api/outlined-input/)
 * - [Input](/material-ui/api/input/)
 * - [FormHelperText](/material-ui/api/form-helper-text/)
 *
 * If you wish to alter the props applied to the `input` element, you can do so as follows:
 *
 * ```jsx
 * const inputProps = {
 *   step: 300,
 * };
 *
 * return <TextField id="time" type="time" inputProps={inputProps} />;
 * ```
 *
 * For advanced cases, please look at the source of TextField by clicking on the
 * "Edit this page" button above. Consider either:
 *
 * - using the upper case props for passing values directly to the components
 * - using the underlying components directly as shown in the demos
 */
var TextField = /*#__PURE__*/react.forwardRef(function TextField(inProps, ref) {
  var props = (0,styles_useThemeProps/* default */.Z)({
    props: inProps,
    name: 'MuiTextField'
  });
  var autoComplete = props.autoComplete,
    _props$autoFocus = props.autoFocus,
    autoFocus = _props$autoFocus === void 0 ? false : _props$autoFocus,
    children = props.children,
    className = props.className,
    _props$color = props.color,
    color = _props$color === void 0 ? 'primary' : _props$color,
    defaultValue = props.defaultValue,
    _props$disabled = props.disabled,
    disabled = _props$disabled === void 0 ? false : _props$disabled,
    _props$error = props.error,
    error = _props$error === void 0 ? false : _props$error,
    FormHelperTextProps = props.FormHelperTextProps,
    _props$fullWidth = props.fullWidth,
    fullWidth = _props$fullWidth === void 0 ? false : _props$fullWidth,
    helperText = props.helperText,
    idOverride = props.id,
    InputLabelProps = props.InputLabelProps,
    inputProps = props.inputProps,
    InputProps = props.InputProps,
    inputRef = props.inputRef,
    label = props.label,
    maxRows = props.maxRows,
    minRows = props.minRows,
    _props$multiline = props.multiline,
    multiline = _props$multiline === void 0 ? false : _props$multiline,
    name = props.name,
    onBlur = props.onBlur,
    onChange = props.onChange,
    onFocus = props.onFocus,
    placeholder = props.placeholder,
    _props$required = props.required,
    required = _props$required === void 0 ? false : _props$required,
    rows = props.rows,
    _props$select = props.select,
    select = _props$select === void 0 ? false : _props$select,
    SelectProps = props.SelectProps,
    type = props.type,
    value = props.value,
    _props$variant = props.variant,
    variant = _props$variant === void 0 ? 'outlined' : _props$variant,
    other = (0,objectWithoutPropertiesLoose/* default */.Z)(props, TextField_excluded);
  var ownerState = (0,esm_extends/* default */.Z)({}, props, {
    autoFocus: autoFocus,
    color: color,
    disabled: disabled,
    error: error,
    fullWidth: fullWidth,
    multiline: multiline,
    required: required,
    select: select,
    variant: variant
  });
  var classes = TextField_useUtilityClasses(ownerState);
  if (false) {}
  var InputMore = {};
  if (variant === 'outlined') {
    if (InputLabelProps && typeof InputLabelProps.shrink !== 'undefined') {
      InputMore.notched = InputLabelProps.shrink;
    }
    InputMore.label = label;
  }
  if (select) {
    // unset defaults from textbox inputs
    if (!SelectProps || !SelectProps.native) {
      InputMore.id = undefined;
    }
    InputMore['aria-describedby'] = undefined;
  }
  var id = (0,useId/* default */.Z)(idOverride);
  var helperTextId = helperText && id ? "".concat(id, "-helper-text") : undefined;
  var inputLabelId = label && id ? "".concat(id, "-label") : undefined;
  var InputComponent = variantComponent[variant];
  var InputElement = /*#__PURE__*/(0,jsx_runtime.jsx)(InputComponent, (0,esm_extends/* default */.Z)({
    "aria-describedby": helperTextId,
    autoComplete: autoComplete,
    autoFocus: autoFocus,
    defaultValue: defaultValue,
    fullWidth: fullWidth,
    multiline: multiline,
    name: name,
    rows: rows,
    maxRows: maxRows,
    minRows: minRows,
    type: type,
    value: value,
    id: id,
    inputRef: inputRef,
    onBlur: onBlur,
    onChange: onChange,
    onFocus: onFocus,
    placeholder: placeholder,
    inputProps: inputProps
  }, InputMore, InputProps));
  return /*#__PURE__*/(0,jsx_runtime.jsxs)(TextFieldRoot, (0,esm_extends/* default */.Z)({
    className: (0,clsx_m/* default */.Z)(classes.root, className),
    disabled: disabled,
    error: error,
    fullWidth: fullWidth,
    ref: ref,
    required: required,
    color: color,
    variant: variant,
    ownerState: ownerState
  }, other, {
    children: [label != null && label !== '' && /*#__PURE__*/(0,jsx_runtime.jsx)(InputLabel_InputLabel, (0,esm_extends/* default */.Z)({
      htmlFor: id,
      id: inputLabelId
    }, InputLabelProps, {
      children: label
    })), select ? /*#__PURE__*/(0,jsx_runtime.jsx)(Select_Select, (0,esm_extends/* default */.Z)({
      "aria-describedby": helperTextId,
      id: id,
      labelId: inputLabelId,
      value: value,
      input: InputElement
    }, SelectProps, {
      children: children
    })) : InputElement, helperText && /*#__PURE__*/(0,jsx_runtime.jsx)(FormHelperText_FormHelperText, (0,esm_extends/* default */.Z)({
      id: helperTextId
    }, FormHelperTextProps, {
      children: helperText
    }))]
  }));
});
 false ? 0 : void 0;
/* harmony default export */ var TextField_TextField = (TextField);
;// CONCATENATED MODULE: ./node_modules/@mui/material/Alert/alertClasses.js


function getAlertUtilityClass(slot) {
  return (0,generateUtilityClass_generateUtilityClass/* default */.Z)('MuiAlert', slot);
}
var alertClasses = (0,generateUtilityClasses/* default */.Z)('MuiAlert', ['root', 'action', 'icon', 'message', 'filled', 'filledSuccess', 'filledInfo', 'filledWarning', 'filledError', 'outlined', 'outlinedSuccess', 'outlinedInfo', 'outlinedWarning', 'outlinedError', 'standard', 'standardSuccess', 'standardInfo', 'standardWarning', 'standardError']);
/* harmony default export */ var Alert_alertClasses = (alertClasses);
;// CONCATENATED MODULE: ./node_modules/@mui/material/internal/svg-icons/SuccessOutlined.js



/**
 * @ignore - internal component.
 */

/* harmony default export */ var SuccessOutlined = ((0,createSvgIcon/* default */.Z)( /*#__PURE__*/(0,jsx_runtime.jsx)("path", {
  d: "M20,12A8,8 0 0,1 12,20A8,8 0 0,1 4,12A8,8 0 0,1 12,4C12.76,4 13.5,4.11 14.2, 4.31L15.77,2.74C14.61,2.26 13.34,2 12,2A10,10 0 0,0 2,12A10,10 0 0,0 12,22A10,10 0 0, 0 22,12M7.91,10.08L6.5,11.5L11,16L21,6L19.59,4.58L11,13.17L7.91,10.08Z"
}), 'SuccessOutlined'));
;// CONCATENATED MODULE: ./node_modules/@mui/material/internal/svg-icons/ReportProblemOutlined.js



/**
 * @ignore - internal component.
 */

/* harmony default export */ var ReportProblemOutlined = ((0,createSvgIcon/* default */.Z)( /*#__PURE__*/(0,jsx_runtime.jsx)("path", {
  d: "M12 5.99L19.53 19H4.47L12 5.99M12 2L1 21h22L12 2zm1 14h-2v2h2v-2zm0-6h-2v4h2v-4z"
}), 'ReportProblemOutlined'));
;// CONCATENATED MODULE: ./node_modules/@mui/material/internal/svg-icons/ErrorOutline.js



/**
 * @ignore - internal component.
 */

/* harmony default export */ var ErrorOutline = ((0,createSvgIcon/* default */.Z)( /*#__PURE__*/(0,jsx_runtime.jsx)("path", {
  d: "M11 15h2v2h-2zm0-8h2v6h-2zm.99-5C6.47 2 2 6.48 2 12s4.47 10 9.99 10C17.52 22 22 17.52 22 12S17.52 2 11.99 2zM12 20c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8z"
}), 'ErrorOutline'));
;// CONCATENATED MODULE: ./node_modules/@mui/material/internal/svg-icons/InfoOutlined.js



/**
 * @ignore - internal component.
 */

/* harmony default export */ var InfoOutlined = ((0,createSvgIcon/* default */.Z)( /*#__PURE__*/(0,jsx_runtime.jsx)("path", {
  d: "M11,9H13V7H11M12,20C7.59,20 4,16.41 4,12C4,7.59 7.59,4 12,4C16.41,4 20,7.59 20, 12C20,16.41 16.41,20 12,20M12,2A10,10 0 0,0 2,12A10,10 0 0,0 12,22A10,10 0 0,0 22,12A10, 10 0 0,0 12,2M11,17H13V11H11V17Z"
}), 'InfoOutlined'));
;// CONCATENATED MODULE: ./node_modules/@mui/material/internal/svg-icons/Close.js



/**
 * @ignore - internal component.
 *
 * Alias to `Clear`.
 */

/* harmony default export */ var Close = ((0,createSvgIcon/* default */.Z)( /*#__PURE__*/(0,jsx_runtime.jsx)("path", {
  d: "M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z"
}), 'Close'));
;// CONCATENATED MODULE: ./node_modules/@mui/material/Alert/Alert.js



var Alert_excluded = ["action", "children", "className", "closeText", "color", "components", "componentsProps", "icon", "iconMapping", "onClose", "role", "severity", "slotProps", "slots", "variant"];


















var Alert_useUtilityClasses = function useUtilityClasses(ownerState) {
  var variant = ownerState.variant,
    color = ownerState.color,
    severity = ownerState.severity,
    classes = ownerState.classes;
  var slots = {
    root: ['root', "".concat(variant).concat((0,utils_capitalize/* default */.Z)(color || severity)), "".concat(variant)],
    icon: ['icon'],
    message: ['message'],
    action: ['action']
  };
  return (0,composeClasses/* default */.Z)(slots, getAlertUtilityClass, classes);
};
var AlertRoot = (0,styles_styled/* default */.ZP)(Paper_Paper, {
  name: 'MuiAlert',
  slot: 'Root',
  overridesResolver: function overridesResolver(props, styles) {
    var ownerState = props.ownerState;
    return [styles.root, styles[ownerState.variant], styles["".concat(ownerState.variant).concat((0,utils_capitalize/* default */.Z)(ownerState.color || ownerState.severity))]];
  }
})(function (_ref3) {
  var theme = _ref3.theme,
    ownerState = _ref3.ownerState;
  var getColor = theme.palette.mode === 'light' ? colorManipulator/* darken */._j : colorManipulator/* lighten */.$n;
  var getBackgroundColor = theme.palette.mode === 'light' ? colorManipulator/* lighten */.$n : colorManipulator/* darken */._j;
  var color = ownerState.color || ownerState.severity;
  return (0,esm_extends/* default */.Z)({}, theme.typography.body2, {
    backgroundColor: 'transparent',
    display: 'flex',
    padding: '6px 16px'
  }, color && ownerState.variant === 'standard' && (0,esm_defineProperty/* default */.Z)({
    color: theme.vars ? theme.vars.palette.Alert["".concat(color, "Color")] : getColor(theme.palette[color].light, 0.6),
    backgroundColor: theme.vars ? theme.vars.palette.Alert["".concat(color, "StandardBg")] : getBackgroundColor(theme.palette[color].light, 0.9)
  }, "& .".concat(Alert_alertClasses.icon), theme.vars ? {
    color: theme.vars.palette.Alert["".concat(color, "IconColor")]
  } : {
    color: theme.palette[color].main
  }), color && ownerState.variant === 'outlined' && (0,esm_defineProperty/* default */.Z)({
    color: theme.vars ? theme.vars.palette.Alert["".concat(color, "Color")] : getColor(theme.palette[color].light, 0.6),
    border: "1px solid ".concat((theme.vars || theme).palette[color].light)
  }, "& .".concat(Alert_alertClasses.icon), theme.vars ? {
    color: theme.vars.palette.Alert["".concat(color, "IconColor")]
  } : {
    color: theme.palette[color].main
  }), color && ownerState.variant === 'filled' && (0,esm_extends/* default */.Z)({
    fontWeight: theme.typography.fontWeightMedium
  }, theme.vars ? {
    color: theme.vars.palette.Alert["".concat(color, "FilledColor")],
    backgroundColor: theme.vars.palette.Alert["".concat(color, "FilledBg")]
  } : {
    backgroundColor: theme.palette.mode === 'dark' ? theme.palette[color].dark : theme.palette[color].main,
    color: theme.palette.getContrastText(theme.palette[color].main)
  }));
});
var AlertIcon = (0,styles_styled/* default */.ZP)('div', {
  name: 'MuiAlert',
  slot: 'Icon',
  overridesResolver: function overridesResolver(props, styles) {
    return styles.icon;
  }
})({
  marginRight: 12,
  padding: '7px 0',
  display: 'flex',
  fontSize: 22,
  opacity: 0.9
});
var AlertMessage = (0,styles_styled/* default */.ZP)('div', {
  name: 'MuiAlert',
  slot: 'Message',
  overridesResolver: function overridesResolver(props, styles) {
    return styles.message;
  }
})({
  padding: '8px 0',
  minWidth: 0,
  overflow: 'auto'
});
var AlertAction = (0,styles_styled/* default */.ZP)('div', {
  name: 'MuiAlert',
  slot: 'Action',
  overridesResolver: function overridesResolver(props, styles) {
    return styles.action;
  }
})({
  display: 'flex',
  alignItems: 'flex-start',
  padding: '4px 0 0 16px',
  marginLeft: 'auto',
  marginRight: -8
});
var defaultIconMapping = {
  success: /*#__PURE__*/(0,jsx_runtime.jsx)(SuccessOutlined, {
    fontSize: "inherit"
  }),
  warning: /*#__PURE__*/(0,jsx_runtime.jsx)(ReportProblemOutlined, {
    fontSize: "inherit"
  }),
  error: /*#__PURE__*/(0,jsx_runtime.jsx)(ErrorOutline, {
    fontSize: "inherit"
  }),
  info: /*#__PURE__*/(0,jsx_runtime.jsx)(InfoOutlined, {
    fontSize: "inherit"
  })
};
var Alert = /*#__PURE__*/react.forwardRef(function Alert(inProps, ref) {
  var _ref, _slots$closeButton, _ref2, _slots$closeIcon, _slotProps$closeButto, _slotProps$closeIcon;
  var props = (0,styles_useThemeProps/* default */.Z)({
    props: inProps,
    name: 'MuiAlert'
  });
  var action = props.action,
    children = props.children,
    className = props.className,
    _props$closeText = props.closeText,
    closeText = _props$closeText === void 0 ? 'Close' : _props$closeText,
    color = props.color,
    _props$components = props.components,
    components = _props$components === void 0 ? {} : _props$components,
    _props$componentsProp = props.componentsProps,
    componentsProps = _props$componentsProp === void 0 ? {} : _props$componentsProp,
    icon = props.icon,
    _props$iconMapping = props.iconMapping,
    iconMapping = _props$iconMapping === void 0 ? defaultIconMapping : _props$iconMapping,
    onClose = props.onClose,
    _props$role = props.role,
    role = _props$role === void 0 ? 'alert' : _props$role,
    _props$severity = props.severity,
    severity = _props$severity === void 0 ? 'success' : _props$severity,
    _props$slotProps = props.slotProps,
    slotProps = _props$slotProps === void 0 ? {} : _props$slotProps,
    _props$slots = props.slots,
    slots = _props$slots === void 0 ? {} : _props$slots,
    _props$variant = props.variant,
    variant = _props$variant === void 0 ? 'standard' : _props$variant,
    other = (0,objectWithoutPropertiesLoose/* default */.Z)(props, Alert_excluded);
  var ownerState = (0,esm_extends/* default */.Z)({}, props, {
    color: color,
    severity: severity,
    variant: variant
  });
  var classes = Alert_useUtilityClasses(ownerState);
  var AlertCloseButton = (_ref = (_slots$closeButton = slots.closeButton) != null ? _slots$closeButton : components.CloseButton) != null ? _ref : IconButton_IconButton;
  var AlertCloseIcon = (_ref2 = (_slots$closeIcon = slots.closeIcon) != null ? _slots$closeIcon : components.CloseIcon) != null ? _ref2 : Close;
  var closeButtonProps = (_slotProps$closeButto = slotProps.closeButton) != null ? _slotProps$closeButto : componentsProps.closeButton;
  var closeIconProps = (_slotProps$closeIcon = slotProps.closeIcon) != null ? _slotProps$closeIcon : componentsProps.closeIcon;
  return /*#__PURE__*/(0,jsx_runtime.jsxs)(AlertRoot, (0,esm_extends/* default */.Z)({
    role: role,
    elevation: 0,
    ownerState: ownerState,
    className: (0,clsx_m/* default */.Z)(classes.root, className),
    ref: ref
  }, other, {
    children: [icon !== false ? /*#__PURE__*/(0,jsx_runtime.jsx)(AlertIcon, {
      ownerState: ownerState,
      className: classes.icon,
      children: icon || iconMapping[severity] || defaultIconMapping[severity]
    }) : null, /*#__PURE__*/(0,jsx_runtime.jsx)(AlertMessage, {
      ownerState: ownerState,
      className: classes.message,
      children: children
    }), action != null ? /*#__PURE__*/(0,jsx_runtime.jsx)(AlertAction, {
      ownerState: ownerState,
      className: classes.action,
      children: action
    }) : null, action == null && onClose ? /*#__PURE__*/(0,jsx_runtime.jsx)(AlertAction, {
      ownerState: ownerState,
      className: classes.action,
      children: /*#__PURE__*/(0,jsx_runtime.jsx)(AlertCloseButton, (0,esm_extends/* default */.Z)({
        size: "small",
        "aria-label": closeText,
        title: closeText,
        color: "inherit",
        onClick: onClose
      }, closeButtonProps, {
        children: /*#__PURE__*/(0,jsx_runtime.jsx)(AlertCloseIcon, (0,esm_extends/* default */.Z)({
          fontSize: "small"
        }, closeIconProps))
      }))
    }) : null]
  }));
});
 false ? 0 : void 0;
/* harmony default export */ var Alert_Alert = (Alert);
;// CONCATENATED MODULE: ./src/components/feedbackForm.js
var FeedbackForm=function FeedbackForm(props){var _useState=(0,react.useState)(''),_useState2=(0,slicedToArray/* default */.Z)(_useState,2),text=_useState2[0],setText=_useState2[1];var _useState3=(0,react.useState)(false),_useState4=(0,slicedToArray/* default */.Z)(_useState3,2),showAlert=_useState4[0],setShowAlert=_useState4[1];var handleSubmit=function handleSubmit(event){event.preventDefault();if(text.length>0){var params=_objectSpread2({message:text.trim()},props.traceData);analytics_logToDb(key.feedback_form,params);setText('');}setShowAlert(true);};return/*#__PURE__*/(0,jsx_runtime.jsx)(Box_Box,{sx:{mt:0},children:/*#__PURE__*/(0,jsx_runtime.jsxs)("form",{onSubmit:handleSubmit,children:[/*#__PURE__*/(0,jsx_runtime.jsx)(TextField_TextField,{fullWidth:true,multiline:true,rows:3,label:'Feedback please!',onChange:function onChange(ev){return setText(ev.target.value);},value:text}),showAlert&&/*#__PURE__*/(0,jsx_runtime.jsx)(Alert_Alert,{sx:{position:'absolute',left:'120px'},severity:"success",children:"Thank you!"}),/*#__PURE__*/(0,jsx_runtime.jsx)(Button_Button,{variant:"outlined",color:"primary",type:"submit",sx:{display:'inline',mt:'4px'},children:"send"})]})});};/* harmony default export */ var feedbackForm = (FeedbackForm);
// EXTERNAL MODULE: ./node_modules/@mui/icons-material/Check.js
var Check = __webpack_require__(872);
;// CONCATENATED MODULE: ./src/components/practiceMenu.js
var PracticeMenu=function PracticeMenu(props){var _useContext=(0,react.useContext)(RootStoreContext),_useContext2=(0,slicedToArray/* default */.Z)(_useContext,1),root=_useContext2[0];(0,react.useEffect)(function(){root.puzzleStore.clearChapterInfo();});var pageStyle={display:'flex',flexDirection:'column',gap:2,p:3,mt:7};return/*#__PURE__*/(0,jsx_runtime.jsx)(Box_Box,{sx:{overflowY:'auto'},children:/*#__PURE__*/(0,jsx_runtime.jsxs)(Box_Box,{id:"practicePage",sx:pageStyle,children:[/*#__PURE__*/(0,jsx_runtime.jsxs)(Typography_Typography,{children:[/*#__PURE__*/(0,jsx_runtime.jsx)("b",{children:"Thank you"})," for helping test this game. ",/*#__PURE__*/(0,jsx_runtime.jsx)("br",{}),/*#__PURE__*/(0,jsx_runtime.jsx)("br",{}),"Please play through the puzzle groups found below. At the end of each puzzle, there's a button where you can leave any feedback you may have.",/*#__PURE__*/(0,jsx_runtime.jsx)("br",{})]}),root.puzzleStore.chapters.filter(function(chap){return!['intro','r','temp'].includes(chap.id);}).map(function(chap){return/*#__PURE__*/(0,jsx_runtime.jsxs)(Button_Button,{sx:{width:'80%',mx:'auto'},variant:"outlined",component:Link,to:"/".concat(chap.id),children:[/*#__PURE__*/(0,jsx_runtime.jsxs)("span",{style:{textTransform:'none'},children:[chap.name," \u2014 ",chap.sequence.length," puzzles"]}),root.puzzleStore.completedChapters.includes(chap.id)&&/*#__PURE__*/(0,jsx_runtime.jsx)(Check/* default */.Z,{color:"success",sx:{position:'absolute',bottom:'5px',right:'10px'}})]},chap.id);}),/*#__PURE__*/(0,jsx_runtime.jsx)(feedbackForm,{})]})});};/* harmony default export */ var practiceMenu = (observer(PracticeMenu));
;// CONCATENATED MODULE: ./node_modules/@mui/material/Divider/dividerClasses.js


function getDividerUtilityClass(slot) {
  return (0,generateUtilityClass_generateUtilityClass/* default */.Z)('MuiDivider', slot);
}
var dividerClasses = (0,generateUtilityClasses/* default */.Z)('MuiDivider', ['root', 'absolute', 'fullWidth', 'inset', 'middle', 'flexItem', 'light', 'vertical', 'withChildren', 'withChildrenVertical', 'textAlignRight', 'textAlignLeft', 'wrapper', 'wrapperVertical']);
/* harmony default export */ var Divider_dividerClasses = ((/* unused pure expression or super */ null && (dividerClasses)));
;// CONCATENATED MODULE: ./node_modules/@mui/material/Divider/Divider.js


var Divider_excluded = ["absolute", "children", "className", "component", "flexItem", "light", "orientation", "role", "textAlign", "variant"];









var Divider_useUtilityClasses = function useUtilityClasses(ownerState) {
  var absolute = ownerState.absolute,
    children = ownerState.children,
    classes = ownerState.classes,
    flexItem = ownerState.flexItem,
    light = ownerState.light,
    orientation = ownerState.orientation,
    textAlign = ownerState.textAlign,
    variant = ownerState.variant;
  var slots = {
    root: ['root', absolute && 'absolute', variant, light && 'light', orientation === 'vertical' && 'vertical', flexItem && 'flexItem', children && 'withChildren', children && orientation === 'vertical' && 'withChildrenVertical', textAlign === 'right' && orientation !== 'vertical' && 'textAlignRight', textAlign === 'left' && orientation !== 'vertical' && 'textAlignLeft'],
    wrapper: ['wrapper', orientation === 'vertical' && 'wrapperVertical']
  };
  return (0,composeClasses/* default */.Z)(slots, getDividerUtilityClass, classes);
};
var DividerRoot = (0,styles_styled/* default */.ZP)('div', {
  name: 'MuiDivider',
  slot: 'Root',
  overridesResolver: function overridesResolver(props, styles) {
    var ownerState = props.ownerState;
    return [styles.root, ownerState.absolute && styles.absolute, styles[ownerState.variant], ownerState.light && styles.light, ownerState.orientation === 'vertical' && styles.vertical, ownerState.flexItem && styles.flexItem, ownerState.children && styles.withChildren, ownerState.children && ownerState.orientation === 'vertical' && styles.withChildrenVertical, ownerState.textAlign === 'right' && ownerState.orientation !== 'vertical' && styles.textAlignRight, ownerState.textAlign === 'left' && ownerState.orientation !== 'vertical' && styles.textAlignLeft];
  }
})(function (_ref) {
  var theme = _ref.theme,
    ownerState = _ref.ownerState;
  return (0,esm_extends/* default */.Z)({
    margin: 0,
    // Reset browser default style.
    flexShrink: 0,
    borderWidth: 0,
    borderStyle: 'solid',
    borderColor: (theme.vars || theme).palette.divider,
    borderBottomWidth: 'thin'
  }, ownerState.absolute && {
    position: 'absolute',
    bottom: 0,
    left: 0,
    width: '100%'
  }, ownerState.light && {
    borderColor: theme.vars ? "rgba(".concat(theme.vars.palette.dividerChannel, " / 0.08)") : (0,colorManipulator/* alpha */.Fq)(theme.palette.divider, 0.08)
  }, ownerState.variant === 'inset' && {
    marginLeft: 72
  }, ownerState.variant === 'middle' && ownerState.orientation === 'horizontal' && {
    marginLeft: theme.spacing(2),
    marginRight: theme.spacing(2)
  }, ownerState.variant === 'middle' && ownerState.orientation === 'vertical' && {
    marginTop: theme.spacing(1),
    marginBottom: theme.spacing(1)
  }, ownerState.orientation === 'vertical' && {
    height: '100%',
    borderBottomWidth: 0,
    borderRightWidth: 'thin'
  }, ownerState.flexItem && {
    alignSelf: 'stretch',
    height: 'auto'
  });
}, function (_ref2) {
  var theme = _ref2.theme,
    ownerState = _ref2.ownerState;
  return (0,esm_extends/* default */.Z)({}, ownerState.children && {
    display: 'flex',
    whiteSpace: 'nowrap',
    textAlign: 'center',
    border: 0,
    '&::before, &::after': {
      position: 'relative',
      width: '100%',
      borderTop: "thin solid ".concat((theme.vars || theme).palette.divider),
      top: '50%',
      content: '""',
      transform: 'translateY(50%)'
    }
  });
}, function (_ref3) {
  var theme = _ref3.theme,
    ownerState = _ref3.ownerState;
  return (0,esm_extends/* default */.Z)({}, ownerState.children && ownerState.orientation === 'vertical' && {
    flexDirection: 'column',
    '&::before, &::after': {
      height: '100%',
      top: '0%',
      left: '50%',
      borderTop: 0,
      borderLeft: "thin solid ".concat((theme.vars || theme).palette.divider),
      transform: 'translateX(0%)'
    }
  });
}, function (_ref4) {
  var ownerState = _ref4.ownerState;
  return (0,esm_extends/* default */.Z)({}, ownerState.textAlign === 'right' && ownerState.orientation !== 'vertical' && {
    '&::before': {
      width: '90%'
    },
    '&::after': {
      width: '10%'
    }
  }, ownerState.textAlign === 'left' && ownerState.orientation !== 'vertical' && {
    '&::before': {
      width: '10%'
    },
    '&::after': {
      width: '90%'
    }
  });
});
var DividerWrapper = (0,styles_styled/* default */.ZP)('span', {
  name: 'MuiDivider',
  slot: 'Wrapper',
  overridesResolver: function overridesResolver(props, styles) {
    var ownerState = props.ownerState;
    return [styles.wrapper, ownerState.orientation === 'vertical' && styles.wrapperVertical];
  }
})(function (_ref5) {
  var theme = _ref5.theme,
    ownerState = _ref5.ownerState;
  return (0,esm_extends/* default */.Z)({
    display: 'inline-block',
    paddingLeft: "calc(".concat(theme.spacing(1), " * 1.2)"),
    paddingRight: "calc(".concat(theme.spacing(1), " * 1.2)")
  }, ownerState.orientation === 'vertical' && {
    paddingTop: "calc(".concat(theme.spacing(1), " * 1.2)"),
    paddingBottom: "calc(".concat(theme.spacing(1), " * 1.2)")
  });
});
var Divider = /*#__PURE__*/react.forwardRef(function Divider(inProps, ref) {
  var props = (0,styles_useThemeProps/* default */.Z)({
    props: inProps,
    name: 'MuiDivider'
  });
  var _props$absolute = props.absolute,
    absolute = _props$absolute === void 0 ? false : _props$absolute,
    children = props.children,
    className = props.className,
    _props$component = props.component,
    component = _props$component === void 0 ? children ? 'div' : 'hr' : _props$component,
    _props$flexItem = props.flexItem,
    flexItem = _props$flexItem === void 0 ? false : _props$flexItem,
    _props$light = props.light,
    light = _props$light === void 0 ? false : _props$light,
    _props$orientation = props.orientation,
    orientation = _props$orientation === void 0 ? 'horizontal' : _props$orientation,
    _props$role = props.role,
    role = _props$role === void 0 ? component !== 'hr' ? 'separator' : undefined : _props$role,
    _props$textAlign = props.textAlign,
    textAlign = _props$textAlign === void 0 ? 'center' : _props$textAlign,
    _props$variant = props.variant,
    variant = _props$variant === void 0 ? 'fullWidth' : _props$variant,
    other = (0,objectWithoutPropertiesLoose/* default */.Z)(props, Divider_excluded);
  var ownerState = (0,esm_extends/* default */.Z)({}, props, {
    absolute: absolute,
    component: component,
    flexItem: flexItem,
    light: light,
    orientation: orientation,
    role: role,
    textAlign: textAlign,
    variant: variant
  });
  var classes = Divider_useUtilityClasses(ownerState);
  return /*#__PURE__*/(0,jsx_runtime.jsx)(DividerRoot, (0,esm_extends/* default */.Z)({
    as: component,
    className: (0,clsx_m/* default */.Z)(classes.root, className),
    role: role,
    ref: ref,
    ownerState: ownerState
  }, other, {
    children: children ? /*#__PURE__*/(0,jsx_runtime.jsx)(DividerWrapper, {
      className: classes.wrapper,
      ownerState: ownerState,
      children: children
    }) : null
  }));
});
 false ? 0 : void 0;
/* harmony default export */ var Divider_Divider = (Divider);
;// CONCATENATED MODULE: ./src/components/gameplay/hitTest.js
var selectableWordBankRects={};var puzzleRects={};var hitTest_root=null;var maxTouchOffset=0;function hitTest_init(rootStore){if(!hitTest_root){hitTest_root=rootStore;}}function hitTest_updateCache(){maxTouchOffset=[10,15,15][hitTest_root.gameStore.muiBreakpoint];rebuildWordBankCache();rebuildPuzzleCache();}function rebuildWordBankCache(){selectableWordBankRects={};for(var i=0;i<hitTest_root.puzzle.wordBank.length;i++){var wordBankItem=hitTest_root.puzzle.wordBank[i];selectableWordBankRects[i]=wordBankItem.elemPtr.getBoundingClientRect();}}function rebuildPuzzleCache(){puzzleRects={};for(var i=0;i<hitTest_root.puzzle.currList.length;i++){var puzzleItem=hitTest_root.puzzle.currList[i];puzzleRects[i]=puzzleItem.elemPtr.getBoundingClientRect();}}function findClosestBlank(point){return findClosestSelectableElem(point,puzzleRects);}function findClosestBankWord(point){return findClosestSelectableElem(point,selectableWordBankRects);}function findClosestSelectableElem(point,collection){// todo: parameterize this with which collection
var closestIndex=-1;var closestDistance=1000000;for(var rectIndex in collection){var rectDist=getRectDistance(point,collection[rectIndex]);if(rectDist<closestDistance&&rectDist<maxTouchOffset){closestDistance=rectDist;closestIndex=rectIndex;}}return closestIndex;}function clamp(value,min,max){return Math.max(min,Math.min(value,max));}function getRectDistance(point,rect){var left=rect.x;var top=rect.y;var right=rect.x+rect.width;var bottom=rect.y+rect.height;var nearestX=clamp(point.x,left,right);var nearestY=clamp(point.y,top,bottom);var dx=point.x-nearestX;var dy=point.y-nearestY;return Math.sqrt(dx*dx+dy*dy);}
;// CONCATENATED MODULE: ./src/components/gameplay/dragDrop.js
var callbacks=null;var dragDrop_root=null;var downIndex=-1;var dragging=false;var dropTargetedBlank=null;var prevPointerPos=null;var pointerIsDown=false;var dragDrop_init=function init(rootStore,listOfCallbacks){dragDrop_root=rootStore;callbacks=listOfCallbacks;hitTest_init(dragDrop_root);setupEventHandlers();var _iterator=createForOfIteratorHelper_createForOfIteratorHelper(dragDrop_root.puzzle.wordBank),_step;try{for(_iterator.s();!(_step=_iterator.n()).done;){var item=_step.value;item.elemPtr.transX=0;item.elemPtr.transY=0;item.elemPtr.baseTransX=0;item.elemPtr.baseTransY=0;}}catch(err){_iterator.e(err);}finally{_iterator.f();}};var updateCache=function updateCache(){hitTest_updateCache();};var setupEventHandlers=function setupEventHandlers(){removeAndAddListener('wordbank','pointerup',onWordBankUp);removeAndAddListener('wordbank','pointerdown',onWordBankDown);removeAndAddListener('puzzle','pointerup',onPuzzleUp);};var onWordBankDown=function onWordBankDown(ev){if(pointerIsDown||!ev.isPrimary){return;}pointerIsDown=true;var downPoint={x:ev.x,y:ev.y};downIndex=findClosestBankWord(downPoint);if(downIndex>=0){var draggedEl=dragDrop_root.puzzle.wordBank[downIndex].elemPtr;draggedEl.setPointerCapture(ev.pointerId);removeAndAddListener('sentence','pointermove',dragMove);// why sentence? why not the ragged elem?
}ev.preventDefault();};var onWordBankUp=function onWordBankUp(ev){if(!pointerIsDown||!ev.isPrimary){return;}var upIndex=findClosestBankWord({x:ev.x,y:ev.y});if(upIndex>=0&&upIndex===downIndex&&!dragging){var bankWordEl=dragDrop_root.puzzle.wordBank[upIndex].elemPtr;var blankEl=callbacks.getSelectedBlankEl();if(blankEl){animateWordToBlank(bankWordEl,blankEl,function(){var wasCorrect=callbacks.wordBankWordTapped(bankWordEl);if(!wasCorrect){sendWordBack(bankWordEl);}});}else{callbacks.wordBankWordTapped(bankWordEl);}}else{callbacks.clearSelection(null);}pointerIsDown=false;downIndex=-1;dragEnd(ev);ev.preventDefault();};var onPuzzleUp=function onPuzzleUp(ev){if(!ev.isPrimary){return;}var closestIndex=findClosestBlank({x:ev.x,y:ev.y});var blankEl=closestIndex===-1?null:dragDrop_root.puzzle.currList[closestIndex].elemPtr;if(blankEl.classList.contains('incorrect')){var bankWordEl=callbacks.getSelectedWordEl();if(bankWordEl){animateWordToBlank(bankWordEl,blankEl,function(){var wasCorrect=callbacks.puzzleBlankTapped(blankEl);if(!wasCorrect){sendWordBack(bankWordEl);}});}else{callbacks.puzzleBlankTapped(blankEl);}}ev.preventDefault();};var dragStart=function dragStart(ev){dragging=true;var el=ev.target;prevPointerPos={x:ev.x,y:ev.y};el.pointerOffsetX=ev.offsetX-el.offsetWidth/2;el.pointerOffsetY=ev.offsetY-el.offsetHeight/2;el.baseTransX=el.transX;el.baseTransY=el.transY;//sound.play('dragClick')
var transString="translate(".concat(el.transX,"px, ").concat(el.transY,"px)");el.style.transform=transString;};var dragMove=function dragMove(ev){if(!ev.isPrimary){return;}var el=ev.target;if(!el.classList.contains('draggable')){dragEnd(ev);return;}if(!dragging){dragStart(ev);return;}var dx=ev.x-prevPointerPos.x;var dy=ev.y-prevPointerPos.y;prevPointerPos={x:ev.x,y:ev.y};el.transX=el.transX+dx;el.transY=el.transY+dy;var transString="translate(".concat(el.transX,"px, ").concat(el.transY,"px)");el.style.transform=transString;if(dropTargetedBlank){dropTargetedBlank.classList.remove('dropTarget');}var centerOfWord={x:ev.x-el.pointerOffsetX,y:ev.y-el.pointerOffsetY};var index=findClosestBlank(centerOfWord);var elem=index>=0?dragDrop_root.puzzle.currList[index].elemPtr:null;if(elem&&elem.classList.contains('incorrect')){elem.classList.add('dropTarget');dropTargetedBlank=elem;}else{dropTargetedBlank=null;}};var dragEnd=function dragEnd(ev){removeListener('sentence','pointermove',dragMove);var wordEl=ev.target;wordEl.releasePointerCapture(ev.pointerId);if(dropTargetedBlank){dropTargetedBlank.classList.remove('dropTarget');var wasCorrect=callbacks.attemptToPlaceWord(wordEl,dropTargetedBlank);if(wasCorrect){wordEl.remove();}else{sendWordBack(wordEl);}}else{var dropTargets=document.elementsFromPoint(ev.x,ev.y);if(dropTargets.includes(document.getElementById('wordbank'))){hitTest_updateCache();}else{sendWordBack(wordEl);}}// todo: i think tapping outside of sentence should clear selection as well
// todo: safety net, never translate outside the bounds of the page.
ev.preventDefault();dragging=false;dropTargetedBlank=null;};var animateWordToBlank=function animateWordToBlank(el,blankEl,callback){// console.log(`el.transY 1 ${el.transY}`)
var wordRect=getRect(el);var blankRect=getRect(blankEl);// console.log(`wordRect: ${JSON.stringify(wordRect)}`)
// console.log(`blankRect: ${JSON.stringify(blankRect)}`)
el.transX=blankRect.centerX-(wordRect.centerX-el.transX);el.transY=blankRect.centerY-(wordRect.centerY-el.transY);// console.log(`el.transY 2 ${el.transY}`)
el.style.transform="translate(".concat(el.transX,"px, ").concat(el.transY,"px)");addAndRemoveClassWithEndCallback(el,'useReturnTransform','transitionend',callback);};var sendWordBack=function sendWordBack(el){el.transX=el.baseTransX;el.transY=el.baseTransY;el.style.transform="translate(".concat(el.baseTransX,"px, ").concat(el.baseTransY,"px)");addAndRemoveClassWithEndCallback(el,'useReturnTransform','transitionend',hitTest_updateCache);if(dropTargetedBlank){dropTargetedBlank.classList.remove('dropTarget');}};
;// CONCATENATED MODULE: ./src/components/gameplay/formatting.js
var container=null;// todo: rename this. actual dom parent (#puzzle)
// let wordsToSwap = []
// let pointerDownElems = []
// let wordBankSelection = null
var isGameActive=false;var formatting_root=null;var selectedWordBankEl=null;var selectedBlankEl=null;function startGamePlay(){return _startGamePlay.apply(this,arguments);}function _startGamePlay(){_startGamePlay=asyncToGenerator_asyncToGenerator(/*#__PURE__*/regeneratorRuntime_regeneratorRuntime().mark(function _callee(){return regeneratorRuntime_regeneratorRuntime().wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:container=document.getElementById('puzzle');formatting_root=store;buildDomTree();formatting_root.gameStore.setAttributionHtml(formatting_root.puzzle.attribution);//todo: why is formatting.js the one doing this?
init(formatting_root);isGameActive=true;formatting_root.gameStore.setIsSwapping(false);analytics_logEvent(key.level_start,{level_name:formatting_root.puzzle.id});setupWordbank();setTimeout(convertWordBankToFixed,100);setTimeout(refreshTextPresentation,200);dragDrop_init(formatting_root,{attemptToPlaceWord:attemptToPlaceWord,wordBankWordTapped:wordBankWordTapped,puzzleBlankTapped:puzzleBlankTapped,clearSelection:clearSelection,getSelectedWordEl:getSelectedWordEl,getSelectedBlankEl:getSelectedBlankEl});//  setupEventHandlers()
case 12:case"end":return _context.stop();}}},_callee);}));return _startGamePlay.apply(this,arguments);}function ensureInitializedInDevMode(){// fix for HMR losing state for this module
if(!formatting_root&&isDevEnv()){startGamePlay();}}function buildDomTree(){// due to linebreaking behavior for inline-block elements
// (which I'm using in order to enable the word swap visuals)
// the tree structure is funky. When there is punctuation,
// the previous word and the punctuation character(s) are
// parented to an intermediate span with 'nowrap' style.
// these wrapper spans are siblings to the regular word spans.
// if/when i implement my own line layout/positioning, this
// weird structure would no longer be necessary as i would
// have custom line breaking.
container.replaceChildren();var noWrapSpan=null;var currItems=formatting_root.puzzle.currList;currItems.reverse().forEach(function(item){if(item.isPunc){noWrapSpan=document.createElement('span');noWrapSpan.classList.add('nowrap');var puncSpan=document.createElement('span');puncSpan.classList.add('punctuation');if(item.origText==="\u2013"/*em dash */){puncSpan.classList.add('leftSpace');}puncSpan.appendChild(document.createTextNode(item.origText));noWrapSpan.appendChild(puncSpan);item.elemPtr=puncSpan;}else{var wordSpan=document.createElement('span');wordSpan.classList.add('word');wordSpan.prepend(document.createTextNode(item.origText));var overlaySpan=document.getElementById('overlayTemplate').cloneNode(true);overlaySpan.classList.add('overlay');var wordContainer=document.createElement('span');wordContainer.classList.add('container');wordContainer.prepend(wordSpan);wordContainer.prepend(overlaySpan);item.elemPtr=wordSpan;if(noWrapSpan){noWrapSpan.prepend(wordContainer);container.prepend(noWrapSpan);noWrapSpan=null;}else{container.prepend(wordContainer);}}});}function setupWordbank(){var wordbank=document.getElementById('wordbank');wordbank.replaceChildren();var _iterator=createForOfIteratorHelper_createForOfIteratorHelper(formatting_root.puzzle.wordBank),_step;try{for(_iterator.s();!(_step=_iterator.n()).done;){var bankItem=_step.value;var wordSpan=document.createElement('span');wordSpan.classList.add('draggable');wordSpan.append(document.createTextNode(bankItem.text));wordSpan.append(document.createTextNode(' '));wordbank.append(wordSpan);bankItem.elemPtr=wordSpan;var xPad=bankItem.text.length<=3?16:8;wordSpan.style.paddingLeft="".concat(xPad,"px");wordSpan.style.paddingRight="".concat(xPad,"px");//    positionWords(chooseDistribution())
}}catch(err){_iterator.e(err);}finally{_iterator.f();}}function chooseDistribution(){var count=formatting_root.puzzle.wordBank.length;var positions=[];if(count===2){positions.push([0.3,0.1],[0.6,0.1]);}if(count===3){positions.push([0.3,0.1],[0.6,0.1],[0.6,0.3]);}if(count===4){positions.push([0.3,0.1],[0.6,0.1],[0.3,0.4],[0.6,0.4]);}return positions;}function positionWords(positions){var wordbank=document.getElementById('wordbank');var bankRect=wordbank.getBoundingClientRect();for(var i=0;i<positions.length;i++){var el=wordbank.children[i];var elRect=el.getBoundingClientRect();var x=positions[i][0];var y=positions[i][1];el.style.position='absolute';el.style.left="".concat(x*bankRect.width-elRect.width/2,"px");el.style.top="".concat(y*bankRect.height-elRect.height/2,"px");}}function convertWordBankToFixed(){var wordbank=document.getElementById('wordbank');var wordObjs=[];var _iterator2=createForOfIteratorHelper_createForOfIteratorHelper(wordbank.children),_step2;try{for(_iterator2.s();!(_step2=_iterator2.n()).done;){var child=_step2.value;var offsetLeft=child.offsetLeft;var offsetTop=child.offsetTop;var _obj={elem:child,offsetLeft:offsetLeft,offsetTop:offsetTop};wordObjs.push(_obj);}}catch(err){_iterator2.e(err);}finally{_iterator2.f();}for(var _i=0,_wordObjs=wordObjs;_i<_wordObjs.length;_i++){var obj=_wordObjs[_i];obj.elem.style.left="".concat(obj.offsetLeft,"px");obj.elem.style.top="".concat(obj.offsetTop,"px");obj.elem.style.position='absolute';var xPad=obj.elem.textContent.trim().length<=3?16:8;obj.elem.style.paddingLeft="".concat(xPad,"px");obj.elem.style.paddingRight="".concat(xPad,"px");}// moveWordsRandomly()
// resolveOverlaps()
}function shiftLeftTop(el,left,top){el.style.left="".concat(el.offsetLeft+left,"px");el.style.top="".concat(el.offsetTop+top,"px");}function moveWordsRandomly(){var wordbank=document.getElementById('wordbank');for(var i=0;i<wordbank.children.length;i++){var el=wordbank.children[i];var leftShift=Math.random()*20-10;var topShift=Math.random()*20-10;shiftLeftTop(el,leftShift,topShift);}}function areOverlapped(aEl,bEl,gapX,gapY){var a=aEl.getBoundingClientRect();var b=bEl.getBoundingClientRect();var notXOverlap=a.right<b.left-gapX||a.left>b.right+gapX;var notYOverlap=a.bottom<b.top-gapY||a.top>b.bottom+gapY;return!(notXOverlap||notYOverlap);}function ensureInbounds(){// ensure they are within bounds - if not move them in
}function resolveOverlaps(){var wordbank=document.getElementById('wordbank');var overlaps=[];var counter=0;do{console.log("iteration: ".concat(counter));counter++;overlaps.length=0;//clears
for(var i=0;i<wordbank.children.length;i++){var a=wordbank.children[i];for(var j=i+1;j<wordbank.children.length;j++){var b=wordbank.children[j];if(areOverlapped(a,b,0,-15)){overlaps.push([a,b]);}}}var _iterator3=_createForOfIteratorHelper(overlaps),_step3;try{for(_iterator3.s();!(_step3=_iterator3.n()).done;){var overlap=_step3.value;var _a=overlap[0];var _b=overlap[1];var el=_a.offsetBottom<_b.offsetBottom?_a:_b;shiftLeftTop(el,0,20);}}catch(err){_iterator3.e(err);}finally{_iterator3.f();}}while(overlaps.length>0&&counter<15);console.log('done');/*
  gap = x
  do {
    enumerate overlaps
    foreach overlapping pair
      choose lower one
        if space to move it left, move it left enough that there is a gap
        if space to move it right, move it right enough that there is a gap
        else move it down
    shrink gap?
  }
  while(we have overlaps or we should give up)
  */}function syncWordBank(){var wordBankContainer=document.getElementById('wordbank');var _iterator4=createForOfIteratorHelper_createForOfIteratorHelper(wordBankContainer.children),_step4;try{var _loop=function _loop(){var child=_step4.value;if(!formatting_root.puzzle.wordBank.find(function(bankItem){return bankItem.elemPtr===child;})){child.remove();}};for(_iterator4.s();!(_step4=_iterator4.n()).done;){_loop();}}catch(err){_iterator4.e(err);}finally{_iterator4.f();}}function onWindowChange(){refreshTextPresentation();}function refreshTextPresentation(){ensureInitializedInDevMode();setCorrectSpaces();restoreCapitalization();refreshWordStyles();syncWordBank();setTimeout(updateCache,10);}function setCorrectSpaces(){var spaceWidth="10px";var _iterator5=createForOfIteratorHelper_createForOfIteratorHelper(formatting_root.puzzle.flatElementList),_step5;try{for(_iterator5.s();!(_step5=_iterator5.n()).done;){var el=_step5.value;// todo: switch to currList?
el.style.marginLeft='0px';el.style.marginRight='0px';if(el.classList.contains('leftSpace')){el.style.marginLeft=spaceWidth;}}}catch(err){_iterator5.e(err);}finally{_iterator5.f();}var _iterator6=createForOfIteratorHelper_createForOfIteratorHelper(container.children),_step6;try{for(_iterator6.s();!(_step6=_iterator6.n()).done;){var _el=_step6.value;_el.style.marginRight=spaceWidth;}}catch(err){_iterator6.e(err);}finally{_iterator6.f();}}function restoreCapitalization(){formatting_root.puzzle.currList.forEach(function(item){item.elemPtr.textContent=item.correctlyCapitalized;});}function refreshWordStyles(){// punctuation should adopt the color of the word before it
formatting_root.puzzle.currList.forEach(function(item){var showAsCorrect=item.isPunc||item.isRevealed;item.elemPtr.classList.remove('correct','incorrect','selected','incorrectUnderline');item.elemPtr.classList.add(showAsCorrect?'correct':'incorrect');if(!showAsCorrect&&!item.isPunc){// we don't want to underline the punctuation
item.elemPtr.classList.add('incorrectUnderline');}if(!item.isPunc){var showOverlay=selectedWordBankEl&&!showAsCorrect||selectedBlankEl===item.elemPtr;setOverlayVisibility(item.elemPtr,showOverlay);}});}function setOverlayVisibility(el,visible){var overlayElement=el.parentElement.querySelector('.overlay');if(visible){overlayElement.classList.add('visible');}else{overlayElement.classList.remove('visible');}}function getOverlayVisibility(el){var overlayElement=el.parentElement.querySelector('.overlay');return overlayElement.classList.contains('visible');}function selectPuzzleBlank(thisBlank){var makeSelected=function makeSelected(el){if(el){setOverlayVisibility(el,true);selectedBlankEl=el;}};var makeUnselected=function makeUnselected(el){if(el){setOverlayVisibility(el,false);selectedBlankEl=null;}};if(thisBlank){if(getOverlayVisibility(thisBlank)){makeUnselected(thisBlank);}else{makeUnselected(selectedBlankEl);makeSelected(thisBlank);}}else{makeUnselected(selectedBlankEl);}}function getSelectedWordEl(){return selectedWordBankEl;}function getSelectedBlankEl(){return selectedBlankEl;}function selectWordBankWord(thisWord){var makeSelected=function makeSelected(el){if(el){el.classList.add('selected');selectedWordBankEl=el;}};var makeUnselected=function makeUnselected(el){if(el){el.classList.remove('selected');selectedWordBankEl=null;}};if(thisWord){if(thisWord.classList.contains('selected')){makeUnselected(thisWord);}else{makeUnselected(selectedWordBankEl);makeSelected(thisWord);}}else{makeUnselected(selectedWordBankEl);}}function clearSelection(){selectWordBankWord(null);selectPuzzleBlank(null);refreshWordStyles();}function advanceBlankSelection(el){var currItem=formatting_root.puzzle.getCurrItemByElem(el);var nextItem=formatting_root.puzzle.getNextIncorrectItem(currItem);if(nextItem){selectPuzzleBlank(nextItem.elemPtr);}else{clearSelection();}}function puzzleBlankTapped(puzzleEl){var result=null;if(selectedWordBankEl){result=attemptToPlaceWord(selectedWordBankEl,puzzleEl);clearSelection();}else{selectPuzzleBlank(puzzleEl);}refreshWordStyles();return result;}function wordBankWordTapped(wordBankEl){var wasCorrect=null;if(selectedBlankEl){wasCorrect=attemptToPlaceWord(wordBankEl,selectedBlankEl);if(wasCorrect){advanceBlankSelection(selectedBlankEl);}else{clearSelection();}}else{selectWordBankWord(wordBankEl);}refreshWordStyles();return wasCorrect;}function attemptToPlaceWord(wordBankEl,puzzleEl){wordBankEl=wordBankEl||selectedWordBankEl;var wasCorrect=formatting_root.puzzle.placeWord(wordBankEl,puzzleEl);play(wasCorrect?'successDing':'failClick');if(wasCorrect){checkForCompletion();refreshTextPresentation();}else{addAndRemoveClassWithEndCallback(document.getElementById('puzzle'),'shakeOnIncorrect','animationend');// addAndRemoveAnimationClass(b, 'shakeOnIncorrect', () => {
//   root.gameStore.setIsSwapping(false)
// })
}return wasCorrect;}function showNextHint(){if(isGameActive&&!formatting_root.gameStore.isSwapping){formatting_root.puzzle.giveHint();refreshTextPresentation();}}function checkForCompletion(){if(!isGameActive)return;// wordsToSwap = []
if(formatting_root.gameStore.instaSolve||formatting_root.puzzle.isPuzzleSolved){isGameActive=false;var _iterator7=createForOfIteratorHelper_createForOfIteratorHelper(formatting_root.puzzle.flatElementList),_step7;try{for(_iterator7.s();!(_step7=_iterator7.n()).done;){var el=_step7.value;addAndRemoveClassWithEndCallback(el,'puzzleSolved','animationend');}}catch(err){_iterator7.e(err);}finally{_iterator7.f();}logCompletedEvent();setTimeout(function(){formatting_root.puzzle.setState('succeeded');// why is this being set by formatting? it should happen within models
},300);}}function logCompletedEvent(){var params={level_name:formatting_root.puzzle.id,success:true,puzzle_id:formatting_root.puzzle.id,chapter_id:formatting_root.puzzleStore.chapter?formatting_root.puzzleStore.chapter.id:0,duration_sec:Math.round(formatting_root.puzzle.secondsTaken),hints_used:formatting_root.puzzle.hintsUsed,misses:formatting_root.puzzle.misses};analytics_logEvent(key.level_end,params);analytics_logToDb(key.level_end,params);}
;// CONCATENATED MODULE: ./node_modules/@mui/icons-material/esm/ModeStandbyOutlined.js


/* harmony default export */ var ModeStandbyOutlined = ((0,createSvgIcon/* default */.Z)( /*#__PURE__*/(0,jsx_runtime.jsx)("path", {
  d: "M12 2C6.49 2 2 6.49 2 12s4.49 10 10 10 10-4.49 10-10S17.51 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8zm3-8c0 1.66-1.34 3-3 3s-3-1.34-3-3 1.34-3 3-3 3 1.34 3 3z"
}), 'ModeStandbyOutlined'));
;// CONCATENATED MODULE: ./src/components/quoteAreaStyle.js
var puzzleWordStyles={width:'100%',px:[2,4,4],'.correct':{color:'wordCorrect.main'},'.container':{display:'inline-block',position:'relative'},'.overlay':{display:'inline-block',position:'absolute',width:'100%',bottom:'0.8rem',fontSize:'1.2rem',color:'blankTarget',visibility:'hidden'},'.overlay.visible':{visibility:'visible'},'.word.incorrect':{textDecorationColor:'gray',textDecorationStyle:'solid',textDecorationLine:'underline',textDecorationThickness:'1px'},'.word.dropTarget':{outlineStyle:'dotted',outlineWidth:'2px',outlineColor:function outlineColor(theme){return theme.palette.wordIncorrect.main;},outlineOffset:'10px'},'.incorrect':{color:'secondary.main'},'.word.selected':{textDecorationColor:'wordSelected.main',textDecorationStyle:'solid',textDecorationLine:'underline',color:'wordSelected.main',opacity:0.7},'@keyframes flip':{'50.0%':{transform:'rotateX(180deg)'},'0%, 100.0%':{transform:'rotateX(0deg)'}},'.word':{display:'inline-block',position:'relative',transition:'transform 500ms ease-in-out',// if timing here changes, also update sound clip timing
fontWeight:800,fontFamily:'Nunito'},'.punctuation':{fontWeight:800},'.puzzleSolved':{animationName:'flip',animationDuration:'500ms',animationTimingFunction:'cubic-bezier(0.36, 0.07, 0.19, 0.97)',anmationDelay:'0.01s',animationFillMode:'both'},'.wordSwap':{transform:'translate(var(--transLeft), var(--transTop))',opacity:0.7},'.nowrap':{whiteSpace:'nowrap'}};
;// CONCATENATED MODULE: ./src/components/quoteAreaShakeStyle.js
var quoteAreaShakeStyle={'@keyframes shake':{'10%, 90%':{transform:'translate(-3px)'},'20%, 80%':{transform:'translate(4px)'},'30%, 50%, 70%':{transform:'translate(-6px)'},'40%, 60%':{transform:'translate(6px)'},'100%':{transform:'translate(0pxs)'}},'.shakeOnIncorrect':{animationName:'shake',animationDuration:'700ms',animationTimingFunction:'cubic-bezier(0.36, 0.07, 0.19, 0.97)',animationFillMode:'both'}};
;// CONCATENATED MODULE: ./src/components/attribution.js
var Attribution=function Attribution(props){var attributionStyle={width:'100%',color:'primary.main',px:'5%',lineHeight:1.2,pointerEvents:props.show?'auto':'none',display:props.show?'block':'none',fontSize:['1.0rem','1.2rem','1.3rem'],textAlign:'center',userSelect:'text'};function logClick(event){analytics_logEvent(key.attrib_link,{text:event.target.innerText,href:event.target.href});}(0,react.useEffect)(function(){var attribution=document.getElementById('attribution');var links=attribution.querySelectorAll('a');var _iterator=createForOfIteratorHelper_createForOfIteratorHelper(links),_step;try{for(_iterator.s();!(_step=_iterator.n()).done;){var link=_step.value;link.addEventListener('click',logClick);}}catch(err){_iterator.e(err);}finally{_iterator.f();}},[props.html]);return/*#__PURE__*/(0,jsx_runtime.jsx)(Fade_Fade,{in:props.show,timeout:{enter:1000,exit:100},children:/*#__PURE__*/(0,jsx_runtime.jsx)(Typography_Typography,{id:"attribution",sx:attributionStyle,dangerouslySetInnerHTML:{__html:props.html}})});};/* harmony default export */ var attribution = (Attribution);
;// CONCATENATED MODULE: ./src/components/quoteArea.js
var QuoteArea=function QuoteArea(props){var _props$appearDelay=props.appearDelay,appearDelay=_props$appearDelay===void 0?250:_props$appearDelay;var _useContext=(0,react.useContext)(RootStoreContext),_useContext2=(0,slicedToArray/* default */.Z)(_useContext,1),root=_useContext2[0];var _useState=(0,react.useState)(false),_useState2=(0,slicedToArray/* default */.Z)(_useState,2),showSentence=_useState2[0],setShowSentence=_useState2[1];(0,react.useEffect)(function(){function initPuzzle(){return _initPuzzle.apply(this,arguments);}function _initPuzzle(){_initPuzzle=asyncToGenerator_asyncToGenerator(/*#__PURE__*/regeneratorRuntime_regeneratorRuntime().mark(function _callee(){return regeneratorRuntime_regeneratorRuntime().wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return startGamePlay();case 2:root.puzzle.setState('playing');setTimeout(function(){return setShowSentence(true);},appearDelay);case 4:case"end":return _context.stop();}}},_callee);}));return _initPuzzle.apply(this,arguments);}if(root.puzzle.state==='puzzleLoaded'){setShowSentence(false);setTimeout(function(){return initPuzzle();},100);}},[root,root.puzzle.state,appearDelay]);(0,react.useEffect)(function(){if(root.gameStore.showHintNow){root.gameStore.setShowHintNow(false);showNextHint();}},[root.gameStore,root.gameStore.showHintNow]);(0,react.useEffect)(function(){if(root.puzzle.state==='playing'){onWindowChange();}},[root.puzzle.state,root.gameStore.windowSize]);var sentenceStyle={width:'100%',height:'100%',display:'flex',flexDirection:'column',alignItems:'center',justifyContent:'flex-start',fontSize:['1.6rem','2.0rem','2.1rem'],py:[1,2,2],lineHeight:root.puzzle.state==='playing'?[1.3,1.4,1.5]:1.2,userSelect:'none',WebkitUserSelect:'none',msUserSelect:'none',WebkitTouchCallout:'none',WebkitTextSizeAdjust:'none',touchAction:'manipulation'/* blocks double tap zoom */,textAlign:'center',cursor:'pointer',WebkitTapHighlightColor:'transparent'// background: '#e002',
};var wordBankStyle={flexGrow:2,px:1,py:0,display:root.puzzle.state==='playing'?'block':'none',position:'relative',width:'100%',color:'primary.main',fontWeight:600,'.selected':{fontWeight:800,color:'wordIncorrect.main'//      filter: 'drop-shadow(5px 5px 2px #777)',
// borderRadius: '15px',
// borderStyle: 'solid',
// borderWidth: '1px',
// borderColor: 'gray',
// background: '#2222',
// zIndex: 12,
},'.draggable':{touchAction:'none',userSelect:'none',px:1,py:1,textAlign:'center',zIndex:100// background: '#e002',
},'.useReturnTransform':{transition:'transform 100ms ease-in-out'},'.useDraggingTransform':{transition:'transform 100ms linear'}// background: '#0e02',
// oveflowX: 'hidden',
};return/*#__PURE__*/(0,jsx_runtime.jsx)(Fade_Fade,{in:showSentence,appear:true,timeout:{enter:appearDelay,exit:0},children:/*#__PURE__*/(0,jsx_runtime.jsxs)(Box_Box,{id:"sentence",sx:_objectSpread2(_objectSpread2({},sentenceStyle),quoteAreaShakeStyle),children:[/*#__PURE__*/(0,jsx_runtime.jsx)(Box_Box,{component:"span",id:"puzzle",sx:puzzleWordStyles}),/*#__PURE__*/(0,jsx_runtime.jsx)(Divider_Divider,{variant:"middle",flexItem:true,sx:{my:[2,4,4]}}),/*#__PURE__*/(0,jsx_runtime.jsx)(Box_Box,{id:"wordbank",sx:wordBankStyle}),/*#__PURE__*/(0,jsx_runtime.jsx)(attribution,{show:root.puzzle.state==='succeeded',html:root.puzzle.state==='succeeded'?root.gameStore.attributionHtml:''}),/*#__PURE__*/(0,jsx_runtime.jsx)(ModeStandbyOutlined,{id:"overlayTemplate",sx:{position:'absolute',visibility:'hidden'}})]})});};/* harmony default export */ var quoteArea = (observer(QuoteArea));
;// CONCATENATED MODULE: ./node_modules/@mui/icons-material/esm/EmojiObjectsOutlined.js


/* harmony default export */ var EmojiObjectsOutlined = ((0,createSvgIcon/* default */.Z)([/*#__PURE__*/(0,jsx_runtime.jsx)("path", {
  d: "M12 3c-.46 0-.93.04-1.4.14-2.76.53-4.96 2.76-5.48 5.52-.48 2.61.48 5.01 2.22 6.56.43.38.66.91.66 1.47V19c0 1.1.9 2 2 2h.28c.35.6.98 1 1.72 1s1.38-.4 1.72-1H14c1.1 0 2-.9 2-2v-2.31c0-.55.22-1.09.64-1.46C18.09 13.95 19 12.08 19 10c0-3.87-3.13-7-7-7zm2 14h-4v-1h4v1zm-4 2v-1h4v1h-4zm5.31-5.26c-.09.08-.16.18-.24.26H8.92c-.08-.09-.15-.19-.24-.27-1.32-1.18-1.91-2.94-1.59-4.7.36-1.94 1.96-3.55 3.89-3.93.34-.07.68-.1 1.02-.1 2.76 0 5 2.24 5 5 0 1.43-.61 2.79-1.69 3.74z"
}, "0"), /*#__PURE__*/(0,jsx_runtime.jsx)("path", {
  d: "M11.5 11h1v3h-1z"
}, "1"), /*#__PURE__*/(0,jsx_runtime.jsx)("path", {
  d: "m9.6724 9.5808.7071-.7071 2.1214 2.1213-.7071.7071z"
}, "2"), /*#__PURE__*/(0,jsx_runtime.jsx)("path", {
  d: "m12.2081 11.7124-.707-.7071 2.1212-2.1214.7071.7072z"
}, "3")], 'EmojiObjectsOutlined'));
;// CONCATENATED MODULE: ./src/components/hintButton.js
var HintButton=function HintButton(props){var _useContext=(0,react.useContext)(RootStoreContext),_useContext2=(0,slicedToArray/* default */.Z)(_useContext,1),root=_useContext2[0];var navigate=dist_useNavigate();var boxStyle={display:'flex',flexDirection:'column',justifyContent:'center',alignItems:'center',mx:'auto'};var handleClick=function handleClick(){analytics_logEvent(key.show_hint);root.gameStore.setShowHintNow(true);};return/*#__PURE__*/(0,jsx_runtime.jsx)(Box_Box,{id:"hintButton",sx:_objectSpread2(_objectSpread2({},boxStyle),props.sx),children:/*#__PURE__*/(0,jsx_runtime.jsxs)(Button_Button,{variant:"outlined",onClick:handleClick,children:[/*#__PURE__*/(0,jsx_runtime.jsx)(EmojiObjectsOutlined,{}),/*#__PURE__*/(0,jsx_runtime.jsx)("span",{style:{textTransform:'none'},children:"hint"})]})});};/* harmony default export */ var hintButton = (HintButton);
;// CONCATENATED MODULE: ./src/components/tapToContinue.js
var TapToContinue=function TapToContinue(props){var action=props.action;var boxStyle={};var textStyle={fontSize:['1.3rem','1.4rem','1.5rem'],padding:10,fontWeight:600,cursor:'pointer'};return/*#__PURE__*/(0,jsx_runtime.jsx)(delayedFade,{appearDelay:1000,fadeSpeed:500,children:/*#__PURE__*/(0,jsx_runtime.jsx)(Box_Box,{id:"tapToContinue",sx:_objectSpread2(_objectSpread2({},boxStyle),props.sx),onPointerDown:function onPointerDown(event){return action(event);},children:/*#__PURE__*/(0,jsx_runtime.jsx)(Typography_Typography,{sx:textStyle,children:"tap to continue"})})});};/* harmony default export */ var tapToContinue = (TapToContinue);
;// CONCATENATED MODULE: ./src/components/successReward.js
var SuccessReward=function SuccessReward(props){var _useContext=(0,react.useContext)(RootStoreContext),_useContext2=(0,slicedToArray/* default */.Z)(_useContext,1),root=_useContext2[0];var boxStyle={width:'100%',textAlign:'center'};var titleTextStyle={fontSize:['1.6rem','1.8rem','2.0rem'],fontWeight:800,color:'wordCorrect.main'};var rewardTextStyle={fontSize:['1.2rem','1.3rem','1.4rem'],fontWeight:600,color:'primary.main',lineHeight:1};// todo: move the complements into puzzle.js
return/*#__PURE__*/(0,jsx_runtime.jsx)(delayedFade,{children:/*#__PURE__*/(0,jsx_runtime.jsxs)(Box_Box,{id:"successReward",sx:_objectSpread2(_objectSpread2({},boxStyle),props.sx),children:[/*#__PURE__*/(0,jsx_runtime.jsx)(Typography_Typography,{sx:titleTextStyle,children:"Awesome job!"}),root.puzzle.rewards.map(function(obj,i){var fadespeed=250;var start=i*50;return/*#__PURE__*/(0,jsx_runtime.jsx)(delayedFade,{appearDelay:start,fadeSpeed:fadespeed,sx:{width:'100%'},children:/*#__PURE__*/(0,jsx_runtime.jsx)(Box_Box,{sx:{width:'100%'},children:/*#__PURE__*/(0,jsx_runtime.jsxs)(Typography_Typography,{sx:rewardTextStyle,children:[obj.text,"\xA0\xA0",obj.amount]})})},i);})]})});};/* harmony default export */ var successReward = (SuccessReward);
;// CONCATENATED MODULE: ./src/components/missesBar.js
var MissesBar=function MissesBar(props){var _root$puzzle;var _useContext=(0,react.useContext)(RootStoreContext),_useContext2=(0,slicedToArray/* default */.Z)(_useContext,1),root=_useContext2[0];var score=Math.min(10,(_root$puzzle=root.puzzle)===null||_root$puzzle===void 0?void 0:_root$puzzle.score);var textStyle={color:score?'wordIncorrect.main':'wordCorrect.main',fontSize:['1.5rem','1.7rem','1.9rem'],fontWeight:800,textAlign:'center'};var nonStrike={color:'secondary.main',opacity:0.3};var strike={color:'wordIncorrect.main'};return/*#__PURE__*/(0,jsx_runtime.jsx)(Typography_Typography,{id:"missesBox",sx:textStyle,children:Array.from(Array(root.puzzle.lives)).map(function(_,i){return i;}).reverse().map(function(v,i){return/*#__PURE__*/(0,jsx_runtime.jsxs)(Box_Box,{component:"span",sx:v<root.puzzle.misses?strike:nonStrike,children:["X",i<root.puzzle.lives-1&&' ']},i);})});};/* harmony default export */ var missesBar = (observer(MissesBar));
;// CONCATENATED MODULE: ./src/components/helpTips.js
var helpTips_HelpTips=function HelpTips(props){var _useContext=(0,react.useContext)(RootStoreContext),_useContext2=(0,slicedToArray/* default */.Z)(_useContext,1),root=_useContext2[0];var vPos={tut1:0.5,tut2:0.8,tut3:1};var top=0;var sentence=document.getElementById('sentence');if(sentence){top=getRect(sentence).centerY*vPos[root.puzzle.id];}var textStyle={textAlign:'center',borderColor:'secondary.main',borderWidth:1,borderStyle:'dotted',p:2,fontWeight:700,margin:'auto',width:'fit-content'};return/*#__PURE__*/(0,jsx_runtime.jsx)(Box_Box,{id:"helpTip",sx:{position:'absolute',top:"".concat(top,"px"),width:'100%'},children:root.helpTips.tipToShow&&/*#__PURE__*/(0,jsx_runtime.jsx)(delayedFade,{fadeoutAfter:root.helpTips.tipToShow.fadeAfter,children:/*#__PURE__*/(0,jsx_runtime.jsx)(Typography_Typography,{sx:textStyle,children:root.helpTips.tipToShow.text})})});};/* harmony default export */ var helpTips = (observer(helpTips_HelpTips));
;// CONCATENATED MODULE: ./src/components/gameBoard.js
var GameBoard=function GameBoard(props){var _useContext=(0,react.useContext)(RootStoreContext),_useContext2=(0,slicedToArray/* default */.Z)(_useContext,1),root=_useContext2[0];var navigate=dist_useNavigate();var topEdgeY=root.gameStore.topBarHeight;var actionOnContinue=function actionOnContinue(){// todo: move all this into chapter class
if(root.puzzleStore.cursorInChapter<root.puzzleStore.chapter.sequence.length){root.puzzleStore.loadNextPuzzle();}else{root.puzzleStore.addCompletedChapter(root.puzzleStore.chapter.id);analytics_logEvent(key.chapter_ended,{chapter_id:root.puzzleStore.chapter.id});if(root.puzzleStore.chapter.id==='intro'){root.gameStore.setShowTutorial(false);}navigate('/home');}};return/*#__PURE__*/(0,jsx_runtime.jsxs)(Box_Box,{id:"gameBoard",sx:{width:'95%',left:'calc(5% / 2)',height:"calc(100% - ".concat(topEdgeY,"px)"),top:"".concat(topEdgeY,"px"),bottom:0,position:'absolute',display:'flex',flexDirection:'column',justifyContent:'flex-start',alignItems:'center'// background: '#00e3',
},children:[root.puzzle.state==='succeeded'&&/*#__PURE__*/(0,jsx_runtime.jsx)(successReward,{sx:{position:'absolute',bottom:'200px'}}),/*#__PURE__*/(0,jsx_runtime.jsx)(Box_Box,{id:"quoteAreaContainer",sx:{mt:2,flexGrow:2},children:/*#__PURE__*/(0,jsx_runtime.jsx)(quoteArea,{})}),/*#__PURE__*/(0,jsx_runtime.jsx)(Box_Box,{id:"hintMissesContainer",sx:{height:'100px',width:'100%'},children:root.puzzle.state==='playing'&&root.puzzle.id!=='tut1'&&/*#__PURE__*/(0,jsx_runtime.jsx)(delayedFade,{children:/*#__PURE__*/(0,jsx_runtime.jsxs)(Box_Box,{children:[/*#__PURE__*/(0,jsx_runtime.jsx)(missesBar,{}),/*#__PURE__*/(0,jsx_runtime.jsx)(hintButton,{})]})})}),root.puzzle.state==='succeeded'&&/*#__PURE__*/(0,jsx_runtime.jsx)(tapToContinue,{action:actionOnContinue,sx:{position:'absolute',bottom:['16px','32px','32px'],width:'100%',textAlign:'center'}}),/*#__PURE__*/(0,jsx_runtime.jsx)(helpTips,{})]});};/* harmony default export */ var gameBoard = (observer(GameBoard));
;// CONCATENATED MODULE: ./src/components/practicePage.js
var PracticePage=function PracticePage(props){var _useContext=(0,react.useContext)(RootStoreContext),_useContext2=(0,slicedToArray/* default */.Z)(_useContext,1),root=_useContext2[0];var _useParams=useParams(),chapterId=_useParams.chapterId;(0,react.useEffect)(function(){root.puzzleStore.loadChapterById(chapterId);root.puzzleStore.loadNextPuzzle();analytics_logEvent(key.chapter_started,{chapter_id:chapterId});},[root.puzzleStore,chapterId]);return root.puzzleStore.chapter?/*#__PURE__*/(0,jsx_runtime.jsx)(gameBoard,{}):/*#__PURE__*/(0,jsx_runtime.jsx)(jsx_runtime.Fragment,{});};/* harmony default export */ var practicePage = (observer(PracticePage));
;// CONCATENATED MODULE: ./src/components/dailyPage.js
var DailyPage=function DailyPage(props){var _useContext=(0,react.useContext)(RootStoreContext),_useContext2=(0,slicedToArray/* default */.Z)(_useContext,1),root=_useContext2[0];(0,react.useEffect)(function(){root.puzzleStore.clearChapterInfo();root.puzzleStore.loadPuzzleById('daily-20230105');},[root.puzzleStore,root.gameStore.showTutorial]);return/*#__PURE__*/(0,jsx_runtime.jsx)(gameBoard,{});};/* harmony default export */ var dailyPage = (observer(DailyPage));
;// CONCATENATED MODULE: ./src/components/debugPage.js
var DebugPage=function DebugPage(props){var _useContext=(0,react.useContext)(RootStoreContext),_useContext2=(0,slicedToArray/* default */.Z)(_useContext,1),root=_useContext2[0];return/*#__PURE__*/(0,jsx_runtime.jsxs)(Box_Box,{children:[/*#__PURE__*/(0,jsx_runtime.jsx)(Button_Button,{onClick:function onClick(){return root.gameStore.setShowTutorial(true);},component:Link,to:"/",children:"set show tutorial"}),/*#__PURE__*/(0,jsx_runtime.jsx)(Box_Box,{children:root.gameStore.versionLocation})]});};/* harmony default export */ var debugPage = (observer(DebugPage));
;// CONCATENATED MODULE: ./src/components/pages/playPage.js
var PlayPage=function PlayPage(props){var _useContext=(0,react.useContext)(RootStoreContext),_useContext2=(0,slicedToArray/* default */.Z)(_useContext,1),root=_useContext2[0];var _useParams=useParams(),chapterId=_useParams.chapterId;(0,react.useEffect)(function(){root.puzzleStore.loadChapterById(chapterId);root.puzzleStore.loadNextPuzzle();analytics_logEvent(key.chapter_started,{chapter_id:chapterId});return function(){return root.setPuzzle(null);};},[root,root.puzzleStore,chapterId]);return root.puzzle&&root.puzzleStore.chapter?/*#__PURE__*/(0,jsx_runtime.jsx)(gameBoard,{}):/*#__PURE__*/(0,jsx_runtime.jsx)(jsx_runtime.Fragment,{});};/* harmony default export */ var playPage = (observer(PlayPage));
;// CONCATENATED MODULE: ./node_modules/@mui/icons-material/esm/ScienceOutlined.js


/* harmony default export */ var ScienceOutlined = ((0,createSvgIcon/* default */.Z)( /*#__PURE__*/(0,jsx_runtime.jsx)("path", {
  d: "M13 11.33 18 18H6l5-6.67V6h2m2.96-2H8.04c-.42 0-.65.48-.39.81L9 6.5v4.17L3.2 18.4c-.49.66-.02 1.6.8 1.6h16c.82 0 1.29-.94.8-1.6L15 10.67V6.5l1.35-1.69c.26-.33.03-.81-.39-.81z"
}), 'ScienceOutlined'));
;// CONCATENATED MODULE: ./node_modules/@mui/icons-material/esm/HomeOutlined.js


/* harmony default export */ var HomeOutlined = ((0,createSvgIcon/* default */.Z)( /*#__PURE__*/(0,jsx_runtime.jsx)("path", {
  d: "m12 5.69 5 4.5V18h-2v-6H9v6H7v-7.81l5-4.5M12 3 2 12h3v8h6v-6h2v6h6v-8h3L12 3z"
}), 'HomeOutlined'));
;// CONCATENATED MODULE: ./node_modules/@mui/icons-material/esm/HorizontalSplitOutlined.js


/* harmony default export */ var HorizontalSplitOutlined = ((0,createSvgIcon/* default */.Z)( /*#__PURE__*/(0,jsx_runtime.jsx)("path", {
  d: "M19 15v2H5v-2h14m2-10H3v2h18V5zm0 4H3v2h18V9zm0 4H3v6h18v-6z"
}), 'HorizontalSplitOutlined'));
;// CONCATENATED MODULE: ./node_modules/@mui/icons-material/esm/SettingsOutlined.js


/* harmony default export */ var SettingsOutlined = ((0,createSvgIcon/* default */.Z)( /*#__PURE__*/(0,jsx_runtime.jsx)("path", {
  d: "M19.43 12.98c.04-.32.07-.64.07-.98 0-.34-.03-.66-.07-.98l2.11-1.65c.19-.15.24-.42.12-.64l-2-3.46c-.09-.16-.26-.25-.44-.25-.06 0-.12.01-.17.03l-2.49 1c-.52-.4-1.08-.73-1.69-.98l-.38-2.65C14.46 2.18 14.25 2 14 2h-4c-.25 0-.46.18-.49.42l-.38 2.65c-.61.25-1.17.59-1.69.98l-2.49-1c-.06-.02-.12-.03-.18-.03-.17 0-.34.09-.43.25l-2 3.46c-.13.22-.07.49.12.64l2.11 1.65c-.04.32-.07.65-.07.98 0 .33.03.66.07.98l-2.11 1.65c-.19.15-.24.42-.12.64l2 3.46c.09.16.26.25.44.25.06 0 .12-.01.17-.03l2.49-1c.52.4 1.08.73 1.69.98l.38 2.65c.03.24.24.42.49.42h4c.25 0 .46-.18.49-.42l.38-2.65c.61-.25 1.17-.59 1.69-.98l2.49 1c.06.02.12.03.18.03.17 0 .34-.09.43-.25l2-3.46c.12-.22.07-.49-.12-.64l-2.11-1.65zm-1.98-1.71c.04.31.05.52.05.73 0 .21-.02.43-.05.73l-.14 1.13.89.7 1.08.84-.7 1.21-1.27-.51-1.04-.42-.9.68c-.43.32-.84.56-1.25.73l-1.06.43-.16 1.13-.2 1.35h-1.4l-.19-1.35-.16-1.13-1.06-.43c-.43-.18-.83-.41-1.23-.71l-.91-.7-1.06.43-1.27.51-.7-1.21 1.08-.84.89-.7-.14-1.13c-.03-.31-.05-.54-.05-.74s.02-.43.05-.73l.14-1.13-.89-.7-1.08-.84.7-1.21 1.27.51 1.04.42.9-.68c.43-.32.84-.56 1.25-.73l1.06-.43.16-1.13.2-1.35h1.39l.19 1.35.16 1.13 1.06.43c.43.18.83.41 1.23.71l.91.7 1.06-.43 1.27-.51.7 1.21-1.07.85-.89.7.14 1.13zM12 8c-2.21 0-4 1.79-4 4s1.79 4 4 4 4-1.79 4-4-1.79-4-4-4zm0 6c-1.1 0-2-.9-2-2s.9-2 2-2 2 .9 2 2-.9 2-2 2z"
}), 'SettingsOutlined'));
;// CONCATENATED MODULE: ./src/components/helper/switch.js
var Switch=function Switch(_ref){var test=_ref.test,children=_ref.children;var defaultResult=children.find(function(child){return child.props.default;})||null;var result=children.find(function(child){return child.props.value===test;});return result||defaultResult;};var Case=function Case(_ref2){var children=_ref2.children;return children;};
;// CONCATENATED MODULE: ./src/components/bottomBarButton.js
var BottomBarButton=function BottomBarButton(props){var name=props.name;var _useContext=(0,react.useContext)(RootStoreContext),_useContext2=(0,slicedToArray/* default */.Z)(_useContext,1),root=_useContext2[0];var location=dist_useLocation().pathname.replace('/','');var navigate=dist_useNavigate();var selected=name===location;var themeColorName=selected?'wordIncorrect':'primary';var iconStyle={height:'80%',aspectRatio:'1/1',textAlign:'center',display:'flex',flexDirection:'column',justifyContent:'center',alignItems:'center',textTransform:'none',position:'relative',top:'0px',fontSize:['2rem','2.3rem','2.5rem']};var labelStyle={color:"".concat(themeColorName,".main"),lineHeight:1};var navigateHandler=function navigateHandler(){navigate("/".concat(name));};return/*#__PURE__*/(0,jsx_runtime.jsxs)(Button_Button,{onClick:navigateHandler,sx:iconStyle,children:[/*#__PURE__*/(0,jsx_runtime.jsxs)(Switch,{test:name,children:[/*#__PURE__*/(0,jsx_runtime.jsx)(Case,{value:"lab",children:/*#__PURE__*/(0,jsx_runtime.jsx)(ScienceOutlined,{fontSize:'inherit',color:themeColorName})}),/*#__PURE__*/(0,jsx_runtime.jsx)(Case,{value:"home",children:/*#__PURE__*/(0,jsx_runtime.jsx)(HomeOutlined,{fontSize:'inherit',color:themeColorName})}),/*#__PURE__*/(0,jsx_runtime.jsx)(Case,{value:"packs",children:/*#__PURE__*/(0,jsx_runtime.jsx)(HorizontalSplitOutlined,{fontSize:'inherit',color:themeColorName})}),/*#__PURE__*/(0,jsx_runtime.jsx)(Case,{value:"settings",children:/*#__PURE__*/(0,jsx_runtime.jsx)(SettingsOutlined,{fontSize:'inherit',color:themeColorName})})]}),/*#__PURE__*/(0,jsx_runtime.jsx)(Typography_Typography,{sx:labelStyle,children:name})]});};/* harmony default export */ var bottomBarButton = (BottomBarButton);
;// CONCATENATED MODULE: ./src/components/bottomBar.js
var BottomBar=function BottomBar(props){var _useContext=(0,react.useContext)(RootStoreContext),_useContext2=(0,slicedToArray/* default */.Z)(_useContext,1),root=_useContext2[0];var outerBarStyle={position:'fixed',bottom:0,left:0,right:0,height:'calc(100vh * 0.08)',maxHeight:'100px',width:'100%',bgcolor:'transparentBackground',zIndex:2};var innerBarStyle={position:'relative',width:'600px',maxWidth:'100vw',height:'100%',left:'50%',transform:'translateX(-50%)',display:'flex',flexDirection:'row',justifyContent:'space-evenly',alignItems:'center',px:5};return/*#__PURE__*/(0,jsx_runtime.jsx)(Box_Box,{id:"bottomBar",sx:outerBarStyle,children:/*#__PURE__*/(0,jsx_runtime.jsxs)(Box_Box,{sx:innerBarStyle,children:[/*#__PURE__*/(0,jsx_runtime.jsx)(bottomBarButton,{name:"home"}),/*#__PURE__*/(0,jsx_runtime.jsx)(bottomBarButton,{name:"lab"}),/*#__PURE__*/(0,jsx_runtime.jsx)(bottomBarButton,{name:"packs"}),/*#__PURE__*/(0,jsx_runtime.jsx)(bottomBarButton,{name:"settings"})]})});};/* harmony default export */ var bottomBar = (BottomBar);
;// CONCATENATED MODULE: ./src/components/pages/homePage.js
var HomePage=function HomePage(props){var _useContext=(0,react.useContext)(RootStoreContext),_useContext2=(0,slicedToArray/* default */.Z)(_useContext,1),root=_useContext2[0];var appTitleStyle={color:'wordIncorrect.main',fontSize:'3rem',fontWeight:800,lineHeight:1};var appSubtitleStyle={color:'secondary.main',fontSize:'1.5rem',fontWeight:800,lineHeight:1,textAlign:'center'};var buttonContainerStyle={display:'flex',flexDirection:'column',gap:2,mt:[5,7,8],width:'80%',maxWidth:'300px'};var buttonStyle={fontWeight:800,borderRadius:'30px',fontSize:['2rem','2.5rem','2.5rem'],textTransform:'none',color:'wordIncorrect.main',lineHeight:1.5};return/*#__PURE__*/(0,jsx_runtime.jsxs)(Box_Box,{id:"homePage",sx:{height:'100%',display:'flex',flexDirection:'column',alignItems:'center',justifyContent:'center'},children:[/*#__PURE__*/(0,jsx_runtime.jsxs)(Box_Box,{sx:{display:'flex',flexDirection:'column',alignItems:'center',justifyContent:'center'},children:[/*#__PURE__*/(0,jsx_runtime.jsx)(Typography_Typography,{sx:appTitleStyle,children:"Rosie's"}),/*#__PURE__*/(0,jsx_runtime.jsx)(Typography_Typography,{sx:appSubtitleStyle,children:"word order puzzles"}),/*#__PURE__*/(0,jsx_runtime.jsx)(Box_Box,{component:"img",src:__webpack_require__(83),alt:"",sx:{mt:[3,4,5],width:'40%',maxWidth:'400px'}}),/*#__PURE__*/(0,jsx_runtime.jsxs)(Box_Box,{id:"buttonContainer",sx:buttonContainerStyle,children:[/*#__PURE__*/(0,jsx_runtime.jsx)(Button_Button,{sx:buttonStyle,variant:"outlined",onClick:function onClick(){},fullWidth:true,size:"small",component:Link,to:'/playtest',children:"play"}),/*#__PURE__*/(0,jsx_runtime.jsx)(Button_Button,{sx:buttonStyle,variant:"outlined",onClick:function onClick(){},fullWidth:true,size:"small",component:Link,to:'/r',children:/*#__PURE__*/(0,jsx_runtime.jsx)("span",{style:{textTransform:'none'},children:"random"})})]})]}),/*#__PURE__*/(0,jsx_runtime.jsx)(bottomBar,{}),/*#__PURE__*/(0,jsx_runtime.jsxs)(Typography_Typography,{sx:{position:'absolute',top:'60px',textAlign:'left',width:'100%',fontSize:'0.6rem'},children:["v",root.gameStore.gameVersion," ",root.gameStore.versionInfo.split(' ')[1]]})]});};/* harmony default export */ var homePage = (HomePage);
;// CONCATENATED MODULE: ./src/components/pages/settingsPage.js
var SettingsPage=function SettingsPage(props){var _useContext=(0,react.useContext)(RootStoreContext),_useContext2=(0,slicedToArray/* default */.Z)(_useContext,1),root=_useContext2[0];var handleClick=/*#__PURE__*/function(){var _ref=asyncToGenerator_asyncToGenerator(/*#__PURE__*/regeneratorRuntime_regeneratorRuntime().mark(function _callee(){return regeneratorRuntime_regeneratorRuntime().wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return root.clearStoredData();case 2:case"end":return _context.stop();}}},_callee);}));return function handleClick(){return _ref.apply(this,arguments);};}();return/*#__PURE__*/(0,jsx_runtime.jsxs)(Box_Box,{id:"homePage",sx:{height:'100%',display:'flex',flexDirection:'column',alignItems:'center',justifyContent:'center'},children:[/*#__PURE__*/(0,jsx_runtime.jsxs)(Button_Button,{variant:"outlined",onClick:handleClick,children:[/*#__PURE__*/(0,jsx_runtime.jsx)(EmojiObjectsOutlined,{}),/*#__PURE__*/(0,jsx_runtime.jsx)("span",{style:{textTransform:'none'},children:"clear stored data"})]}),/*#__PURE__*/(0,jsx_runtime.jsx)(bottomBar,{})]});};/* harmony default export */ var settingsPage = (SettingsPage);
;// CONCATENATED MODULE: ./src/components/pages/packsPage.js
var PacksPage=function PacksPage(props){var _useContext=(0,react.useContext)(RootStoreContext),_useContext2=(0,slicedToArray/* default */.Z)(_useContext,1),root=_useContext2[0];return/*#__PURE__*/(0,jsx_runtime.jsxs)(Box_Box,{id:"packsPage",sx:{height:'100%',display:'flex',flexDirection:'column',alignItems:'center',justifyContent:'center'},children:[/*#__PURE__*/(0,jsx_runtime.jsx)(Typography_Typography,{variant:"h1",children:"Packs"}),/*#__PURE__*/(0,jsx_runtime.jsx)(bottomBar,{})]});};/* harmony default export */ var packsPage = (PacksPage);
;// CONCATENATED MODULE: ./src/components/pages/labPage.js
var LabPage=function LabPage(props){var _useContext=(0,react.useContext)(RootStoreContext),_useContext2=(0,slicedToArray/* default */.Z)(_useContext,1),root=_useContext2[0];return/*#__PURE__*/(0,jsx_runtime.jsxs)(Box_Box,{id:"packsPage",sx:{height:'100%',display:'flex',flexDirection:'column',alignItems:'center',justifyContent:'center'},children:[/*#__PURE__*/(0,jsx_runtime.jsx)(Typography_Typography,{variant:"h1",children:"Lab"}),/*#__PURE__*/(0,jsx_runtime.jsx)(bottomBar,{})]});};/* harmony default export */ var labPage = (LabPage);
;// CONCATENATED MODULE: ./src/assets/images/bg-light.png
var bg_light_namespaceObject = __webpack_require__.p + "static/media/bg-light.a73dc0ad45f117cf4708.png";
;// CONCATENATED MODULE: ./src/app.js
var App=function App(){var _useContext=(0,react.useContext)(RootStoreContext),_useContext2=(0,slicedToArray/* default */.Z)(_useContext,1),root=_useContext2[0];setStore(root);// todo: make this more obvious wtf it is
var sm=useMediaQuery(function(theme){return theme.breakpoints.down('sm');});var md=useMediaQuery(function(theme){return theme.breakpoints.down('md');});var bpIndex=sm?0:md?1:2;(0,react.useEffect)(function(){root.gameStore.setMuiBreakpoint(bpIndex);},[root.gameStore.windowSize,root.gameStore,bpIndex]);(0,react.useEffect)(function(){function getVersion(){return _getVersion.apply(this,arguments);}function _getVersion(){_getVersion=asyncToGenerator_asyncToGenerator(/*#__PURE__*/regeneratorRuntime_regeneratorRuntime().mark(function _callee(){return regeneratorRuntime_regeneratorRuntime().wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return fetch("".concat("","/version.txt?cache-bust=").concat(Date.now())).then(function(r){root.gameStore.setVersionLocation(r.url);return r.text();}).then(function(text){root.gameStore.setVersionInfo(text.substring(0,30));});case 2:case"end":return _context.stop();}}},_callee);}));return _getVersion.apply(this,arguments);}getVersion();},[root.gameStore]);var LocationWatcher=function LocationWatcher(){var location=dist_useLocation();react.useEffect(function(){analytics_logEvent(key.app_started,{path:location.pathname});},[location]);return/*#__PURE__*/(0,jsx_runtime.jsx)(jsx_runtime.Fragment,{});};var containerStyle={height:'100%'// height: '100dvh',
// backgroundImage: `url(${backgroundImage})`,
// backgroundRepeat: 'repeat',
};return/*#__PURE__*/(0,jsx_runtime.jsxs)(BrowserRouter,{basename:"",children:[/*#__PURE__*/(0,jsx_runtime.jsx)(LocationWatcher,{}),/*#__PURE__*/(0,jsx_runtime.jsxs)(Container_Container,{maxWidth:"sm",id:"container",sx:containerStyle,onContextMenu:function onContextMenu(ev){ev.preventDefault();return false;},children:[/*#__PURE__*/(0,jsx_runtime.jsx)(topBar,{}),/*#__PURE__*/(0,jsx_runtime.jsx)(Box_Box,{id:"topLayout",sx:{position:'relative',height:'100%'},children:/*#__PURE__*/(0,jsx_runtime.jsxs)(Routes,{children:[/*#__PURE__*/(0,jsx_runtime.jsx)(Route,{path:"/",element:/*#__PURE__*/(0,jsx_runtime.jsx)(Navigate,{to:root.gameStore.showTutorial?'/intro':'/home'})}),' ',/*#__PURE__*/(0,jsx_runtime.jsx)(Route,{path:"/playtest",element:/*#__PURE__*/(0,jsx_runtime.jsx)(practiceMenu,{})}),/*#__PURE__*/(0,jsx_runtime.jsx)(Route,{path:"/home",element:/*#__PURE__*/(0,jsx_runtime.jsx)(homePage,{})}),/*#__PURE__*/(0,jsx_runtime.jsx)(Route,{path:"/:chapterId",element:/*#__PURE__*/(0,jsx_runtime.jsx)(playPage,{})}),/*#__PURE__*/(0,jsx_runtime.jsx)(Route,{path:"settings",element:/*#__PURE__*/(0,jsx_runtime.jsx)(settingsPage,{})}),/*#__PURE__*/(0,jsx_runtime.jsx)(Route,{path:"packs",element:/*#__PURE__*/(0,jsx_runtime.jsx)(packsPage,{})}),/*#__PURE__*/(0,jsx_runtime.jsx)(Route,{path:"lab",element:/*#__PURE__*/(0,jsx_runtime.jsx)(labPage,{})}),/*#__PURE__*/(0,jsx_runtime.jsx)(Route,{path:"debug",element:/*#__PURE__*/(0,jsx_runtime.jsx)(debugPage,{})}),/*#__PURE__*/(0,jsx_runtime.jsx)(Route,{path:"*",element:/*#__PURE__*/(0,jsx_runtime.jsx)(Navigate,{to:"/home"})}),' ']})})]})]});};/* harmony default export */ var src_app = (observer(App));
;// CONCATENATED MODULE: ./src/outerApp.js
var OuterApp=observer(function(props){var _useContext=(0,react.useContext)(RootStoreContext),_useContext2=(0,slicedToArray/* default */.Z)(_useContext,1),root=_useContext2[0];// eslint-disable-next-line no-unused-vars
var windowSize=useResize();// causes re-render when window size changes
(0,react.useEffect)(function(){root.gameStore.setWindowSize(windowSize);},[windowSize,root.gameStore]);var theme;var prefersDarkMode=useMediaQuery('(prefers-color-scheme: dark)');if(root.gameStore.uiTheme==='system'){theme=getTheme(prefersDarkMode?'dark':'light');}else{theme=getTheme(root.gameStore.uiTheme);}return/*#__PURE__*/(0,jsx_runtime.jsx)(errorHandler,{children:/*#__PURE__*/(0,jsx_runtime.jsxs)(esm_ThemeProvider_ThemeProvider,{theme:theme,children:[/*#__PURE__*/(0,jsx_runtime.jsx)(CssBaseline_CssBaseline,{}),/*#__PURE__*/(0,jsx_runtime.jsx)(src_app,{})]})});});/* harmony default export */ var outerApp = (OuterApp);
;// CONCATENATED MODULE: ./src/reportWebVitals.js
var reportWebVitals=function reportWebVitals(onPerfEntry){if(onPerfEntry&&onPerfEntry instanceof Function){__webpack_require__.e(/* import() */ 787).then(__webpack_require__.bind(__webpack_require__, 787)).then(function(_ref){var getCLS=_ref.getCLS,getFID=_ref.getFID,getFCP=_ref.getFCP,getLCP=_ref.getLCP,getTTFB=_ref.getTTFB;getCLS(onPerfEntry);getFID(onPerfEntry);getFCP(onPerfEntry);getLCP(onPerfEntry);getTTFB(onPerfEntry);});}};/* harmony default export */ var src_reportWebVitals = (reportWebVitals);
;// CONCATENATED MODULE: ./src/index.js
var src_root=client.createRoot(document.getElementById('root'));src_root.render(/*#__PURE__*/(0,jsx_runtime.jsx)(RootStoreContextProvider,{children:/*#__PURE__*/(0,jsx_runtime.jsx)(outerApp,{})}));// If you want to start measuring performance in your app, pass a function
// to log results (for example: reportWebVitals(console.log))
// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals
src_reportWebVitals();
}();
/******/ })()
;
//# sourceMappingURL=main.5891a64c.js.map